/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/_app"],{

/***/ "./node_modules/@cntrl-site/color/lib/CntrlColor/CntrlColor.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@cntrl-site/color/lib/CntrlColor/CntrlColor.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.OklchColor = exports.RgbaColor = exports.CntrlColor = void 0;\n/// <reference lib=\"dom\" />\nconst ColorGrammar_1 = __webpack_require__(/*! ./expr/color/ColorGrammar */ \"./node_modules/@cntrl-site/color/lib/CntrlColor/expr/color/ColorGrammar.js\");\nconst colorConverters_1 = __webpack_require__(/*! ./colorConverters */ \"./node_modules/@cntrl-site/color/lib/CntrlColor/colorConverters.js\");\nclass CntrlColor {\n    static rgba(r, g, b, a = 1) {\n        return new RgbaColor(r, g, b, a);\n    }\n    static oklch(l, c, h, a = 1) {\n        return new OklchColor(l, c, h, a);\n    }\n    static from(data) {\n        switch (data.type) {\n            case 'rgba': return new RgbaColor(data.r, data.g, data.b, data.a);\n            case 'oklch': return new OklchColor(data.l, data.c, data.h, data.a);\n        }\n    }\n    static parse(source) {\n        const result = (0, ColorGrammar_1.ColorParser)()(source, 0);\n        const token = result.unwrap();\n        switch (token.type) {\n            case 'rgba': return new RgbaColor(token.value.r, token.value.g, token.value.b, token.value.a);\n            case 'oklch': return new OklchColor(token.value.l, token.value.c, token.value.h, token.value.a);\n            default: throw new Error('current color format isn\\'t supported');\n        }\n    }\n    fmt(format, alpha) {\n        throw new Error('not implemented');\n    }\n    toCss() {\n        throw new Error('not implemented');\n    }\n    getRgba() {\n        throw new Error('not implemented');\n    }\n    getOklch() {\n        throw new Error('not implemented');\n    }\n    getHex() {\n        const { r, g, b } = this.getRgba();\n        return '#' + [r, g, b].map(c => c.toString(16).padStart(2, '0')).join('');\n    }\n    getAlpha() {\n        throw new Error('not implemented');\n    }\n    mix(targetColor, amount) {\n        throw new Error('not implemented');\n    }\n}\nexports.CntrlColor = CntrlColor;\nclass RgbaColor extends CntrlColor {\n    constructor(red, green, blue, alpha) {\n        super();\n        this.red = red;\n        this.green = green;\n        this.blue = blue;\n        this.alpha = alpha;\n    }\n    fmt(format = 'rgba', alpha) {\n        switch (format) {\n            case 'hex': return this.getHex();\n            case 'oklch': {\n                const { l, c, h, a } = this.getOklch();\n                return `oklch(${l * 100}% ${c} ${h} / ${alpha !== null && alpha !== void 0 ? alpha : a})`;\n            }\n            default: return `rgba(${this.red}, ${this.green}, ${this.blue}, ${alpha !== null && alpha !== void 0 ? alpha : this.alpha})`;\n        }\n    }\n    getRgba() {\n        return {\n            type: 'rgba',\n            r: this.red,\n            g: this.green,\n            b: this.blue,\n            a: this.alpha\n        };\n    }\n    getOklch() {\n        const { l, c, h, a } = (0, colorConverters_1.rgbToOklch)(this.red, this.green, this.blue, this.alpha);\n        return {\n            type: 'oklch',\n            l: l,\n            c: c,\n            h: h,\n            a: a\n        };\n    }\n    toCss() {\n        return this.fmt('rgba');\n    }\n    getAlpha() {\n        return this.alpha;\n    }\n    mix(targetColor, amount) {\n        const { r: targetR, g: targetG, b: targetB, a: targetA } = targetColor.getRgba();\n        const r = getRangeValue(amount, this.red, targetR);\n        const g = getRangeValue(amount, this.green, targetG);\n        const b = getRangeValue(amount, this.blue, targetB);\n        const a = getRangeValue(amount, this.alpha, targetA);\n        return CntrlColor.from({ type: 'rgba', r: Math.round(r), g: Math.round(g), b: Math.round(b), a: Math.round(a) });\n    }\n}\nexports.RgbaColor = RgbaColor;\nclass OklchColor extends CntrlColor {\n    constructor(lightness, chroma, hue, alpha) {\n        super();\n        this.lightness = lightness;\n        this.chroma = chroma;\n        this.hue = hue;\n        this.alpha = alpha;\n    }\n    fmt(format = 'oklch', alpha) {\n        switch (format) {\n            case 'hex': return this.getHex();\n            case 'rgba': {\n                const { r, g, b, a } = this.getRgba();\n                return `rgba(${r}, ${g}, ${b}, ${alpha !== null && alpha !== void 0 ? alpha : a})`;\n            }\n            default: return `oklch(${this.lightness * 100}% ${this.chroma} ${this.hue} / ${alpha !== null && alpha !== void 0 ? alpha : this.alpha})`;\n        }\n    }\n    toCss() {\n        if (typeof window === 'undefined') {\n            return this.fmt('oklch');\n        }\n        return this.fmt(window.CSS.supports('color: oklch(42% 0.3 90 / 1)')\n            ? 'oklch'\n            : 'rgba');\n    }\n    getOklch() {\n        return {\n            type: 'oklch',\n            l: this.lightness,\n            c: this.chroma,\n            h: this.hue,\n            a: this.alpha\n        };\n    }\n    getRgba() {\n        const { r, g, b } = (0, colorConverters_1.oklchToRgb)(this.lightness, this.chroma, this.hue);\n        return {\n            type: 'rgba',\n            r: Math.round(r),\n            g: Math.round(g),\n            b: Math.round(b),\n            a: this.alpha\n        };\n    }\n    getAlpha() {\n        return this.alpha;\n    }\n    mix(targetColor, amount) {\n        const { l: targetL, c: targetC, h: targetH, a: targetA } = targetColor.getOklch();\n        const l = getRangeValue(amount, this.lightness, targetL);\n        const c = getRangeValue(amount, this.chroma, targetC);\n        const h = getRangeValue(amount, this.hue, targetH);\n        const a = getRangeValue(amount, this.alpha, targetA);\n        return CntrlColor.from({ type: 'oklch', l, c, h, a: parseFloat(a.toFixed(2)) });\n    }\n}\nexports.OklchColor = OklchColor;\n// consider that amount from 0 to 1\nfunction getRangeValue(amount, value, targetValue) {\n    return targetValue * amount - value * amount + value;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/color/lib/CntrlColor/CntrlColor.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/color/lib/CntrlColor/colorConverters.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@cntrl-site/color/lib/CntrlColor/colorConverters.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.oklchToRgb = exports.clamp = exports.rgbToOklch = exports.Converters = void 0;\nexports.Converters = 0.0001;\nfunction rgbToOklch(r, g, b, a = 1) {\n    let lab = linear_srgb_to_oklab(srgbTransferFunctionInv(r / 255), srgbTransferFunctionInv(g / 255), srgbTransferFunctionInv(b / 255));\n    let L = lab[0];\n    const H = (0.5 + 0.5 * Math.atan2(-lab[2], -lab[1]) / Math.PI) * 360;\n    let C = Math.sqrt(lab[1] * lab[1] + lab[2] * lab[2]);\n    return { l: L, h: H < 0 ? H + 360 : H, c: clamp(C), a };\n}\nexports.rgbToOklch = rgbToOklch;\nfunction srgbTransferFunctionInv(a) {\n    return .04045 < a ? Math.pow((a + .055) / 1.055, 2.4) : a / 12.92;\n}\nfunction srgbTransferFunction(a) {\n    return .0031308 >= a ? 12.92 * a : 1.055 * Math.pow(a, .4166666666666667) - .055;\n}\nfunction clamp(x) {\n    return x < exports.Converters ? exports.Converters : (x > 1 - exports.Converters ? 1 - exports.Converters : x);\n}\nexports.clamp = clamp;\nfunction oklchToRgb(l, c, h, alpha = 1) {\n    const L = l;\n    const C = c;\n    const H = (h / 360) * 2 * Math.PI;\n    const a = C * Math.cos(H);\n    const b1 = C * Math.sin(H);\n    const srgb = oklabToLinearSrgb(L, a, b1);\n    const r = 255 * srgbTransferFunction(srgb[0]);\n    const g = 255 * srgbTransferFunction(srgb[1]);\n    const b = 255 * srgbTransferFunction(srgb[2]);\n    return { r: r, g: g, b: b, a: alpha };\n}\nexports.oklchToRgb = oklchToRgb;\nfunction linear_srgb_to_oklab(r, g, b) {\n    const l = 0.4122214708 * r + 0.5363325363 * g + 0.0514459929 * b;\n    const m = 0.2119034982 * r + 0.6806995451 * g + 0.1073969566 * b;\n    const s = 0.0883024619 * r + 0.2817188376 * g + 0.6299787005 * b;\n    const l_ = Math.cbrt(l);\n    const m_ = Math.cbrt(m);\n    const s_ = Math.cbrt(s);\n    return [\n        0.2104542553 * l_ + 0.7936177850 * m_ - 0.0040720468 * s_,\n        1.9779984951 * l_ - 2.4285922050 * m_ + 0.4505937099 * s_,\n        0.0259040371 * l_ + 0.7827717662 * m_ - 0.8086757660 * s_\n    ];\n}\nfunction oklabToLinearSrgb(L, a, b) {\n    const l_ = L + 0.3963377774 * a + 0.2158037573 * b;\n    const m_ = L - 0.1055613458 * a - 0.0638541728 * b;\n    const s_ = L - 0.0894841775 * a - 1.2914855480 * b;\n    const l = l_ * l_ * l_;\n    const m = m_ * m_ * m_;\n    const s = s_ * s_ * s_;\n    return [\n        (+4.0767416621 * l - 3.3077115913 * m + 0.2309699292 * s),\n        (-1.2684380046 * l + 2.6097574011 * m - 0.3413193965 * s),\n        (-0.0041960863 * l - 0.7034186147 * m + 1.7076147010 * s)\n    ];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvY29sb3IvbGliL0NudHJsQ29sb3IvY29sb3JDb252ZXJ0ZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQixHQUFHLGFBQWEsR0FBRyxrQkFBa0IsR0FBRyxrQkFBa0I7QUFDNUUsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbnRybC1zaXRlL2NvbG9yL2xpYi9DbnRybENvbG9yL2NvbG9yQ29udmVydGVycy5qcz9jNjBkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5va2xjaFRvUmdiID0gZXhwb3J0cy5jbGFtcCA9IGV4cG9ydHMucmdiVG9Pa2xjaCA9IGV4cG9ydHMuQ29udmVydGVycyA9IHZvaWQgMDtcbmV4cG9ydHMuQ29udmVydGVycyA9IDAuMDAwMTtcbmZ1bmN0aW9uIHJnYlRvT2tsY2gociwgZywgYiwgYSA9IDEpIHtcbiAgICBsZXQgbGFiID0gbGluZWFyX3NyZ2JfdG9fb2tsYWIoc3JnYlRyYW5zZmVyRnVuY3Rpb25JbnYociAvIDI1NSksIHNyZ2JUcmFuc2ZlckZ1bmN0aW9uSW52KGcgLyAyNTUpLCBzcmdiVHJhbnNmZXJGdW5jdGlvbkludihiIC8gMjU1KSk7XG4gICAgbGV0IEwgPSBsYWJbMF07XG4gICAgY29uc3QgSCA9ICgwLjUgKyAwLjUgKiBNYXRoLmF0YW4yKC1sYWJbMl0sIC1sYWJbMV0pIC8gTWF0aC5QSSkgKiAzNjA7XG4gICAgbGV0IEMgPSBNYXRoLnNxcnQobGFiWzFdICogbGFiWzFdICsgbGFiWzJdICogbGFiWzJdKTtcbiAgICByZXR1cm4geyBsOiBMLCBoOiBIIDwgMCA/IEggKyAzNjAgOiBILCBjOiBjbGFtcChDKSwgYSB9O1xufVxuZXhwb3J0cy5yZ2JUb09rbGNoID0gcmdiVG9Pa2xjaDtcbmZ1bmN0aW9uIHNyZ2JUcmFuc2ZlckZ1bmN0aW9uSW52KGEpIHtcbiAgICByZXR1cm4gLjA0MDQ1IDwgYSA/IE1hdGgucG93KChhICsgLjA1NSkgLyAxLjA1NSwgMi40KSA6IGEgLyAxMi45Mjtcbn1cbmZ1bmN0aW9uIHNyZ2JUcmFuc2ZlckZ1bmN0aW9uKGEpIHtcbiAgICByZXR1cm4gLjAwMzEzMDggPj0gYSA/IDEyLjkyICogYSA6IDEuMDU1ICogTWF0aC5wb3coYSwgLjQxNjY2NjY2NjY2NjY2NjcpIC0gLjA1NTtcbn1cbmZ1bmN0aW9uIGNsYW1wKHgpIHtcbiAgICByZXR1cm4geCA8IGV4cG9ydHMuQ29udmVydGVycyA/IGV4cG9ydHMuQ29udmVydGVycyA6ICh4ID4gMSAtIGV4cG9ydHMuQ29udmVydGVycyA/IDEgLSBleHBvcnRzLkNvbnZlcnRlcnMgOiB4KTtcbn1cbmV4cG9ydHMuY2xhbXAgPSBjbGFtcDtcbmZ1bmN0aW9uIG9rbGNoVG9SZ2IobCwgYywgaCwgYWxwaGEgPSAxKSB7XG4gICAgY29uc3QgTCA9IGw7XG4gICAgY29uc3QgQyA9IGM7XG4gICAgY29uc3QgSCA9IChoIC8gMzYwKSAqIDIgKiBNYXRoLlBJO1xuICAgIGNvbnN0IGEgPSBDICogTWF0aC5jb3MoSCk7XG4gICAgY29uc3QgYjEgPSBDICogTWF0aC5zaW4oSCk7XG4gICAgY29uc3Qgc3JnYiA9IG9rbGFiVG9MaW5lYXJTcmdiKEwsIGEsIGIxKTtcbiAgICBjb25zdCByID0gMjU1ICogc3JnYlRyYW5zZmVyRnVuY3Rpb24oc3JnYlswXSk7XG4gICAgY29uc3QgZyA9IDI1NSAqIHNyZ2JUcmFuc2ZlckZ1bmN0aW9uKHNyZ2JbMV0pO1xuICAgIGNvbnN0IGIgPSAyNTUgKiBzcmdiVHJhbnNmZXJGdW5jdGlvbihzcmdiWzJdKTtcbiAgICByZXR1cm4geyByOiByLCBnOiBnLCBiOiBiLCBhOiBhbHBoYSB9O1xufVxuZXhwb3J0cy5va2xjaFRvUmdiID0gb2tsY2hUb1JnYjtcbmZ1bmN0aW9uIGxpbmVhcl9zcmdiX3RvX29rbGFiKHIsIGcsIGIpIHtcbiAgICBjb25zdCBsID0gMC40MTIyMjE0NzA4ICogciArIDAuNTM2MzMyNTM2MyAqIGcgKyAwLjA1MTQ0NTk5MjkgKiBiO1xuICAgIGNvbnN0IG0gPSAwLjIxMTkwMzQ5ODIgKiByICsgMC42ODA2OTk1NDUxICogZyArIDAuMTA3Mzk2OTU2NiAqIGI7XG4gICAgY29uc3QgcyA9IDAuMDg4MzAyNDYxOSAqIHIgKyAwLjI4MTcxODgzNzYgKiBnICsgMC42Mjk5Nzg3MDA1ICogYjtcbiAgICBjb25zdCBsXyA9IE1hdGguY2JydChsKTtcbiAgICBjb25zdCBtXyA9IE1hdGguY2JydChtKTtcbiAgICBjb25zdCBzXyA9IE1hdGguY2JydChzKTtcbiAgICByZXR1cm4gW1xuICAgICAgICAwLjIxMDQ1NDI1NTMgKiBsXyArIDAuNzkzNjE3Nzg1MCAqIG1fIC0gMC4wMDQwNzIwNDY4ICogc18sXG4gICAgICAgIDEuOTc3OTk4NDk1MSAqIGxfIC0gMi40Mjg1OTIyMDUwICogbV8gKyAwLjQ1MDU5MzcwOTkgKiBzXyxcbiAgICAgICAgMC4wMjU5MDQwMzcxICogbF8gKyAwLjc4Mjc3MTc2NjIgKiBtXyAtIDAuODA4Njc1NzY2MCAqIHNfXG4gICAgXTtcbn1cbmZ1bmN0aW9uIG9rbGFiVG9MaW5lYXJTcmdiKEwsIGEsIGIpIHtcbiAgICBjb25zdCBsXyA9IEwgKyAwLjM5NjMzNzc3NzQgKiBhICsgMC4yMTU4MDM3NTczICogYjtcbiAgICBjb25zdCBtXyA9IEwgLSAwLjEwNTU2MTM0NTggKiBhIC0gMC4wNjM4NTQxNzI4ICogYjtcbiAgICBjb25zdCBzXyA9IEwgLSAwLjA4OTQ4NDE3NzUgKiBhIC0gMS4yOTE0ODU1NDgwICogYjtcbiAgICBjb25zdCBsID0gbF8gKiBsXyAqIGxfO1xuICAgIGNvbnN0IG0gPSBtXyAqIG1fICogbV87XG4gICAgY29uc3QgcyA9IHNfICogc18gKiBzXztcbiAgICByZXR1cm4gW1xuICAgICAgICAoKzQuMDc2NzQxNjYyMSAqIGwgLSAzLjMwNzcxMTU5MTMgKiBtICsgMC4yMzA5Njk5MjkyICogcyksXG4gICAgICAgICgtMS4yNjg0MzgwMDQ2ICogbCArIDIuNjA5NzU3NDAxMSAqIG0gLSAwLjM0MTMxOTM5NjUgKiBzKSxcbiAgICAgICAgKC0wLjAwNDE5NjA4NjMgKiBsIC0gMC43MDM0MTg2MTQ3ICogbSArIDEuNzA3NjE0NzAxMCAqIHMpXG4gICAgXTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/color/lib/CntrlColor/colorConverters.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/color/lib/CntrlColor/expr/Combs.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@cntrl-site/color/lib/CntrlColor/expr/Combs.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.List = exports.Seq = exports.Alt = exports.Opt = exports.Ignore = exports.Regex = exports.Text = void 0;\nconst ParseError_1 = __webpack_require__(/*! ./ParseError */ \"./node_modules/@cntrl-site/color/lib/CntrlColor/expr/ParseError.js\");\nconst Result_1 = __webpack_require__(/*! ./Result */ \"./node_modules/@cntrl-site/color/lib/CntrlColor/expr/Result.js\");\nconst Token_1 = __webpack_require__(/*! ./Token */ \"./node_modules/@cntrl-site/color/lib/CntrlColor/expr/Token.js\");\nfunction Text(text, ci = false) {\n    function isMatch(sample) {\n        return ci ? (text.toLowerCase() === sample.toLowerCase()) : (text === sample);\n    }\n    return (src, index) => {\n        const sample = src.slice(index, index + text.length);\n        if (!isMatch(sample)) {\n            return Result_1.Result.Err(new ParseError_1.ParseError(`Expects \"${text}\" instead got \"${sample}\"`, index));\n        }\n        return Result_1.Result.Ok(Token_1.Token.Plain({\n            index,\n            size: sample.length,\n            type: 'text',\n            value: sample\n        }));\n    };\n}\nexports.Text = Text;\nfunction Regex(re) {\n    const pattern = new RegExp(re, /g/i.test(re.flags) ? re.flags : `${re.flags}g`);\n    const parseRegex = (src, index) => {\n        pattern.lastIndex = index;\n        const match = pattern.exec(src);\n        if (!match || match.index !== index) {\n            return Result_1.Result.Err(new ParseError_1.ParseError(`Cannot match \"${pattern}\"`, index));\n        }\n        return Result_1.Result.Ok(Token_1.Token.Plain({\n            index,\n            size: match[0].length,\n            type: 'regex',\n            value: match\n        }));\n    };\n    return parseRegex;\n}\nexports.Regex = Regex;\nfunction Ignore(parse) {\n    return (src, index) => parse(src, index).map(t => t.ignore());\n}\nexports.Ignore = Ignore;\nfunction Opt(parse) {\n    return (src, index) => {\n        const res = parse(src, index);\n        return res.mapOrElse(() => Result_1.Result.Ok(Token_1.Token.Ignore({ index, size: 0 })), () => res);\n    };\n}\nexports.Opt = Opt;\nfunction Alt(...parsers) {\n    // @ts-ignore\n    const parseAlt = (src, index) => {\n        const errors = [];\n        for (const parse of parsers) {\n            const res = parse(src, index);\n            if (res.isOk()) {\n                return res;\n            }\n            errors.push(res.unwrapErr());\n        }\n        return Result_1.Result.Err(ParseError_1.ParseError.merge(errors, index));\n    };\n    return parseAlt;\n}\nexports.Alt = Alt;\nfunction Seq(parsers, checkEnd) {\n    // @ts-ignore\n    const parseSeq = (src, index) => {\n        const items = [];\n        let lastIndex = index;\n        for (const parse of parsers) {\n            if (lastIndex >= src.length) {\n                return Result_1.Result.Err(new ParseError_1.ParseError('Unexpected end of input', lastIndex));\n            }\n            const res = parse(src, lastIndex);\n            if (res.isErr()) {\n                if (checkEnd && checkEnd(src, lastIndex).isOk()) {\n                    break;\n                }\n                else {\n                    return res;\n                }\n            }\n            const token = res.unwrap();\n            lastIndex = token.end();\n            if (!token.isIgnore()) {\n                items.push(token);\n            }\n        }\n        if (items.length === 0) {\n            return Result_1.Result.Err(new ParseError_1.ParseError('Cannot match sequence', lastIndex));\n        }\n        return Result_1.Result.Ok(Token_1.Token.Plain({\n            index,\n            size: lastIndex - index,\n            type: 'sequence',\n            value: items\n        }));\n    };\n    return parseSeq;\n}\nexports.Seq = Seq;\nfunction List(parseItem, parseDelim, checkEnd) {\n    return (src, index) => {\n        const items = [];\n        let lastIndex = index;\n        while (lastIndex < src.length) {\n            const itemRes = parseItem(src, lastIndex);\n            if (itemRes.isErr()) {\n                return Result_1.Result.Err(itemRes.unwrapErr());\n            }\n            const itemToken = itemRes.unwrap();\n            if (!itemToken.isIgnore) {\n                items.push(itemToken);\n            }\n            lastIndex = itemToken.end();\n            if (checkEnd && checkEnd(src, lastIndex).isOk()) {\n                break;\n            }\n            if (parseDelim) {\n                const delimRes = parseDelim(src, lastIndex);\n                if (delimRes.isErr()) {\n                    break;\n                }\n                lastIndex = delimRes.unwrap().end();\n            }\n        }\n        if (items.length === 0) {\n            return Result_1.Result.Err(new ParseError_1.ParseError('Cannot match list', lastIndex));\n        }\n        return Result_1.Result.Ok(Token_1.Token.Plain({\n            index,\n            size: lastIndex - index,\n            type: 'list',\n            value: items\n        }));\n    };\n}\nexports.List = List;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/color/lib/CntrlColor/expr/Combs.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/color/lib/CntrlColor/expr/ParseError.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@cntrl-site/color/lib/CntrlColor/expr/ParseError.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ParseError = void 0;\nclass ParseError extends Error {\n    static merge(errors, index) {\n        return new ParseError([\n            'Multiple errors occured:',\n            ...errors.map(err => err instanceof Error ? err.toString() : err)\n        ].join('\\n'), index);\n    }\n    constructor(message, index) {\n        super(`${message} at ${index}`);\n        this.index = index;\n        this.name = 'ParseError';\n    }\n    toString() {\n        return `${this.name}: ${this.message} at ${this.index}`;\n    }\n}\nexports.ParseError = ParseError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvY29sb3IvbGliL0NudHJsQ29sb3IvZXhwci9QYXJzZUVycm9yLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFNBQVMsS0FBSyxNQUFNO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLFVBQVUsSUFBSSxjQUFjLEtBQUssV0FBVztBQUM5RDtBQUNBO0FBQ0Esa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9jb2xvci9saWIvQ250cmxDb2xvci9leHByL1BhcnNlRXJyb3IuanM/Y2UzOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUGFyc2VFcnJvciA9IHZvaWQgMDtcbmNsYXNzIFBhcnNlRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgc3RhdGljIG1lcmdlKGVycm9ycywgaW5kZXgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQYXJzZUVycm9yKFtcbiAgICAgICAgICAgICdNdWx0aXBsZSBlcnJvcnMgb2NjdXJlZDonLFxuICAgICAgICAgICAgLi4uZXJyb3JzLm1hcChlcnIgPT4gZXJyIGluc3RhbmNlb2YgRXJyb3IgPyBlcnIudG9TdHJpbmcoKSA6IGVycilcbiAgICAgICAgXS5qb2luKCdcXG4nKSwgaW5kZXgpO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBpbmRleCkge1xuICAgICAgICBzdXBlcihgJHttZXNzYWdlfSBhdCAke2luZGV4fWApO1xuICAgICAgICB0aGlzLmluZGV4ID0gaW5kZXg7XG4gICAgICAgIHRoaXMubmFtZSA9ICdQYXJzZUVycm9yJztcbiAgICB9XG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiBgJHt0aGlzLm5hbWV9OiAke3RoaXMubWVzc2FnZX0gYXQgJHt0aGlzLmluZGV4fWA7XG4gICAgfVxufVxuZXhwb3J0cy5QYXJzZUVycm9yID0gUGFyc2VFcnJvcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/color/lib/CntrlColor/expr/ParseError.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/color/lib/CntrlColor/expr/Result.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@cntrl-site/color/lib/CntrlColor/expr/Result.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Err = exports.Ok = exports.Result = void 0;\nclass Result {\n    static Ok(value) { return new Ok(value); }\n    static Err(error) { return new Err(error); }\n    isOk() { return false; }\n    isErr() { return false; }\n}\nexports.Result = Result;\nclass Ok extends Result {\n    constructor(value) {\n        super();\n        this.value = value;\n        Object.freeze(this);\n    }\n    isOk() { return true; }\n    unwrap() { return this.value; }\n    unwrapErr() { throw this.value; }\n    map(mapFn) { return new Ok(mapFn(this.value)); }\n    mapOrElse(elseFn, mapFn) { return mapFn(this.value); }\n}\nexports.Ok = Ok;\nclass Err extends Result {\n    constructor(error) {\n        super();\n        this.error = error;\n        Object.freeze(this);\n    }\n    isErr() { return true; }\n    unwrap() { throw this.error; }\n    unwrapErr() { return this.error; }\n    // @ts-ignore\n    map(mapFn) { return this; }\n    mapOrElse(elseFn, mapFn) { return elseFn(); }\n}\nexports.Err = Err;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvY29sb3IvbGliL0NudHJsQ29sb3IvZXhwci9SZXN1bHQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsV0FBVyxHQUFHLFVBQVUsR0FBRyxjQUFjO0FBQ3pDO0FBQ0EsdUJBQXVCO0FBQ3ZCLHdCQUF3QjtBQUN4QixhQUFhO0FBQ2IsY0FBYztBQUNkO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixlQUFlO0FBQ2Ysa0JBQWtCO0FBQ2xCLGlCQUFpQjtBQUNqQiwrQkFBK0I7QUFDL0I7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkLGVBQWU7QUFDZixrQkFBa0I7QUFDbEI7QUFDQSxpQkFBaUI7QUFDakIsK0JBQStCO0FBQy9CO0FBQ0EsV0FBVyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvY29sb3IvbGliL0NudHJsQ29sb3IvZXhwci9SZXN1bHQuanM/YTc3MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRXJyID0gZXhwb3J0cy5PayA9IGV4cG9ydHMuUmVzdWx0ID0gdm9pZCAwO1xuY2xhc3MgUmVzdWx0IHtcbiAgICBzdGF0aWMgT2sodmFsdWUpIHsgcmV0dXJuIG5ldyBPayh2YWx1ZSk7IH1cbiAgICBzdGF0aWMgRXJyKGVycm9yKSB7IHJldHVybiBuZXcgRXJyKGVycm9yKTsgfVxuICAgIGlzT2soKSB7IHJldHVybiBmYWxzZTsgfVxuICAgIGlzRXJyKCkgeyByZXR1cm4gZmFsc2U7IH1cbn1cbmV4cG9ydHMuUmVzdWx0ID0gUmVzdWx0O1xuY2xhc3MgT2sgZXh0ZW5kcyBSZXN1bHQge1xuICAgIGNvbnN0cnVjdG9yKHZhbHVlKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgICAgICAgT2JqZWN0LmZyZWV6ZSh0aGlzKTtcbiAgICB9XG4gICAgaXNPaygpIHsgcmV0dXJuIHRydWU7IH1cbiAgICB1bndyYXAoKSB7IHJldHVybiB0aGlzLnZhbHVlOyB9XG4gICAgdW53cmFwRXJyKCkgeyB0aHJvdyB0aGlzLnZhbHVlOyB9XG4gICAgbWFwKG1hcEZuKSB7IHJldHVybiBuZXcgT2sobWFwRm4odGhpcy52YWx1ZSkpOyB9XG4gICAgbWFwT3JFbHNlKGVsc2VGbiwgbWFwRm4pIHsgcmV0dXJuIG1hcEZuKHRoaXMudmFsdWUpOyB9XG59XG5leHBvcnRzLk9rID0gT2s7XG5jbGFzcyBFcnIgZXh0ZW5kcyBSZXN1bHQge1xuICAgIGNvbnN0cnVjdG9yKGVycm9yKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuZXJyb3IgPSBlcnJvcjtcbiAgICAgICAgT2JqZWN0LmZyZWV6ZSh0aGlzKTtcbiAgICB9XG4gICAgaXNFcnIoKSB7IHJldHVybiB0cnVlOyB9XG4gICAgdW53cmFwKCkgeyB0aHJvdyB0aGlzLmVycm9yOyB9XG4gICAgdW53cmFwRXJyKCkgeyByZXR1cm4gdGhpcy5lcnJvcjsgfVxuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBtYXAobWFwRm4pIHsgcmV0dXJuIHRoaXM7IH1cbiAgICBtYXBPckVsc2UoZWxzZUZuLCBtYXBGbikgeyByZXR1cm4gZWxzZUZuKCk7IH1cbn1cbmV4cG9ydHMuRXJyID0gRXJyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/color/lib/CntrlColor/expr/Result.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/color/lib/CntrlColor/expr/Token.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@cntrl-site/color/lib/CntrlColor/expr/Token.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Token = exports.TOKEN_IGNORE = void 0;\nexports.TOKEN_IGNORE = Symbol.for('@cntrl-site/cms-client:TokenIgnore');\nclass Token {\n    static Plain(params) {\n        return new Token(params);\n    }\n    static Ignore({ index, size }) {\n        return new Token({ index, size, type: exports.TOKEN_IGNORE, value: undefined });\n    }\n    constructor({ index, size, type, value }) {\n        this.index = index;\n        this.size = size;\n        this.type = type;\n        this.value = value;\n    }\n    produce({ type, value }) {\n        return new Token({ index: this.index, size: this.size, type, value });\n    }\n    ignore() {\n        return Token.Ignore({ index: this.index, size: this.size });\n    }\n    end() { return this.index + this.size; }\n    isIgnore() { return this.type === exports.TOKEN_IGNORE; }\n}\nexports.Token = Token;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvY29sb3IvbGliL0NudHJsQ29sb3IvZXhwci9Ub2tlbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLEdBQUcsb0JBQW9CO0FBQ3BDLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixhQUFhO0FBQ2pDLDJCQUEyQiwyREFBMkQ7QUFDdEY7QUFDQSxrQkFBa0IsMEJBQTBCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGFBQWE7QUFDM0IsMkJBQTJCLGlEQUFpRDtBQUM1RTtBQUNBO0FBQ0EsOEJBQThCLG9DQUFvQztBQUNsRTtBQUNBLFlBQVk7QUFDWixpQkFBaUI7QUFDakI7QUFDQSxhQUFhIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9jb2xvci9saWIvQ250cmxDb2xvci9leHByL1Rva2VuLmpzP2IxYTYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlRva2VuID0gZXhwb3J0cy5UT0tFTl9JR05PUkUgPSB2b2lkIDA7XG5leHBvcnRzLlRPS0VOX0lHTk9SRSA9IFN5bWJvbC5mb3IoJ0BjbnRybC1zaXRlL2Ntcy1jbGllbnQ6VG9rZW5JZ25vcmUnKTtcbmNsYXNzIFRva2VuIHtcbiAgICBzdGF0aWMgUGxhaW4ocGFyYW1zKSB7XG4gICAgICAgIHJldHVybiBuZXcgVG9rZW4ocGFyYW1zKTtcbiAgICB9XG4gICAgc3RhdGljIElnbm9yZSh7IGluZGV4LCBzaXplIH0pIHtcbiAgICAgICAgcmV0dXJuIG5ldyBUb2tlbih7IGluZGV4LCBzaXplLCB0eXBlOiBleHBvcnRzLlRPS0VOX0lHTk9SRSwgdmFsdWU6IHVuZGVmaW5lZCB9KTtcbiAgICB9XG4gICAgY29uc3RydWN0b3IoeyBpbmRleCwgc2l6ZSwgdHlwZSwgdmFsdWUgfSkge1xuICAgICAgICB0aGlzLmluZGV4ID0gaW5kZXg7XG4gICAgICAgIHRoaXMuc2l6ZSA9IHNpemU7XG4gICAgICAgIHRoaXMudHlwZSA9IHR5cGU7XG4gICAgICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgICB9XG4gICAgcHJvZHVjZSh7IHR5cGUsIHZhbHVlIH0pIHtcbiAgICAgICAgcmV0dXJuIG5ldyBUb2tlbih7IGluZGV4OiB0aGlzLmluZGV4LCBzaXplOiB0aGlzLnNpemUsIHR5cGUsIHZhbHVlIH0pO1xuICAgIH1cbiAgICBpZ25vcmUoKSB7XG4gICAgICAgIHJldHVybiBUb2tlbi5JZ25vcmUoeyBpbmRleDogdGhpcy5pbmRleCwgc2l6ZTogdGhpcy5zaXplIH0pO1xuICAgIH1cbiAgICBlbmQoKSB7IHJldHVybiB0aGlzLmluZGV4ICsgdGhpcy5zaXplOyB9XG4gICAgaXNJZ25vcmUoKSB7IHJldHVybiB0aGlzLnR5cGUgPT09IGV4cG9ydHMuVE9LRU5fSUdOT1JFOyB9XG59XG5leHBvcnRzLlRva2VuID0gVG9rZW47XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/color/lib/CntrlColor/expr/Token.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/color/lib/CntrlColor/expr/color/ColorCommons.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@cntrl-site/color/lib/CntrlColor/expr/color/ColorCommons.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Angle = exports.Percentage = exports.CssNumber = void 0;\nconst Combs_1 = __webpack_require__(/*! ../Combs */ \"./node_modules/@cntrl-site/color/lib/CntrlColor/expr/Combs.js\");\nfunction CssNumber() {\n    const parse = (0, Combs_1.Regex)(/[+-]?(?:\\d*\\.\\d|\\d)\\d*(?:[eE][+-]?\\d+)?/);\n    const parseCssNumber = (src, index) => parse(src, index).map(t => t.produce({\n        type: 'number',\n        value: parseFloat(t.value[0])\n    }));\n    return parseCssNumber;\n}\nexports.CssNumber = CssNumber;\nfunction Percentage() {\n    const parse = (0, Combs_1.Seq)([CssNumber(), (0, Combs_1.Text)('%')]);\n    const parsePercentage = (src, index) => parse(src, index).map(t => t.produce({\n        type: 'percentage',\n        value: t.value[0].value\n    }));\n    return parsePercentage;\n}\nexports.Percentage = Percentage;\nfunction Angle() {\n    const parse = (0, Combs_1.Seq)([CssNumber(), (0, Combs_1.Opt)((0, Combs_1.Alt)((0, Combs_1.Text)('rad', true), (0, Combs_1.Text)('deg', true)))]);\n    const parseAngle = (src, index) => parse(src, index).map(t => {\n        var _a, _b;\n        return t.produce({\n            type: 'angle',\n            value: {\n                angle: t.value[0].value,\n                unit: (_b = (_a = t.value[1]) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 'deg'\n            }\n        });\n    });\n    return parseAngle;\n}\nexports.Angle = Angle;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvY29sb3IvbGliL0NudHJsQ29sb3IvZXhwci9jb2xvci9Db2xvckNvbW1vbnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxHQUFHLGtCQUFrQixHQUFHLGlCQUFpQjtBQUN0RCxnQkFBZ0IsbUJBQU8sQ0FBQywrRUFBVTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0EsYUFBYSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvY29sb3IvbGliL0NudHJsQ29sb3IvZXhwci9jb2xvci9Db2xvckNvbW1vbnMuanM/ZjVkYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQW5nbGUgPSBleHBvcnRzLlBlcmNlbnRhZ2UgPSBleHBvcnRzLkNzc051bWJlciA9IHZvaWQgMDtcbmNvbnN0IENvbWJzXzEgPSByZXF1aXJlKFwiLi4vQ29tYnNcIik7XG5mdW5jdGlvbiBDc3NOdW1iZXIoKSB7XG4gICAgY29uc3QgcGFyc2UgPSAoMCwgQ29tYnNfMS5SZWdleCkoL1srLV0/KD86XFxkKlxcLlxcZHxcXGQpXFxkKig/OltlRV1bKy1dP1xcZCspPy8pO1xuICAgIGNvbnN0IHBhcnNlQ3NzTnVtYmVyID0gKHNyYywgaW5kZXgpID0+IHBhcnNlKHNyYywgaW5kZXgpLm1hcCh0ID0+IHQucHJvZHVjZSh7XG4gICAgICAgIHR5cGU6ICdudW1iZXInLFxuICAgICAgICB2YWx1ZTogcGFyc2VGbG9hdCh0LnZhbHVlWzBdKVxuICAgIH0pKTtcbiAgICByZXR1cm4gcGFyc2VDc3NOdW1iZXI7XG59XG5leHBvcnRzLkNzc051bWJlciA9IENzc051bWJlcjtcbmZ1bmN0aW9uIFBlcmNlbnRhZ2UoKSB7XG4gICAgY29uc3QgcGFyc2UgPSAoMCwgQ29tYnNfMS5TZXEpKFtDc3NOdW1iZXIoKSwgKDAsIENvbWJzXzEuVGV4dCkoJyUnKV0pO1xuICAgIGNvbnN0IHBhcnNlUGVyY2VudGFnZSA9IChzcmMsIGluZGV4KSA9PiBwYXJzZShzcmMsIGluZGV4KS5tYXAodCA9PiB0LnByb2R1Y2Uoe1xuICAgICAgICB0eXBlOiAncGVyY2VudGFnZScsXG4gICAgICAgIHZhbHVlOiB0LnZhbHVlWzBdLnZhbHVlXG4gICAgfSkpO1xuICAgIHJldHVybiBwYXJzZVBlcmNlbnRhZ2U7XG59XG5leHBvcnRzLlBlcmNlbnRhZ2UgPSBQZXJjZW50YWdlO1xuZnVuY3Rpb24gQW5nbGUoKSB7XG4gICAgY29uc3QgcGFyc2UgPSAoMCwgQ29tYnNfMS5TZXEpKFtDc3NOdW1iZXIoKSwgKDAsIENvbWJzXzEuT3B0KSgoMCwgQ29tYnNfMS5BbHQpKCgwLCBDb21ic18xLlRleHQpKCdyYWQnLCB0cnVlKSwgKDAsIENvbWJzXzEuVGV4dCkoJ2RlZycsIHRydWUpKSldKTtcbiAgICBjb25zdCBwYXJzZUFuZ2xlID0gKHNyYywgaW5kZXgpID0+IHBhcnNlKHNyYywgaW5kZXgpLm1hcCh0ID0+IHtcbiAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgcmV0dXJuIHQucHJvZHVjZSh7XG4gICAgICAgICAgICB0eXBlOiAnYW5nbGUnLFxuICAgICAgICAgICAgdmFsdWU6IHtcbiAgICAgICAgICAgICAgICBhbmdsZTogdC52YWx1ZVswXS52YWx1ZSxcbiAgICAgICAgICAgICAgICB1bml0OiAoX2IgPSAoX2EgPSB0LnZhbHVlWzFdKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EudmFsdWUpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6ICdkZWcnXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pO1xuICAgIHJldHVybiBwYXJzZUFuZ2xlO1xufVxuZXhwb3J0cy5BbmdsZSA9IEFuZ2xlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/color/lib/CntrlColor/expr/color/ColorCommons.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/color/lib/CntrlColor/expr/color/ColorGrammar.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@cntrl-site/color/lib/CntrlColor/expr/color/ColorGrammar.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ColorParser = void 0;\nconst Combs_1 = __webpack_require__(/*! ../Combs */ \"./node_modules/@cntrl-site/color/lib/CntrlColor/expr/Combs.js\");\nconst ColorCommons_1 = __webpack_require__(/*! ./ColorCommons */ \"./node_modules/@cntrl-site/color/lib/CntrlColor/expr/color/ColorCommons.js\");\nfunction RgbComma() {\n    const parseNum = (0, ColorCommons_1.CssNumber)();\n    const parseComma = (0, Combs_1.Regex)(/\\s*,\\s*/);\n    const parseRgb = (0, Combs_1.Seq)([\n        (0, Combs_1.Text)('rgb', true),\n        (0, Combs_1.Regex)(/\\(\\s*/),\n        parseNum,\n        parseComma,\n        parseNum,\n        parseComma,\n        parseNum,\n        (0, Combs_1.Regex)(/\\s*\\)/)\n    ]);\n    const parseRgba = (0, Combs_1.Seq)([\n        (0, Combs_1.Text)('rgba', true),\n        (0, Combs_1.Regex)(/\\(\\s*/),\n        parseNum,\n        parseComma,\n        parseNum,\n        parseComma,\n        parseNum,\n        parseComma,\n        parseNum,\n        (0, Combs_1.Regex)(/\\s*\\)/)\n    ]);\n    const parse = (0, Combs_1.Alt)(parseRgb, parseRgba);\n    const parseRgbaComma = (src, index) => parse(src, index).map(t => {\n        var _a, _b;\n        return t.produce({\n            type: 'rgba',\n            value: {\n                r: t.value[2].value,\n                g: t.value[4].value,\n                b: t.value[6].value,\n                a: (_b = (_a = t.value[8]) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1\n            }\n        });\n    });\n    return parseRgbaComma;\n}\nfunction Hex() {\n    const parse = (0, Combs_1.Regex)(/#(?:([0-9a-f]{8})|([0-9a-f]{6})|([0-9a-f]{3}))(?=\\b|$)/i);\n    const parseHex = (src, index) => parse(src, index).map(t => {\n        const [, wAlpha, long, short] = t.value;\n        let red = 0, green = 0, blue = 0, alpha = 1;\n        if (wAlpha) {\n            red = parseInt(wAlpha.slice(0, 2), 16);\n            green = parseInt(wAlpha.slice(2, 4), 16);\n            blue = parseInt(wAlpha.slice(4, 6), 16);\n            alpha = parseInt(wAlpha.slice(6, 8), 16) / 0xff;\n        }\n        if (long) {\n            red = parseInt(long.slice(0, 2), 16);\n            green = parseInt(long.slice(2, 4), 16);\n            blue = parseInt(long.slice(4, 6), 16);\n        }\n        if (short) {\n            red = parseInt(short.charAt(0), 16);\n            red = (red << 4) ^ red;\n            green = parseInt(short.charAt(1), 16);\n            green = (green << 4) ^ green;\n            blue = parseInt(short.charAt(2), 16);\n            blue = (blue << 4) ^ blue;\n        }\n        return t.produce({\n            type: 'rgba',\n            value: {\n                r: red,\n                g: green,\n                b: blue,\n                a: alpha\n            }\n        });\n    });\n    return parseHex;\n}\nfunction RgbSpace() {\n    const parseNum = (0, ColorCommons_1.CssNumber)();\n    const parseWhitespace = (0, Combs_1.Regex)(/\\s+/);\n    const parseRgb = (0, Combs_1.Seq)([\n        (0, Combs_1.Text)('rgb', true),\n        (0, Combs_1.Regex)(/\\(\\s*/),\n        parseNum,\n        parseWhitespace,\n        parseNum,\n        parseWhitespace,\n        parseNum,\n        (0, Combs_1.Regex)(/\\s*\\)/)\n    ]);\n    const parseRgba = (0, Combs_1.Seq)([\n        (0, Combs_1.Text)('rgba', true),\n        (0, Combs_1.Regex)(/\\(\\s*/),\n        parseNum,\n        parseWhitespace,\n        parseNum,\n        parseWhitespace,\n        parseNum,\n        (0, Combs_1.Regex)(/\\s*\\/\\s*/),\n        parseNum,\n        (0, Combs_1.Regex)(/\\s*\\)/)\n    ]);\n    const parse = (0, Combs_1.Alt)(parseRgb, parseRgba);\n    const parseRgbaSpace = (src, index) => parse(src, index).map(t => {\n        var _a, _b;\n        return t.produce({\n            type: 'rgba',\n            value: {\n                r: t.value[2].value,\n                g: t.value[4].value,\n                b: t.value[6].value,\n                a: (_b = (_a = t.value[8]) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1\n            }\n        });\n    });\n    return parseRgbaSpace;\n}\nfunction Oklch() {\n    const parseNum = (0, ColorCommons_1.CssNumber)();\n    const parsePerc = (0, ColorCommons_1.Percentage)();\n    const parseWhitespace = (0, Combs_1.Regex)(/\\s+/);\n    const parse = (0, Combs_1.Seq)([\n        (0, Combs_1.Regex)(/oklch\\(\\s*/i),\n        (0, Combs_1.Alt)(parsePerc, parseNum),\n        parseWhitespace,\n        parseNum,\n        parseWhitespace,\n        (0, ColorCommons_1.Angle)(),\n        (0, Combs_1.Opt)((0, Combs_1.Seq)([\n            (0, Combs_1.Regex)(/\\s*\\/\\s*/),\n            parseNum\n        ])),\n        (0, Combs_1.Regex)(/\\s*\\)/)\n    ]);\n    const parseOklch = (src, index) => parse(src, index).map(t => {\n        const lightness = (t.value[1].type === 'number'\n            ? t.value[1].value\n            : t.value[1].value / 100);\n        const chroma = t.value[3].value;\n        const hue = (t.value[5].value.unit === 'deg'\n            ? t.value[5].value.angle\n            : (t.value[5].value.angle / (2 * Math.PI)) * 360);\n        const alpha = (t.value.length === 8\n            ? t.value[6].value[1].value\n            : 1);\n        return t.produce({\n            type: 'oklch',\n            value: {\n                l: lightness,\n                c: chroma,\n                h: hue,\n                a: alpha\n            }\n        });\n    });\n    return parseOklch;\n}\nfunction ColorParser() {\n    const parseColor = (0, Combs_1.Alt)(RgbComma(), RgbSpace(), Hex(), Oklch());\n    return parseColor;\n}\nexports.ColorParser = ColorParser;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/color/lib/CntrlColor/expr/color/ColorGrammar.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/color/lib/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cntrl-site/color/lib/index.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CntrlColor = void 0;\nvar CntrlColor_1 = __webpack_require__(/*! ./CntrlColor/CntrlColor */ \"./node_modules/@cntrl-site/color/lib/CntrlColor/CntrlColor.js\");\nObject.defineProperty(exports, \"CntrlColor\", ({ enumerable: true, get: function () { return CntrlColor_1.CntrlColor; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvY29sb3IvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQixtQkFBbUIsbUJBQU8sQ0FBQyw4RkFBeUI7QUFDcEQsOENBQTZDLEVBQUUscUNBQXFDLG1DQUFtQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9jb2xvci9saWIvaW5kZXguanM/M2FkNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ250cmxDb2xvciA9IHZvaWQgMDtcbnZhciBDbnRybENvbG9yXzEgPSByZXF1aXJlKFwiLi9DbnRybENvbG9yL0NudHJsQ29sb3JcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJDbnRybENvbG9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBDbnRybENvbG9yXzEuQ250cmxDb2xvcjsgfSB9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/color/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/effects/lib/ImageTextureManager.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@cntrl-site/effects/lib/ImageTextureManager.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ImageTextureManager = void 0;\nclass ImageTextureManager {\n    constructor(url) {\n        this.image = new Image();\n        this.image.crossOrigin = 'anonymous';\n        this.image.src = url.startsWith('blob') ? url : `${url}?dt=${Date.now()}`;\n    }\n    updatesOnRender() {\n        return false;\n    }\n    getElement() {\n        return this.image;\n    }\n    ready() {\n        return this.image.complete;\n    }\n    getWidth() {\n        return this.image.width;\n    }\n    getHeight() {\n        return this.image.height;\n    }\n}\nexports.ImageTextureManager = ImageTextureManager;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvZWZmZWN0cy9saWIvSW1hZ2VUZXh0dXJlTWFuYWdlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyREFBMkQsSUFBSSxNQUFNLFdBQVc7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvZWZmZWN0cy9saWIvSW1hZ2VUZXh0dXJlTWFuYWdlci5qcz80ODFjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5JbWFnZVRleHR1cmVNYW5hZ2VyID0gdm9pZCAwO1xuY2xhc3MgSW1hZ2VUZXh0dXJlTWFuYWdlciB7XG4gICAgY29uc3RydWN0b3IodXJsKSB7XG4gICAgICAgIHRoaXMuaW1hZ2UgPSBuZXcgSW1hZ2UoKTtcbiAgICAgICAgdGhpcy5pbWFnZS5jcm9zc09yaWdpbiA9ICdhbm9ueW1vdXMnO1xuICAgICAgICB0aGlzLmltYWdlLnNyYyA9IHVybC5zdGFydHNXaXRoKCdibG9iJykgPyB1cmwgOiBgJHt1cmx9P2R0PSR7RGF0ZS5ub3coKX1gO1xuICAgIH1cbiAgICB1cGRhdGVzT25SZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZ2V0RWxlbWVudCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaW1hZ2U7XG4gICAgfVxuICAgIHJlYWR5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pbWFnZS5jb21wbGV0ZTtcbiAgICB9XG4gICAgZ2V0V2lkdGgoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmltYWdlLndpZHRoO1xuICAgIH1cbiAgICBnZXRIZWlnaHQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmltYWdlLmhlaWdodDtcbiAgICB9XG59XG5leHBvcnRzLkltYWdlVGV4dHVyZU1hbmFnZXIgPSBJbWFnZVRleHR1cmVNYW5hZ2VyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/effects/lib/ImageTextureManager.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/effects/lib/MediaEffect.js":
/*!*************************************************************!*\
  !*** ./node_modules/@cntrl-site/effects/lib/MediaEffect.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MediaEffect = void 0;\nconst vertexShader2d = `\r\nattribute vec2 a_position;\r\nattribute vec2 a_texCoord;\r\n\r\nuniform vec2 u_resolution;\r\n\r\nvarying vec2 v_texCoord;\r\n\r\nvoid main() {\r\n  // convert the rectangle from pixels to 0.0 to 1.0\r\n  vec2 zeroToOne = a_position / u_resolution;\r\n\r\n  // convert from 0->1 to 0->2\r\n  vec2 zeroToTwo = zeroToOne * 2.0;\r\n\r\n  // convert from 0->2 to -1->+1 (clipspace)\r\n  vec2 clipSpace = zeroToTwo - 1.0;\r\n\r\n  gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\r\n\r\n  // pass the texCoord to the fragment shader\r\n  // The GPU will interpolate this value between points.\r\n  v_texCoord = a_texCoord;\r\n}`;\nconst defaultShader = `\r\nprecision mediump float;\r\n\r\n// our texture\r\nuniform sampler2D u_image;\r\nuniform sampler2D u_pattern;\r\nuniform float u_time;\r\nuniform vec2 u_imgDimensions;\r\nuniform vec2 u_patternDimensions;\r\n\r\n// the texCoords passed in from the vertex shader.\r\nvarying vec2 v_texCoord;\r\n\r\nvoid main() {\r\n  float tunedTime = u_time * 1.0;\r\n  gl_FragColor = texture2D(u_image, v_texCoord);\r\n}`;\nclass MediaEffect {\n    constructor(textureManager, patternUrl, pattern2Url, fragmentShaderSrc, params, imageWidth, imageHeight) {\n        this.textureManager = textureManager;\n        this.imageWidth = imageWidth;\n        this.imageHeight = imageHeight;\n        this.vpWidth = 100;\n        this.vpHeight = 100;\n        this.cache = new WeakMap();\n        this.statusListeners = [];\n        this.pattern1 = new Image();\n        this.pattern1.crossOrigin = 'anonymous';\n        this.pattern1.src = patternUrl;\n        this.pattern2 = new Image();\n        this.pattern2.crossOrigin = 'anonymous';\n        this.pattern2.src = pattern2Url;\n        this.fxParams = Object.assign({}, params);\n        this.fragmentShaderSrc = fragmentShaderSrc || defaultShader;\n    }\n    setViewport(width, height) {\n        this.vpWidth = width;\n        this.vpHeight = height;\n    }\n    setParam(name, value) {\n        this.fxParams[name] = value;\n    }\n    subscribeStatus(listener) {\n        this.statusListeners.push(listener);\n    }\n    ready() {\n        return this.textureManager.ready();\n    }\n    prepare(gl) {\n        this.ensureCache(gl);\n    }\n    render(gl) {\n        if (!this.ready())\n            return;\n        const _a = this.fxParams, { time, cursor } = _a, restParams = __rest(_a, [\"time\", \"cursor\"]);\n        this.ensureCache(gl);\n        const program = this.cacheGet(gl, 'program');\n        const posBuffer = this.cacheGet(gl, 'positionBuffer');\n        const texBuffer = this.cacheGet(gl, 'texCoordBuffer');\n        const texture = this.cacheGet(gl, 'texture');\n        const pattern1Texture = this.cacheGet(gl, 'pattern1Texture');\n        const pattern2Texture = this.cacheGet(gl, 'pattern2Texture');\n        if (this.textureManager.updatesOnRender()) {\n            gl.activeTexture(gl.TEXTURE0);\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.textureManager.getElement());\n        }\n        gl.viewport(0, 0, this.vpWidth, this.vpHeight);\n        gl.clearColor(0, 0, 0, 0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        this.setupPosition(gl);\n        gl.useProgram(program);\n        // shader prop: a_position\n        const posLocation = gl.getAttribLocation(program, 'a_position');\n        gl.enableVertexAttribArray(posLocation);\n        gl.bindBuffer(gl.ARRAY_BUFFER, posBuffer);\n        gl.vertexAttribPointer(posLocation, 2, gl.FLOAT, false, 0, 0);\n        // shader prop: a_texCoord\n        const texLocation = gl.getAttribLocation(program, 'a_texCoord');\n        gl.enableVertexAttribArray(texLocation);\n        gl.bindBuffer(gl.ARRAY_BUFFER, texBuffer);\n        gl.vertexAttribPointer(texLocation, 2, gl.FLOAT, false, 0, 0);\n        // shader prop: u_resolution\n        const resLocation = gl.getUniformLocation(program, 'u_resolution');\n        gl.uniform2f(resLocation, this.vpWidth, this.vpHeight);\n        // shader prop: u_cursor\n        const cursorLocation = gl.getUniformLocation(program, 'u_cursor');\n        gl.uniform2f(cursorLocation, ...cursor);\n        // shader prop: u_time\n        const timeLocation = gl.getUniformLocation(program, 'u_time');\n        gl.uniform1f(timeLocation, time);\n        for (const [key, paramValue] of Object.entries(restParams)) {\n            const location = gl.getUniformLocation(program, key);\n            // @ts-expect-error number | [number, number] TODO type properly when [n,n] is used\n            gl.uniform1f(location, paramValue);\n        }\n        // img + dimensions\n        const imageLocation = gl.getUniformLocation(program, 'u_image');\n        const dimensionsLocation = gl.getUniformLocation(program, 'u_imgDimensions');\n        gl.uniform2f(dimensionsLocation, this.imageWidth, this.imageHeight);\n        // pattern + dimensions\n        const patternLocation = gl.getUniformLocation(program, 'u_pattern');\n        const patternDimensionsLocation = gl.getUniformLocation(program, 'u_patternDimensions');\n        const pattern2Location = gl.getUniformLocation(program, 'u_pattern2');\n        const pattern2DimensionsLocation = gl.getUniformLocation(program, 'u_pattern2Dimensions');\n        gl.uniform2f(patternDimensionsLocation, this.pattern1.width, this.pattern1.height);\n        gl.uniform2f(pattern2DimensionsLocation, this.pattern2.width, this.pattern2.height);\n        gl.uniform1i(imageLocation, 0);\n        gl.uniform1i(patternLocation, 1);\n        gl.uniform1i(pattern2Location, 2);\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, pattern1Texture);\n        gl.activeTexture(gl.TEXTURE2);\n        gl.bindTexture(gl.TEXTURE_2D, pattern2Texture);\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n    setupPosition(gl) {\n        const posBuffer = this.cacheGet(gl, 'positionBuffer');\n        gl.bindBuffer(gl.ARRAY_BUFFER, posBuffer);\n        const imgAspectRatio = this.textureManager.getWidth() / this.textureManager.getHeight();\n        const itemAspectRatio = this.vpWidth / this.vpHeight;\n        const rw = itemAspectRatio < imgAspectRatio ? this.vpHeight * imgAspectRatio : this.vpWidth;\n        const rh = itemAspectRatio < imgAspectRatio ? this.vpHeight : this.vpWidth / imgAspectRatio;\n        const x1 = (this.vpWidth - rw) / 2;\n        const y1 = (this.vpHeight - rh) / 2;\n        const x2 = x1 + rw;\n        const y2 = y1 + rh;\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n            x1,\n            y1,\n            x2,\n            y1,\n            x1,\n            y2,\n            x1,\n            y2,\n            x2,\n            y1,\n            x2,\n            y2,\n        ]), gl.STATIC_DRAW);\n    }\n    ensureCache(gl) {\n        if (!this.cacheGet(gl, 'program')) {\n            this.compileProgram(gl);\n        }\n        if (!this.cacheGet(gl, 'positionBuffer')) {\n            this.createPositionBuffer(gl);\n        }\n        if (!this.cacheGet(gl, 'texCoordBuffer')) {\n            this.createTexCoordBuffer(gl);\n        }\n        if (!this.cacheGet(gl, 'texture')) {\n            this.loadTexture(gl, this.textureManager.getElement(), 'texture');\n        }\n        if (!this.cacheGet(gl, 'pattern1Texture')) {\n            this.loadTexture(gl, this.pattern1, 'pattern1Texture', gl.NEAREST);\n        }\n        if (!this.cacheGet(gl, 'pattern2Texture')) {\n            this.loadTexture(gl, this.pattern2, 'pattern2Texture', gl.NEAREST);\n        }\n    }\n    cacheGet(gl, param) {\n        var _a;\n        return (_a = this.cache.get(gl)) === null || _a === void 0 ? void 0 : _a[param];\n    }\n    cacheSet(gl, param, value) {\n        const record = this.cache.get(gl);\n        if (!record) {\n            this.cache.set(gl, {});\n        }\n        this.cache.get(gl)[param] = value;\n    }\n    compileProgram(gl) {\n        const program = gl.createProgram();\n        if (!program) {\n            throw new Error(`Cannot create program`);\n        }\n        const vertex = this.compileShader(gl, vertexShader2d, gl.VERTEX_SHADER);\n        const fragment = this.compileShader(gl, this.fragmentShaderSrc, gl.FRAGMENT_SHADER);\n        gl.attachShader(program, vertex);\n        gl.attachShader(program, fragment);\n        gl.linkProgram(program);\n        this.cacheSet(gl, 'program', program);\n    }\n    compileShader(gl, shaderSrc, shaderType) {\n        const shader = gl.createShader(shaderType);\n        if (!shader) {\n            throw new Error('cannot create shader');\n        }\n        gl.shaderSource(shader, shaderSrc);\n        gl.compileShader(shader);\n        const compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n        if (!compiled) {\n            const lastError = gl.getShaderInfoLog(shader);\n            if (lastError) {\n                this.statusListeners.forEach((listener) => listener('error', lastError));\n            }\n            const error = new Error(`Error during compilation of shader ${shader}: ${lastError}`);\n            gl.deleteShader(shader);\n            console.error(error);\n        }\n        else {\n            this.statusListeners.forEach((listener) => listener('ready'));\n        }\n        return shader;\n    }\n    createPositionBuffer(gl) {\n        const buffer = gl.createBuffer();\n        if (!buffer) {\n            throw new Error('Cannot create position buffer');\n        }\n        this.cacheSet(gl, 'positionBuffer', buffer);\n    }\n    loadTexture(gl, media, cacheKey, filter = gl.LINEAR) {\n        if (!this.ready())\n            return;\n        const texture = gl.createTexture();\n        if (!texture)\n            return;\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, media);\n        this.cacheSet(gl, cacheKey, texture);\n    }\n    createTexCoordBuffer(gl) {\n        const buffer = gl.createBuffer();\n        if (!buffer)\n            return;\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            1.0,\n            1.0,\n            0.0,\n            1.0,\n            1.0,\n        ]), gl.STATIC_DRAW);\n        this.cacheSet(gl, 'texCoordBuffer', buffer);\n    }\n}\nexports.MediaEffect = MediaEffect;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/effects/lib/MediaEffect.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/effects/lib/VideoTextureManager.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@cntrl-site/effects/lib/VideoTextureManager.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VideoTextureManager = void 0;\nclass VideoTextureManager {\n    constructor(videoUrl, onPlayError) {\n        this.listeners = [];\n        this.isReady = false;\n        const video = document.createElement('video');\n        video.autoplay = true;\n        video.muted = true;\n        video.loop = true;\n        video.playsInline = true;\n        video.controls = true;\n        video.crossOrigin = 'anonymous';\n        video.addEventListener('loadedmetadata', () => {\n            video\n                .play()\n                .then(() => {\n                this.isReady = true;\n                this.listeners.forEach((listener) => listener(true));\n            })\n                .catch(onPlayError);\n        });\n        video.src = videoUrl;\n        this.video = video;\n    }\n    updatesOnRender() {\n        return true;\n    }\n    onReadyStatusChange(listener) {\n        this.listeners.push(listener);\n    }\n    getElement() {\n        return this.video;\n    }\n    ready() {\n        return this.isReady;\n    }\n    getWidth() {\n        return this.video.videoWidth;\n    }\n    getHeight() {\n        return this.video.videoHeight;\n    }\n}\nexports.VideoTextureManager = VideoTextureManager;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvZWZmZWN0cy9saWIvVmlkZW9UZXh0dXJlTWFuYWdlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvZWZmZWN0cy9saWIvVmlkZW9UZXh0dXJlTWFuYWdlci5qcz84M2MzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5WaWRlb1RleHR1cmVNYW5hZ2VyID0gdm9pZCAwO1xuY2xhc3MgVmlkZW9UZXh0dXJlTWFuYWdlciB7XG4gICAgY29uc3RydWN0b3IodmlkZW9VcmwsIG9uUGxheUVycm9yKSB7XG4gICAgICAgIHRoaXMubGlzdGVuZXJzID0gW107XG4gICAgICAgIHRoaXMuaXNSZWFkeSA9IGZhbHNlO1xuICAgICAgICBjb25zdCB2aWRlbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3ZpZGVvJyk7XG4gICAgICAgIHZpZGVvLmF1dG9wbGF5ID0gdHJ1ZTtcbiAgICAgICAgdmlkZW8ubXV0ZWQgPSB0cnVlO1xuICAgICAgICB2aWRlby5sb29wID0gdHJ1ZTtcbiAgICAgICAgdmlkZW8ucGxheXNJbmxpbmUgPSB0cnVlO1xuICAgICAgICB2aWRlby5jb250cm9scyA9IHRydWU7XG4gICAgICAgIHZpZGVvLmNyb3NzT3JpZ2luID0gJ2Fub255bW91cyc7XG4gICAgICAgIHZpZGVvLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWRlZG1ldGFkYXRhJywgKCkgPT4ge1xuICAgICAgICAgICAgdmlkZW9cbiAgICAgICAgICAgICAgICAucGxheSgpXG4gICAgICAgICAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuaXNSZWFkeSA9IHRydWU7XG4gICAgICAgICAgICAgICAgdGhpcy5saXN0ZW5lcnMuZm9yRWFjaCgobGlzdGVuZXIpID0+IGxpc3RlbmVyKHRydWUpKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLmNhdGNoKG9uUGxheUVycm9yKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHZpZGVvLnNyYyA9IHZpZGVvVXJsO1xuICAgICAgICB0aGlzLnZpZGVvID0gdmlkZW87XG4gICAgfVxuICAgIHVwZGF0ZXNPblJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIG9uUmVhZHlTdGF0dXNDaGFuZ2UobGlzdGVuZXIpIHtcbiAgICAgICAgdGhpcy5saXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gICAgfVxuICAgIGdldEVsZW1lbnQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnZpZGVvO1xuICAgIH1cbiAgICByZWFkeSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaXNSZWFkeTtcbiAgICB9XG4gICAgZ2V0V2lkdGgoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnZpZGVvLnZpZGVvV2lkdGg7XG4gICAgfVxuICAgIGdldEhlaWdodCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudmlkZW8udmlkZW9IZWlnaHQ7XG4gICAgfVxufVxuZXhwb3J0cy5WaWRlb1RleHR1cmVNYW5hZ2VyID0gVmlkZW9UZXh0dXJlTWFuYWdlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/effects/lib/VideoTextureManager.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/effects/lib/WebGLContextManager.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@cntrl-site/effects/lib/WebGLContextManager.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WebGLContextManager = void 0;\nclass WebGLContextManager {\n    constructor() {\n        this.contexts = [];\n        this.maxContexts = 14;\n        this.contextMap = new WeakMap();\n    }\n    getContext(canvas) {\n        const existingContext = this.contextMap.get(canvas);\n        if (existingContext) {\n            this.markContextAsUsed(existingContext);\n            return existingContext;\n        }\n        const freeEntry = this.contexts.find(entry => !entry.isInUse);\n        if (freeEntry) {\n            this.assignContextToCanvas(freeEntry, canvas);\n            return freeEntry.gl;\n        }\n        if (this.contexts.length < this.maxContexts) {\n            const newEntry = this.createNewContext();\n            if (newEntry) {\n                this.assignContextToCanvas(newEntry, canvas);\n                return newEntry.gl;\n            }\n        }\n        const oldestEntry = this.findOldestUnusedContext();\n        if (oldestEntry) {\n            this.cleanupContext(oldestEntry.gl);\n            this.assignContextToCanvas(oldestEntry, canvas);\n            return oldestEntry.gl;\n        }\n        return null;\n    }\n    releaseContext(canvas) {\n        const context = this.contextMap.get(canvas);\n        if (!context)\n            return;\n        const entry = this.contexts.find(e => e.gl === context);\n        if (entry) {\n            entry.isInUse = false;\n            entry.lastUsed = Date.now();\n            context.clearColor(0, 0, 0, 0);\n            context.clear(context.COLOR_BUFFER_BIT);\n        }\n        this.contextMap.delete(canvas);\n    }\n    createNewContext() {\n        const canvas = document.createElement('canvas');\n        canvas.width = 1;\n        canvas.height = 1;\n        canvas.style.display = 'none';\n        const gl = canvas.getContext('webgl2', {\n            alpha: true,\n            premultipliedAlpha: false,\n            preserveDrawingBuffer: false,\n            antialias: false\n        });\n        if (!gl)\n            return null;\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        const entry = {\n            gl,\n            canvas,\n            isInUse: false,\n            lastUsed: Date.now()\n        };\n        this.contexts.push(entry);\n        return entry;\n    }\n    assignContextToCanvas(entry, targetCanvas) {\n        entry.isInUse = true;\n        entry.lastUsed = Date.now();\n        this.contextMap.set(targetCanvas, entry.gl);\n        entry.canvas.width = targetCanvas.width;\n        entry.canvas.height = targetCanvas.height;\n    }\n    markContextAsUsed(context) {\n        const entry = this.contexts.find(e => e.gl === context);\n        if (entry) {\n            entry.lastUsed = Date.now();\n        }\n    }\n    findOldestUnusedContext() {\n        const unusedContexts = this.contexts.filter(entry => !entry.isInUse);\n        if (unusedContexts.length === 0)\n            return null;\n        return unusedContexts.reduce((oldest, current) => current.lastUsed < oldest.lastUsed ? current : oldest);\n    }\n    cleanupContext(gl) {\n        gl.useProgram(null);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        gl.clearColor(0, 0, 0, 0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    renderToCanvas(sourceGl, targetCanvas) {\n        const targetContext = targetCanvas.getContext('2d');\n        if (!targetContext)\n            return;\n        const sourceEntry = this.contexts.find(e => e.gl === sourceGl);\n        if (!sourceEntry)\n            return;\n        targetContext.clearRect(0, 0, targetCanvas.width, targetCanvas.height);\n        targetContext.drawImage(sourceEntry.canvas, 0, 0);\n    }\n    updateContextSize(gl, width, height) {\n        const entry = this.contexts.find(e => e.gl === gl);\n        if (entry) {\n            entry.canvas.width = width;\n            entry.canvas.height = height;\n        }\n    }\n    getStats() {\n        return {\n            total: this.contexts.length,\n            inUse: this.contexts.filter(e => e.isInUse).length,\n            free: this.contexts.filter(e => !e.isInUse).length\n        };\n    }\n}\nexports.WebGLContextManager = WebGLContextManager;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvZWZmZWN0cy9saWIvV2ViR0xDb250ZXh0TWFuYWdlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbnRybC1zaXRlL2VmZmVjdHMvbGliL1dlYkdMQ29udGV4dE1hbmFnZXIuanM/MjMxMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuV2ViR0xDb250ZXh0TWFuYWdlciA9IHZvaWQgMDtcbmNsYXNzIFdlYkdMQ29udGV4dE1hbmFnZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmNvbnRleHRzID0gW107XG4gICAgICAgIHRoaXMubWF4Q29udGV4dHMgPSAxNDtcbiAgICAgICAgdGhpcy5jb250ZXh0TWFwID0gbmV3IFdlYWtNYXAoKTtcbiAgICB9XG4gICAgZ2V0Q29udGV4dChjYW52YXMpIHtcbiAgICAgICAgY29uc3QgZXhpc3RpbmdDb250ZXh0ID0gdGhpcy5jb250ZXh0TWFwLmdldChjYW52YXMpO1xuICAgICAgICBpZiAoZXhpc3RpbmdDb250ZXh0KSB7XG4gICAgICAgICAgICB0aGlzLm1hcmtDb250ZXh0QXNVc2VkKGV4aXN0aW5nQ29udGV4dCk7XG4gICAgICAgICAgICByZXR1cm4gZXhpc3RpbmdDb250ZXh0O1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGZyZWVFbnRyeSA9IHRoaXMuY29udGV4dHMuZmluZChlbnRyeSA9PiAhZW50cnkuaXNJblVzZSk7XG4gICAgICAgIGlmIChmcmVlRW50cnkpIHtcbiAgICAgICAgICAgIHRoaXMuYXNzaWduQ29udGV4dFRvQ2FudmFzKGZyZWVFbnRyeSwgY2FudmFzKTtcbiAgICAgICAgICAgIHJldHVybiBmcmVlRW50cnkuZ2w7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuY29udGV4dHMubGVuZ3RoIDwgdGhpcy5tYXhDb250ZXh0cykge1xuICAgICAgICAgICAgY29uc3QgbmV3RW50cnkgPSB0aGlzLmNyZWF0ZU5ld0NvbnRleHQoKTtcbiAgICAgICAgICAgIGlmIChuZXdFbnRyeSkge1xuICAgICAgICAgICAgICAgIHRoaXMuYXNzaWduQ29udGV4dFRvQ2FudmFzKG5ld0VudHJ5LCBjYW52YXMpO1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXdFbnRyeS5nbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjb25zdCBvbGRlc3RFbnRyeSA9IHRoaXMuZmluZE9sZGVzdFVudXNlZENvbnRleHQoKTtcbiAgICAgICAgaWYgKG9sZGVzdEVudHJ5KSB7XG4gICAgICAgICAgICB0aGlzLmNsZWFudXBDb250ZXh0KG9sZGVzdEVudHJ5LmdsKTtcbiAgICAgICAgICAgIHRoaXMuYXNzaWduQ29udGV4dFRvQ2FudmFzKG9sZGVzdEVudHJ5LCBjYW52YXMpO1xuICAgICAgICAgICAgcmV0dXJuIG9sZGVzdEVudHJ5LmdsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZWxlYXNlQ29udGV4dChjYW52YXMpIHtcbiAgICAgICAgY29uc3QgY29udGV4dCA9IHRoaXMuY29udGV4dE1hcC5nZXQoY2FudmFzKTtcbiAgICAgICAgaWYgKCFjb250ZXh0KVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBlbnRyeSA9IHRoaXMuY29udGV4dHMuZmluZChlID0+IGUuZ2wgPT09IGNvbnRleHQpO1xuICAgICAgICBpZiAoZW50cnkpIHtcbiAgICAgICAgICAgIGVudHJ5LmlzSW5Vc2UgPSBmYWxzZTtcbiAgICAgICAgICAgIGVudHJ5Lmxhc3RVc2VkID0gRGF0ZS5ub3coKTtcbiAgICAgICAgICAgIGNvbnRleHQuY2xlYXJDb2xvcigwLCAwLCAwLCAwKTtcbiAgICAgICAgICAgIGNvbnRleHQuY2xlYXIoY29udGV4dC5DT0xPUl9CVUZGRVJfQklUKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNvbnRleHRNYXAuZGVsZXRlKGNhbnZhcyk7XG4gICAgfVxuICAgIGNyZWF0ZU5ld0NvbnRleHQoKSB7XG4gICAgICAgIGNvbnN0IGNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpO1xuICAgICAgICBjYW52YXMud2lkdGggPSAxO1xuICAgICAgICBjYW52YXMuaGVpZ2h0ID0gMTtcbiAgICAgICAgY2FudmFzLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICAgIGNvbnN0IGdsID0gY2FudmFzLmdldENvbnRleHQoJ3dlYmdsMicsIHtcbiAgICAgICAgICAgIGFscGhhOiB0cnVlLFxuICAgICAgICAgICAgcHJlbXVsdGlwbGllZEFscGhhOiBmYWxzZSxcbiAgICAgICAgICAgIHByZXNlcnZlRHJhd2luZ0J1ZmZlcjogZmFsc2UsXG4gICAgICAgICAgICBhbnRpYWxpYXM6IGZhbHNlXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoIWdsKVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIGdsLmVuYWJsZShnbC5CTEVORCk7XG4gICAgICAgIGdsLmJsZW5kRnVuYyhnbC5TUkNfQUxQSEEsIGdsLk9ORV9NSU5VU19TUkNfQUxQSEEpO1xuICAgICAgICBjb25zdCBlbnRyeSA9IHtcbiAgICAgICAgICAgIGdsLFxuICAgICAgICAgICAgY2FudmFzLFxuICAgICAgICAgICAgaXNJblVzZTogZmFsc2UsXG4gICAgICAgICAgICBsYXN0VXNlZDogRGF0ZS5ub3coKVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLmNvbnRleHRzLnB1c2goZW50cnkpO1xuICAgICAgICByZXR1cm4gZW50cnk7XG4gICAgfVxuICAgIGFzc2lnbkNvbnRleHRUb0NhbnZhcyhlbnRyeSwgdGFyZ2V0Q2FudmFzKSB7XG4gICAgICAgIGVudHJ5LmlzSW5Vc2UgPSB0cnVlO1xuICAgICAgICBlbnRyeS5sYXN0VXNlZCA9IERhdGUubm93KCk7XG4gICAgICAgIHRoaXMuY29udGV4dE1hcC5zZXQodGFyZ2V0Q2FudmFzLCBlbnRyeS5nbCk7XG4gICAgICAgIGVudHJ5LmNhbnZhcy53aWR0aCA9IHRhcmdldENhbnZhcy53aWR0aDtcbiAgICAgICAgZW50cnkuY2FudmFzLmhlaWdodCA9IHRhcmdldENhbnZhcy5oZWlnaHQ7XG4gICAgfVxuICAgIG1hcmtDb250ZXh0QXNVc2VkKGNvbnRleHQpIHtcbiAgICAgICAgY29uc3QgZW50cnkgPSB0aGlzLmNvbnRleHRzLmZpbmQoZSA9PiBlLmdsID09PSBjb250ZXh0KTtcbiAgICAgICAgaWYgKGVudHJ5KSB7XG4gICAgICAgICAgICBlbnRyeS5sYXN0VXNlZCA9IERhdGUubm93KCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZmluZE9sZGVzdFVudXNlZENvbnRleHQoKSB7XG4gICAgICAgIGNvbnN0IHVudXNlZENvbnRleHRzID0gdGhpcy5jb250ZXh0cy5maWx0ZXIoZW50cnkgPT4gIWVudHJ5LmlzSW5Vc2UpO1xuICAgICAgICBpZiAodW51c2VkQ29udGV4dHMubGVuZ3RoID09PSAwKVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIHJldHVybiB1bnVzZWRDb250ZXh0cy5yZWR1Y2UoKG9sZGVzdCwgY3VycmVudCkgPT4gY3VycmVudC5sYXN0VXNlZCA8IG9sZGVzdC5sYXN0VXNlZCA/IGN1cnJlbnQgOiBvbGRlc3QpO1xuICAgIH1cbiAgICBjbGVhbnVwQ29udGV4dChnbCkge1xuICAgICAgICBnbC51c2VQcm9ncmFtKG51bGwpO1xuICAgICAgICBnbC5iaW5kQnVmZmVyKGdsLkFSUkFZX0JVRkZFUiwgbnVsbCk7XG4gICAgICAgIGdsLmJpbmRCdWZmZXIoZ2wuRUxFTUVOVF9BUlJBWV9CVUZGRVIsIG51bGwpO1xuICAgICAgICBnbC5iaW5kVGV4dHVyZShnbC5URVhUVVJFXzJELCBudWxsKTtcbiAgICAgICAgZ2wuYmluZEZyYW1lYnVmZmVyKGdsLkZSQU1FQlVGRkVSLCBudWxsKTtcbiAgICAgICAgZ2wuYmluZFJlbmRlcmJ1ZmZlcihnbC5SRU5ERVJCVUZGRVIsIG51bGwpO1xuICAgICAgICBnbC5jbGVhckNvbG9yKDAsIDAsIDAsIDApO1xuICAgICAgICBnbC5jbGVhcihnbC5DT0xPUl9CVUZGRVJfQklUKTtcbiAgICB9XG4gICAgcmVuZGVyVG9DYW52YXMoc291cmNlR2wsIHRhcmdldENhbnZhcykge1xuICAgICAgICBjb25zdCB0YXJnZXRDb250ZXh0ID0gdGFyZ2V0Q2FudmFzLmdldENvbnRleHQoJzJkJyk7XG4gICAgICAgIGlmICghdGFyZ2V0Q29udGV4dClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3Qgc291cmNlRW50cnkgPSB0aGlzLmNvbnRleHRzLmZpbmQoZSA9PiBlLmdsID09PSBzb3VyY2VHbCk7XG4gICAgICAgIGlmICghc291cmNlRW50cnkpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHRhcmdldENvbnRleHQuY2xlYXJSZWN0KDAsIDAsIHRhcmdldENhbnZhcy53aWR0aCwgdGFyZ2V0Q2FudmFzLmhlaWdodCk7XG4gICAgICAgIHRhcmdldENvbnRleHQuZHJhd0ltYWdlKHNvdXJjZUVudHJ5LmNhbnZhcywgMCwgMCk7XG4gICAgfVxuICAgIHVwZGF0ZUNvbnRleHRTaXplKGdsLCB3aWR0aCwgaGVpZ2h0KSB7XG4gICAgICAgIGNvbnN0IGVudHJ5ID0gdGhpcy5jb250ZXh0cy5maW5kKGUgPT4gZS5nbCA9PT0gZ2wpO1xuICAgICAgICBpZiAoZW50cnkpIHtcbiAgICAgICAgICAgIGVudHJ5LmNhbnZhcy53aWR0aCA9IHdpZHRoO1xuICAgICAgICAgICAgZW50cnkuY2FudmFzLmhlaWdodCA9IGhlaWdodDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXRTdGF0cygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHRvdGFsOiB0aGlzLmNvbnRleHRzLmxlbmd0aCxcbiAgICAgICAgICAgIGluVXNlOiB0aGlzLmNvbnRleHRzLmZpbHRlcihlID0+IGUuaXNJblVzZSkubGVuZ3RoLFxuICAgICAgICAgICAgZnJlZTogdGhpcy5jb250ZXh0cy5maWx0ZXIoZSA9PiAhZS5pc0luVXNlKS5sZW5ndGhcbiAgICAgICAgfTtcbiAgICB9XG59XG5leHBvcnRzLldlYkdMQ29udGV4dE1hbmFnZXIgPSBXZWJHTENvbnRleHRNYW5hZ2VyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/effects/lib/WebGLContextManager.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/effects/lib/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/@cntrl-site/effects/lib/index.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WebGLContextManager = exports.VideoTextureManager = exports.ImageTextureManager = exports.MediaEffect = void 0;\nvar MediaEffect_1 = __webpack_require__(/*! ./MediaEffect */ \"./node_modules/@cntrl-site/effects/lib/MediaEffect.js\");\nObject.defineProperty(exports, \"MediaEffect\", ({ enumerable: true, get: function () { return MediaEffect_1.MediaEffect; } }));\nvar ImageTextureManager_1 = __webpack_require__(/*! ./ImageTextureManager */ \"./node_modules/@cntrl-site/effects/lib/ImageTextureManager.js\");\nObject.defineProperty(exports, \"ImageTextureManager\", ({ enumerable: true, get: function () { return ImageTextureManager_1.ImageTextureManager; } }));\nvar VideoTextureManager_1 = __webpack_require__(/*! ./VideoTextureManager */ \"./node_modules/@cntrl-site/effects/lib/VideoTextureManager.js\");\nObject.defineProperty(exports, \"VideoTextureManager\", ({ enumerable: true, get: function () { return VideoTextureManager_1.VideoTextureManager; } }));\nvar WebGLContextManager_1 = __webpack_require__(/*! ./WebGLContextManager */ \"./node_modules/@cntrl-site/effects/lib/WebGLContextManager.js\");\nObject.defineProperty(exports, \"WebGLContextManager\", ({ enumerable: true, get: function () { return WebGLContextManager_1.WebGLContextManager; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvZWZmZWN0cy9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCLEdBQUcsMkJBQTJCLEdBQUcsMkJBQTJCLEdBQUcsbUJBQW1CO0FBQzdHLG9CQUFvQixtQkFBTyxDQUFDLDRFQUFlO0FBQzNDLCtDQUE4QyxFQUFFLHFDQUFxQyxxQ0FBcUMsRUFBQztBQUMzSCw0QkFBNEIsbUJBQU8sQ0FBQyw0RkFBdUI7QUFDM0QsdURBQXNELEVBQUUscUNBQXFDLHFEQUFxRCxFQUFDO0FBQ25KLDRCQUE0QixtQkFBTyxDQUFDLDRGQUF1QjtBQUMzRCx1REFBc0QsRUFBRSxxQ0FBcUMscURBQXFELEVBQUM7QUFDbkosNEJBQTRCLG1CQUFPLENBQUMsNEZBQXVCO0FBQzNELHVEQUFzRCxFQUFFLHFDQUFxQyxxREFBcUQsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvZWZmZWN0cy9saWIvaW5kZXguanM/ZmRlNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuV2ViR0xDb250ZXh0TWFuYWdlciA9IGV4cG9ydHMuVmlkZW9UZXh0dXJlTWFuYWdlciA9IGV4cG9ydHMuSW1hZ2VUZXh0dXJlTWFuYWdlciA9IGV4cG9ydHMuTWVkaWFFZmZlY3QgPSB2b2lkIDA7XG52YXIgTWVkaWFFZmZlY3RfMSA9IHJlcXVpcmUoXCIuL01lZGlhRWZmZWN0XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTWVkaWFFZmZlY3RcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIE1lZGlhRWZmZWN0XzEuTWVkaWFFZmZlY3Q7IH0gfSk7XG52YXIgSW1hZ2VUZXh0dXJlTWFuYWdlcl8xID0gcmVxdWlyZShcIi4vSW1hZ2VUZXh0dXJlTWFuYWdlclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkltYWdlVGV4dHVyZU1hbmFnZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEltYWdlVGV4dHVyZU1hbmFnZXJfMS5JbWFnZVRleHR1cmVNYW5hZ2VyOyB9IH0pO1xudmFyIFZpZGVvVGV4dHVyZU1hbmFnZXJfMSA9IHJlcXVpcmUoXCIuL1ZpZGVvVGV4dHVyZU1hbmFnZXJcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJWaWRlb1RleHR1cmVNYW5hZ2VyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBWaWRlb1RleHR1cmVNYW5hZ2VyXzEuVmlkZW9UZXh0dXJlTWFuYWdlcjsgfSB9KTtcbnZhciBXZWJHTENvbnRleHRNYW5hZ2VyXzEgPSByZXF1aXJlKFwiLi9XZWJHTENvbnRleHRNYW5hZ2VyXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiV2ViR0xDb250ZXh0TWFuYWdlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gV2ViR0xDb250ZXh0TWFuYWdlcl8xLldlYkdMQ29udGV4dE1hbmFnZXI7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/effects/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/common/useCurrentLayout.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/common/useCurrentLayout.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useCurrentLayout = void 0;\nconst useCntrlContext_1 = __webpack_require__(/*! ../provider/useCntrlContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/useCntrlContext.js\");\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst ArticleRectContext_1 = __webpack_require__(/*! ../provider/ArticleRectContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/ArticleRectContext.js\");\nfunction useCurrentLayout() {\n    const { layouts } = (0, useCntrlContext_1.useCntrlContext)();\n    const articleRectObserver = (0, react_1.useContext)(ArticleRectContext_1.ArticleRectContext);\n    const layoutRanges = (0, react_1.useMemo)(() => {\n        const sorted = layouts.slice().sort((la, lb) => la.startsWith - lb.startsWith);\n        return sorted.reduce((acc, layout, i, layouts) => {\n            const next = layouts[i + 1];\n            return [\n                ...acc,\n                {\n                    layoutId: layout.id,\n                    exemplary: layout.exemplary,\n                    start: layout.startsWith,\n                    end: next ? next.startsWith : Number.MAX_SAFE_INTEGER\n                }\n            ];\n        }, []);\n    }, [layouts]);\n    const getCurrentLayout = (0, react_1.useCallback)((articleWidth) => {\n        const range = layoutRanges.find(l => articleWidth >= l.start && articleWidth < l.end);\n        return range;\n    }, [layoutRanges]);\n    const [layoutId, setLayoutId] = (0, react_1.useState)(undefined);\n    const [deviation, setDeviation] = (0, react_1.useState)(1);\n    (0, react_1.useEffect)(() => {\n        if (!articleRectObserver)\n            return;\n        return articleRectObserver.on('resize', () => {\n            const articleWidth = articleRectObserver.width;\n            const { layoutId, exemplary } = getCurrentLayout(articleWidth);\n            setLayoutId(layoutId);\n            setDeviation(articleWidth / exemplary);\n        });\n    }, [articleRectObserver, getCurrentLayout]);\n    return { layoutId, layoutDeviation: deviation };\n}\nexports.useCurrentLayout = useCurrentLayout;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tbW9uL3VzZUN1cnJlbnRMYXlvdXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLDBCQUEwQixtQkFBTyxDQUFDLDBHQUE2QjtBQUMvRCxnQkFBZ0IsbUJBQU8sQ0FBQyw0Q0FBTztBQUMvQiw2QkFBNkIsbUJBQU8sQ0FBQyxnSEFBZ0M7QUFDckU7QUFDQSxZQUFZLFVBQVU7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHNCQUFzQjtBQUMxQztBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTCxhQUFhO0FBQ2I7QUFDQSx3QkFBd0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbnRybC1zaXRlL3Nkay1uZXh0anMvbGliL2NvbW1vbi91c2VDdXJyZW50TGF5b3V0LmpzPzFhMmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnVzZUN1cnJlbnRMYXlvdXQgPSB2b2lkIDA7XG5jb25zdCB1c2VDbnRybENvbnRleHRfMSA9IHJlcXVpcmUoXCIuLi9wcm92aWRlci91c2VDbnRybENvbnRleHRcIik7XG5jb25zdCByZWFjdF8xID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgQXJ0aWNsZVJlY3RDb250ZXh0XzEgPSByZXF1aXJlKFwiLi4vcHJvdmlkZXIvQXJ0aWNsZVJlY3RDb250ZXh0XCIpO1xuZnVuY3Rpb24gdXNlQ3VycmVudExheW91dCgpIHtcbiAgICBjb25zdCB7IGxheW91dHMgfSA9ICgwLCB1c2VDbnRybENvbnRleHRfMS51c2VDbnRybENvbnRleHQpKCk7XG4gICAgY29uc3QgYXJ0aWNsZVJlY3RPYnNlcnZlciA9ICgwLCByZWFjdF8xLnVzZUNvbnRleHQpKEFydGljbGVSZWN0Q29udGV4dF8xLkFydGljbGVSZWN0Q29udGV4dCk7XG4gICAgY29uc3QgbGF5b3V0UmFuZ2VzID0gKDAsIHJlYWN0XzEudXNlTWVtbykoKCkgPT4ge1xuICAgICAgICBjb25zdCBzb3J0ZWQgPSBsYXlvdXRzLnNsaWNlKCkuc29ydCgobGEsIGxiKSA9PiBsYS5zdGFydHNXaXRoIC0gbGIuc3RhcnRzV2l0aCk7XG4gICAgICAgIHJldHVybiBzb3J0ZWQucmVkdWNlKChhY2MsIGxheW91dCwgaSwgbGF5b3V0cykgPT4ge1xuICAgICAgICAgICAgY29uc3QgbmV4dCA9IGxheW91dHNbaSArIDFdO1xuICAgICAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgICAgICAuLi5hY2MsXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBsYXlvdXRJZDogbGF5b3V0LmlkLFxuICAgICAgICAgICAgICAgICAgICBleGVtcGxhcnk6IGxheW91dC5leGVtcGxhcnksXG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0OiBsYXlvdXQuc3RhcnRzV2l0aCxcbiAgICAgICAgICAgICAgICAgICAgZW5kOiBuZXh0ID8gbmV4dC5zdGFydHNXaXRoIDogTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdO1xuICAgICAgICB9LCBbXSk7XG4gICAgfSwgW2xheW91dHNdKTtcbiAgICBjb25zdCBnZXRDdXJyZW50TGF5b3V0ID0gKDAsIHJlYWN0XzEudXNlQ2FsbGJhY2spKChhcnRpY2xlV2lkdGgpID0+IHtcbiAgICAgICAgY29uc3QgcmFuZ2UgPSBsYXlvdXRSYW5nZXMuZmluZChsID0+IGFydGljbGVXaWR0aCA+PSBsLnN0YXJ0ICYmIGFydGljbGVXaWR0aCA8IGwuZW5kKTtcbiAgICAgICAgcmV0dXJuIHJhbmdlO1xuICAgIH0sIFtsYXlvdXRSYW5nZXNdKTtcbiAgICBjb25zdCBbbGF5b3V0SWQsIHNldExheW91dElkXSA9ICgwLCByZWFjdF8xLnVzZVN0YXRlKSh1bmRlZmluZWQpO1xuICAgIGNvbnN0IFtkZXZpYXRpb24sIHNldERldmlhdGlvbl0gPSAoMCwgcmVhY3RfMS51c2VTdGF0ZSkoMSk7XG4gICAgKDAsIHJlYWN0XzEudXNlRWZmZWN0KSgoKSA9PiB7XG4gICAgICAgIGlmICghYXJ0aWNsZVJlY3RPYnNlcnZlcilcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgcmV0dXJuIGFydGljbGVSZWN0T2JzZXJ2ZXIub24oJ3Jlc2l6ZScsICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGFydGljbGVXaWR0aCA9IGFydGljbGVSZWN0T2JzZXJ2ZXIud2lkdGg7XG4gICAgICAgICAgICBjb25zdCB7IGxheW91dElkLCBleGVtcGxhcnkgfSA9IGdldEN1cnJlbnRMYXlvdXQoYXJ0aWNsZVdpZHRoKTtcbiAgICAgICAgICAgIHNldExheW91dElkKGxheW91dElkKTtcbiAgICAgICAgICAgIHNldERldmlhdGlvbihhcnRpY2xlV2lkdGggLyBleGVtcGxhcnkpO1xuICAgICAgICB9KTtcbiAgICB9LCBbYXJ0aWNsZVJlY3RPYnNlcnZlciwgZ2V0Q3VycmVudExheW91dF0pO1xuICAgIHJldHVybiB7IGxheW91dElkLCBsYXlvdXREZXZpYXRpb246IGRldmlhdGlvbiB9O1xufVxuZXhwb3J0cy51c2VDdXJyZW50TGF5b3V0ID0gdXNlQ3VycmVudExheW91dDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/common/useCurrentLayout.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/common/useExemplary.js":
/*!************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/common/useExemplary.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useExemplary = void 0;\nconst useCntrlContext_1 = __webpack_require__(/*! ../provider/useCntrlContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/useCntrlContext.js\");\nconst useLayoutContext_1 = __webpack_require__(/*! ../components/useLayoutContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/useLayoutContext.js\");\nconst useExemplary = () => {\n    var _a, _b;\n    const { layouts } = (0, useCntrlContext_1.useCntrlContext)();\n    const layout = (0, useLayoutContext_1.useLayoutContext)();\n    const exemplary = (_b = (_a = layouts.find(l => l.id === layout)) === null || _a === void 0 ? void 0 : _a.exemplary) !== null && _b !== void 0 ? _b : 1;\n    return exemplary;\n};\nexports.useExemplary = useExemplary;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tbW9uL3VzZUV4ZW1wbGFyeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQkFBb0I7QUFDcEIsMEJBQTBCLG1CQUFPLENBQUMsMEdBQTZCO0FBQy9ELDJCQUEyQixtQkFBTyxDQUFDLGdIQUFnQztBQUNuRTtBQUNBO0FBQ0EsWUFBWSxVQUFVO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi9jb21tb24vdXNlRXhlbXBsYXJ5LmpzPzBmZmQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnVzZUV4ZW1wbGFyeSA9IHZvaWQgMDtcbmNvbnN0IHVzZUNudHJsQ29udGV4dF8xID0gcmVxdWlyZShcIi4uL3Byb3ZpZGVyL3VzZUNudHJsQ29udGV4dFwiKTtcbmNvbnN0IHVzZUxheW91dENvbnRleHRfMSA9IHJlcXVpcmUoXCIuLi9jb21wb25lbnRzL3VzZUxheW91dENvbnRleHRcIik7XG5jb25zdCB1c2VFeGVtcGxhcnkgPSAoKSA9PiB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBjb25zdCB7IGxheW91dHMgfSA9ICgwLCB1c2VDbnRybENvbnRleHRfMS51c2VDbnRybENvbnRleHQpKCk7XG4gICAgY29uc3QgbGF5b3V0ID0gKDAsIHVzZUxheW91dENvbnRleHRfMS51c2VMYXlvdXRDb250ZXh0KSgpO1xuICAgIGNvbnN0IGV4ZW1wbGFyeSA9IChfYiA9IChfYSA9IGxheW91dHMuZmluZChsID0+IGwuaWQgPT09IGxheW91dCkpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5leGVtcGxhcnkpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IDE7XG4gICAgcmV0dXJuIGV4ZW1wbGFyeTtcbn07XG5leHBvcnRzLnVzZUV4ZW1wbGFyeSA9IHVzZUV4ZW1wbGFyeTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/common/useExemplary.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/common/useItemFXData.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/common/useItemFXData.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useItemFXData = void 0;\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst useKeyframeValue_1 = __webpack_require__(/*! ./useKeyframeValue */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useKeyframeValue.js\");\nconst baseVariables = `precision mediump float;\r\nuniform sampler2D u_image;\r\nuniform sampler2D u_pattern;\r\nuniform vec2 u_imgDimensions;\r\nuniform vec2 u_patternDimensions;\r\nuniform float u_time;\r\nuniform vec2 u_cursor;\r\nvarying vec2 v_texCoord;`;\nfunction useItemFXData(item, sectionId) {\n    const { fragmentShader: shaderBody, FXControls } = item.commonParams;\n    const controls = FXControls !== null && FXControls !== void 0 ? FXControls : [];\n    const controlsVariables = controls.map((c) => `uniform ${c.type} ${c.shaderParam};`)\n        .join('\\n');\n    const fragmentShader = `${baseVariables}\\n${controlsVariables}\\n${shaderBody}`;\n    const controlsValues = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.FXParams, () => {\n        const defaultValue = controls.reduce((acc, control) => {\n            if (Array.isArray(control.value)) {\n                acc[control.shaderParam] = control.value[0];\n            }\n            else {\n                acc[control.shaderParam] = control.value;\n            }\n            return acc;\n        }, {});\n        return defaultValue;\n    }, (animator, scroll, value) => animator.getFXParams(value, scroll), sectionId);\n    return {\n        fragmentShader,\n        controlsValues\n    };\n}\nexports.useItemFXData = useItemFXData;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tbW9uL3VzZUl0ZW1GWERhdGEuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCLGNBQWMsbUJBQU8sQ0FBQyxxRUFBaUI7QUFDdkMsMkJBQTJCLG1CQUFPLENBQUMsZ0dBQW9CO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0EsWUFBWSx5Q0FBeUM7QUFDckQ7QUFDQSw2REFBNkQsUUFBUSxFQUFFLGVBQWU7QUFDdEY7QUFDQSw4QkFBOEIsY0FBYyxJQUFJLGtCQUFrQixJQUFJLFdBQVc7QUFDakY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxJQUFJO0FBQ2I7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tbW9uL3VzZUl0ZW1GWERhdGEuanM/ZGNkNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudXNlSXRlbUZYRGF0YSA9IHZvaWQgMDtcbmNvbnN0IHNka18xID0gcmVxdWlyZShcIkBjbnRybC1zaXRlL3Nka1wiKTtcbmNvbnN0IHVzZUtleWZyYW1lVmFsdWVfMSA9IHJlcXVpcmUoXCIuL3VzZUtleWZyYW1lVmFsdWVcIik7XG5jb25zdCBiYXNlVmFyaWFibGVzID0gYHByZWNpc2lvbiBtZWRpdW1wIGZsb2F0O1xyXG51bmlmb3JtIHNhbXBsZXIyRCB1X2ltYWdlO1xyXG51bmlmb3JtIHNhbXBsZXIyRCB1X3BhdHRlcm47XHJcbnVuaWZvcm0gdmVjMiB1X2ltZ0RpbWVuc2lvbnM7XHJcbnVuaWZvcm0gdmVjMiB1X3BhdHRlcm5EaW1lbnNpb25zO1xyXG51bmlmb3JtIGZsb2F0IHVfdGltZTtcclxudW5pZm9ybSB2ZWMyIHVfY3Vyc29yO1xyXG52YXJ5aW5nIHZlYzIgdl90ZXhDb29yZDtgO1xuZnVuY3Rpb24gdXNlSXRlbUZYRGF0YShpdGVtLCBzZWN0aW9uSWQpIHtcbiAgICBjb25zdCB7IGZyYWdtZW50U2hhZGVyOiBzaGFkZXJCb2R5LCBGWENvbnRyb2xzIH0gPSBpdGVtLmNvbW1vblBhcmFtcztcbiAgICBjb25zdCBjb250cm9scyA9IEZYQ29udHJvbHMgIT09IG51bGwgJiYgRlhDb250cm9scyAhPT0gdm9pZCAwID8gRlhDb250cm9scyA6IFtdO1xuICAgIGNvbnN0IGNvbnRyb2xzVmFyaWFibGVzID0gY29udHJvbHMubWFwKChjKSA9PiBgdW5pZm9ybSAke2MudHlwZX0gJHtjLnNoYWRlclBhcmFtfTtgKVxuICAgICAgICAuam9pbignXFxuJyk7XG4gICAgY29uc3QgZnJhZ21lbnRTaGFkZXIgPSBgJHtiYXNlVmFyaWFibGVzfVxcbiR7Y29udHJvbHNWYXJpYWJsZXN9XFxuJHtzaGFkZXJCb2R5fWA7XG4gICAgY29uc3QgY29udHJvbHNWYWx1ZXMgPSAoMCwgdXNlS2V5ZnJhbWVWYWx1ZV8xLnVzZUtleWZyYW1lVmFsdWUpKGl0ZW0sIHNka18xLktleWZyYW1lVHlwZS5GWFBhcmFtcywgKCkgPT4ge1xuICAgICAgICBjb25zdCBkZWZhdWx0VmFsdWUgPSBjb250cm9scy5yZWR1Y2UoKGFjYywgY29udHJvbCkgPT4ge1xuICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY29udHJvbC52YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICBhY2NbY29udHJvbC5zaGFkZXJQYXJhbV0gPSBjb250cm9sLnZhbHVlWzBdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgYWNjW2NvbnRyb2wuc2hhZGVyUGFyYW1dID0gY29udHJvbC52YWx1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBhY2M7XG4gICAgICAgIH0sIHt9KTtcbiAgICAgICAgcmV0dXJuIGRlZmF1bHRWYWx1ZTtcbiAgICB9LCAoYW5pbWF0b3IsIHNjcm9sbCwgdmFsdWUpID0+IGFuaW1hdG9yLmdldEZYUGFyYW1zKHZhbHVlLCBzY3JvbGwpLCBzZWN0aW9uSWQpO1xuICAgIHJldHVybiB7XG4gICAgICAgIGZyYWdtZW50U2hhZGVyLFxuICAgICAgICBjb250cm9sc1ZhbHVlc1xuICAgIH07XG59XG5leHBvcnRzLnVzZUl0ZW1GWERhdGEgPSB1c2VJdGVtRlhEYXRhO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/common/useItemFXData.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/common/useKeyframeValue.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/common/useKeyframeValue.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useKeyframeValue = void 0;\nconst lodash_isequal_1 = __importDefault(__webpack_require__(/*! lodash.isequal */ \"./node_modules/lodash.isequal/index.js\"));\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst ArticleRectContext_1 = __webpack_require__(/*! ../provider/ArticleRectContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/ArticleRectContext.js\");\nconst KeyframesContext_1 = __webpack_require__(/*! ../provider/KeyframesContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/KeyframesContext.js\");\nconst Animator_1 = __webpack_require__(/*! ../utils/Animator/Animator */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/Animator/Animator.js\");\nconst useLayoutContext_1 = __webpack_require__(/*! ../components/useLayoutContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/useLayoutContext.js\");\nconst emptyDeps = [];\nfunction useKeyframeValue(item, type, itemParamsGetter, animatorGetter, sectionId, deps = emptyDeps) {\n    const animatorGetterRef = (0, react_1.useRef)(animatorGetter);\n    const itemParamsGetterRef = (0, react_1.useRef)(itemParamsGetter);\n    animatorGetterRef.current = animatorGetter;\n    itemParamsGetterRef.current = itemParamsGetter;\n    const articleRectObserver = (0, react_1.useContext)(ArticleRectContext_1.ArticleRectContext);\n    const layoutId = (0, useLayoutContext_1.useLayoutContext)();\n    const keyframesRepo = (0, react_1.useContext)(KeyframesContext_1.KeyframesContext);\n    const keyframes = (0, react_1.useMemo)(() => keyframesRepo.getItemKeyframes(item.id).filter(kf => kf.type === type), [item.id, keyframesRepo, type]);\n    const paramValue = (0, react_1.useMemo)(() => {\n        return itemParamsGetterRef.current(item, layoutId);\n    }, [item, layoutId, ...deps]);\n    const [adjustedValue, setAdjustedValue] = (0, react_1.useState)(paramValue);\n    const adjustedValueRef = (0, react_1.useRef)(adjustedValue);\n    adjustedValueRef.current = adjustedValue;\n    const animator = (0, react_1.useMemo)(() => {\n        if (!layoutId || !keyframes.length)\n            return;\n        const animationData = keyframes\n            .filter(k => k.layoutId === layoutId)\n            .map(({ position, type, value }) => ({\n            position,\n            type,\n            value\n        }));\n        return new Animator_1.Animator(animationData);\n    }, [keyframes, layoutId]);\n    const handleKeyframeValue = (0, react_1.useCallback)((scroll) => {\n        if (!animator)\n            return;\n        const newValue = animatorGetterRef.current(animator, scroll, paramValue);\n        if (!(0, lodash_isequal_1.default)(newValue, adjustedValueRef.current)) {\n            setAdjustedValue(newValue);\n        }\n    }, [animator, paramValue]);\n    (0, react_1.useEffect)(() => {\n        setAdjustedValue(paramValue);\n    }, [paramValue]);\n    (0, react_1.useEffect)(() => {\n        if (!articleRectObserver || !animator)\n            return;\n        const scroll = articleRectObserver.getSectionScroll(sectionId);\n        handleKeyframeValue(scroll);\n    }, [articleRectObserver, handleKeyframeValue, animator]);\n    (0, react_1.useEffect)(() => {\n        if (!articleRectObserver || !animator)\n            return;\n        return articleRectObserver.on('resize', () => {\n            const scroll = articleRectObserver.getSectionScroll(sectionId);\n            handleKeyframeValue(scroll);\n        });\n    }, [handleKeyframeValue, articleRectObserver, animator]);\n    (0, react_1.useEffect)(() => {\n        if (!articleRectObserver || !animator)\n            return;\n        return articleRectObserver.on('scroll', () => {\n            const scroll = articleRectObserver.getSectionScroll(sectionId);\n            handleKeyframeValue(scroll);\n        });\n    }, [handleKeyframeValue, articleRectObserver, animator]);\n    return keyframes.length ? adjustedValue : paramValue;\n}\nexports.useKeyframeValue = useKeyframeValue;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tbW9uL3VzZUtleWZyYW1lVmFsdWUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0I7QUFDeEIseUNBQXlDLG1CQUFPLENBQUMsOERBQWdCO0FBQ2pFLGdCQUFnQixtQkFBTyxDQUFDLDRDQUFPO0FBQy9CLDZCQUE2QixtQkFBTyxDQUFDLGdIQUFnQztBQUNyRSwyQkFBMkIsbUJBQU8sQ0FBQyw0R0FBOEI7QUFDakUsbUJBQW1CLG1CQUFPLENBQUMsd0dBQTRCO0FBQ3ZELDJCQUEyQixtQkFBTyxDQUFDLGdIQUFnQztBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQix1QkFBdUI7QUFDM0M7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBLHdCQUF3QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tbW9uL3VzZUtleWZyYW1lVmFsdWUuanM/ZDEzMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudXNlS2V5ZnJhbWVWYWx1ZSA9IHZvaWQgMDtcbmNvbnN0IGxvZGFzaF9pc2VxdWFsXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImxvZGFzaC5pc2VxdWFsXCIpKTtcbmNvbnN0IHJlYWN0XzEgPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCBBcnRpY2xlUmVjdENvbnRleHRfMSA9IHJlcXVpcmUoXCIuLi9wcm92aWRlci9BcnRpY2xlUmVjdENvbnRleHRcIik7XG5jb25zdCBLZXlmcmFtZXNDb250ZXh0XzEgPSByZXF1aXJlKFwiLi4vcHJvdmlkZXIvS2V5ZnJhbWVzQ29udGV4dFwiKTtcbmNvbnN0IEFuaW1hdG9yXzEgPSByZXF1aXJlKFwiLi4vdXRpbHMvQW5pbWF0b3IvQW5pbWF0b3JcIik7XG5jb25zdCB1c2VMYXlvdXRDb250ZXh0XzEgPSByZXF1aXJlKFwiLi4vY29tcG9uZW50cy91c2VMYXlvdXRDb250ZXh0XCIpO1xuY29uc3QgZW1wdHlEZXBzID0gW107XG5mdW5jdGlvbiB1c2VLZXlmcmFtZVZhbHVlKGl0ZW0sIHR5cGUsIGl0ZW1QYXJhbXNHZXR0ZXIsIGFuaW1hdG9yR2V0dGVyLCBzZWN0aW9uSWQsIGRlcHMgPSBlbXB0eURlcHMpIHtcbiAgICBjb25zdCBhbmltYXRvckdldHRlclJlZiA9ICgwLCByZWFjdF8xLnVzZVJlZikoYW5pbWF0b3JHZXR0ZXIpO1xuICAgIGNvbnN0IGl0ZW1QYXJhbXNHZXR0ZXJSZWYgPSAoMCwgcmVhY3RfMS51c2VSZWYpKGl0ZW1QYXJhbXNHZXR0ZXIpO1xuICAgIGFuaW1hdG9yR2V0dGVyUmVmLmN1cnJlbnQgPSBhbmltYXRvckdldHRlcjtcbiAgICBpdGVtUGFyYW1zR2V0dGVyUmVmLmN1cnJlbnQgPSBpdGVtUGFyYW1zR2V0dGVyO1xuICAgIGNvbnN0IGFydGljbGVSZWN0T2JzZXJ2ZXIgPSAoMCwgcmVhY3RfMS51c2VDb250ZXh0KShBcnRpY2xlUmVjdENvbnRleHRfMS5BcnRpY2xlUmVjdENvbnRleHQpO1xuICAgIGNvbnN0IGxheW91dElkID0gKDAsIHVzZUxheW91dENvbnRleHRfMS51c2VMYXlvdXRDb250ZXh0KSgpO1xuICAgIGNvbnN0IGtleWZyYW1lc1JlcG8gPSAoMCwgcmVhY3RfMS51c2VDb250ZXh0KShLZXlmcmFtZXNDb250ZXh0XzEuS2V5ZnJhbWVzQ29udGV4dCk7XG4gICAgY29uc3Qga2V5ZnJhbWVzID0gKDAsIHJlYWN0XzEudXNlTWVtbykoKCkgPT4ga2V5ZnJhbWVzUmVwby5nZXRJdGVtS2V5ZnJhbWVzKGl0ZW0uaWQpLmZpbHRlcihrZiA9PiBrZi50eXBlID09PSB0eXBlKSwgW2l0ZW0uaWQsIGtleWZyYW1lc1JlcG8sIHR5cGVdKTtcbiAgICBjb25zdCBwYXJhbVZhbHVlID0gKDAsIHJlYWN0XzEudXNlTWVtbykoKCkgPT4ge1xuICAgICAgICByZXR1cm4gaXRlbVBhcmFtc0dldHRlclJlZi5jdXJyZW50KGl0ZW0sIGxheW91dElkKTtcbiAgICB9LCBbaXRlbSwgbGF5b3V0SWQsIC4uLmRlcHNdKTtcbiAgICBjb25zdCBbYWRqdXN0ZWRWYWx1ZSwgc2V0QWRqdXN0ZWRWYWx1ZV0gPSAoMCwgcmVhY3RfMS51c2VTdGF0ZSkocGFyYW1WYWx1ZSk7XG4gICAgY29uc3QgYWRqdXN0ZWRWYWx1ZVJlZiA9ICgwLCByZWFjdF8xLnVzZVJlZikoYWRqdXN0ZWRWYWx1ZSk7XG4gICAgYWRqdXN0ZWRWYWx1ZVJlZi5jdXJyZW50ID0gYWRqdXN0ZWRWYWx1ZTtcbiAgICBjb25zdCBhbmltYXRvciA9ICgwLCByZWFjdF8xLnVzZU1lbW8pKCgpID0+IHtcbiAgICAgICAgaWYgKCFsYXlvdXRJZCB8fCAha2V5ZnJhbWVzLmxlbmd0aClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgYW5pbWF0aW9uRGF0YSA9IGtleWZyYW1lc1xuICAgICAgICAgICAgLmZpbHRlcihrID0+IGsubGF5b3V0SWQgPT09IGxheW91dElkKVxuICAgICAgICAgICAgLm1hcCgoeyBwb3NpdGlvbiwgdHlwZSwgdmFsdWUgfSkgPT4gKHtcbiAgICAgICAgICAgIHBvc2l0aW9uLFxuICAgICAgICAgICAgdHlwZSxcbiAgICAgICAgICAgIHZhbHVlXG4gICAgICAgIH0pKTtcbiAgICAgICAgcmV0dXJuIG5ldyBBbmltYXRvcl8xLkFuaW1hdG9yKGFuaW1hdGlvbkRhdGEpO1xuICAgIH0sIFtrZXlmcmFtZXMsIGxheW91dElkXSk7XG4gICAgY29uc3QgaGFuZGxlS2V5ZnJhbWVWYWx1ZSA9ICgwLCByZWFjdF8xLnVzZUNhbGxiYWNrKSgoc2Nyb2xsKSA9PiB7XG4gICAgICAgIGlmICghYW5pbWF0b3IpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IG5ld1ZhbHVlID0gYW5pbWF0b3JHZXR0ZXJSZWYuY3VycmVudChhbmltYXRvciwgc2Nyb2xsLCBwYXJhbVZhbHVlKTtcbiAgICAgICAgaWYgKCEoMCwgbG9kYXNoX2lzZXF1YWxfMS5kZWZhdWx0KShuZXdWYWx1ZSwgYWRqdXN0ZWRWYWx1ZVJlZi5jdXJyZW50KSkge1xuICAgICAgICAgICAgc2V0QWRqdXN0ZWRWYWx1ZShuZXdWYWx1ZSk7XG4gICAgICAgIH1cbiAgICB9LCBbYW5pbWF0b3IsIHBhcmFtVmFsdWVdKTtcbiAgICAoMCwgcmVhY3RfMS51c2VFZmZlY3QpKCgpID0+IHtcbiAgICAgICAgc2V0QWRqdXN0ZWRWYWx1ZShwYXJhbVZhbHVlKTtcbiAgICB9LCBbcGFyYW1WYWx1ZV0pO1xuICAgICgwLCByZWFjdF8xLnVzZUVmZmVjdCkoKCkgPT4ge1xuICAgICAgICBpZiAoIWFydGljbGVSZWN0T2JzZXJ2ZXIgfHwgIWFuaW1hdG9yKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBzY3JvbGwgPSBhcnRpY2xlUmVjdE9ic2VydmVyLmdldFNlY3Rpb25TY3JvbGwoc2VjdGlvbklkKTtcbiAgICAgICAgaGFuZGxlS2V5ZnJhbWVWYWx1ZShzY3JvbGwpO1xuICAgIH0sIFthcnRpY2xlUmVjdE9ic2VydmVyLCBoYW5kbGVLZXlmcmFtZVZhbHVlLCBhbmltYXRvcl0pO1xuICAgICgwLCByZWFjdF8xLnVzZUVmZmVjdCkoKCkgPT4ge1xuICAgICAgICBpZiAoIWFydGljbGVSZWN0T2JzZXJ2ZXIgfHwgIWFuaW1hdG9yKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICByZXR1cm4gYXJ0aWNsZVJlY3RPYnNlcnZlci5vbigncmVzaXplJywgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3Qgc2Nyb2xsID0gYXJ0aWNsZVJlY3RPYnNlcnZlci5nZXRTZWN0aW9uU2Nyb2xsKHNlY3Rpb25JZCk7XG4gICAgICAgICAgICBoYW5kbGVLZXlmcmFtZVZhbHVlKHNjcm9sbCk7XG4gICAgICAgIH0pO1xuICAgIH0sIFtoYW5kbGVLZXlmcmFtZVZhbHVlLCBhcnRpY2xlUmVjdE9ic2VydmVyLCBhbmltYXRvcl0pO1xuICAgICgwLCByZWFjdF8xLnVzZUVmZmVjdCkoKCkgPT4ge1xuICAgICAgICBpZiAoIWFydGljbGVSZWN0T2JzZXJ2ZXIgfHwgIWFuaW1hdG9yKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICByZXR1cm4gYXJ0aWNsZVJlY3RPYnNlcnZlci5vbignc2Nyb2xsJywgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3Qgc2Nyb2xsID0gYXJ0aWNsZVJlY3RPYnNlcnZlci5nZXRTZWN0aW9uU2Nyb2xsKHNlY3Rpb25JZCk7XG4gICAgICAgICAgICBoYW5kbGVLZXlmcmFtZVZhbHVlKHNjcm9sbCk7XG4gICAgICAgIH0pO1xuICAgIH0sIFtoYW5kbGVLZXlmcmFtZVZhbHVlLCBhcnRpY2xlUmVjdE9ic2VydmVyLCBhbmltYXRvcl0pO1xuICAgIHJldHVybiBrZXlmcmFtZXMubGVuZ3RoID8gYWRqdXN0ZWRWYWx1ZSA6IHBhcmFtVmFsdWU7XG59XG5leHBvcnRzLnVzZUtleWZyYW1lVmFsdWUgPSB1c2VLZXlmcmFtZVZhbHVlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/common/useKeyframeValue.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/common/useRegisterResize.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/common/useRegisterResize.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useRegisterResize = void 0;\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst resize_observer_polyfill_1 = __importDefault(__webpack_require__(/*! resize-observer-polyfill */ \"./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js\"));\nfunction useRegisterResize(ref, onResize) {\n    (0, react_1.useEffect)(() => {\n        if (!ref || !onResize)\n            return;\n        const observer = new resize_observer_polyfill_1.default((entries) => {\n            const [entry] = entries;\n            onResize(entry.target.clientHeight / window.innerWidth);\n        });\n        observer.observe(ref);\n        return () => {\n            observer.unobserve(ref);\n        };\n    }, [ref, onResize]);\n}\nexports.useRegisterResize = useRegisterResize;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tbW9uL3VzZVJlZ2lzdGVyUmVzaXplLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QseUJBQXlCO0FBQ3pCLGdCQUFnQixtQkFBTyxDQUFDLDRDQUFPO0FBQy9CLG1EQUFtRCxtQkFBTyxDQUFDLG1HQUEwQjtBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLHlCQUF5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tbW9uL3VzZVJlZ2lzdGVyUmVzaXplLmpzP2Q2MGQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnVzZVJlZ2lzdGVyUmVzaXplID0gdm9pZCAwO1xuY29uc3QgcmVhY3RfMSA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmNvbnN0IHJlc2l6ZV9vYnNlcnZlcl9wb2x5ZmlsbF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJyZXNpemUtb2JzZXJ2ZXItcG9seWZpbGxcIikpO1xuZnVuY3Rpb24gdXNlUmVnaXN0ZXJSZXNpemUocmVmLCBvblJlc2l6ZSkge1xuICAgICgwLCByZWFjdF8xLnVzZUVmZmVjdCkoKCkgPT4ge1xuICAgICAgICBpZiAoIXJlZiB8fCAhb25SZXNpemUpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IG9ic2VydmVyID0gbmV3IHJlc2l6ZV9vYnNlcnZlcl9wb2x5ZmlsbF8xLmRlZmF1bHQoKGVudHJpZXMpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IFtlbnRyeV0gPSBlbnRyaWVzO1xuICAgICAgICAgICAgb25SZXNpemUoZW50cnkudGFyZ2V0LmNsaWVudEhlaWdodCAvIHdpbmRvdy5pbm5lcldpZHRoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIG9ic2VydmVyLm9ic2VydmUocmVmKTtcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIG9ic2VydmVyLnVub2JzZXJ2ZShyZWYpO1xuICAgICAgICB9O1xuICAgIH0sIFtyZWYsIG9uUmVzaXplXSk7XG59XG5leHBvcnRzLnVzZVJlZ2lzdGVyUmVzaXplID0gdXNlUmVnaXN0ZXJSZXNpemU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/common/useRegisterResize.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/Article.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/Article.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Article = void 0;\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst style_1 = __importDefault(__webpack_require__(/*! styled-jsx/style */ \"./node_modules/next/node_modules/styled-jsx/style.js\"));\nconst Section_1 = __webpack_require__(/*! ./Section/Section */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/Section/Section.js\");\nconst Item_1 = __webpack_require__(/*! ./items/Item */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/Item.js\");\nconst useArticleRectObserver_1 = __webpack_require__(/*! ../utils/ArticleRectManager/useArticleRectObserver */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/ArticleRectManager/useArticleRectObserver.js\");\nconst ArticleRectContext_1 = __webpack_require__(/*! ../provider/ArticleRectContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/ArticleRectContext.js\");\nconst ArticleWrapper_1 = __webpack_require__(/*! ./ArticleWrapper */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/ArticleWrapper.js\");\nconst InteractionsContext_1 = __webpack_require__(/*! ../provider/InteractionsContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/InteractionsContext.js\");\nconst WebGLContextManagerContext_1 = __webpack_require__(/*! ../provider/WebGLContextManagerContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/WebGLContextManagerContext.js\");\nconst effects_1 = __webpack_require__(/*! @cntrl-site/effects */ \"./node_modules/@cntrl-site/effects/lib/index.js\");\nconst Article = ({ article, sectionData }) => {\n    const articleRef = (0, react_1.useRef)(null);\n    const articleRectObserver = (0, useArticleRectObserver_1.useArticleRectObserver)(articleRef.current);\n    const id = (0, react_1.useId)();\n    const [articleHeight, setArticleHeight] = (0, react_1.useState)(1);\n    (0, react_1.useEffect)(() => {\n        if (!articleRectObserver)\n            return;\n        return articleRectObserver.on('resize', (rect) => {\n            setArticleHeight(rect.height / rect.width);\n        });\n    }, [articleRectObserver]);\n    const webglContextManager = (0, react_1.useMemo)(() => new effects_1.WebGLContextManager(), []);\n    return ((0, jsx_runtime_1.jsx)(ArticleRectContext_1.ArticleRectContext.Provider, { value: articleRectObserver, children: (0, jsx_runtime_1.jsxs)(InteractionsContext_1.InteractionsProvider, { article: article, children: [(0, jsx_runtime_1.jsx)(ArticleWrapper_1.ArticleWrapper, { children: (0, jsx_runtime_1.jsx)(\"div\", { className: \"article\", ref: articleRef, children: (0, jsx_runtime_1.jsx)(WebGLContextManagerContext_1.WebglContextManagerContext.Provider, { value: webglContextManager, children: article.sections.map((section, i) => {\n                                const data = section.name ? sectionData[section.name] : {};\n                                return ((0, jsx_runtime_1.jsx)(Section_1.Section, { section: section, data: data, children: article.sections[i].items.map(item => ((0, jsx_runtime_1.jsx)(Item_1.Item, { item: item, sectionId: section.id, articleHeight: articleHeight }, item.id))) }, section.id));\n                            }) }) }) }), (0, jsx_runtime_1.jsx)(style_1.default, { id: id, children: `\r\n       .article {\r\n         position: relative;\r\n         overflow: clip;\r\n       }\r\n      ` })] }) }));\n};\nexports.Article = Article;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9BcnRpY2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmLHNCQUFzQixtQkFBTyxDQUFDLDhEQUFtQjtBQUNqRCxnQkFBZ0IsbUJBQU8sQ0FBQyw0Q0FBTztBQUMvQixnQ0FBZ0MsbUJBQU8sQ0FBQyw4RUFBa0I7QUFDMUQsa0JBQWtCLG1CQUFPLENBQUMsa0dBQW1CO0FBQzdDLGVBQWUsbUJBQU8sQ0FBQyx3RkFBYztBQUNyQyxpQ0FBaUMsbUJBQU8sQ0FBQyx3SkFBb0Q7QUFDN0YsNkJBQTZCLG1CQUFPLENBQUMsZ0hBQWdDO0FBQ3JFLHlCQUF5QixtQkFBTyxDQUFDLGdHQUFrQjtBQUNuRCw4QkFBOEIsbUJBQU8sQ0FBQyxrSEFBaUM7QUFDdkUscUNBQXFDLG1CQUFPLENBQUMsZ0lBQXdDO0FBQ3JGLGtCQUFrQixtQkFBTyxDQUFDLDRFQUFxQjtBQUMvQyxtQkFBbUIsc0JBQXNCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQSx1RkFBdUYsNEdBQTRHLHVGQUF1RiwwQ0FBMEMsNElBQTRJO0FBQ2hkO0FBQ0Esb0ZBQW9GLHFIQUFxSCxpRUFBaUUsY0FBYztBQUN4Uiw2QkFBNkIsR0FBRyxHQUFHLEdBQUcsNkNBQTZDO0FBQ25GO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxJQUFJLEdBQUc7QUFDaEI7QUFDQSxlQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi9jb21wb25lbnRzL0FydGljbGUuanM/YTkzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQXJ0aWNsZSA9IHZvaWQgMDtcbmNvbnN0IGpzeF9ydW50aW1lXzEgPSByZXF1aXJlKFwicmVhY3QvanN4LXJ1bnRpbWVcIik7XG5jb25zdCByZWFjdF8xID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3Qgc3R5bGVfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwic3R5bGVkLWpzeC9zdHlsZVwiKSk7XG5jb25zdCBTZWN0aW9uXzEgPSByZXF1aXJlKFwiLi9TZWN0aW9uL1NlY3Rpb25cIik7XG5jb25zdCBJdGVtXzEgPSByZXF1aXJlKFwiLi9pdGVtcy9JdGVtXCIpO1xuY29uc3QgdXNlQXJ0aWNsZVJlY3RPYnNlcnZlcl8xID0gcmVxdWlyZShcIi4uL3V0aWxzL0FydGljbGVSZWN0TWFuYWdlci91c2VBcnRpY2xlUmVjdE9ic2VydmVyXCIpO1xuY29uc3QgQXJ0aWNsZVJlY3RDb250ZXh0XzEgPSByZXF1aXJlKFwiLi4vcHJvdmlkZXIvQXJ0aWNsZVJlY3RDb250ZXh0XCIpO1xuY29uc3QgQXJ0aWNsZVdyYXBwZXJfMSA9IHJlcXVpcmUoXCIuL0FydGljbGVXcmFwcGVyXCIpO1xuY29uc3QgSW50ZXJhY3Rpb25zQ29udGV4dF8xID0gcmVxdWlyZShcIi4uL3Byb3ZpZGVyL0ludGVyYWN0aW9uc0NvbnRleHRcIik7XG5jb25zdCBXZWJHTENvbnRleHRNYW5hZ2VyQ29udGV4dF8xID0gcmVxdWlyZShcIi4uL3Byb3ZpZGVyL1dlYkdMQ29udGV4dE1hbmFnZXJDb250ZXh0XCIpO1xuY29uc3QgZWZmZWN0c18xID0gcmVxdWlyZShcIkBjbnRybC1zaXRlL2VmZmVjdHNcIik7XG5jb25zdCBBcnRpY2xlID0gKHsgYXJ0aWNsZSwgc2VjdGlvbkRhdGEgfSkgPT4ge1xuICAgIGNvbnN0IGFydGljbGVSZWYgPSAoMCwgcmVhY3RfMS51c2VSZWYpKG51bGwpO1xuICAgIGNvbnN0IGFydGljbGVSZWN0T2JzZXJ2ZXIgPSAoMCwgdXNlQXJ0aWNsZVJlY3RPYnNlcnZlcl8xLnVzZUFydGljbGVSZWN0T2JzZXJ2ZXIpKGFydGljbGVSZWYuY3VycmVudCk7XG4gICAgY29uc3QgaWQgPSAoMCwgcmVhY3RfMS51c2VJZCkoKTtcbiAgICBjb25zdCBbYXJ0aWNsZUhlaWdodCwgc2V0QXJ0aWNsZUhlaWdodF0gPSAoMCwgcmVhY3RfMS51c2VTdGF0ZSkoMSk7XG4gICAgKDAsIHJlYWN0XzEudXNlRWZmZWN0KSgoKSA9PiB7XG4gICAgICAgIGlmICghYXJ0aWNsZVJlY3RPYnNlcnZlcilcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgcmV0dXJuIGFydGljbGVSZWN0T2JzZXJ2ZXIub24oJ3Jlc2l6ZScsIChyZWN0KSA9PiB7XG4gICAgICAgICAgICBzZXRBcnRpY2xlSGVpZ2h0KHJlY3QuaGVpZ2h0IC8gcmVjdC53aWR0aCk7XG4gICAgICAgIH0pO1xuICAgIH0sIFthcnRpY2xlUmVjdE9ic2VydmVyXSk7XG4gICAgY29uc3Qgd2ViZ2xDb250ZXh0TWFuYWdlciA9ICgwLCByZWFjdF8xLnVzZU1lbW8pKCgpID0+IG5ldyBlZmZlY3RzXzEuV2ViR0xDb250ZXh0TWFuYWdlcigpLCBbXSk7XG4gICAgcmV0dXJuICgoMCwganN4X3J1bnRpbWVfMS5qc3gpKEFydGljbGVSZWN0Q29udGV4dF8xLkFydGljbGVSZWN0Q29udGV4dC5Qcm92aWRlciwgeyB2YWx1ZTogYXJ0aWNsZVJlY3RPYnNlcnZlciwgY2hpbGRyZW46ICgwLCBqc3hfcnVudGltZV8xLmpzeHMpKEludGVyYWN0aW9uc0NvbnRleHRfMS5JbnRlcmFjdGlvbnNQcm92aWRlciwgeyBhcnRpY2xlOiBhcnRpY2xlLCBjaGlsZHJlbjogWygwLCBqc3hfcnVudGltZV8xLmpzeCkoQXJ0aWNsZVdyYXBwZXJfMS5BcnRpY2xlV3JhcHBlciwgeyBjaGlsZHJlbjogKDAsIGpzeF9ydW50aW1lXzEuanN4KShcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJhcnRpY2xlXCIsIHJlZjogYXJ0aWNsZVJlZiwgY2hpbGRyZW46ICgwLCBqc3hfcnVudGltZV8xLmpzeCkoV2ViR0xDb250ZXh0TWFuYWdlckNvbnRleHRfMS5XZWJnbENvbnRleHRNYW5hZ2VyQ29udGV4dC5Qcm92aWRlciwgeyB2YWx1ZTogd2ViZ2xDb250ZXh0TWFuYWdlciwgY2hpbGRyZW46IGFydGljbGUuc2VjdGlvbnMubWFwKChzZWN0aW9uLCBpKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBzZWN0aW9uLm5hbWUgPyBzZWN0aW9uRGF0YVtzZWN0aW9uLm5hbWVdIDoge307XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoKDAsIGpzeF9ydW50aW1lXzEuanN4KShTZWN0aW9uXzEuU2VjdGlvbiwgeyBzZWN0aW9uOiBzZWN0aW9uLCBkYXRhOiBkYXRhLCBjaGlsZHJlbjogYXJ0aWNsZS5zZWN0aW9uc1tpXS5pdGVtcy5tYXAoaXRlbSA9PiAoKDAsIGpzeF9ydW50aW1lXzEuanN4KShJdGVtXzEuSXRlbSwgeyBpdGVtOiBpdGVtLCBzZWN0aW9uSWQ6IHNlY3Rpb24uaWQsIGFydGljbGVIZWlnaHQ6IGFydGljbGVIZWlnaHQgfSwgaXRlbS5pZCkpKSB9LCBzZWN0aW9uLmlkKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkgfSkgfSkgfSksICgwLCBqc3hfcnVudGltZV8xLmpzeCkoc3R5bGVfMS5kZWZhdWx0LCB7IGlkOiBpZCwgY2hpbGRyZW46IGBcclxuICAgICAgIC5hcnRpY2xlIHtcclxuICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICBvdmVyZmxvdzogY2xpcDtcclxuICAgICAgIH1cclxuICAgICAgYCB9KV0gfSkgfSkpO1xufTtcbmV4cG9ydHMuQXJ0aWNsZSA9IEFydGljbGU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/Article.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/ArticleWrapper.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/ArticleWrapper.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ArticleWrapper = void 0;\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nconst useCurrentLayout_1 = __webpack_require__(/*! ../common/useCurrentLayout */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useCurrentLayout.js\");\nconst LayoutContext_1 = __webpack_require__(/*! ../provider/LayoutContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/LayoutContext.js\");\nconst ArticleWrapper = ({ children }) => {\n    const { layoutId, layoutDeviation } = (0, useCurrentLayout_1.useCurrentLayout)();\n    const layoutDeviationStyle = { '--layout-deviation': layoutDeviation };\n    return ((0, jsx_runtime_1.jsx)(LayoutContext_1.LayoutContext.Provider, { value: layoutId, children: (0, jsx_runtime_1.jsx)(\"div\", { className: \"article-wrapper\", style: Object.assign({}, layoutDeviationStyle), children: children }) }));\n};\nexports.ArticleWrapper = ArticleWrapper;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9BcnRpY2xlV3JhcHBlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxzQkFBc0I7QUFDdEIsc0JBQXNCLG1CQUFPLENBQUMsOERBQW1CO0FBQ2pELDJCQUEyQixtQkFBTyxDQUFDLHdHQUE0QjtBQUMvRCx3QkFBd0IsbUJBQU8sQ0FBQyxzR0FBMkI7QUFDM0QsMEJBQTBCLFVBQVU7QUFDcEMsWUFBWSw0QkFBNEI7QUFDeEMsbUNBQW1DO0FBQ25DLDZFQUE2RSwyREFBMkQscURBQXFELDZDQUE2QyxHQUFHO0FBQzdPO0FBQ0Esc0JBQXNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi9jb21wb25lbnRzL0FydGljbGVXcmFwcGVyLmpzPzE0NWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFydGljbGVXcmFwcGVyID0gdm9pZCAwO1xuY29uc3QganN4X3J1bnRpbWVfMSA9IHJlcXVpcmUoXCJyZWFjdC9qc3gtcnVudGltZVwiKTtcbmNvbnN0IHVzZUN1cnJlbnRMYXlvdXRfMSA9IHJlcXVpcmUoXCIuLi9jb21tb24vdXNlQ3VycmVudExheW91dFwiKTtcbmNvbnN0IExheW91dENvbnRleHRfMSA9IHJlcXVpcmUoXCIuLi9wcm92aWRlci9MYXlvdXRDb250ZXh0XCIpO1xuY29uc3QgQXJ0aWNsZVdyYXBwZXIgPSAoeyBjaGlsZHJlbiB9KSA9PiB7XG4gICAgY29uc3QgeyBsYXlvdXRJZCwgbGF5b3V0RGV2aWF0aW9uIH0gPSAoMCwgdXNlQ3VycmVudExheW91dF8xLnVzZUN1cnJlbnRMYXlvdXQpKCk7XG4gICAgY29uc3QgbGF5b3V0RGV2aWF0aW9uU3R5bGUgPSB7ICctLWxheW91dC1kZXZpYXRpb24nOiBsYXlvdXREZXZpYXRpb24gfTtcbiAgICByZXR1cm4gKCgwLCBqc3hfcnVudGltZV8xLmpzeCkoTGF5b3V0Q29udGV4dF8xLkxheW91dENvbnRleHQuUHJvdmlkZXIsIHsgdmFsdWU6IGxheW91dElkLCBjaGlsZHJlbjogKDAsIGpzeF9ydW50aW1lXzEuanN4KShcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJhcnRpY2xlLXdyYXBwZXJcIiwgc3R5bGU6IE9iamVjdC5hc3NpZ24oe30sIGxheW91dERldmlhdGlvblN0eWxlKSwgY2hpbGRyZW46IGNoaWxkcmVuIH0pIH0pKTtcbn07XG5leHBvcnRzLkFydGljbGVXcmFwcGVyID0gQXJ0aWNsZVdyYXBwZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/ArticleWrapper.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/Head.js":
/*!********************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/Head.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CNTRLHead = void 0;\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nconst html_react_parser_1 = __importDefault(__webpack_require__(/*! html-react-parser */ \"./node_modules/html-react-parser/index.js\"));\nconst head_1 = __importDefault(__webpack_require__(/*! next/head */ \"./node_modules/next/head.js\"));\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst CNTRLHead = ({ meta, project }) => {\n    const googleFonts = (0, html_react_parser_1.default)(project.fonts.google);\n    const adobeFonts = (0, html_react_parser_1.default)(project.fonts.adobe);\n    const parsedFonts = Object.assign(Object.assign({}, (typeof googleFonts === 'object' ? googleFonts : {})), (typeof adobeFonts === 'object' ? adobeFonts : {}));\n    const customFonts = project.fonts.custom;\n    const htmlHead = (0, html_react_parser_1.default)(project.html.head);\n    const ffGenerator = new sdk_1.FontFaceGenerator(customFonts);\n    const links = Object.values(parsedFonts).map((value) => {\n        var _a, _b;\n        if (!value)\n            return;\n        const rel = (value === null || value === void 0 ? void 0 : value.rel) || ((_a = value.props) === null || _a === void 0 ? void 0 : _a.rel);\n        const href = (value === null || value === void 0 ? void 0 : value.href) || ((_b = value.props) === null || _b === void 0 ? void 0 : _b.href);\n        if (!rel || !href)\n            return;\n        return ((0, jsx_runtime_1.jsx)(\"link\", { rel: rel, href: href }, `link-${rel}-${href}`));\n    });\n    return ((0, jsx_runtime_1.jsxs)(head_1.default, { children: [(0, jsx_runtime_1.jsx)(\"title\", { children: meta.title }), (0, jsx_runtime_1.jsx)(\"meta\", { name: \"description\", content: meta.description }), (0, jsx_runtime_1.jsx)(\"meta\", { name: \"keywords\", content: meta.keywords }), (0, jsx_runtime_1.jsx)(\"meta\", { name: \"og:title\", content: meta.title }), (0, jsx_runtime_1.jsx)(\"meta\", { name: \"og:image\", content: meta.opengraphThumbnail }), (0, jsx_runtime_1.jsx)(\"meta\", { name: \"og:description\", content: meta.description }), (0, jsx_runtime_1.jsx)(\"meta\", { name: \"twitter:title\", content: meta.title }), (0, jsx_runtime_1.jsx)(\"meta\", { name: \"twitter:image\", content: meta.opengraphThumbnail }), (0, jsx_runtime_1.jsx)(\"meta\", { name: \"twitter:description\", content: meta.description }), (0, jsx_runtime_1.jsx)(\"meta\", { property: \"twitter:card\", content: \"summary_large_image\" }), (0, jsx_runtime_1.jsx)(\"meta\", { name: \"generator\", content: \"https://cntrl.site\" }), (0, jsx_runtime_1.jsx)(\"link\", { rel: \"icon\", href: meta.favicon }), customFonts.length > 0 && ((0, jsx_runtime_1.jsx)(\"style\", { dangerouslySetInnerHTML: {\n                    __html: ffGenerator.generate()\n                } })), links, htmlHead] }));\n};\nexports.CNTRLHead = CNTRLHead;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9IZWFkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCO0FBQ2pCLHNCQUFzQixtQkFBTyxDQUFDLDhEQUFtQjtBQUNqRCw0Q0FBNEMsbUJBQU8sQ0FBQyxvRUFBbUI7QUFDdkUsK0JBQStCLG1CQUFPLENBQUMsOENBQVc7QUFDbEQsY0FBYyxtQkFBTyxDQUFDLHFFQUFpQjtBQUN2QyxxQkFBcUIsZUFBZTtBQUNwQztBQUNBO0FBQ0Esc0RBQXNELHFEQUFxRCxxREFBcUQ7QUFDaEs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCxzQkFBc0IsVUFBVSxJQUFJLEdBQUcsS0FBSztBQUM3RixLQUFLO0FBQ0wsc0RBQXNELDZDQUE2QyxzQkFBc0Isb0NBQW9DLGdEQUFnRCxvQ0FBb0MsMENBQTBDLG9DQUFvQyx1Q0FBdUMsb0NBQW9DLG9EQUFvRCxvQ0FBb0MsbURBQW1ELG9DQUFvQyw0Q0FBNEMsb0NBQW9DLHlEQUF5RCxvQ0FBb0Msd0RBQXdELG9DQUFvQywwREFBMEQsb0NBQW9DLGtEQUFrRCxvQ0FBb0MsaUNBQWlDLGdFQUFnRTtBQUN2bEM7QUFDQSxtQkFBbUIsc0JBQXNCO0FBQ3pDO0FBQ0EsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi9jb21wb25lbnRzL0hlYWQuanM/OGZiOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ05UUkxIZWFkID0gdm9pZCAwO1xuY29uc3QganN4X3J1bnRpbWVfMSA9IHJlcXVpcmUoXCJyZWFjdC9qc3gtcnVudGltZVwiKTtcbmNvbnN0IGh0bWxfcmVhY3RfcGFyc2VyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImh0bWwtcmVhY3QtcGFyc2VyXCIpKTtcbmNvbnN0IGhlYWRfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwibmV4dC9oZWFkXCIpKTtcbmNvbnN0IHNka18xID0gcmVxdWlyZShcIkBjbnRybC1zaXRlL3Nka1wiKTtcbmNvbnN0IENOVFJMSGVhZCA9ICh7IG1ldGEsIHByb2plY3QgfSkgPT4ge1xuICAgIGNvbnN0IGdvb2dsZUZvbnRzID0gKDAsIGh0bWxfcmVhY3RfcGFyc2VyXzEuZGVmYXVsdCkocHJvamVjdC5mb250cy5nb29nbGUpO1xuICAgIGNvbnN0IGFkb2JlRm9udHMgPSAoMCwgaHRtbF9yZWFjdF9wYXJzZXJfMS5kZWZhdWx0KShwcm9qZWN0LmZvbnRzLmFkb2JlKTtcbiAgICBjb25zdCBwYXJzZWRGb250cyA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgKHR5cGVvZiBnb29nbGVGb250cyA9PT0gJ29iamVjdCcgPyBnb29nbGVGb250cyA6IHt9KSksICh0eXBlb2YgYWRvYmVGb250cyA9PT0gJ29iamVjdCcgPyBhZG9iZUZvbnRzIDoge30pKTtcbiAgICBjb25zdCBjdXN0b21Gb250cyA9IHByb2plY3QuZm9udHMuY3VzdG9tO1xuICAgIGNvbnN0IGh0bWxIZWFkID0gKDAsIGh0bWxfcmVhY3RfcGFyc2VyXzEuZGVmYXVsdCkocHJvamVjdC5odG1sLmhlYWQpO1xuICAgIGNvbnN0IGZmR2VuZXJhdG9yID0gbmV3IHNka18xLkZvbnRGYWNlR2VuZXJhdG9yKGN1c3RvbUZvbnRzKTtcbiAgICBjb25zdCBsaW5rcyA9IE9iamVjdC52YWx1ZXMocGFyc2VkRm9udHMpLm1hcCgodmFsdWUpID0+IHtcbiAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgaWYgKCF2YWx1ZSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgcmVsID0gKHZhbHVlID09PSBudWxsIHx8IHZhbHVlID09PSB2b2lkIDAgPyB2b2lkIDAgOiB2YWx1ZS5yZWwpIHx8ICgoX2EgPSB2YWx1ZS5wcm9wcykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnJlbCk7XG4gICAgICAgIGNvbnN0IGhyZWYgPSAodmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHZhbHVlLmhyZWYpIHx8ICgoX2IgPSB2YWx1ZS5wcm9wcykgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmhyZWYpO1xuICAgICAgICBpZiAoIXJlbCB8fCAhaHJlZilcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgcmV0dXJuICgoMCwganN4X3J1bnRpbWVfMS5qc3gpKFwibGlua1wiLCB7IHJlbDogcmVsLCBocmVmOiBocmVmIH0sIGBsaW5rLSR7cmVsfS0ke2hyZWZ9YCkpO1xuICAgIH0pO1xuICAgIHJldHVybiAoKDAsIGpzeF9ydW50aW1lXzEuanN4cykoaGVhZF8xLmRlZmF1bHQsIHsgY2hpbGRyZW46IFsoMCwganN4X3J1bnRpbWVfMS5qc3gpKFwidGl0bGVcIiwgeyBjaGlsZHJlbjogbWV0YS50aXRsZSB9KSwgKDAsIGpzeF9ydW50aW1lXzEuanN4KShcIm1ldGFcIiwgeyBuYW1lOiBcImRlc2NyaXB0aW9uXCIsIGNvbnRlbnQ6IG1ldGEuZGVzY3JpcHRpb24gfSksICgwLCBqc3hfcnVudGltZV8xLmpzeCkoXCJtZXRhXCIsIHsgbmFtZTogXCJrZXl3b3Jkc1wiLCBjb250ZW50OiBtZXRhLmtleXdvcmRzIH0pLCAoMCwganN4X3J1bnRpbWVfMS5qc3gpKFwibWV0YVwiLCB7IG5hbWU6IFwib2c6dGl0bGVcIiwgY29udGVudDogbWV0YS50aXRsZSB9KSwgKDAsIGpzeF9ydW50aW1lXzEuanN4KShcIm1ldGFcIiwgeyBuYW1lOiBcIm9nOmltYWdlXCIsIGNvbnRlbnQ6IG1ldGEub3BlbmdyYXBoVGh1bWJuYWlsIH0pLCAoMCwganN4X3J1bnRpbWVfMS5qc3gpKFwibWV0YVwiLCB7IG5hbWU6IFwib2c6ZGVzY3JpcHRpb25cIiwgY29udGVudDogbWV0YS5kZXNjcmlwdGlvbiB9KSwgKDAsIGpzeF9ydW50aW1lXzEuanN4KShcIm1ldGFcIiwgeyBuYW1lOiBcInR3aXR0ZXI6dGl0bGVcIiwgY29udGVudDogbWV0YS50aXRsZSB9KSwgKDAsIGpzeF9ydW50aW1lXzEuanN4KShcIm1ldGFcIiwgeyBuYW1lOiBcInR3aXR0ZXI6aW1hZ2VcIiwgY29udGVudDogbWV0YS5vcGVuZ3JhcGhUaHVtYm5haWwgfSksICgwLCBqc3hfcnVudGltZV8xLmpzeCkoXCJtZXRhXCIsIHsgbmFtZTogXCJ0d2l0dGVyOmRlc2NyaXB0aW9uXCIsIGNvbnRlbnQ6IG1ldGEuZGVzY3JpcHRpb24gfSksICgwLCBqc3hfcnVudGltZV8xLmpzeCkoXCJtZXRhXCIsIHsgcHJvcGVydHk6IFwidHdpdHRlcjpjYXJkXCIsIGNvbnRlbnQ6IFwic3VtbWFyeV9sYXJnZV9pbWFnZVwiIH0pLCAoMCwganN4X3J1bnRpbWVfMS5qc3gpKFwibWV0YVwiLCB7IG5hbWU6IFwiZ2VuZXJhdG9yXCIsIGNvbnRlbnQ6IFwiaHR0cHM6Ly9jbnRybC5zaXRlXCIgfSksICgwLCBqc3hfcnVudGltZV8xLmpzeCkoXCJsaW5rXCIsIHsgcmVsOiBcImljb25cIiwgaHJlZjogbWV0YS5mYXZpY29uIH0pLCBjdXN0b21Gb250cy5sZW5ndGggPiAwICYmICgoMCwganN4X3J1bnRpbWVfMS5qc3gpKFwic3R5bGVcIiwgeyBkYW5nZXJvdXNseVNldElubmVySFRNTDoge1xuICAgICAgICAgICAgICAgICAgICBfX2h0bWw6IGZmR2VuZXJhdG9yLmdlbmVyYXRlKClcbiAgICAgICAgICAgICAgICB9IH0pKSwgbGlua3MsIGh0bWxIZWFkXSB9KSk7XG59O1xuZXhwb3J0cy5DTlRSTEhlYWQgPSBDTlRSTEhlYWQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/Head.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/LayoutStyle.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/LayoutStyle.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LayoutStyle = void 0;\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst style_1 = __importDefault(__webpack_require__(/*! styled-jsx/style */ \"./node_modules/next/node_modules/styled-jsx/style.js\"));\nconst LayoutStyle = ({ id, layouts, layoutId, children }) => {\n    const layout = layouts.find(l => l.id === layoutId);\n    return ((0, jsx_runtime_1.jsx)(style_1.default, { id: id, children: `\r\n      ${(0, sdk_1.getLayoutMediaQuery)(layoutId, layouts)} {\r\n        ${children === null || children === void 0 ? void 0 : children(layout)}\r\n      }\r\n    ` }));\n};\nexports.LayoutStyle = LayoutStyle;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9MYXlvdXRTdHlsZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQjtBQUNuQixzQkFBc0IsbUJBQU8sQ0FBQyw4REFBbUI7QUFDakQsY0FBYyxtQkFBTyxDQUFDLHFFQUFpQjtBQUN2QyxnQ0FBZ0MsbUJBQU8sQ0FBQyw4RUFBa0I7QUFDMUQsdUJBQXVCLGlDQUFpQztBQUN4RDtBQUNBLHNEQUFzRDtBQUN0RCxRQUFRO0FBQ1IsVUFBVTtBQUNWO0FBQ0EsT0FBTztBQUNQO0FBQ0EsbUJBQW1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi9jb21wb25lbnRzL0xheW91dFN0eWxlLmpzPzgzZjMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkxheW91dFN0eWxlID0gdm9pZCAwO1xuY29uc3QganN4X3J1bnRpbWVfMSA9IHJlcXVpcmUoXCJyZWFjdC9qc3gtcnVudGltZVwiKTtcbmNvbnN0IHNka18xID0gcmVxdWlyZShcIkBjbnRybC1zaXRlL3Nka1wiKTtcbmNvbnN0IHN0eWxlXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcInN0eWxlZC1qc3gvc3R5bGVcIikpO1xuY29uc3QgTGF5b3V0U3R5bGUgPSAoeyBpZCwgbGF5b3V0cywgbGF5b3V0SWQsIGNoaWxkcmVuIH0pID0+IHtcbiAgICBjb25zdCBsYXlvdXQgPSBsYXlvdXRzLmZpbmQobCA9PiBsLmlkID09PSBsYXlvdXRJZCk7XG4gICAgcmV0dXJuICgoMCwganN4X3J1bnRpbWVfMS5qc3gpKHN0eWxlXzEuZGVmYXVsdCwgeyBpZDogaWQsIGNoaWxkcmVuOiBgXHJcbiAgICAgICR7KDAsIHNka18xLmdldExheW91dE1lZGlhUXVlcnkpKGxheW91dElkLCBsYXlvdXRzKX0ge1xyXG4gICAgICAgICR7Y2hpbGRyZW4gPT09IG51bGwgfHwgY2hpbGRyZW4gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNoaWxkcmVuKGxheW91dCl9XHJcbiAgICAgIH1cclxuICAgIGAgfSkpO1xufTtcbmV4cG9ydHMuTGF5b3V0U3R5bGUgPSBMYXlvdXRTdHlsZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/LayoutStyle.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/Page.js":
/*!********************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/Page.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Page = void 0;\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst html_react_parser_1 = __importDefault(__webpack_require__(/*! html-react-parser */ \"./node_modules/html-react-parser/index.js\"));\nconst Article_1 = __webpack_require__(/*! ./Article */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/Article.js\");\nconst KeyframesContext_1 = __webpack_require__(/*! ../provider/KeyframesContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/KeyframesContext.js\");\nconst Head_1 = __webpack_require__(/*! ./Head */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/Head.js\");\nconst Keyframes_1 = __webpack_require__(/*! ../provider/Keyframes */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/Keyframes.js\");\nconst Page = ({ article, project, meta, keyframes, sectionData }) => {\n    const afterBodyOpen = (0, html_react_parser_1.default)(project.html.afterBodyOpen);\n    const beforeBodyClose = (0, html_react_parser_1.default)(project.html.beforeBodyClose);\n    const keyframesRepo = (0, react_1.useMemo)(() => new Keyframes_1.Keyframes(keyframes), [keyframes]);\n    return ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(Head_1.CNTRLHead, { project: project, meta: meta }), afterBodyOpen, (0, jsx_runtime_1.jsx)(KeyframesContext_1.KeyframesContext.Provider, { value: keyframesRepo, children: (0, jsx_runtime_1.jsx)(Article_1.Article, { article: article, sectionData: sectionData }) }), beforeBodyClose] }));\n};\nexports.Page = Page;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9QYWdlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsWUFBWTtBQUNaLHNCQUFzQixtQkFBTyxDQUFDLDhEQUFtQjtBQUNqRCxnQkFBZ0IsbUJBQU8sQ0FBQyw0Q0FBTztBQUMvQiw0Q0FBNEMsbUJBQU8sQ0FBQyxvRUFBbUI7QUFDdkUsa0JBQWtCLG1CQUFPLENBQUMsa0ZBQVc7QUFDckMsMkJBQTJCLG1CQUFPLENBQUMsNEdBQThCO0FBQ2pFLGVBQWUsbUJBQU8sQ0FBQyw0RUFBUTtBQUMvQixvQkFBb0IsbUJBQU8sQ0FBQyw4RkFBdUI7QUFDbkQsZ0JBQWdCLGdEQUFnRDtBQUNoRTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQsc0RBQXNELDhCQUE4Qix5RkFBeUYsNEVBQTRFLDRDQUE0QyxHQUFHLHFCQUFxQjtBQUMzWDtBQUNBLFlBQVkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbnRybC1zaXRlL3Nkay1uZXh0anMvbGliL2NvbXBvbmVudHMvUGFnZS5qcz8xZjdkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5QYWdlID0gdm9pZCAwO1xuY29uc3QganN4X3J1bnRpbWVfMSA9IHJlcXVpcmUoXCJyZWFjdC9qc3gtcnVudGltZVwiKTtcbmNvbnN0IHJlYWN0XzEgPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCBodG1sX3JlYWN0X3BhcnNlcl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJodG1sLXJlYWN0LXBhcnNlclwiKSk7XG5jb25zdCBBcnRpY2xlXzEgPSByZXF1aXJlKFwiLi9BcnRpY2xlXCIpO1xuY29uc3QgS2V5ZnJhbWVzQ29udGV4dF8xID0gcmVxdWlyZShcIi4uL3Byb3ZpZGVyL0tleWZyYW1lc0NvbnRleHRcIik7XG5jb25zdCBIZWFkXzEgPSByZXF1aXJlKFwiLi9IZWFkXCIpO1xuY29uc3QgS2V5ZnJhbWVzXzEgPSByZXF1aXJlKFwiLi4vcHJvdmlkZXIvS2V5ZnJhbWVzXCIpO1xuY29uc3QgUGFnZSA9ICh7IGFydGljbGUsIHByb2plY3QsIG1ldGEsIGtleWZyYW1lcywgc2VjdGlvbkRhdGEgfSkgPT4ge1xuICAgIGNvbnN0IGFmdGVyQm9keU9wZW4gPSAoMCwgaHRtbF9yZWFjdF9wYXJzZXJfMS5kZWZhdWx0KShwcm9qZWN0Lmh0bWwuYWZ0ZXJCb2R5T3Blbik7XG4gICAgY29uc3QgYmVmb3JlQm9keUNsb3NlID0gKDAsIGh0bWxfcmVhY3RfcGFyc2VyXzEuZGVmYXVsdCkocHJvamVjdC5odG1sLmJlZm9yZUJvZHlDbG9zZSk7XG4gICAgY29uc3Qga2V5ZnJhbWVzUmVwbyA9ICgwLCByZWFjdF8xLnVzZU1lbW8pKCgpID0+IG5ldyBLZXlmcmFtZXNfMS5LZXlmcmFtZXMoa2V5ZnJhbWVzKSwgW2tleWZyYW1lc10pO1xuICAgIHJldHVybiAoKDAsIGpzeF9ydW50aW1lXzEuanN4cykoanN4X3J1bnRpbWVfMS5GcmFnbWVudCwgeyBjaGlsZHJlbjogWygwLCBqc3hfcnVudGltZV8xLmpzeCkoSGVhZF8xLkNOVFJMSGVhZCwgeyBwcm9qZWN0OiBwcm9qZWN0LCBtZXRhOiBtZXRhIH0pLCBhZnRlckJvZHlPcGVuLCAoMCwganN4X3J1bnRpbWVfMS5qc3gpKEtleWZyYW1lc0NvbnRleHRfMS5LZXlmcmFtZXNDb250ZXh0LlByb3ZpZGVyLCB7IHZhbHVlOiBrZXlmcmFtZXNSZXBvLCBjaGlsZHJlbjogKDAsIGpzeF9ydW50aW1lXzEuanN4KShBcnRpY2xlXzEuQXJ0aWNsZSwgeyBhcnRpY2xlOiBhcnRpY2xlLCBzZWN0aW9uRGF0YTogc2VjdGlvbkRhdGEgfSkgfSksIGJlZm9yZUJvZHlDbG9zZV0gfSkpO1xufTtcbmV4cG9ydHMuUGFnZSA9IFBhZ2U7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/Page.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/ScrollPlaybackVideo.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/ScrollPlaybackVideo.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ScrollPlaybackVideo = void 0;\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst rangeMap_1 = __webpack_require__(/*! ../utils/rangeMap */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/rangeMap.js\");\nconst ArticleRectContext_1 = __webpack_require__(/*! ../provider/ArticleRectContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/ArticleRectContext.js\");\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst ScrollPlaybackVideo = ({ sectionId, src, playbackParams, style, className }) => {\n    const [containerElement, setContainerElement] = (0, react_1.useState)(null);\n    const [time, setTime] = (0, react_1.useState)(0);\n    const articleRectObserver = (0, react_1.useContext)(ArticleRectContext_1.ArticleRectContext);\n    (0, react_1.useEffect)(() => {\n        if (!playbackParams || !articleRectObserver)\n            return;\n        return articleRectObserver.on('scroll', () => {\n            const scrollPos = articleRectObserver.getSectionScroll(sectionId);\n            const time = (0, rangeMap_1.rangeMap)(scrollPos, playbackParams.from, playbackParams.to, 0, 1, true);\n            setTime(toFixed(time));\n        });\n    }, [playbackParams === null || playbackParams === void 0 ? void 0 : playbackParams.from, playbackParams === null || playbackParams === void 0 ? void 0 : playbackParams.to, time]);\n    const scrollVideoManager = (0, react_1.useMemo)(() => {\n        if (!containerElement)\n            return null;\n        const manager = new sdk_1.ScrollPlaybackVideoManager({\n            src,\n            videoContainer: containerElement\n        });\n        return manager;\n    }, [containerElement, src]);\n    (0, react_1.useEffect)(() => {\n        return () => {\n            scrollVideoManager === null || scrollVideoManager === void 0 ? void 0 : scrollVideoManager.destroy();\n        };\n    }, [scrollVideoManager]);\n    (0, react_1.useEffect)(() => {\n        if (scrollVideoManager && time >= 0 && time <= 1) {\n            scrollVideoManager.setTargetTimePercent(time);\n        }\n    }, [time, scrollVideoManager]);\n    return (0, jsx_runtime_1.jsx)(\"div\", { className: className, style: style, ref: setContainerElement });\n};\nexports.ScrollPlaybackVideo = ScrollPlaybackVideo;\nfunction toFixed(num) {\n    return Number(num.toFixed(3));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9TY3JvbGxQbGF5YmFja1ZpZGVvLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQjtBQUMzQixzQkFBc0IsbUJBQU8sQ0FBQyw4REFBbUI7QUFDakQsZ0JBQWdCLG1CQUFPLENBQUMsNENBQU87QUFDL0IsbUJBQW1CLG1CQUFPLENBQUMsc0ZBQW1CO0FBQzlDLDZCQUE2QixtQkFBTyxDQUFDLGdIQUFnQztBQUNyRSxjQUFjLG1CQUFPLENBQUMscUVBQWlCO0FBQ3ZDLCtCQUErQixrREFBa0Q7QUFDakY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCwyQ0FBMkMsOERBQThEO0FBQ3pHO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9TY3JvbGxQbGF5YmFja1ZpZGVvLmpzPzg5MTEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNjcm9sbFBsYXliYWNrVmlkZW8gPSB2b2lkIDA7XG5jb25zdCBqc3hfcnVudGltZV8xID0gcmVxdWlyZShcInJlYWN0L2pzeC1ydW50aW1lXCIpO1xuY29uc3QgcmVhY3RfMSA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmNvbnN0IHJhbmdlTWFwXzEgPSByZXF1aXJlKFwiLi4vdXRpbHMvcmFuZ2VNYXBcIik7XG5jb25zdCBBcnRpY2xlUmVjdENvbnRleHRfMSA9IHJlcXVpcmUoXCIuLi9wcm92aWRlci9BcnRpY2xlUmVjdENvbnRleHRcIik7XG5jb25zdCBzZGtfMSA9IHJlcXVpcmUoXCJAY250cmwtc2l0ZS9zZGtcIik7XG5jb25zdCBTY3JvbGxQbGF5YmFja1ZpZGVvID0gKHsgc2VjdGlvbklkLCBzcmMsIHBsYXliYWNrUGFyYW1zLCBzdHlsZSwgY2xhc3NOYW1lIH0pID0+IHtcbiAgICBjb25zdCBbY29udGFpbmVyRWxlbWVudCwgc2V0Q29udGFpbmVyRWxlbWVudF0gPSAoMCwgcmVhY3RfMS51c2VTdGF0ZSkobnVsbCk7XG4gICAgY29uc3QgW3RpbWUsIHNldFRpbWVdID0gKDAsIHJlYWN0XzEudXNlU3RhdGUpKDApO1xuICAgIGNvbnN0IGFydGljbGVSZWN0T2JzZXJ2ZXIgPSAoMCwgcmVhY3RfMS51c2VDb250ZXh0KShBcnRpY2xlUmVjdENvbnRleHRfMS5BcnRpY2xlUmVjdENvbnRleHQpO1xuICAgICgwLCByZWFjdF8xLnVzZUVmZmVjdCkoKCkgPT4ge1xuICAgICAgICBpZiAoIXBsYXliYWNrUGFyYW1zIHx8ICFhcnRpY2xlUmVjdE9ic2VydmVyKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICByZXR1cm4gYXJ0aWNsZVJlY3RPYnNlcnZlci5vbignc2Nyb2xsJywgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3Qgc2Nyb2xsUG9zID0gYXJ0aWNsZVJlY3RPYnNlcnZlci5nZXRTZWN0aW9uU2Nyb2xsKHNlY3Rpb25JZCk7XG4gICAgICAgICAgICBjb25zdCB0aW1lID0gKDAsIHJhbmdlTWFwXzEucmFuZ2VNYXApKHNjcm9sbFBvcywgcGxheWJhY2tQYXJhbXMuZnJvbSwgcGxheWJhY2tQYXJhbXMudG8sIDAsIDEsIHRydWUpO1xuICAgICAgICAgICAgc2V0VGltZSh0b0ZpeGVkKHRpbWUpKTtcbiAgICAgICAgfSk7XG4gICAgfSwgW3BsYXliYWNrUGFyYW1zID09PSBudWxsIHx8IHBsYXliYWNrUGFyYW1zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBwbGF5YmFja1BhcmFtcy5mcm9tLCBwbGF5YmFja1BhcmFtcyA9PT0gbnVsbCB8fCBwbGF5YmFja1BhcmFtcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogcGxheWJhY2tQYXJhbXMudG8sIHRpbWVdKTtcbiAgICBjb25zdCBzY3JvbGxWaWRlb01hbmFnZXIgPSAoMCwgcmVhY3RfMS51c2VNZW1vKSgoKSA9PiB7XG4gICAgICAgIGlmICghY29udGFpbmVyRWxlbWVudClcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICBjb25zdCBtYW5hZ2VyID0gbmV3IHNka18xLlNjcm9sbFBsYXliYWNrVmlkZW9NYW5hZ2VyKHtcbiAgICAgICAgICAgIHNyYyxcbiAgICAgICAgICAgIHZpZGVvQ29udGFpbmVyOiBjb250YWluZXJFbGVtZW50XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gbWFuYWdlcjtcbiAgICB9LCBbY29udGFpbmVyRWxlbWVudCwgc3JjXSk7XG4gICAgKDAsIHJlYWN0XzEudXNlRWZmZWN0KSgoKSA9PiB7XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBzY3JvbGxWaWRlb01hbmFnZXIgPT09IG51bGwgfHwgc2Nyb2xsVmlkZW9NYW5hZ2VyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzY3JvbGxWaWRlb01hbmFnZXIuZGVzdHJveSgpO1xuICAgICAgICB9O1xuICAgIH0sIFtzY3JvbGxWaWRlb01hbmFnZXJdKTtcbiAgICAoMCwgcmVhY3RfMS51c2VFZmZlY3QpKCgpID0+IHtcbiAgICAgICAgaWYgKHNjcm9sbFZpZGVvTWFuYWdlciAmJiB0aW1lID49IDAgJiYgdGltZSA8PSAxKSB7XG4gICAgICAgICAgICBzY3JvbGxWaWRlb01hbmFnZXIuc2V0VGFyZ2V0VGltZVBlcmNlbnQodGltZSk7XG4gICAgICAgIH1cbiAgICB9LCBbdGltZSwgc2Nyb2xsVmlkZW9NYW5hZ2VyXSk7XG4gICAgcmV0dXJuICgwLCBqc3hfcnVudGltZV8xLmpzeCkoXCJkaXZcIiwgeyBjbGFzc05hbWU6IGNsYXNzTmFtZSwgc3R5bGU6IHN0eWxlLCByZWY6IHNldENvbnRhaW5lckVsZW1lbnQgfSk7XG59O1xuZXhwb3J0cy5TY3JvbGxQbGF5YmFja1ZpZGVvID0gU2Nyb2xsUGxheWJhY2tWaWRlbztcbmZ1bmN0aW9uIHRvRml4ZWQobnVtKSB7XG4gICAgcmV0dXJuIE51bWJlcihudW0udG9GaXhlZCgzKSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/ScrollPlaybackVideo.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/Section/Section.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/Section/Section.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getSectionHeight = exports.Section = void 0;\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst style_1 = __importDefault(__webpack_require__(/*! styled-jsx/style */ \"./node_modules/next/node_modules/styled-jsx/style.js\"));\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst useCntrlContext_1 = __webpack_require__(/*! ../../provider/useCntrlContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/useCntrlContext.js\");\nconst useSectionRegistry_1 = __webpack_require__(/*! ../../utils/ArticleRectManager/useSectionRegistry */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/ArticleRectManager/useSectionRegistry.js\");\nconst color_1 = __webpack_require__(/*! @cntrl-site/color */ \"./node_modules/@cntrl-site/color/lib/index.js\");\nconst useLayoutContext_1 = __webpack_require__(/*! ../useLayoutContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/useLayoutContext.js\");\nconst DEFAULT_COLOR = 'rgba(0, 0, 0, 0)';\nfunction isVideoUrl(url) {\n    const videoExtensions = ['.mp4', '.webm', '.ogg'];\n    return videoExtensions.some(ext => url.toLowerCase().endsWith(ext));\n}\nconst Section = ({ section, data, children }) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\n    const id = (0, react_1.useId)();\n    const sectionRef = (0, react_1.useRef)(null);\n    const { layouts, customSections } = (0, useCntrlContext_1.useCntrlContext)();\n    const layout = (0, useLayoutContext_1.useLayoutContext)();\n    const layoutValues = [section.height, section.color, (_a = section.media) !== null && _a !== void 0 ? _a : {}];\n    const SectionComponent = section.name ? customSections.getComponent(section.name) : undefined;\n    const isVideo = layout && ((_c = (_b = section.media) === null || _b === void 0 ? void 0 : _b[layout]) === null || _c === void 0 ? void 0 : _c.url) ? isVideoUrl(String((_e = (_d = section.media) === null || _d === void 0 ? void 0 : _d[layout]) === null || _e === void 0 ? void 0 : _e.url)) : false;\n    const videoRef = (0, react_1.useRef)(null);\n    (0, useSectionRegistry_1.useSectionRegistry)(section.id, sectionRef.current);\n    const getSectionVisibilityStyles = () => {\n        return layouts\n            .sort((a, b) => a.startsWith - b.startsWith)\n            .reduce((acc, layout) => {\n            const isHidden = section.hidden[layout.id];\n            return `\r\n          ${acc}\r\n          ${(0, sdk_1.getLayoutMediaQuery)(layout.id, layouts)} {\r\n            .section-${section.id} {\r\n              display: ${isHidden ? 'none' : 'block'};\r\n            }\r\n          }`;\n        }, '');\n    };\n    (0, react_1.useEffect)(() => {\n        if (!isVideo || !sectionRef.current || !videoRef.current)\n            return;\n        const video = videoRef.current;\n        const section = sectionRef.current;\n        const observer = new IntersectionObserver(([entry]) => {\n            if (entry.isIntersecting) {\n                video.style.display = 'block';\n                video.play().catch(() => { });\n            }\n            else {\n                video.style.display = 'none';\n                video.pause();\n            }\n        }, {\n            root: null,\n            rootMargin: '50px',\n            threshold: 0\n        });\n        observer.observe(section);\n        return () => observer.disconnect();\n    }, [isVideo]);\n    if (SectionComponent)\n        return (0, jsx_runtime_1.jsx)(\"div\", { ref: sectionRef, children: (0, jsx_runtime_1.jsx)(SectionComponent, { data: data, children: children }) });\n    return ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsxs)(\"div\", { className: `section-${section.id}`, id: section.name, ref: sectionRef, children: [layout && ((_g = (_f = section.media) === null || _f === void 0 ? void 0 : _f[layout]) === null || _g === void 0 ? void 0 : _g.url) && ((_j = (_h = section.media) === null || _h === void 0 ? void 0 : _h[layout]) === null || _j === void 0 ? void 0 : _j.size) !== 'none' && sectionRef.current && ((0, jsx_runtime_1.jsx)(\"div\", { className: `section-background-overlay-${section.id}`, children: (0, jsx_runtime_1.jsx)(\"div\", { className: `section-background-wrapper-${section.id}`, children: isVideo ? ((0, jsx_runtime_1.jsx)(\"video\", { ref: videoRef, autoPlay: true, loop: true, muted: true, playsInline: true, preload: \"auto\", className: `video-background-${section.id}`, children: (0, jsx_runtime_1.jsx)(\"source\", { src: (_m = (_l = (_k = section.media) === null || _k === void 0 ? void 0 : _k[layout]) === null || _l === void 0 ? void 0 : _l.url) !== null && _m !== void 0 ? _m : '' }) })) : ((0, jsx_runtime_1.jsx)(\"img\", { src: (_q = (_p = (_o = section.media) === null || _o === void 0 ? void 0 : _o[layout]) === null || _p === void 0 ? void 0 : _p.url) !== null && _q !== void 0 ? _q : '', className: `image-background-${section.id}` })) }, `section-background-wrapper-${section.id}`) })), children] }), (0, jsx_runtime_1.jsx)(style_1.default, { id: id, children: `\r\n      ${(0, sdk_1.getLayoutStyles)(layouts, layoutValues, ([height, color, media]) => {\n                    var _a;\n                    return (`\r\n         .section-${section.id} {\r\n            height: ${getSectionHeight(height)};\r\n            position: relative;\r\n            background-color: ${color_1.CntrlColor.parse(color !== null && color !== void 0 ? color : DEFAULT_COLOR).fmt('rgba')};\r\n         }\r\n         .section-background-overlay-${section.id} {\r\n            height: ${getSectionHeight(height)};\r\n            width: 100%;\r\n            position: relative;\r\n            overflow: clip;\r\n         }\r\n         .section-background-wrapper-${section.id} {\r\n            transform: ${(media === null || media === void 0 ? void 0 : media.position) === 'fixed' ? 'translateY(-100vh)' : 'unset'};\r\n            position: relative;\r\n            height: ${(media === null || media === void 0 ? void 0 : media.position) === 'fixed' ? `calc(${getSectionHeight(height)} + 200vh)` : getSectionHeight(height)};\r\n            width: 100%;\r\n         }\r\n         .video-background-${section.id} {\r\n            object-fit: ${(_a = media === null || media === void 0 ? void 0 : media.size) !== null && _a !== void 0 ? _a : 'cover'};\r\n            width: ${(media === null || media === void 0 ? void 0 : media.offsetX) === null || (media === null || media === void 0 ? void 0 : media.size) === 'cover' ? '100%' : 'auto'};\r\n            height: ${(media === null || media === void 0 ? void 0 : media.position) === 'fixed' ? '100vh' : '100%'};\r\n            position: ${(media === null || media === void 0 ? void 0 : media.position) === 'fixed' ? 'sticky' : 'relative'};\r\n            top: ${(media === null || media === void 0 ? void 0 : media.position) === 'fixed' ? '100vh' : 'unset'};\r\n            ${media && media.offsetX !== null && media.size !== 'cover' ? `margin-left: ${media.offsetX * 100}vw;` : ''}\r\n         }\r\n         .image-background-${section.id} {\r\n            object-fit: ${media === null || media === void 0 ? void 0 : media.size};\r\n            width: ${(media === null || media === void 0 ? void 0 : media.offsetX) === null ? '100%' : 'auto'};\r\n            height: ${(media === null || media === void 0 ? void 0 : media.position) === 'fixed' ? '100vh' : '100%'};\r\n            position: ${(media === null || media === void 0 ? void 0 : media.position) === 'fixed' ? 'sticky' : 'relative'};\r\n            top: ${(media === null || media === void 0 ? void 0 : media.position) === 'fixed' ? '100vh' : 'unset'};\r\n            ${media && media.offsetX !== null && media.size !== 'cover' ? `margin-left: ${media.offsetX * 100}vw;` : ''}\r\n         }\r\n        `);\n                })}\r\n      ${getSectionVisibilityStyles()}\r\n    ` })] }));\n};\nexports.Section = Section;\nfunction getSectionHeight(heightData) {\n    const { units, vhUnits, mode } = heightData;\n    if (mode === sdk_1.SectionHeightMode.ViewportHeightUnits)\n        return `${vhUnits}vh`;\n    if (mode === sdk_1.SectionHeightMode.ControlUnits)\n        return `${units * 100}vw`;\n    return '0';\n}\nexports.getSectionHeight = getSectionHeight;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/Section/Section.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/Section/useSectionHeightMap.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/Section/useSectionHeightMap.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getSectionHeightMap = exports.useSectionHeightData = void 0;\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst CntrlContext_1 = __webpack_require__(/*! ../../provider/CntrlContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/CntrlContext.js\");\nconst Section_1 = __webpack_require__(/*! ./Section */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/Section/Section.js\");\nconst useSectionHeightData = (sectionId) => {\n    const sectionHeightContext = (0, react_1.useContext)(CntrlContext_1.CntrlContext);\n    const layouts = sectionHeightContext.layouts;\n    const sectionHeightData = sectionHeightContext.getSectionHeightData(sectionId);\n    return sectionHeightData ? getSectionHeightMap(sectionHeightData) : getDefaultHeightData(layouts);\n};\nexports.useSectionHeightData = useSectionHeightData;\nfunction getSectionHeightMap(sectionHeight) {\n    return Object.fromEntries(Object.entries(sectionHeight).map(([sectionId, heightData]) => [sectionId, (0, Section_1.getSectionHeight)(heightData)]));\n}\nexports.getSectionHeightMap = getSectionHeightMap;\nfunction getDefaultHeightData(layouts) {\n    return layouts.reduce((acc, layout) => (Object.assign(Object.assign({}, acc), { [layout.id]: '0' })), {});\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9TZWN0aW9uL3VzZVNlY3Rpb25IZWlnaHRNYXAuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCLEdBQUcsNEJBQTRCO0FBQzFELGdCQUFnQixtQkFBTyxDQUFDLDRDQUFPO0FBQy9CLHVCQUF1QixtQkFBTyxDQUFDLHVHQUE2QjtBQUM1RCxrQkFBa0IsbUJBQU8sQ0FBQywwRkFBVztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0EsMEVBQTBFLFVBQVUsa0JBQWtCLE1BQU07QUFDNUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbnRybC1zaXRlL3Nkay1uZXh0anMvbGliL2NvbXBvbmVudHMvU2VjdGlvbi91c2VTZWN0aW9uSGVpZ2h0TWFwLmpzPzAzYTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldFNlY3Rpb25IZWlnaHRNYXAgPSBleHBvcnRzLnVzZVNlY3Rpb25IZWlnaHREYXRhID0gdm9pZCAwO1xuY29uc3QgcmVhY3RfMSA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmNvbnN0IENudHJsQ29udGV4dF8xID0gcmVxdWlyZShcIi4uLy4uL3Byb3ZpZGVyL0NudHJsQ29udGV4dFwiKTtcbmNvbnN0IFNlY3Rpb25fMSA9IHJlcXVpcmUoXCIuL1NlY3Rpb25cIik7XG5jb25zdCB1c2VTZWN0aW9uSGVpZ2h0RGF0YSA9IChzZWN0aW9uSWQpID0+IHtcbiAgICBjb25zdCBzZWN0aW9uSGVpZ2h0Q29udGV4dCA9ICgwLCByZWFjdF8xLnVzZUNvbnRleHQpKENudHJsQ29udGV4dF8xLkNudHJsQ29udGV4dCk7XG4gICAgY29uc3QgbGF5b3V0cyA9IHNlY3Rpb25IZWlnaHRDb250ZXh0LmxheW91dHM7XG4gICAgY29uc3Qgc2VjdGlvbkhlaWdodERhdGEgPSBzZWN0aW9uSGVpZ2h0Q29udGV4dC5nZXRTZWN0aW9uSGVpZ2h0RGF0YShzZWN0aW9uSWQpO1xuICAgIHJldHVybiBzZWN0aW9uSGVpZ2h0RGF0YSA/IGdldFNlY3Rpb25IZWlnaHRNYXAoc2VjdGlvbkhlaWdodERhdGEpIDogZ2V0RGVmYXVsdEhlaWdodERhdGEobGF5b3V0cyk7XG59O1xuZXhwb3J0cy51c2VTZWN0aW9uSGVpZ2h0RGF0YSA9IHVzZVNlY3Rpb25IZWlnaHREYXRhO1xuZnVuY3Rpb24gZ2V0U2VjdGlvbkhlaWdodE1hcChzZWN0aW9uSGVpZ2h0KSB7XG4gICAgcmV0dXJuIE9iamVjdC5mcm9tRW50cmllcyhPYmplY3QuZW50cmllcyhzZWN0aW9uSGVpZ2h0KS5tYXAoKFtzZWN0aW9uSWQsIGhlaWdodERhdGFdKSA9PiBbc2VjdGlvbklkLCAoMCwgU2VjdGlvbl8xLmdldFNlY3Rpb25IZWlnaHQpKGhlaWdodERhdGEpXSkpO1xufVxuZXhwb3J0cy5nZXRTZWN0aW9uSGVpZ2h0TWFwID0gZ2V0U2VjdGlvbkhlaWdodE1hcDtcbmZ1bmN0aW9uIGdldERlZmF1bHRIZWlnaHREYXRhKGxheW91dHMpIHtcbiAgICByZXR1cm4gbGF5b3V0cy5yZWR1Y2UoKGFjYywgbGF5b3V0KSA9PiAoT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBhY2MpLCB7IFtsYXlvdXQuaWRdOiAnMCcgfSkpLCB7fSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/Section/useSectionHeightMap.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/CodeEmbedItem/CodeEmbedItem.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/CodeEmbedItem/CodeEmbedItem.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CodeEmbedItem = void 0;\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst useCntrlContext_1 = __webpack_require__(/*! ../../../provider/useCntrlContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/useCntrlContext.js\");\nconst style_1 = __importDefault(__webpack_require__(/*! styled-jsx/style */ \"./node_modules/next/node_modules/styled-jsx/style.js\"));\nconst useRegisterResize_1 = __webpack_require__(/*! ../../../common/useRegisterResize */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useRegisterResize.js\");\nconst useItemAngle_1 = __webpack_require__(/*! ../useItemAngle */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemAngle.js\");\nconst LinkWrapper_1 = __webpack_require__(/*! ../LinkWrapper */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/LinkWrapper.js\");\nconst useCodeEmbedItem_1 = __webpack_require__(/*! ./useCodeEmbedItem */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/CodeEmbedItem/useCodeEmbedItem.js\");\nconst stylesMap = {\n    [sdk_1.AreaAnchor.TopLeft]: {},\n    [sdk_1.AreaAnchor.TopCenter]: { justifyContent: 'center' },\n    [sdk_1.AreaAnchor.TopRight]: { justifyContent: 'flex-end' },\n    [sdk_1.AreaAnchor.MiddleLeft]: { alignItems: 'center' },\n    [sdk_1.AreaAnchor.MiddleCenter]: { justifyContent: 'center', alignItems: 'center' },\n    [sdk_1.AreaAnchor.MiddleRight]: { justifyContent: 'flex-end', alignItems: 'center' },\n    [sdk_1.AreaAnchor.BottomLeft]: { alignItems: 'flex-end' },\n    [sdk_1.AreaAnchor.BottomCenter]: { justifyContent: 'center', alignItems: 'flex-end' },\n    [sdk_1.AreaAnchor.BottomRight]: { justifyContent: 'flex-end', alignItems: 'flex-end' }\n};\nconst CodeEmbedItem = ({ item, sectionId, onResize, interactionCtrl, onVisibilityChange }) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    const id = (0, react_1.useId)();\n    const { layouts, fonts } = (0, useCntrlContext_1.useCntrlContext)();\n    const fontGoogleTags = fonts === null || fonts === void 0 ? void 0 : fonts.google;\n    const fontAdobeTags = fonts === null || fonts === void 0 ? void 0 : fonts.adobe;\n    const fontCustomTags = new sdk_1.FontFaceGenerator((_a = fonts === null || fonts === void 0 ? void 0 : fonts.custom) !== null && _a !== void 0 ? _a : []).generate();\n    const { anchor, blur: itemBlur, opacity: itemOpacity } = (0, useCodeEmbedItem_1.useCodeEmbedItem)(item, sectionId);\n    const itemAngle = (0, useItemAngle_1.useItemAngle)(item, sectionId);\n    const { html } = item.commonParams;\n    const [ref, setRef] = (0, react_1.useState)(null);\n    (0, useRegisterResize_1.useRegisterResize)(ref, onResize);\n    const pos = stylesMap[anchor];\n    const layoutValues = [item.area, item.layoutParams];\n    const stateParams = interactionCtrl === null || interactionCtrl === void 0 ? void 0 : interactionCtrl.getState(['angle', 'blur', 'opacity']);\n    const blur = ((_c = (_b = stateParams === null || stateParams === void 0 ? void 0 : stateParams.styles) === null || _b === void 0 ? void 0 : _b.blur) !== null && _c !== void 0 ? _c : itemBlur);\n    const opacity = (_e = (_d = stateParams === null || stateParams === void 0 ? void 0 : stateParams.styles) === null || _d === void 0 ? void 0 : _d.opacity) !== null && _e !== void 0 ? _e : itemOpacity;\n    const angle = (_g = (_f = stateParams === null || stateParams === void 0 ? void 0 : stateParams.styles) === null || _f === void 0 ? void 0 : _f.angle) !== null && _g !== void 0 ? _g : itemAngle;\n    (0, react_1.useEffect)(() => {\n        if (!ref)\n            return;\n        const scripts = ref.querySelectorAll('script');\n        for (const script of scripts) {\n            const newScript = document.createElement('script');\n            for (const attr of script.getAttributeNames()) {\n                newScript.setAttribute(attr, script.getAttribute(attr));\n            }\n            newScript.textContent = script.textContent;\n            script.parentNode.removeChild(script);\n            ref.appendChild(newScript);\n        }\n    }, [item.commonParams.html]);\n    (0, react_1.useEffect)(() => {\n        if (!ref)\n            return;\n        const iframe = ref.querySelector(`[data-embed=\"${item.id}\"]`);\n        if (!iframe)\n            return;\n        const htmlWithStyles = `\r\n      ${fontGoogleTags}\r\n      ${fontAdobeTags}\r\n      <style>\r\n      ${fontCustomTags}\r\n        html, body {\r\n          height: 100%;\r\n          margin: 0 !important;\r\n          padding: 0 !important;\r\n        }\r\n      </style>\r\n      ${item.commonParams.html}\r\n    `;\n        iframe.srcdoc = htmlWithStyles;\n    }, [item.commonParams.html, item.commonParams.iframe, ref]);\n    const isInteractive = opacity !== 0;\n    (0, react_1.useEffect)(() => {\n        onVisibilityChange === null || onVisibilityChange === void 0 ? void 0 : onVisibilityChange(isInteractive);\n    }, [isInteractive, onVisibilityChange]);\n    return ((0, jsx_runtime_1.jsxs)(LinkWrapper_1.LinkWrapper, { url: (_h = item.link) === null || _h === void 0 ? void 0 : _h.url, target: (_j = item.link) === null || _j === void 0 ? void 0 : _j.target, children: [(0, jsx_runtime_1.jsx)(\"div\", { className: `embed-wrapper-${item.id}`, style: Object.assign(Object.assign(Object.assign(Object.assign({}, (angle !== undefined ? { transform: `rotate(${angle}deg) translateZ(0)` } : {})), (blur !== undefined ? { filter: `blur(${blur * 100}vw)` } : {})), (opacity !== undefined ? { opacity } : {})), { transition: (_k = stateParams === null || stateParams === void 0 ? void 0 : stateParams.transition) !== null && _k !== void 0 ? _k : 'none' }), ref: setRef, children: item.commonParams.iframe ? ((0, jsx_runtime_1.jsx)(\"iframe\", { \"data-embed\": item.id, className: `embed-${item.id}`, style: Object.assign(Object.assign({}, pos), { border: 'unset' }) })) : ((0, jsx_runtime_1.jsx)(\"div\", { className: `embed-${item.id}`, style: Object.assign({}, pos), dangerouslySetInnerHTML: { __html: html } })) }), (0, jsx_runtime_1.jsx)(style_1.default, { id: id, children: `\r\n      .embed-wrapper-${item.id} {\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n      .embed-${item.id} {\r\n        transform: ${item.commonParams.scale ? 'scale(var(--layout-deviation))' : 'none'};\r\n        transform-origin: top left;\r\n        z-index: 1;\r\n        border: none;\r\n      }\r\n      ${(0, sdk_1.getLayoutStyles)(layouts, layoutValues, ([area, layoutParams], exemplary) => {\n                    return (`\r\n          .embed-wrapper-${item.id} {\r\n            opacity: ${layoutParams.opacity};\r\n            transform: rotate(${area.angle}deg) translateZ(0);\r\n            filter: ${layoutParams.blur !== 0 ? `blur(${layoutParams.blur * 100}vw)` : 'unset'};\r\n          }\r\n          .embed-${item.id} {\r\n            width: ${item.commonParams.scale ? `${area.width * exemplary}px` : '100%'};\r\n            height: ${item.commonParams.scale ? `${area.height * exemplary}px` : '100%'};\r\n          }\r\n        `);\n                })}\r\n    ` })] }));\n};\nexports.CodeEmbedItem = CodeEmbedItem;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/CodeEmbedItem/CodeEmbedItem.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/CodeEmbedItem/useCodeEmbedItem.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/CodeEmbedItem/useCodeEmbedItem.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useCodeEmbedItem = void 0;\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst useLayoutContext_1 = __webpack_require__(/*! ../../useLayoutContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/useLayoutContext.js\");\nconst useKeyframeValue_1 = __webpack_require__(/*! ../../../common/useKeyframeValue */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useKeyframeValue.js\");\nfunction useCodeEmbedItem(item, sectionId) {\n    const layoutId = (0, useLayoutContext_1.useLayoutContext)();\n    const blur = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.Blur, (item, layoutId) => {\n        if (!layoutId)\n            return;\n        const layoutParams = item.layoutParams[layoutId];\n        return 'blur' in layoutParams ? layoutParams.blur : 0;\n    }, (animator, scroll, value) => value !== undefined ? animator.getBlur({ blur: value }, scroll).blur : undefined, sectionId, [layoutId]);\n    const opacity = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.Opacity, (item, layoutId) => {\n        if (!layoutId)\n            return;\n        const layoutParams = item.layoutParams[layoutId];\n        return 'opacity' in layoutParams ? layoutParams.opacity : 1;\n    }, (animator, scroll, value) => value !== undefined ? animator.getOpacity({ opacity: value }, scroll).opacity : undefined, sectionId, [layoutId]);\n    const anchor = layoutId && 'areaAnchor' in item.layoutParams[layoutId] ? item.layoutParams[layoutId].areaAnchor : sdk_1.AreaAnchor.TopLeft;\n    return { anchor, blur, opacity };\n}\nexports.useCodeEmbedItem = useCodeEmbedItem;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy9Db2RlRW1iZWRJdGVtL3VzZUNvZGVFbWJlZEl0ZW0uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLGNBQWMsbUJBQU8sQ0FBQyxxRUFBaUI7QUFDdkMsMkJBQTJCLG1CQUFPLENBQUMsd0dBQXdCO0FBQzNELDJCQUEyQixtQkFBTyxDQUFDLDhHQUFrQztBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssd0VBQXdFLGFBQWE7QUFDMUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssMkVBQTJFLGdCQUFnQjtBQUNoRztBQUNBLGFBQWE7QUFDYjtBQUNBLHdCQUF3QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy9Db2RlRW1iZWRJdGVtL3VzZUNvZGVFbWJlZEl0ZW0uanM/ZGQ2OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudXNlQ29kZUVtYmVkSXRlbSA9IHZvaWQgMDtcbmNvbnN0IHNka18xID0gcmVxdWlyZShcIkBjbnRybC1zaXRlL3Nka1wiKTtcbmNvbnN0IHVzZUxheW91dENvbnRleHRfMSA9IHJlcXVpcmUoXCIuLi8uLi91c2VMYXlvdXRDb250ZXh0XCIpO1xuY29uc3QgdXNlS2V5ZnJhbWVWYWx1ZV8xID0gcmVxdWlyZShcIi4uLy4uLy4uL2NvbW1vbi91c2VLZXlmcmFtZVZhbHVlXCIpO1xuZnVuY3Rpb24gdXNlQ29kZUVtYmVkSXRlbShpdGVtLCBzZWN0aW9uSWQpIHtcbiAgICBjb25zdCBsYXlvdXRJZCA9ICgwLCB1c2VMYXlvdXRDb250ZXh0XzEudXNlTGF5b3V0Q29udGV4dCkoKTtcbiAgICBjb25zdCBibHVyID0gKDAsIHVzZUtleWZyYW1lVmFsdWVfMS51c2VLZXlmcmFtZVZhbHVlKShpdGVtLCBzZGtfMS5LZXlmcmFtZVR5cGUuQmx1ciwgKGl0ZW0sIGxheW91dElkKSA9PiB7XG4gICAgICAgIGlmICghbGF5b3V0SWQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IGxheW91dFBhcmFtcyA9IGl0ZW0ubGF5b3V0UGFyYW1zW2xheW91dElkXTtcbiAgICAgICAgcmV0dXJuICdibHVyJyBpbiBsYXlvdXRQYXJhbXMgPyBsYXlvdXRQYXJhbXMuYmx1ciA6IDA7XG4gICAgfSwgKGFuaW1hdG9yLCBzY3JvbGwsIHZhbHVlKSA9PiB2YWx1ZSAhPT0gdW5kZWZpbmVkID8gYW5pbWF0b3IuZ2V0Qmx1cih7IGJsdXI6IHZhbHVlIH0sIHNjcm9sbCkuYmx1ciA6IHVuZGVmaW5lZCwgc2VjdGlvbklkLCBbbGF5b3V0SWRdKTtcbiAgICBjb25zdCBvcGFjaXR5ID0gKDAsIHVzZUtleWZyYW1lVmFsdWVfMS51c2VLZXlmcmFtZVZhbHVlKShpdGVtLCBzZGtfMS5LZXlmcmFtZVR5cGUuT3BhY2l0eSwgKGl0ZW0sIGxheW91dElkKSA9PiB7XG4gICAgICAgIGlmICghbGF5b3V0SWQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IGxheW91dFBhcmFtcyA9IGl0ZW0ubGF5b3V0UGFyYW1zW2xheW91dElkXTtcbiAgICAgICAgcmV0dXJuICdvcGFjaXR5JyBpbiBsYXlvdXRQYXJhbXMgPyBsYXlvdXRQYXJhbXMub3BhY2l0eSA6IDE7XG4gICAgfSwgKGFuaW1hdG9yLCBzY3JvbGwsIHZhbHVlKSA9PiB2YWx1ZSAhPT0gdW5kZWZpbmVkID8gYW5pbWF0b3IuZ2V0T3BhY2l0eSh7IG9wYWNpdHk6IHZhbHVlIH0sIHNjcm9sbCkub3BhY2l0eSA6IHVuZGVmaW5lZCwgc2VjdGlvbklkLCBbbGF5b3V0SWRdKTtcbiAgICBjb25zdCBhbmNob3IgPSBsYXlvdXRJZCAmJiAnYXJlYUFuY2hvcicgaW4gaXRlbS5sYXlvdXRQYXJhbXNbbGF5b3V0SWRdID8gaXRlbS5sYXlvdXRQYXJhbXNbbGF5b3V0SWRdLmFyZWFBbmNob3IgOiBzZGtfMS5BcmVhQW5jaG9yLlRvcExlZnQ7XG4gICAgcmV0dXJuIHsgYW5jaG9yLCBibHVyLCBvcGFjaXR5IH07XG59XG5leHBvcnRzLnVzZUNvZGVFbWJlZEl0ZW0gPSB1c2VDb2RlRW1iZWRJdGVtO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/CodeEmbedItem/useCodeEmbedItem.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/ComponentItem/ComponentItem.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/ComponentItem/ComponentItem.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ComponentItem = void 0;\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nconst style_1 = __importDefault(__webpack_require__(/*! styled-jsx/style */ \"./node_modules/next/node_modules/styled-jsx/style.js\"));\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst useCntrlContext_1 = __webpack_require__(/*! ../../../provider/useCntrlContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/useCntrlContext.js\");\nconst useComponentItem_1 = __webpack_require__(/*! ./useComponentItem */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/ComponentItem/useComponentItem.js\");\nconst useItemAngle_1 = __webpack_require__(/*! ../useItemAngle */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemAngle.js\");\nconst useRegisterResize_1 = __webpack_require__(/*! ../../../common/useRegisterResize */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useRegisterResize.js\");\nconst getStyleFromItemStateAndParams_1 = __webpack_require__(/*! ../../../utils/getStyleFromItemStateAndParams */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getStyleFromItemStateAndParams.js\");\nconst useLayoutContext_1 = __webpack_require__(/*! ../../useLayoutContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/useLayoutContext.js\");\nconst ComponentItem = ({ item, sectionId, onResize, interactionCtrl }) => {\n    var _a, _b, _c, _d;\n    const sdk = (0, useCntrlContext_1.useCntrlContext)();\n    const { layouts } = sdk;\n    const itemAngle = (0, useItemAngle_1.useItemAngle)(item, sectionId);\n    const layout = (0, useLayoutContext_1.useLayoutContext)();\n    const layoutValues = [item.area, item.layoutParams];\n    const component = sdk.getComponent(item.commonParams.componentId);\n    const [ref, setRef] = (0, react_1.useState)(null);\n    const { opacity: itemOpacity, blur: itemBlur } = (0, useComponentItem_1.useComponentItem)(item, sectionId);\n    (0, useRegisterResize_1.useRegisterResize)(ref, onResize);\n    const stateParams = interactionCtrl === null || interactionCtrl === void 0 ? void 0 : interactionCtrl.getState(['opacity', 'angle', 'blur']);\n    const angle = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)((_a = stateParams === null || stateParams === void 0 ? void 0 : stateParams.styles) === null || _a === void 0 ? void 0 : _a.angle, itemAngle);\n    const opacity = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)((_b = stateParams === null || stateParams === void 0 ? void 0 : stateParams.styles) === null || _b === void 0 ? void 0 : _b.opacity, itemOpacity);\n    const blur = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)((_c = stateParams === null || stateParams === void 0 ? void 0 : stateParams.styles) === null || _c === void 0 ? void 0 : _c.blur, itemBlur);\n    const Element = component ? component.element : undefined;\n    const parameters = layout ? item.layoutParams[layout].parameters : undefined;\n    return ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(\"div\", { className: `custom-component-${item.id}`, ref: setRef, style: Object.assign(Object.assign(Object.assign(Object.assign({}, (opacity !== undefined ? { opacity } : {})), (angle !== undefined ? { transform: `rotate(${angle}deg) translateZ(0)` } : {})), (blur !== undefined ? { filter: `blur(${blur * 100}vw)` } : {})), { transition: (_d = stateParams === null || stateParams === void 0 ? void 0 : stateParams.transition) !== null && _d !== void 0 ? _d : 'none' }), children: parameters && Element && ((0, jsx_runtime_1.jsx)(Element, Object.assign({ content: item.commonParams.content }, parameters))) }), (0, jsx_runtime_1.jsx)(style_1.default, { id: item.id, children: `\r\n      .custom-component-${item.id} {\r\n        width: 100%;\r\n        height: 100%;\r\n        pointer-events: auto;\r\n      }\r\n      ${(0, sdk_1.getLayoutStyles)(layouts, layoutValues, ([area, layoutParams]) => {\n                    return (`\r\n          .custom-component-${item.id} {\r\n            transform: rotate(${area.angle}deg) translateZ(0);\r\n            opacity: ${layoutParams.opacity};\r\n            filter: blur(${layoutParams.blur}vw);\r\n          }\r\n        `);\n                })}` })] }));\n};\nexports.ComponentItem = ComponentItem;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy9Db21wb25lbnRJdGVtL0NvbXBvbmVudEl0ZW0uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckIsc0JBQXNCLG1CQUFPLENBQUMsOERBQW1CO0FBQ2pELGdDQUFnQyxtQkFBTyxDQUFDLDhFQUFrQjtBQUMxRCxjQUFjLG1CQUFPLENBQUMscUVBQWlCO0FBQ3ZDLGdCQUFnQixtQkFBTyxDQUFDLDRDQUFPO0FBQy9CLDBCQUEwQixtQkFBTyxDQUFDLGdIQUFtQztBQUNyRSwyQkFBMkIsbUJBQU8sQ0FBQyx3SEFBb0I7QUFDdkQsdUJBQXVCLG1CQUFPLENBQUMsbUdBQWlCO0FBQ2hELDRCQUE0QixtQkFBTyxDQUFDLGdIQUFtQztBQUN2RSx5Q0FBeUMsbUJBQU8sQ0FBQyx3SUFBK0M7QUFDaEcsMkJBQTJCLG1CQUFPLENBQUMsd0dBQXdCO0FBQzNELHlCQUF5Qiw0Q0FBNEM7QUFDckU7QUFDQTtBQUNBLFlBQVksVUFBVTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSx1Q0FBdUM7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQsMkNBQTJDLCtCQUErQixRQUFRLGlGQUFpRiw2QkFBNkIsVUFBVSxJQUFJLDZCQUE2QixxQkFBcUIsTUFBTSxzQkFBc0IsSUFBSSw0QkFBNEIsZ0JBQWdCLFdBQVcsT0FBTyxJQUFJLE1BQU0sNklBQTZJLHVGQUF1RixvQ0FBb0MsaUJBQWlCLDZDQUE2QztBQUM1dUIsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0EsOEJBQThCO0FBQzlCLGdDQUFnQyxXQUFXO0FBQzNDLHVCQUF1QjtBQUN2QiwyQkFBMkIsa0JBQWtCO0FBQzdDO0FBQ0E7QUFDQSxpQkFBaUIsRUFBRSxHQUFHLElBQUk7QUFDMUI7QUFDQSxxQkFBcUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbnRybC1zaXRlL3Nkay1uZXh0anMvbGliL2NvbXBvbmVudHMvaXRlbXMvQ29tcG9uZW50SXRlbS9Db21wb25lbnRJdGVtLmpzP2M0YTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbXBvbmVudEl0ZW0gPSB2b2lkIDA7XG5jb25zdCBqc3hfcnVudGltZV8xID0gcmVxdWlyZShcInJlYWN0L2pzeC1ydW50aW1lXCIpO1xuY29uc3Qgc3R5bGVfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwic3R5bGVkLWpzeC9zdHlsZVwiKSk7XG5jb25zdCBzZGtfMSA9IHJlcXVpcmUoXCJAY250cmwtc2l0ZS9zZGtcIik7XG5jb25zdCByZWFjdF8xID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgdXNlQ250cmxDb250ZXh0XzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vcHJvdmlkZXIvdXNlQ250cmxDb250ZXh0XCIpO1xuY29uc3QgdXNlQ29tcG9uZW50SXRlbV8xID0gcmVxdWlyZShcIi4vdXNlQ29tcG9uZW50SXRlbVwiKTtcbmNvbnN0IHVzZUl0ZW1BbmdsZV8xID0gcmVxdWlyZShcIi4uL3VzZUl0ZW1BbmdsZVwiKTtcbmNvbnN0IHVzZVJlZ2lzdGVyUmVzaXplXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vY29tbW9uL3VzZVJlZ2lzdGVyUmVzaXplXCIpO1xuY29uc3QgZ2V0U3R5bGVGcm9tSXRlbVN0YXRlQW5kUGFyYW1zXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vdXRpbHMvZ2V0U3R5bGVGcm9tSXRlbVN0YXRlQW5kUGFyYW1zXCIpO1xuY29uc3QgdXNlTGF5b3V0Q29udGV4dF8xID0gcmVxdWlyZShcIi4uLy4uL3VzZUxheW91dENvbnRleHRcIik7XG5jb25zdCBDb21wb25lbnRJdGVtID0gKHsgaXRlbSwgc2VjdGlvbklkLCBvblJlc2l6ZSwgaW50ZXJhY3Rpb25DdHJsIH0pID0+IHtcbiAgICB2YXIgX2EsIF9iLCBfYywgX2Q7XG4gICAgY29uc3Qgc2RrID0gKDAsIHVzZUNudHJsQ29udGV4dF8xLnVzZUNudHJsQ29udGV4dCkoKTtcbiAgICBjb25zdCB7IGxheW91dHMgfSA9IHNkaztcbiAgICBjb25zdCBpdGVtQW5nbGUgPSAoMCwgdXNlSXRlbUFuZ2xlXzEudXNlSXRlbUFuZ2xlKShpdGVtLCBzZWN0aW9uSWQpO1xuICAgIGNvbnN0IGxheW91dCA9ICgwLCB1c2VMYXlvdXRDb250ZXh0XzEudXNlTGF5b3V0Q29udGV4dCkoKTtcbiAgICBjb25zdCBsYXlvdXRWYWx1ZXMgPSBbaXRlbS5hcmVhLCBpdGVtLmxheW91dFBhcmFtc107XG4gICAgY29uc3QgY29tcG9uZW50ID0gc2RrLmdldENvbXBvbmVudChpdGVtLmNvbW1vblBhcmFtcy5jb21wb25lbnRJZCk7XG4gICAgY29uc3QgW3JlZiwgc2V0UmVmXSA9ICgwLCByZWFjdF8xLnVzZVN0YXRlKShudWxsKTtcbiAgICBjb25zdCB7IG9wYWNpdHk6IGl0ZW1PcGFjaXR5LCBibHVyOiBpdGVtQmx1ciB9ID0gKDAsIHVzZUNvbXBvbmVudEl0ZW1fMS51c2VDb21wb25lbnRJdGVtKShpdGVtLCBzZWN0aW9uSWQpO1xuICAgICgwLCB1c2VSZWdpc3RlclJlc2l6ZV8xLnVzZVJlZ2lzdGVyUmVzaXplKShyZWYsIG9uUmVzaXplKTtcbiAgICBjb25zdCBzdGF0ZVBhcmFtcyA9IGludGVyYWN0aW9uQ3RybCA9PT0gbnVsbCB8fCBpbnRlcmFjdGlvbkN0cmwgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGludGVyYWN0aW9uQ3RybC5nZXRTdGF0ZShbJ29wYWNpdHknLCAnYW5nbGUnLCAnYmx1ciddKTtcbiAgICBjb25zdCBhbmdsZSA9ICgwLCBnZXRTdHlsZUZyb21JdGVtU3RhdGVBbmRQYXJhbXNfMS5nZXRTdHlsZUZyb21JdGVtU3RhdGVBbmRQYXJhbXMpKChfYSA9IHN0YXRlUGFyYW1zID09PSBudWxsIHx8IHN0YXRlUGFyYW1zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzdGF0ZVBhcmFtcy5zdHlsZXMpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5hbmdsZSwgaXRlbUFuZ2xlKTtcbiAgICBjb25zdCBvcGFjaXR5ID0gKDAsIGdldFN0eWxlRnJvbUl0ZW1TdGF0ZUFuZFBhcmFtc18xLmdldFN0eWxlRnJvbUl0ZW1TdGF0ZUFuZFBhcmFtcykoKF9iID0gc3RhdGVQYXJhbXMgPT09IG51bGwgfHwgc3RhdGVQYXJhbXMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHN0YXRlUGFyYW1zLnN0eWxlcykgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLm9wYWNpdHksIGl0ZW1PcGFjaXR5KTtcbiAgICBjb25zdCBibHVyID0gKDAsIGdldFN0eWxlRnJvbUl0ZW1TdGF0ZUFuZFBhcmFtc18xLmdldFN0eWxlRnJvbUl0ZW1TdGF0ZUFuZFBhcmFtcykoKF9jID0gc3RhdGVQYXJhbXMgPT09IG51bGwgfHwgc3RhdGVQYXJhbXMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHN0YXRlUGFyYW1zLnN0eWxlcykgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLmJsdXIsIGl0ZW1CbHVyKTtcbiAgICBjb25zdCBFbGVtZW50ID0gY29tcG9uZW50ID8gY29tcG9uZW50LmVsZW1lbnQgOiB1bmRlZmluZWQ7XG4gICAgY29uc3QgcGFyYW1ldGVycyA9IGxheW91dCA/IGl0ZW0ubGF5b3V0UGFyYW1zW2xheW91dF0ucGFyYW1ldGVycyA6IHVuZGVmaW5lZDtcbiAgICByZXR1cm4gKCgwLCBqc3hfcnVudGltZV8xLmpzeHMpKGpzeF9ydW50aW1lXzEuRnJhZ21lbnQsIHsgY2hpbGRyZW46IFsoMCwganN4X3J1bnRpbWVfMS5qc3gpKFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBgY3VzdG9tLWNvbXBvbmVudC0ke2l0ZW0uaWR9YCwgcmVmOiBzZXRSZWYsIHN0eWxlOiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCAob3BhY2l0eSAhPT0gdW5kZWZpbmVkID8geyBvcGFjaXR5IH0gOiB7fSkpLCAoYW5nbGUgIT09IHVuZGVmaW5lZCA/IHsgdHJhbnNmb3JtOiBgcm90YXRlKCR7YW5nbGV9ZGVnKSB0cmFuc2xhdGVaKDApYCB9IDoge30pKSwgKGJsdXIgIT09IHVuZGVmaW5lZCA/IHsgZmlsdGVyOiBgYmx1cigke2JsdXIgKiAxMDB9dncpYCB9IDoge30pKSwgeyB0cmFuc2l0aW9uOiAoX2QgPSBzdGF0ZVBhcmFtcyA9PT0gbnVsbCB8fCBzdGF0ZVBhcmFtcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogc3RhdGVQYXJhbXMudHJhbnNpdGlvbikgIT09IG51bGwgJiYgX2QgIT09IHZvaWQgMCA/IF9kIDogJ25vbmUnIH0pLCBjaGlsZHJlbjogcGFyYW1ldGVycyAmJiBFbGVtZW50ICYmICgoMCwganN4X3J1bnRpbWVfMS5qc3gpKEVsZW1lbnQsIE9iamVjdC5hc3NpZ24oeyBjb250ZW50OiBpdGVtLmNvbW1vblBhcmFtcy5jb250ZW50IH0sIHBhcmFtZXRlcnMpKSkgfSksICgwLCBqc3hfcnVudGltZV8xLmpzeCkoc3R5bGVfMS5kZWZhdWx0LCB7IGlkOiBpdGVtLmlkLCBjaGlsZHJlbjogYFxyXG4gICAgICAuY3VzdG9tLWNvbXBvbmVudC0ke2l0ZW0uaWR9IHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgcG9pbnRlci1ldmVudHM6IGF1dG87XHJcbiAgICAgIH1cclxuICAgICAgJHsoMCwgc2RrXzEuZ2V0TGF5b3V0U3R5bGVzKShsYXlvdXRzLCBsYXlvdXRWYWx1ZXMsIChbYXJlYSwgbGF5b3V0UGFyYW1zXSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKGBcclxuICAgICAgICAgIC5jdXN0b20tY29tcG9uZW50LSR7aXRlbS5pZH0ge1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgke2FyZWEuYW5nbGV9ZGVnKSB0cmFuc2xhdGVaKDApO1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAke2xheW91dFBhcmFtcy5vcGFjaXR5fTtcclxuICAgICAgICAgICAgZmlsdGVyOiBibHVyKCR7bGF5b3V0UGFyYW1zLmJsdXJ9dncpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIGApO1xuICAgICAgICAgICAgICAgIH0pfWAgfSldIH0pKTtcbn07XG5leHBvcnRzLkNvbXBvbmVudEl0ZW0gPSBDb21wb25lbnRJdGVtO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/ComponentItem/ComponentItem.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/ComponentItem/useComponentItem.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/ComponentItem/useComponentItem.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useComponentItem = void 0;\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst useKeyframeValue_1 = __webpack_require__(/*! ../../../common/useKeyframeValue */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useKeyframeValue.js\");\nconst useLayoutContext_1 = __webpack_require__(/*! ../../useLayoutContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/useLayoutContext.js\");\nfunction useComponentItem(item, sectionId) {\n    const layoutId = (0, useLayoutContext_1.useLayoutContext)();\n    const opacity = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.Opacity, (item, layoutId) => {\n        if (!layoutId)\n            return;\n        const layoutParams = item.layoutParams[layoutId];\n        return 'opacity' in layoutParams ? layoutParams.opacity : 1;\n    }, (animator, scroll, value) => value !== undefined ? animator.getOpacity({ opacity: value }, scroll).opacity : undefined, sectionId, [layoutId]);\n    const blur = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.Blur, (item, layoutId) => {\n        if (!layoutId)\n            return;\n        const layoutParams = item.layoutParams[layoutId];\n        return 'blur' in layoutParams ? layoutParams.blur : 0;\n    }, (animator, scroll, value) => value !== undefined ? animator.getBlur({ blur: value }, scroll).blur : undefined, sectionId, [layoutId]);\n    return {\n        opacity,\n        blur\n    };\n}\nexports.useComponentItem = useComponentItem;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy9Db21wb25lbnRJdGVtL3VzZUNvbXBvbmVudEl0ZW0uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLGNBQWMsbUJBQU8sQ0FBQyxxRUFBaUI7QUFDdkMsMkJBQTJCLG1CQUFPLENBQUMsOEdBQWtDO0FBQ3JFLDJCQUEyQixtQkFBTyxDQUFDLHdHQUF3QjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssMkVBQTJFLGdCQUFnQjtBQUNoRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyx3RUFBd0UsYUFBYTtBQUMxRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi9jb21wb25lbnRzL2l0ZW1zL0NvbXBvbmVudEl0ZW0vdXNlQ29tcG9uZW50SXRlbS5qcz85Yjc2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy51c2VDb21wb25lbnRJdGVtID0gdm9pZCAwO1xuY29uc3Qgc2RrXzEgPSByZXF1aXJlKFwiQGNudHJsLXNpdGUvc2RrXCIpO1xuY29uc3QgdXNlS2V5ZnJhbWVWYWx1ZV8xID0gcmVxdWlyZShcIi4uLy4uLy4uL2NvbW1vbi91c2VLZXlmcmFtZVZhbHVlXCIpO1xuY29uc3QgdXNlTGF5b3V0Q29udGV4dF8xID0gcmVxdWlyZShcIi4uLy4uL3VzZUxheW91dENvbnRleHRcIik7XG5mdW5jdGlvbiB1c2VDb21wb25lbnRJdGVtKGl0ZW0sIHNlY3Rpb25JZCkge1xuICAgIGNvbnN0IGxheW91dElkID0gKDAsIHVzZUxheW91dENvbnRleHRfMS51c2VMYXlvdXRDb250ZXh0KSgpO1xuICAgIGNvbnN0IG9wYWNpdHkgPSAoMCwgdXNlS2V5ZnJhbWVWYWx1ZV8xLnVzZUtleWZyYW1lVmFsdWUpKGl0ZW0sIHNka18xLktleWZyYW1lVHlwZS5PcGFjaXR5LCAoaXRlbSwgbGF5b3V0SWQpID0+IHtcbiAgICAgICAgaWYgKCFsYXlvdXRJZClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgbGF5b3V0UGFyYW1zID0gaXRlbS5sYXlvdXRQYXJhbXNbbGF5b3V0SWRdO1xuICAgICAgICByZXR1cm4gJ29wYWNpdHknIGluIGxheW91dFBhcmFtcyA/IGxheW91dFBhcmFtcy5vcGFjaXR5IDogMTtcbiAgICB9LCAoYW5pbWF0b3IsIHNjcm9sbCwgdmFsdWUpID0+IHZhbHVlICE9PSB1bmRlZmluZWQgPyBhbmltYXRvci5nZXRPcGFjaXR5KHsgb3BhY2l0eTogdmFsdWUgfSwgc2Nyb2xsKS5vcGFjaXR5IDogdW5kZWZpbmVkLCBzZWN0aW9uSWQsIFtsYXlvdXRJZF0pO1xuICAgIGNvbnN0IGJsdXIgPSAoMCwgdXNlS2V5ZnJhbWVWYWx1ZV8xLnVzZUtleWZyYW1lVmFsdWUpKGl0ZW0sIHNka18xLktleWZyYW1lVHlwZS5CbHVyLCAoaXRlbSwgbGF5b3V0SWQpID0+IHtcbiAgICAgICAgaWYgKCFsYXlvdXRJZClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgbGF5b3V0UGFyYW1zID0gaXRlbS5sYXlvdXRQYXJhbXNbbGF5b3V0SWRdO1xuICAgICAgICByZXR1cm4gJ2JsdXInIGluIGxheW91dFBhcmFtcyA/IGxheW91dFBhcmFtcy5ibHVyIDogMDtcbiAgICB9LCAoYW5pbWF0b3IsIHNjcm9sbCwgdmFsdWUpID0+IHZhbHVlICE9PSB1bmRlZmluZWQgPyBhbmltYXRvci5nZXRCbHVyKHsgYmx1cjogdmFsdWUgfSwgc2Nyb2xsKS5ibHVyIDogdW5kZWZpbmVkLCBzZWN0aW9uSWQsIFtsYXlvdXRJZF0pO1xuICAgIHJldHVybiB7XG4gICAgICAgIG9wYWNpdHksXG4gICAgICAgIGJsdXJcbiAgICB9O1xufVxuZXhwb3J0cy51c2VDb21wb25lbnRJdGVtID0gdXNlQ29tcG9uZW50SXRlbTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/ComponentItem/useComponentItem.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/CompoundItem/CompoundChild.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/CompoundItem/CompoundChild.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CompoundChild = void 0;\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst useCntrlContext_1 = __webpack_require__(/*! ../../../provider/useCntrlContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/useCntrlContext.js\");\nconst useLayoutContext_1 = __webpack_require__(/*! ../../useLayoutContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/useLayoutContext.js\");\nconst useExemplary_1 = __webpack_require__(/*! ../../../common/useExemplary */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useExemplary.js\");\nconst useItemScale_1 = __webpack_require__(/*! ../useItemScale */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemScale.js\");\nconst useItemInteractionCtrl_1 = __webpack_require__(/*! ../../../interactions/useItemInteractionCtrl */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/interactions/useItemInteractionCtrl.js\");\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst style_1 = __importDefault(__webpack_require__(/*! styled-jsx/style */ \"./node_modules/next/node_modules/styled-jsx/style.js\"));\nconst ScaleAnchorMap_1 = __webpack_require__(/*! ../../../utils/ScaleAnchorMap */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/ScaleAnchorMap.js\");\nconst isItemType_1 = __webpack_require__(/*! ../../../utils/isItemType */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/isItemType.js\");\nconst RichTextWrapper_1 = __webpack_require__(/*! ../RichTextWrapper */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/RichTextWrapper.js\");\nconst itemsMap_1 = __webpack_require__(/*! ../itemsMap */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/itemsMap.js\");\nconst getCompoundBoundaryStyles_1 = __webpack_require__(/*! ../../../utils/getCompoundBoundaryStyles */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getCompoundBoundaryStyles.js\");\nconst useItemTriggers_1 = __webpack_require__(/*! ../useItemTriggers */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemTriggers.js\");\nconst useSizing_1 = __webpack_require__(/*! ../useSizing */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useSizing.js\");\nconst useItemPointerEvents_1 = __webpack_require__(/*! ../useItemPointerEvents */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemPointerEvents.js\");\nconst useItemArea_1 = __webpack_require__(/*! ../useItemArea */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemArea.js\");\nconst noop = () => null;\nconst CompoundChild = ({ item, sectionId, isParentVisible = true }) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n    const id = (0, react_1.useId)();\n    const { layouts } = (0, useCntrlContext_1.useCntrlContext)();\n    const layout = (0, useLayoutContext_1.useLayoutContext)();\n    const exemplary = (0, useExemplary_1.useExemplary)();\n    const { handleVisibilityChange, allowPointerEvents } = (0, useItemPointerEvents_1.useItemPointerEvents)((_b = (_a = item.commonParams) === null || _a === void 0 ? void 0 : _a.pointerEvents) !== null && _b !== void 0 ? _b : 'when_visible', isParentVisible);\n    const itemScale = (0, useItemScale_1.useItemScale)(item, sectionId);\n    const interactionCtrl = (0, useItemInteractionCtrl_1.useItemInteractionCtrl)(item.id);\n    const triggers = (0, useItemTriggers_1.useItemTriggers)(interactionCtrl);\n    const wrapperStateProps = interactionCtrl === null || interactionCtrl === void 0 ? void 0 : interactionCtrl.getState(['top', 'left', 'width', 'height']);\n    const innerStateProps = interactionCtrl === null || interactionCtrl === void 0 ? void 0 : interactionCtrl.getState(['scale']);\n    const compoundSettings = layout && item.compoundSettings ? item.compoundSettings[layout] : undefined;\n    const { width, height, top, left } = (0, useItemArea_1.useItemArea)(item, sectionId, {\n        top: (_c = wrapperStateProps === null || wrapperStateProps === void 0 ? void 0 : wrapperStateProps.styles) === null || _c === void 0 ? void 0 : _c.top,\n        left: (_d = wrapperStateProps === null || wrapperStateProps === void 0 ? void 0 : wrapperStateProps.styles) === null || _d === void 0 ? void 0 : _d.left,\n        width: (_e = wrapperStateProps === null || wrapperStateProps === void 0 ? void 0 : wrapperStateProps.styles) === null || _e === void 0 ? void 0 : _e.width,\n        height: (_f = wrapperStateProps === null || wrapperStateProps === void 0 ? void 0 : wrapperStateProps.styles) === null || _f === void 0 ? void 0 : _f.height\n    });\n    const isInitialRef = (0, react_1.useRef)(true);\n    const sizingAxis = (0, useSizing_1.useSizing)(item);\n    const ItemComponent = itemsMap_1.itemsMap[item.type] || noop;\n    (0, react_1.useEffect)(() => {\n        isInitialRef.current = false;\n    }, []);\n    const transformOrigin = compoundSettings ? ScaleAnchorMap_1.ScaleAnchorMap[compoundSettings.positionAnchor] : 'top left';\n    const isRichText = (0, isItemType_1.isItemType)(item, sdk_1.ArticleItemType.RichText);\n    const scale = (_h = (_g = innerStateProps === null || innerStateProps === void 0 ? void 0 : innerStateProps.styles) === null || _g === void 0 ? void 0 : _g.scale) !== null && _h !== void 0 ? _h : itemScale;\n    const hasClickTriggers = (_j = interactionCtrl === null || interactionCtrl === void 0 ? void 0 : interactionCtrl.getHasTrigger(item.id, 'click')) !== null && _j !== void 0 ? _j : false;\n    if (!item.compoundSettings)\n        return null;\n    const layoutValues = [item.area, item.hidden, item.compoundSettings];\n    if (item.layoutParams) {\n        layoutValues.push(item.layoutParams);\n    }\n    return ((0, jsx_runtime_1.jsxs)(\"div\", Object.assign({ className: `item-${item.id}`, onTransitionEnd: (e) => {\n            var _a;\n            e.stopPropagation();\n            (_a = interactionCtrl === null || interactionCtrl === void 0 ? void 0 : interactionCtrl.handleTransitionEnd) === null || _a === void 0 ? void 0 : _a.call(interactionCtrl, e.propertyName);\n        }, style: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, (top !== undefined && compoundSettings ? { top: (0, getCompoundBoundaryStyles_1.getCompoundTop)(compoundSettings, top) } : {})), (left !== undefined && compoundSettings ? { left: (0, getCompoundBoundaryStyles_1.getCompoundLeft)(compoundSettings, left) } : {})), (width !== undefined && compoundSettings\n            ? { width: `${sizingAxis.x === 'manual'\n                    ? (0, getCompoundBoundaryStyles_1.getCompoundWidth)(compoundSettings, width, isRichText, exemplary)\n                    : 'max-content'}` }\n            : {})), (height !== undefined && compoundSettings\n            ? { height: `${sizingAxis.y === 'manual'\n                    ? (0, getCompoundBoundaryStyles_1.getCompoundHeight)(compoundSettings, height)\n                    : 'unset'}` }\n            : {})), (compoundSettings ? { transform: `${(0, getCompoundBoundaryStyles_1.getCompoundTransform)(compoundSettings)}` } : {})), { transition: (_k = wrapperStateProps === null || wrapperStateProps === void 0 ? void 0 : wrapperStateProps.transition) !== null && _k !== void 0 ? _k : 'none', cursor: hasClickTriggers ? 'pointer' : 'unset', pointerEvents: allowPointerEvents ? 'auto' : 'none' }) }, triggers, { children: [(0, jsx_runtime_1.jsx)(\"div\", { className: `item-${item.id}-inner`, style: Object.assign({ transition: (_l = innerStateProps === null || innerStateProps === void 0 ? void 0 : innerStateProps.transition) !== null && _l !== void 0 ? _l : 'none' }, (scale !== undefined ? { transform: `scale(${scale})` } : {})), children: (0, jsx_runtime_1.jsx)(RichTextWrapper_1.RichTextWrapper, { isRichText: isRichText, transformOrigin: transformOrigin, children: (0, jsx_runtime_1.jsx)(ItemComponent, { item: item, sectionId: sectionId, interactionCtrl: interactionCtrl, onVisibilityChange: handleVisibilityChange, isInCompound: true }) }) }), (0, jsx_runtime_1.jsx)(style_1.default, { id: id, children: `\r\n        ${(0, sdk_1.getLayoutStyles)(layouts, layoutValues, ([area, hidden, compoundSettings, layoutParams]) => {\n                    const sizingAxis = (0, useSizing_1.parseSizing)(layoutParams.sizing);\n                    const scaleAnchor = area.scaleAnchor;\n                    return (`\r\n            .item-${item.id}-inner {\r\n              width: 100%;\r\n              height: 100%;\r\n              transform-origin: ${ScaleAnchorMap_1.ScaleAnchorMap[scaleAnchor]};\r\n              transform: scale(${area.scale});\r\n            }\r\n            .item-${item.id} {\r\n              position: absolute;\r\n              top: ${(0, getCompoundBoundaryStyles_1.getCompoundTop)(compoundSettings, area.top)};\r\n              left: ${(0, getCompoundBoundaryStyles_1.getCompoundLeft)(compoundSettings, area.left)};\r\n              transition: opacity 0.2s linear 0.1s;\r\n              display: ${hidden ? 'none' : 'block'};\r\n              width: ${sizingAxis.x === 'manual'\n                        ? `${(0, getCompoundBoundaryStyles_1.getCompoundWidth)(compoundSettings, area.width, isRichText)}`\n                        : 'max-content'};\r\n              height: ${sizingAxis.y === 'manual' ? `${(0, getCompoundBoundaryStyles_1.getCompoundHeight)(compoundSettings, area.height)}` : 'unset'};\r\n              transform: ${(0, getCompoundBoundaryStyles_1.getCompoundTransform)(compoundSettings)};\r\n              z-index: ${area.zIndex};\r\n            }\r\n          `);\n                })}\r\n      ` })] })));\n};\nexports.CompoundChild = CompoundChild;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/CompoundItem/CompoundChild.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/CompoundItem/CompoundItem.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/CompoundItem/CompoundItem.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CompoundItem = void 0;\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst useItemAngle_1 = __webpack_require__(/*! ../useItemAngle */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemAngle.js\");\nconst useCntrlContext_1 = __webpack_require__(/*! ../../../provider/useCntrlContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/useCntrlContext.js\");\nconst useRegisterResize_1 = __webpack_require__(/*! ../../../common/useRegisterResize */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useRegisterResize.js\");\nconst getStyleFromItemStateAndParams_1 = __webpack_require__(/*! ../../../utils/getStyleFromItemStateAndParams */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getStyleFromItemStateAndParams.js\");\nconst LinkWrapper_1 = __webpack_require__(/*! ../LinkWrapper */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/LinkWrapper.js\");\nconst style_1 = __importDefault(__webpack_require__(/*! styled-jsx/style */ \"./node_modules/next/node_modules/styled-jsx/style.js\"));\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst CompoundChild_1 = __webpack_require__(/*! ./CompoundChild */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/CompoundItem/CompoundChild.js\");\nconst useCompoundItem_1 = __webpack_require__(/*! ./useCompoundItem */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/CompoundItem/useCompoundItem.js\");\nconst CompoundItem = ({ item, sectionId, onResize, interactionCtrl, onVisibilityChange }) => {\n    var _a, _b, _c, _d, _e;\n    const id = (0, react_1.useId)();\n    const { items } = item;\n    const itemAngle = (0, useItemAngle_1.useItemAngle)(item, sectionId);\n    const { layouts } = (0, useCntrlContext_1.useCntrlContext)();\n    const { opacity: itemOpacity } = (0, useCompoundItem_1.useCompoundItem)(item, sectionId);\n    const layoutValues = [item.area, item.layoutParams];\n    const [ref, setRef] = (0, react_1.useState)(null);\n    (0, useRegisterResize_1.useRegisterResize)(ref, onResize);\n    const stateParams = interactionCtrl === null || interactionCtrl === void 0 ? void 0 : interactionCtrl.getState(['opacity', 'angle']);\n    const angle = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)((_a = stateParams === null || stateParams === void 0 ? void 0 : stateParams.styles) === null || _a === void 0 ? void 0 : _a.angle, itemAngle);\n    const opacity = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)((_b = stateParams === null || stateParams === void 0 ? void 0 : stateParams.styles) === null || _b === void 0 ? void 0 : _b.opacity, itemOpacity);\n    const isInteractive = opacity !== 0 && opacity !== undefined;\n    (0, react_1.useEffect)(() => {\n        onVisibilityChange === null || onVisibilityChange === void 0 ? void 0 : onVisibilityChange(isInteractive);\n    }, [isInteractive, onVisibilityChange]);\n    return ((0, jsx_runtime_1.jsx)(LinkWrapper_1.LinkWrapper, { url: (_c = item.link) === null || _c === void 0 ? void 0 : _c.url, target: (_d = item.link) === null || _d === void 0 ? void 0 : _d.target, children: (0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(\"div\", { className: `compound-${item.id}`, ref: setRef, style: Object.assign(Object.assign(Object.assign({}, (opacity !== undefined ? { opacity } : {})), (angle !== undefined ? { transform: `rotate(${angle}deg)` } : {})), { transition: (_e = stateParams === null || stateParams === void 0 ? void 0 : stateParams.transition) !== null && _e !== void 0 ? _e : 'none' }), children: items && items.map(item => ((0, jsx_runtime_1.jsx)(CompoundChild_1.CompoundChild, { item: item, sectionId: sectionId, isParentVisible: isInteractive }, item.id))) }), (0, jsx_runtime_1.jsx)(style_1.default, { id: id, children: `\r\n        .compound-${item.id} {\r\n          overflow: ${item.commonParams.overflow};\r\n          position: absolute;\r\n          width: 100%;\r\n          height: 100%;\r\n          box-sizing: border-box;\r\n        }\r\n        ${(0, sdk_1.getLayoutStyles)(layouts, layoutValues, ([area, layoutParams]) => {\n                        return (`\r\n            .compound-${item.id} {\r\n              opacity: ${layoutParams.opacity};\r\n              transform: rotate(${area.angle}deg);\r\n            }\r\n          `);\n                    })}\r\n      ` })] }) }));\n};\nexports.CompoundItem = CompoundItem;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy9Db21wb3VuZEl0ZW0vQ29tcG91bmRJdGVtLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CO0FBQ3BCLHNCQUFzQixtQkFBTyxDQUFDLDhEQUFtQjtBQUNqRCxnQkFBZ0IsbUJBQU8sQ0FBQyw0Q0FBTztBQUMvQix1QkFBdUIsbUJBQU8sQ0FBQyxtR0FBaUI7QUFDaEQsMEJBQTBCLG1CQUFPLENBQUMsZ0hBQW1DO0FBQ3JFLDRCQUE0QixtQkFBTyxDQUFDLGdIQUFtQztBQUN2RSx5Q0FBeUMsbUJBQU8sQ0FBQyx3SUFBK0M7QUFDaEcsc0JBQXNCLG1CQUFPLENBQUMsaUdBQWdCO0FBQzlDLGdDQUFnQyxtQkFBTyxDQUFDLDhFQUFrQjtBQUMxRCxjQUFjLG1CQUFPLENBQUMscUVBQWlCO0FBQ3ZDLHdCQUF3QixtQkFBTyxDQUFDLGlIQUFpQjtBQUNqRCwwQkFBMEIsbUJBQU8sQ0FBQyxxSEFBbUI7QUFDckQsd0JBQXdCLGdFQUFnRTtBQUN4RjtBQUNBO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCO0FBQ0EsWUFBWSxVQUFVO0FBQ3RCLFlBQVksdUJBQXVCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxnRUFBZ0Usd01BQXdNLDJDQUEyQyx1QkFBdUIsUUFBUSxtRUFBbUUsNkJBQTZCLFVBQVUsSUFBSSw2QkFBNkIscUJBQXFCLE1BQU0sUUFBUSxJQUFJLE1BQU0sNklBQTZJLGlHQUFpRyxrRUFBa0UsY0FBYyw2Q0FBNkM7QUFDcjNCLG9CQUFvQjtBQUNwQixzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBLHdCQUF3QjtBQUN4Qix5QkFBeUI7QUFDekIsa0NBQWtDLFdBQVc7QUFDN0M7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQixTQUFTLElBQUksR0FBRztBQUNoQjtBQUNBLG9CQUFvQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy9Db21wb3VuZEl0ZW0vQ29tcG91bmRJdGVtLmpzP2RhNmQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbXBvdW5kSXRlbSA9IHZvaWQgMDtcbmNvbnN0IGpzeF9ydW50aW1lXzEgPSByZXF1aXJlKFwicmVhY3QvanN4LXJ1bnRpbWVcIik7XG5jb25zdCByZWFjdF8xID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgdXNlSXRlbUFuZ2xlXzEgPSByZXF1aXJlKFwiLi4vdXNlSXRlbUFuZ2xlXCIpO1xuY29uc3QgdXNlQ250cmxDb250ZXh0XzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vcHJvdmlkZXIvdXNlQ250cmxDb250ZXh0XCIpO1xuY29uc3QgdXNlUmVnaXN0ZXJSZXNpemVfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi9jb21tb24vdXNlUmVnaXN0ZXJSZXNpemVcIik7XG5jb25zdCBnZXRTdHlsZUZyb21JdGVtU3RhdGVBbmRQYXJhbXNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi91dGlscy9nZXRTdHlsZUZyb21JdGVtU3RhdGVBbmRQYXJhbXNcIik7XG5jb25zdCBMaW5rV3JhcHBlcl8xID0gcmVxdWlyZShcIi4uL0xpbmtXcmFwcGVyXCIpO1xuY29uc3Qgc3R5bGVfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwic3R5bGVkLWpzeC9zdHlsZVwiKSk7XG5jb25zdCBzZGtfMSA9IHJlcXVpcmUoXCJAY250cmwtc2l0ZS9zZGtcIik7XG5jb25zdCBDb21wb3VuZENoaWxkXzEgPSByZXF1aXJlKFwiLi9Db21wb3VuZENoaWxkXCIpO1xuY29uc3QgdXNlQ29tcG91bmRJdGVtXzEgPSByZXF1aXJlKFwiLi91c2VDb21wb3VuZEl0ZW1cIik7XG5jb25zdCBDb21wb3VuZEl0ZW0gPSAoeyBpdGVtLCBzZWN0aW9uSWQsIG9uUmVzaXplLCBpbnRlcmFjdGlvbkN0cmwsIG9uVmlzaWJpbGl0eUNoYW5nZSB9KSA9PiB7XG4gICAgdmFyIF9hLCBfYiwgX2MsIF9kLCBfZTtcbiAgICBjb25zdCBpZCA9ICgwLCByZWFjdF8xLnVzZUlkKSgpO1xuICAgIGNvbnN0IHsgaXRlbXMgfSA9IGl0ZW07XG4gICAgY29uc3QgaXRlbUFuZ2xlID0gKDAsIHVzZUl0ZW1BbmdsZV8xLnVzZUl0ZW1BbmdsZSkoaXRlbSwgc2VjdGlvbklkKTtcbiAgICBjb25zdCB7IGxheW91dHMgfSA9ICgwLCB1c2VDbnRybENvbnRleHRfMS51c2VDbnRybENvbnRleHQpKCk7XG4gICAgY29uc3QgeyBvcGFjaXR5OiBpdGVtT3BhY2l0eSB9ID0gKDAsIHVzZUNvbXBvdW5kSXRlbV8xLnVzZUNvbXBvdW5kSXRlbSkoaXRlbSwgc2VjdGlvbklkKTtcbiAgICBjb25zdCBsYXlvdXRWYWx1ZXMgPSBbaXRlbS5hcmVhLCBpdGVtLmxheW91dFBhcmFtc107XG4gICAgY29uc3QgW3JlZiwgc2V0UmVmXSA9ICgwLCByZWFjdF8xLnVzZVN0YXRlKShudWxsKTtcbiAgICAoMCwgdXNlUmVnaXN0ZXJSZXNpemVfMS51c2VSZWdpc3RlclJlc2l6ZSkocmVmLCBvblJlc2l6ZSk7XG4gICAgY29uc3Qgc3RhdGVQYXJhbXMgPSBpbnRlcmFjdGlvbkN0cmwgPT09IG51bGwgfHwgaW50ZXJhY3Rpb25DdHJsID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpbnRlcmFjdGlvbkN0cmwuZ2V0U3RhdGUoWydvcGFjaXR5JywgJ2FuZ2xlJ10pO1xuICAgIGNvbnN0IGFuZ2xlID0gKDAsIGdldFN0eWxlRnJvbUl0ZW1TdGF0ZUFuZFBhcmFtc18xLmdldFN0eWxlRnJvbUl0ZW1TdGF0ZUFuZFBhcmFtcykoKF9hID0gc3RhdGVQYXJhbXMgPT09IG51bGwgfHwgc3RhdGVQYXJhbXMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHN0YXRlUGFyYW1zLnN0eWxlcykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmFuZ2xlLCBpdGVtQW5nbGUpO1xuICAgIGNvbnN0IG9wYWNpdHkgPSAoMCwgZ2V0U3R5bGVGcm9tSXRlbVN0YXRlQW5kUGFyYW1zXzEuZ2V0U3R5bGVGcm9tSXRlbVN0YXRlQW5kUGFyYW1zKSgoX2IgPSBzdGF0ZVBhcmFtcyA9PT0gbnVsbCB8fCBzdGF0ZVBhcmFtcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogc3RhdGVQYXJhbXMuc3R5bGVzKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Iub3BhY2l0eSwgaXRlbU9wYWNpdHkpO1xuICAgIGNvbnN0IGlzSW50ZXJhY3RpdmUgPSBvcGFjaXR5ICE9PSAwICYmIG9wYWNpdHkgIT09IHVuZGVmaW5lZDtcbiAgICAoMCwgcmVhY3RfMS51c2VFZmZlY3QpKCgpID0+IHtcbiAgICAgICAgb25WaXNpYmlsaXR5Q2hhbmdlID09PSBudWxsIHx8IG9uVmlzaWJpbGl0eUNoYW5nZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogb25WaXNpYmlsaXR5Q2hhbmdlKGlzSW50ZXJhY3RpdmUpO1xuICAgIH0sIFtpc0ludGVyYWN0aXZlLCBvblZpc2liaWxpdHlDaGFuZ2VdKTtcbiAgICByZXR1cm4gKCgwLCBqc3hfcnVudGltZV8xLmpzeCkoTGlua1dyYXBwZXJfMS5MaW5rV3JhcHBlciwgeyB1cmw6IChfYyA9IGl0ZW0ubGluaykgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLnVybCwgdGFyZ2V0OiAoX2QgPSBpdGVtLmxpbmspID09PSBudWxsIHx8IF9kID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZC50YXJnZXQsIGNoaWxkcmVuOiAoMCwganN4X3J1bnRpbWVfMS5qc3hzKShqc3hfcnVudGltZV8xLkZyYWdtZW50LCB7IGNoaWxkcmVuOiBbKDAsIGpzeF9ydW50aW1lXzEuanN4KShcImRpdlwiLCB7IGNsYXNzTmFtZTogYGNvbXBvdW5kLSR7aXRlbS5pZH1gLCByZWY6IHNldFJlZiwgc3R5bGU6IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCAob3BhY2l0eSAhPT0gdW5kZWZpbmVkID8geyBvcGFjaXR5IH0gOiB7fSkpLCAoYW5nbGUgIT09IHVuZGVmaW5lZCA/IHsgdHJhbnNmb3JtOiBgcm90YXRlKCR7YW5nbGV9ZGVnKWAgfSA6IHt9KSksIHsgdHJhbnNpdGlvbjogKF9lID0gc3RhdGVQYXJhbXMgPT09IG51bGwgfHwgc3RhdGVQYXJhbXMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHN0YXRlUGFyYW1zLnRyYW5zaXRpb24pICE9PSBudWxsICYmIF9lICE9PSB2b2lkIDAgPyBfZSA6ICdub25lJyB9KSwgY2hpbGRyZW46IGl0ZW1zICYmIGl0ZW1zLm1hcChpdGVtID0+ICgoMCwganN4X3J1bnRpbWVfMS5qc3gpKENvbXBvdW5kQ2hpbGRfMS5Db21wb3VuZENoaWxkLCB7IGl0ZW06IGl0ZW0sIHNlY3Rpb25JZDogc2VjdGlvbklkLCBpc1BhcmVudFZpc2libGU6IGlzSW50ZXJhY3RpdmUgfSwgaXRlbS5pZCkpKSB9KSwgKDAsIGpzeF9ydW50aW1lXzEuanN4KShzdHlsZV8xLmRlZmF1bHQsIHsgaWQ6IGlkLCBjaGlsZHJlbjogYFxyXG4gICAgICAgIC5jb21wb3VuZC0ke2l0ZW0uaWR9IHtcclxuICAgICAgICAgIG92ZXJmbG93OiAke2l0ZW0uY29tbW9uUGFyYW1zLm92ZXJmbG93fTtcclxuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgICAgICB9XHJcbiAgICAgICAgJHsoMCwgc2RrXzEuZ2V0TGF5b3V0U3R5bGVzKShsYXlvdXRzLCBsYXlvdXRWYWx1ZXMsIChbYXJlYSwgbGF5b3V0UGFyYW1zXSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChgXHJcbiAgICAgICAgICAgIC5jb21wb3VuZC0ke2l0ZW0uaWR9IHtcclxuICAgICAgICAgICAgICBvcGFjaXR5OiAke2xheW91dFBhcmFtcy5vcGFjaXR5fTtcclxuICAgICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgke2FyZWEuYW5nbGV9ZGVnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgYCk7XG4gICAgICAgICAgICAgICAgICAgIH0pfVxyXG4gICAgICBgIH0pXSB9KSB9KSk7XG59O1xuZXhwb3J0cy5Db21wb3VuZEl0ZW0gPSBDb21wb3VuZEl0ZW07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/CompoundItem/CompoundItem.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/CompoundItem/useCompoundItem.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/CompoundItem/useCompoundItem.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useCompoundItem = void 0;\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst useLayoutContext_1 = __webpack_require__(/*! ../../useLayoutContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/useLayoutContext.js\");\nconst useKeyframeValue_1 = __webpack_require__(/*! ../../../common/useKeyframeValue */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useKeyframeValue.js\");\nfunction useCompoundItem(item, sectionId) {\n    const layoutId = (0, useLayoutContext_1.useLayoutContext)();\n    const opacity = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.Opacity, (item, layoutId) => {\n        if (!layoutId)\n            return;\n        const layoutParams = item.layoutParams[layoutId];\n        return 'opacity' in layoutParams ? layoutParams.opacity : 1;\n    }, (animator, scroll, value) => value !== undefined ? animator.getOpacity({ opacity: value }, scroll).opacity : undefined, sectionId, [layoutId]);\n    return { opacity };\n}\nexports.useCompoundItem = useCompoundItem;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy9Db21wb3VuZEl0ZW0vdXNlQ29tcG91bmRJdGVtLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QjtBQUN2QixjQUFjLG1CQUFPLENBQUMscUVBQWlCO0FBQ3ZDLDJCQUEyQixtQkFBTyxDQUFDLHdHQUF3QjtBQUMzRCwyQkFBMkIsbUJBQU8sQ0FBQyw4R0FBa0M7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLDJFQUEyRSxnQkFBZ0I7QUFDaEcsYUFBYTtBQUNiO0FBQ0EsdUJBQXVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi9jb21wb25lbnRzL2l0ZW1zL0NvbXBvdW5kSXRlbS91c2VDb21wb3VuZEl0ZW0uanM/ZjUwZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudXNlQ29tcG91bmRJdGVtID0gdm9pZCAwO1xuY29uc3Qgc2RrXzEgPSByZXF1aXJlKFwiQGNudHJsLXNpdGUvc2RrXCIpO1xuY29uc3QgdXNlTGF5b3V0Q29udGV4dF8xID0gcmVxdWlyZShcIi4uLy4uL3VzZUxheW91dENvbnRleHRcIik7XG5jb25zdCB1c2VLZXlmcmFtZVZhbHVlXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vY29tbW9uL3VzZUtleWZyYW1lVmFsdWVcIik7XG5mdW5jdGlvbiB1c2VDb21wb3VuZEl0ZW0oaXRlbSwgc2VjdGlvbklkKSB7XG4gICAgY29uc3QgbGF5b3V0SWQgPSAoMCwgdXNlTGF5b3V0Q29udGV4dF8xLnVzZUxheW91dENvbnRleHQpKCk7XG4gICAgY29uc3Qgb3BhY2l0eSA9ICgwLCB1c2VLZXlmcmFtZVZhbHVlXzEudXNlS2V5ZnJhbWVWYWx1ZSkoaXRlbSwgc2RrXzEuS2V5ZnJhbWVUeXBlLk9wYWNpdHksIChpdGVtLCBsYXlvdXRJZCkgPT4ge1xuICAgICAgICBpZiAoIWxheW91dElkKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBsYXlvdXRQYXJhbXMgPSBpdGVtLmxheW91dFBhcmFtc1tsYXlvdXRJZF07XG4gICAgICAgIHJldHVybiAnb3BhY2l0eScgaW4gbGF5b3V0UGFyYW1zID8gbGF5b3V0UGFyYW1zLm9wYWNpdHkgOiAxO1xuICAgIH0sIChhbmltYXRvciwgc2Nyb2xsLCB2YWx1ZSkgPT4gdmFsdWUgIT09IHVuZGVmaW5lZCA/IGFuaW1hdG9yLmdldE9wYWNpdHkoeyBvcGFjaXR5OiB2YWx1ZSB9LCBzY3JvbGwpLm9wYWNpdHkgOiB1bmRlZmluZWQsIHNlY3Rpb25JZCwgW2xheW91dElkXSk7XG4gICAgcmV0dXJuIHsgb3BhY2l0eSB9O1xufVxuZXhwb3J0cy51c2VDb21wb3VuZEl0ZW0gPSB1c2VDb21wb3VuZEl0ZW07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/CompoundItem/useCompoundItem.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/CustomItem/CustomItem.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/CustomItem/CustomItem.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CustomItem = void 0;\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst useCntrlContext_1 = __webpack_require__(/*! ../../../provider/useCntrlContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/useCntrlContext.js\");\nconst style_1 = __importDefault(__webpack_require__(/*! styled-jsx/style */ \"./node_modules/next/node_modules/styled-jsx/style.js\"));\nconst useRegisterResize_1 = __webpack_require__(/*! ../../../common/useRegisterResize */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useRegisterResize.js\");\nconst useItemAngle_1 = __webpack_require__(/*! ../useItemAngle */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemAngle.js\");\nconst CustomItem = ({ item, onResize, sectionId, interactionCtrl }) => {\n    var _a, _b, _c;\n    const sdk = (0, useCntrlContext_1.useCntrlContext)();\n    const { layouts } = (0, useCntrlContext_1.useCntrlContext)();\n    const itemAngle = (0, useItemAngle_1.useItemAngle)(item, sectionId);\n    const component = sdk.customItems.get(item.commonParams.name);\n    const layoutValues = [item.area];\n    const [ref, setRef] = (0, react_1.useState)(null);\n    (0, useRegisterResize_1.useRegisterResize)(ref, onResize);\n    const stateParams = interactionCtrl === null || interactionCtrl === void 0 ? void 0 : interactionCtrl.getState(['angle']);\n    const angle = (_b = (_a = stateParams === null || stateParams === void 0 ? void 0 : stateParams.styles) === null || _a === void 0 ? void 0 : _a.angle) !== null && _b !== void 0 ? _b : itemAngle;\n    if (!component)\n        return null;\n    return ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(\"div\", { className: `custom-component-${item.id}`, ref: setRef, style: Object.assign(Object.assign({}, (angle !== undefined ? { transform: `rotate(${angle}deg)` } : {})), { transition: (_c = stateParams === null || stateParams === void 0 ? void 0 : stateParams.transition) !== null && _c !== void 0 ? _c : 'none' }), children: component({}) }), (0, jsx_runtime_1.jsx)(style_1.default, { id: item.id, children: `${(0, sdk_1.getLayoutStyles)(layouts, layoutValues, ([area]) => {\n                    return (`\r\n            .custom-component-${item.id} {\r\n              transform: rotate(${area.angle}deg);\r\n              height: 100%;\r\n              width: 100%;\r\n              position: absolute;\r\n              left: 0;\r\n              top: 0;\r\n            }\r\n          `);\n                })}` })] }));\n};\nexports.CustomItem = CustomItem;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy9DdXN0b21JdGVtL0N1c3RvbUl0ZW0uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEIsc0JBQXNCLG1CQUFPLENBQUMsOERBQW1CO0FBQ2pELGNBQWMsbUJBQU8sQ0FBQyxxRUFBaUI7QUFDdkMsZ0JBQWdCLG1CQUFPLENBQUMsNENBQU87QUFDL0IsMEJBQTBCLG1CQUFPLENBQUMsZ0hBQW1DO0FBQ3JFLGdDQUFnQyxtQkFBTyxDQUFDLDhFQUFrQjtBQUMxRCw0QkFBNEIsbUJBQU8sQ0FBQyxnSEFBbUM7QUFDdkUsdUJBQXVCLG1CQUFPLENBQUMsbUdBQWlCO0FBQ2hELHNCQUFzQiw0Q0FBNEM7QUFDbEU7QUFDQTtBQUNBLFlBQVksVUFBVTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQsMkNBQTJDLCtCQUErQixRQUFRLHFEQUFxRCwyQkFBMkIscUJBQXFCLE1BQU0sUUFBUSxJQUFJLE1BQU0sNklBQTZJLHlCQUF5QixHQUFHLDZDQUE2QywwQkFBMEI7QUFDN2Y7QUFDQSxnQ0FBZ0M7QUFDaEMsa0NBQWtDLFdBQVc7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsRUFBRSxHQUFHLElBQUk7QUFDMUI7QUFDQSxrQkFBa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbnRybC1zaXRlL3Nkay1uZXh0anMvbGliL2NvbXBvbmVudHMvaXRlbXMvQ3VzdG9tSXRlbS9DdXN0b21JdGVtLmpzPzJmMGEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkN1c3RvbUl0ZW0gPSB2b2lkIDA7XG5jb25zdCBqc3hfcnVudGltZV8xID0gcmVxdWlyZShcInJlYWN0L2pzeC1ydW50aW1lXCIpO1xuY29uc3Qgc2RrXzEgPSByZXF1aXJlKFwiQGNudHJsLXNpdGUvc2RrXCIpO1xuY29uc3QgcmVhY3RfMSA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmNvbnN0IHVzZUNudHJsQ29udGV4dF8xID0gcmVxdWlyZShcIi4uLy4uLy4uL3Byb3ZpZGVyL3VzZUNudHJsQ29udGV4dFwiKTtcbmNvbnN0IHN0eWxlXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcInN0eWxlZC1qc3gvc3R5bGVcIikpO1xuY29uc3QgdXNlUmVnaXN0ZXJSZXNpemVfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi9jb21tb24vdXNlUmVnaXN0ZXJSZXNpemVcIik7XG5jb25zdCB1c2VJdGVtQW5nbGVfMSA9IHJlcXVpcmUoXCIuLi91c2VJdGVtQW5nbGVcIik7XG5jb25zdCBDdXN0b21JdGVtID0gKHsgaXRlbSwgb25SZXNpemUsIHNlY3Rpb25JZCwgaW50ZXJhY3Rpb25DdHJsIH0pID0+IHtcbiAgICB2YXIgX2EsIF9iLCBfYztcbiAgICBjb25zdCBzZGsgPSAoMCwgdXNlQ250cmxDb250ZXh0XzEudXNlQ250cmxDb250ZXh0KSgpO1xuICAgIGNvbnN0IHsgbGF5b3V0cyB9ID0gKDAsIHVzZUNudHJsQ29udGV4dF8xLnVzZUNudHJsQ29udGV4dCkoKTtcbiAgICBjb25zdCBpdGVtQW5nbGUgPSAoMCwgdXNlSXRlbUFuZ2xlXzEudXNlSXRlbUFuZ2xlKShpdGVtLCBzZWN0aW9uSWQpO1xuICAgIGNvbnN0IGNvbXBvbmVudCA9IHNkay5jdXN0b21JdGVtcy5nZXQoaXRlbS5jb21tb25QYXJhbXMubmFtZSk7XG4gICAgY29uc3QgbGF5b3V0VmFsdWVzID0gW2l0ZW0uYXJlYV07XG4gICAgY29uc3QgW3JlZiwgc2V0UmVmXSA9ICgwLCByZWFjdF8xLnVzZVN0YXRlKShudWxsKTtcbiAgICAoMCwgdXNlUmVnaXN0ZXJSZXNpemVfMS51c2VSZWdpc3RlclJlc2l6ZSkocmVmLCBvblJlc2l6ZSk7XG4gICAgY29uc3Qgc3RhdGVQYXJhbXMgPSBpbnRlcmFjdGlvbkN0cmwgPT09IG51bGwgfHwgaW50ZXJhY3Rpb25DdHJsID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpbnRlcmFjdGlvbkN0cmwuZ2V0U3RhdGUoWydhbmdsZSddKTtcbiAgICBjb25zdCBhbmdsZSA9IChfYiA9IChfYSA9IHN0YXRlUGFyYW1zID09PSBudWxsIHx8IHN0YXRlUGFyYW1zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzdGF0ZVBhcmFtcy5zdHlsZXMpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5hbmdsZSkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogaXRlbUFuZ2xlO1xuICAgIGlmICghY29tcG9uZW50KVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICByZXR1cm4gKCgwLCBqc3hfcnVudGltZV8xLmpzeHMpKGpzeF9ydW50aW1lXzEuRnJhZ21lbnQsIHsgY2hpbGRyZW46IFsoMCwganN4X3J1bnRpbWVfMS5qc3gpKFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBgY3VzdG9tLWNvbXBvbmVudC0ke2l0ZW0uaWR9YCwgcmVmOiBzZXRSZWYsIHN0eWxlOiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIChhbmdsZSAhPT0gdW5kZWZpbmVkID8geyB0cmFuc2Zvcm06IGByb3RhdGUoJHthbmdsZX1kZWcpYCB9IDoge30pKSwgeyB0cmFuc2l0aW9uOiAoX2MgPSBzdGF0ZVBhcmFtcyA9PT0gbnVsbCB8fCBzdGF0ZVBhcmFtcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogc3RhdGVQYXJhbXMudHJhbnNpdGlvbikgIT09IG51bGwgJiYgX2MgIT09IHZvaWQgMCA/IF9jIDogJ25vbmUnIH0pLCBjaGlsZHJlbjogY29tcG9uZW50KHt9KSB9KSwgKDAsIGpzeF9ydW50aW1lXzEuanN4KShzdHlsZV8xLmRlZmF1bHQsIHsgaWQ6IGl0ZW0uaWQsIGNoaWxkcmVuOiBgJHsoMCwgc2RrXzEuZ2V0TGF5b3V0U3R5bGVzKShsYXlvdXRzLCBsYXlvdXRWYWx1ZXMsIChbYXJlYV0pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChgXHJcbiAgICAgICAgICAgIC5jdXN0b20tY29tcG9uZW50LSR7aXRlbS5pZH0ge1xyXG4gICAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKCR7YXJlYS5hbmdsZX1kZWcpO1xyXG4gICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIGApO1xuICAgICAgICAgICAgICAgIH0pfWAgfSldIH0pKTtcbn07XG5leHBvcnRzLkN1c3RvbUl0ZW0gPSBDdXN0b21JdGVtO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/CustomItem/CustomItem.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/EmbedVideoItem/VimeoEmbed.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/EmbedVideoItem/VimeoEmbed.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VimeoEmbedItem = void 0;\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst player_1 = __importDefault(__webpack_require__(/*! @vimeo/player */ \"./node_modules/@vimeo/player/dist/player.es.js\"));\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst style_1 = __importDefault(__webpack_require__(/*! styled-jsx/style */ \"./node_modules/next/node_modules/styled-jsx/style.js\"));\nconst useItemAngle_1 = __webpack_require__(/*! ../useItemAngle */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemAngle.js\");\nconst useCntrlContext_1 = __webpack_require__(/*! ../../../provider/useCntrlContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/useCntrlContext.js\");\nconst useRegisterResize_1 = __webpack_require__(/*! ../../../common/useRegisterResize */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useRegisterResize.js\");\nconst getStyleFromItemStateAndParams_1 = __webpack_require__(/*! ../../../utils/getStyleFromItemStateAndParams */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getStyleFromItemStateAndParams.js\");\nconst useEmbedVideoItem_1 = __webpack_require__(/*! ./useEmbedVideoItem */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/EmbedVideoItem/useEmbedVideoItem.js\");\nconst LinkWrapper_1 = __webpack_require__(/*! ../LinkWrapper */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/LinkWrapper.js\");\nconst VimeoEmbedItem = ({ item, sectionId, onResize, interactionCtrl, onVisibilityChange }) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n    const id = (0, react_1.useId)();\n    const { layouts } = (0, useCntrlContext_1.useCntrlContext)();\n    const { radius: itemRadius, blur: itemBlur, opacity: itemOpacity } = (0, useEmbedVideoItem_1.useEmbedVideoItem)(item, sectionId);\n    const [iframeRef, setIframeRef] = (0, react_1.useState)(null);\n    const vimeoPlayer = (0, react_1.useMemo)(() => iframeRef ? new player_1.default(iframeRef) : undefined, [iframeRef]);\n    const itemAngle = (0, useItemAngle_1.useItemAngle)(item, sectionId);\n    const { play, controls, loop, muted, pictureInPicture, url } = item.commonParams;\n    const [ref, setRef] = (0, react_1.useState)(null);\n    const [imgRef, setImgRef] = (0, react_1.useState)(null);\n    const [isCoverVisible, setIsCoverVisible] = (0, react_1.useState)(false);\n    const layoutValues = [item.area, item.layoutParams];\n    const wrapperStateParams = interactionCtrl === null || interactionCtrl === void 0 ? void 0 : interactionCtrl.getState(['angle', 'blur', 'opacity']);\n    const frameStateParams = interactionCtrl === null || interactionCtrl === void 0 ? void 0 : interactionCtrl.getState(['radius']);\n    const angle = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)((_a = wrapperStateParams === null || wrapperStateParams === void 0 ? void 0 : wrapperStateParams.styles) === null || _a === void 0 ? void 0 : _a.angle, itemAngle);\n    const blur = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)((_b = wrapperStateParams === null || wrapperStateParams === void 0 ? void 0 : wrapperStateParams.styles) === null || _b === void 0 ? void 0 : _b.blur, itemBlur);\n    const opacity = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)((_c = wrapperStateParams === null || wrapperStateParams === void 0 ? void 0 : wrapperStateParams.styles) === null || _c === void 0 ? void 0 : _c.opacity, itemOpacity);\n    const radius = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)((_d = frameStateParams === null || frameStateParams === void 0 ? void 0 : frameStateParams.styles) === null || _d === void 0 ? void 0 : _d.radius, itemRadius);\n    (0, useRegisterResize_1.useRegisterResize)(ref, onResize);\n    const getValidVimeoUrl = (url) => {\n        const validURL = new URL(url);\n        validURL.searchParams.append('controls', String(controls));\n        validURL.searchParams.append('autoplay', String(play === 'auto'));\n        validURL.searchParams.append('muted', String(muted));\n        validURL.searchParams.append('loop', String(loop));\n        validURL.searchParams.append('pip', String(pictureInPicture));\n        validURL.searchParams.append('title', '0');\n        validURL.searchParams.append('byline', '0');\n        validURL.searchParams.append('portrait', '0');\n        validURL.searchParams.append('autopause', 'false');\n        return validURL.href;\n    };\n    const validUrl = getValidVimeoUrl(url);\n    (0, react_1.useEffect)(() => {\n        if (!vimeoPlayer || !imgRef)\n            return;\n        if (play === 'on-click') {\n            setIsCoverVisible(true);\n        }\n        vimeoPlayer.on('pause', (e) => {\n            if (e.seconds === 0) {\n                setIsCoverVisible(true);\n            }\n        });\n        vimeoPlayer.on('ended', () => {\n            setIsCoverVisible(true);\n        });\n    }, [vimeoPlayer, imgRef]);\n    const handleClick = () => __awaiter(void 0, void 0, void 0, function* () {\n        if (!vimeoPlayer)\n            return;\n        const isPaused = yield vimeoPlayer.getPaused();\n        if (isPaused) {\n            vimeoPlayer.play();\n            setIsCoverVisible(false);\n        }\n        else {\n            vimeoPlayer.pause();\n        }\n    });\n    const onCoverClick = () => {\n        if (!vimeoPlayer || !imgRef)\n            return;\n        vimeoPlayer.play();\n        setIsCoverVisible(false);\n    };\n    const isInteractive = opacity !== 0;\n    (0, react_1.useEffect)(() => {\n        onVisibilityChange === null || onVisibilityChange === void 0 ? void 0 : onVisibilityChange(isInteractive);\n        if (!isInteractive && vimeoPlayer) {\n            vimeoPlayer.pause();\n        }\n    }, [isInteractive, onVisibilityChange, vimeoPlayer]);\n    (0, react_1.useEffect)(() => {\n        if (!vimeoPlayer || !interactionCtrl)\n            return;\n        interactionCtrl.setActionReceiver((type) => {\n            switch (type) {\n                case 'play':\n                    vimeoPlayer.play();\n                    break;\n                case 'pause':\n                    vimeoPlayer.pause();\n                    break;\n            }\n        });\n    }, [interactionCtrl, vimeoPlayer]);\n    return ((0, jsx_runtime_1.jsxs)(LinkWrapper_1.LinkWrapper, { url: (_e = item.link) === null || _e === void 0 ? void 0 : _e.url, target: (_f = item.link) === null || _f === void 0 ? void 0 : _f.target, children: [(0, jsx_runtime_1.jsxs)(\"div\", { className: `embed-video-wrapper-${item.id}`, ref: setRef, style: Object.assign(Object.assign(Object.assign(Object.assign({}, (opacity !== undefined ? { opacity } : {})), (angle !== undefined ? { transform: `rotate(${angle}deg) translateZ(0)` } : {})), (blur !== undefined ? { filter: `blur(${blur * 100}vw)` } : {})), { transition: (_g = wrapperStateParams === null || wrapperStateParams === void 0 ? void 0 : wrapperStateParams.transition) !== null && _g !== void 0 ? _g : 'none' }), onMouseEnter: () => {\n                    if (!vimeoPlayer || play !== 'on-hover')\n                        return;\n                    vimeoPlayer.play();\n                }, onMouseLeave: () => {\n                    if (!vimeoPlayer || play !== 'on-hover')\n                        return;\n                    vimeoPlayer.pause();\n                }, children: [item.commonParams.coverUrl && ((0, jsx_runtime_1.jsx)(\"img\", { ref: setImgRef, onClick: () => onCoverClick(), src: (_h = item.commonParams.coverUrl) !== null && _h !== void 0 ? _h : '', style: {\n                            display: isCoverVisible ? 'block' : 'none',\n                            cursor: 'pointer',\n                            position: 'absolute',\n                            objectFit: 'cover',\n                            height: '100%',\n                            width: '100%',\n                            top: '0',\n                            left: '0'\n                        }, alt: \"Cover img\" })), (!item.commonParams.controls && (play === 'on-click' || play === 'auto')) && ((0, jsx_runtime_1.jsx)(\"div\", { onClick: handleClick, style: {\n                            position: 'absolute',\n                            height: '100%',\n                            width: '100%',\n                            top: '0',\n                            left: '0'\n                        } })), (0, jsx_runtime_1.jsx)(\"iframe\", { ref: setIframeRef, className: \"embed-video\", src: validUrl || '', allow: \"autoplay; fullscreen; picture-in-picture;\", allowFullScreen: true, style: Object.assign(Object.assign({}, (radius !== undefined ? { borderRadius: `${radius * 100}vw` } : {})), { transition: (_j = frameStateParams === null || frameStateParams === void 0 ? void 0 : frameStateParams.transition) !== null && _j !== void 0 ? _j : 'none' }) })] }), (0, jsx_runtime_1.jsx)(style_1.default, { id: id, children: `\r\n      .embed-video-wrapper-${item.id} {\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n      .embed-video {\r\n        width: 100%;\r\n        height: 100%;\r\n        z-index: 1;\r\n        border: none;\r\n        overflow: hidden;\r\n      }\r\n      ${(0, sdk_1.getLayoutStyles)(layouts, layoutValues, ([area, layoutParams]) => {\n                    return (`\r\n          .embed-video-wrapper-${item.id} {\r\n            opacity: ${layoutParams.opacity};\r\n            transform: rotate(${area.angle}deg) translateZ(0);\r\n            filter: ${layoutParams.blur !== 0 ? `blur(${layoutParams.blur * 100}vw)` : 'unset'};\r\n          }\r\n          .embed-video-wrapper-${item.id} .embed-video {\r\n            border-radius: ${layoutParams.radius * 100}vw;\r\n          }\r\n        `);\n                })}\r\n    ` })] }));\n};\nexports.VimeoEmbedItem = VimeoEmbedItem;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/EmbedVideoItem/VimeoEmbed.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/EmbedVideoItem/YoutubeEmbed.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/EmbedVideoItem/YoutubeEmbed.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.YoutubeEmbedItem = void 0;\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst style_1 = __importDefault(__webpack_require__(/*! styled-jsx/style */ \"./node_modules/next/node_modules/styled-jsx/style.js\"));\nconst LinkWrapper_1 = __webpack_require__(/*! ../LinkWrapper */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/LinkWrapper.js\");\nconst getValidYoutubeUrl_1 = __webpack_require__(/*! ../../../utils/getValidYoutubeUrl */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getValidYoutubeUrl.js\");\nconst useEmbedVideoItem_1 = __webpack_require__(/*! ./useEmbedVideoItem */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/EmbedVideoItem/useEmbedVideoItem.js\");\nconst useItemAngle_1 = __webpack_require__(/*! ../useItemAngle */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemAngle.js\");\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst useCntrlContext_1 = __webpack_require__(/*! ../../../provider/useCntrlContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/useCntrlContext.js\");\nconst useYouTubeIframeApi_1 = __webpack_require__(/*! ../../../utils/Youtube/useYouTubeIframeApi */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/Youtube/useYouTubeIframeApi.js\");\nconst useRegisterResize_1 = __webpack_require__(/*! ../../../common/useRegisterResize */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useRegisterResize.js\");\nconst getStyleFromItemStateAndParams_1 = __webpack_require__(/*! ../../../utils/getStyleFromItemStateAndParams */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getStyleFromItemStateAndParams.js\");\nconst YoutubeEmbedItem = ({ item, sectionId, onResize, interactionCtrl, onVisibilityChange }) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n    const id = (0, react_1.useId)();\n    const { layouts } = (0, useCntrlContext_1.useCntrlContext)();\n    const { play, controls, url } = item.commonParams;\n    const { radius: itemRadius, blur: itemBlur, opacity: itemOpacity } = (0, useEmbedVideoItem_1.useEmbedVideoItem)(item, sectionId);\n    const itemAngle = (0, useItemAngle_1.useItemAngle)(item, sectionId);\n    const YT = (0, useYouTubeIframeApi_1.useYouTubeIframeApi)();\n    const [div, setDiv] = (0, react_1.useState)(null);\n    const [player, setPlayer] = (0, react_1.useState)(undefined);\n    const [isCoverVisible, setIsCoverVisible] = (0, react_1.useState)(false);\n    const [imgRef, setImgRef] = (0, react_1.useState)(null);\n    const layoutValues = [item.area, item.layoutParams];\n    const wrapperStateParams = interactionCtrl === null || interactionCtrl === void 0 ? void 0 : interactionCtrl.getState(['angle', 'blur', 'opacity']);\n    const frameStateParams = interactionCtrl === null || interactionCtrl === void 0 ? void 0 : interactionCtrl.getState(['radius']);\n    const angle = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)((_a = wrapperStateParams === null || wrapperStateParams === void 0 ? void 0 : wrapperStateParams.styles) === null || _a === void 0 ? void 0 : _a.angle, itemAngle);\n    const blur = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)((_b = wrapperStateParams === null || wrapperStateParams === void 0 ? void 0 : wrapperStateParams.styles) === null || _b === void 0 ? void 0 : _b.blur, itemBlur);\n    const opacity = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)((_c = wrapperStateParams === null || wrapperStateParams === void 0 ? void 0 : wrapperStateParams.styles) === null || _c === void 0 ? void 0 : _c.opacity, itemOpacity);\n    const radius = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)((_d = frameStateParams === null || frameStateParams === void 0 ? void 0 : frameStateParams.styles) === null || _d === void 0 ? void 0 : _d.radius, itemRadius);\n    const isInteractive = opacity !== 0;\n    (0, react_1.useEffect)(() => {\n        onVisibilityChange === null || onVisibilityChange === void 0 ? void 0 : onVisibilityChange(isInteractive);\n    }, [isInteractive, onVisibilityChange]);\n    (0, useRegisterResize_1.useRegisterResize)(div, onResize);\n    (0, react_1.useEffect)(() => {\n        const newUrl = new URL(url);\n        const videoId = (0, getValidYoutubeUrl_1.getYoutubeId)(newUrl);\n        if (!YT || !videoId || !div)\n            return;\n        const placeholder = document.createElement('div');\n        div.appendChild(placeholder);\n        const player = new YT.Player(placeholder, {\n            videoId,\n            playerVars: {\n                autoplay: play === 'auto' ? '1' : '0',\n                controls: controls ? '1' : '0'\n            },\n            events: {\n                onStateChange: (event) => {\n                    if (play !== 'auto')\n                        return;\n                    if (event.data === 1) {\n                        setIsCoverVisible(false);\n                    }\n                    if (event.data === 2 || event.data === -1) {\n                        setIsCoverVisible(true);\n                    }\n                },\n                onReady: (event) => {\n                    setPlayer(event.target);\n                    if (play !== 'on-click') {\n                        player.mute();\n                    }\n                }\n            }\n        });\n        return () => {\n            var _a;\n            setPlayer(undefined);\n            player.destroy();\n            (_a = placeholder.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(placeholder);\n        };\n    }, [YT, div]);\n    const onCoverClick = () => {\n        if (!player || !imgRef)\n            return;\n        player.playVideo();\n        setIsCoverVisible(false);\n    };\n    (0, react_1.useEffect)(() => {\n        if (play === 'on-click' && !controls) {\n            setIsCoverVisible(true);\n        }\n    }, []);\n    (0, react_1.useEffect)(() => {\n        onVisibilityChange === null || onVisibilityChange === void 0 ? void 0 : onVisibilityChange(isInteractive);\n        if (!isInteractive && player) {\n            player.pauseVideo();\n        }\n    }, [isInteractive, onVisibilityChange, player]);\n    (0, react_1.useEffect)(() => {\n        if (!player || !interactionCtrl)\n            return;\n        interactionCtrl.setActionReceiver((type) => {\n            switch (type) {\n                case 'play':\n                    player.playVideo();\n                    break;\n                case 'pause':\n                    player.pauseVideo();\n                    break;\n            }\n        });\n    }, [interactionCtrl, player]);\n    return ((0, jsx_runtime_1.jsxs)(LinkWrapper_1.LinkWrapper, { url: (_e = item.link) === null || _e === void 0 ? void 0 : _e.url, target: (_f = item.link) === null || _f === void 0 ? void 0 : _f.target, children: [(0, jsx_runtime_1.jsxs)(\"div\", { className: `embed-youtube-video-wrapper-${item.id}`, onMouseEnter: () => {\n                    if (!player || play !== 'on-hover')\n                        return;\n                    player.playVideo();\n                }, onMouseLeave: () => {\n                    if (!player || play !== 'on-hover')\n                        return;\n                    player.pauseVideo();\n                }, style: Object.assign(Object.assign(Object.assign(Object.assign({}, (opacity !== undefined ? { opacity } : {})), (angle !== undefined ? { transform: `rotate(${angle}deg) translateZ(0)` } : {})), (blur !== undefined ? { filter: `blur(${blur * 100}vw)` } : {})), { transition: (_g = wrapperStateParams === null || wrapperStateParams === void 0 ? void 0 : wrapperStateParams.transition) !== null && _g !== void 0 ? _g : 'none' }), children: [item.commonParams.coverUrl && ((0, jsx_runtime_1.jsx)(\"img\", { ref: setImgRef, onClick: () => onCoverClick(), src: (_h = item.commonParams.coverUrl) !== null && _h !== void 0 ? _h : '', style: {\n                            display: isCoverVisible ? 'block' : 'none',\n                            cursor: 'pointer',\n                            position: 'absolute',\n                            objectFit: 'cover',\n                            height: '100%',\n                            width: '100%',\n                            top: '0',\n                            left: '0',\n                            zIndex: 1\n                        }, alt: \"Cover img\" })), (0, jsx_runtime_1.jsx)(\"div\", { className: `embed-${item.id}`, ref: setDiv, style: Object.assign(Object.assign({}, (radius !== undefined ? { borderRadius: `${radius * 100}vw` } : {})), { transition: (_j = frameStateParams === null || frameStateParams === void 0 ? void 0 : frameStateParams.transition) !== null && _j !== void 0 ? _j : 'none' }) })] }), (0, jsx_runtime_1.jsx)(style_1.default, { id: id, children: `\r\n        .embed-youtube-video-wrapper-${item.id},\r\n        .embed-${item.id} {\r\n          position: absolute;\r\n          width: 100%;\r\n          height: 100%;\r\n        }\r\n        .embed-${item.id} {\r\n          overflow: hidden;\r\n        }\r\n        .embed-youtube-video-wrapper-${item.id} iframe {\r\n          width: 100%;\r\n          height: 100%;\r\n          z-index: 1;\r\n          border: none;\r\n        }\r\n        ${(0, sdk_1.getLayoutStyles)(layouts, layoutValues, ([area, layoutParams]) => {\n                    return (`\r\n            .embed-youtube-video-wrapper-${item.id} {\r\n              opacity: ${layoutParams.opacity};\r\n              transform: rotate(${area.angle}deg) translateZ(0);\r\n              filter: ${layoutParams.blur !== 0 ? `blur(${layoutParams.blur * 100}vw)` : 'unset'};\r\n            }\r\n            .embed-youtube-video-wrapper-${item.id} .embed-${item.id} {\r\n              border-radius: ${layoutParams.radius * 100}vw;\r\n            }\r\n          `);\n                })}\r\n      ` })] }));\n};\nexports.YoutubeEmbedItem = YoutubeEmbedItem;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/EmbedVideoItem/YoutubeEmbed.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/EmbedVideoItem/useEmbedVideoItem.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/EmbedVideoItem/useEmbedVideoItem.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useEmbedVideoItem = void 0;\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst useKeyframeValue_1 = __webpack_require__(/*! ../../../common/useKeyframeValue */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useKeyframeValue.js\");\nconst useLayoutContext_1 = __webpack_require__(/*! ../../useLayoutContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/useLayoutContext.js\");\nconst useEmbedVideoItem = (item, sectionId) => {\n    const layoutId = (0, useLayoutContext_1.useLayoutContext)();\n    const radius = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.BorderRadius, (item, layoutId) => {\n        if (!layoutId)\n            return;\n        const layoutParams = item.layoutParams[layoutId];\n        return 'radius' in layoutParams ? layoutParams.radius : 0;\n    }, (animator, scroll, value) => value !== undefined ? animator.getRadius({ radius: value }, scroll).radius : undefined, sectionId, [layoutId]);\n    const blur = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.Blur, (item, layoutId) => {\n        if (!layoutId)\n            return;\n        const layoutParams = item.layoutParams[layoutId];\n        return 'blur' in layoutParams ? layoutParams.blur : 0;\n    }, (animator, scroll, value) => value !== undefined ? animator.getBlur({ blur: value }, scroll).blur : undefined, sectionId, [layoutId]);\n    const opacity = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.Opacity, (item, layoutId) => {\n        if (!layoutId)\n            return;\n        const layoutParams = item.layoutParams[layoutId];\n        return 'opacity' in layoutParams ? layoutParams.opacity : 1;\n    }, (animator, scroll, value) => value !== undefined ? animator.getOpacity({ opacity: value }, scroll).opacity : undefined, sectionId, [layoutId]);\n    return { radius, blur, opacity };\n};\nexports.useEmbedVideoItem = useEmbedVideoItem;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy9FbWJlZFZpZGVvSXRlbS91c2VFbWJlZFZpZGVvSXRlbS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUI7QUFDekIsY0FBYyxtQkFBTyxDQUFDLHFFQUFpQjtBQUN2QywyQkFBMkIsbUJBQU8sQ0FBQyw4R0FBa0M7QUFDckUsMkJBQTJCLG1CQUFPLENBQUMsd0dBQXdCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSywwRUFBMEUsZUFBZTtBQUM5RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyx3RUFBd0UsYUFBYTtBQUMxRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSywyRUFBMkUsZ0JBQWdCO0FBQ2hHLGFBQWE7QUFDYjtBQUNBLHlCQUF5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy9FbWJlZFZpZGVvSXRlbS91c2VFbWJlZFZpZGVvSXRlbS5qcz8yZWVjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy51c2VFbWJlZFZpZGVvSXRlbSA9IHZvaWQgMDtcbmNvbnN0IHNka18xID0gcmVxdWlyZShcIkBjbnRybC1zaXRlL3Nka1wiKTtcbmNvbnN0IHVzZUtleWZyYW1lVmFsdWVfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi9jb21tb24vdXNlS2V5ZnJhbWVWYWx1ZVwiKTtcbmNvbnN0IHVzZUxheW91dENvbnRleHRfMSA9IHJlcXVpcmUoXCIuLi8uLi91c2VMYXlvdXRDb250ZXh0XCIpO1xuY29uc3QgdXNlRW1iZWRWaWRlb0l0ZW0gPSAoaXRlbSwgc2VjdGlvbklkKSA9PiB7XG4gICAgY29uc3QgbGF5b3V0SWQgPSAoMCwgdXNlTGF5b3V0Q29udGV4dF8xLnVzZUxheW91dENvbnRleHQpKCk7XG4gICAgY29uc3QgcmFkaXVzID0gKDAsIHVzZUtleWZyYW1lVmFsdWVfMS51c2VLZXlmcmFtZVZhbHVlKShpdGVtLCBzZGtfMS5LZXlmcmFtZVR5cGUuQm9yZGVyUmFkaXVzLCAoaXRlbSwgbGF5b3V0SWQpID0+IHtcbiAgICAgICAgaWYgKCFsYXlvdXRJZClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgbGF5b3V0UGFyYW1zID0gaXRlbS5sYXlvdXRQYXJhbXNbbGF5b3V0SWRdO1xuICAgICAgICByZXR1cm4gJ3JhZGl1cycgaW4gbGF5b3V0UGFyYW1zID8gbGF5b3V0UGFyYW1zLnJhZGl1cyA6IDA7XG4gICAgfSwgKGFuaW1hdG9yLCBzY3JvbGwsIHZhbHVlKSA9PiB2YWx1ZSAhPT0gdW5kZWZpbmVkID8gYW5pbWF0b3IuZ2V0UmFkaXVzKHsgcmFkaXVzOiB2YWx1ZSB9LCBzY3JvbGwpLnJhZGl1cyA6IHVuZGVmaW5lZCwgc2VjdGlvbklkLCBbbGF5b3V0SWRdKTtcbiAgICBjb25zdCBibHVyID0gKDAsIHVzZUtleWZyYW1lVmFsdWVfMS51c2VLZXlmcmFtZVZhbHVlKShpdGVtLCBzZGtfMS5LZXlmcmFtZVR5cGUuQmx1ciwgKGl0ZW0sIGxheW91dElkKSA9PiB7XG4gICAgICAgIGlmICghbGF5b3V0SWQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IGxheW91dFBhcmFtcyA9IGl0ZW0ubGF5b3V0UGFyYW1zW2xheW91dElkXTtcbiAgICAgICAgcmV0dXJuICdibHVyJyBpbiBsYXlvdXRQYXJhbXMgPyBsYXlvdXRQYXJhbXMuYmx1ciA6IDA7XG4gICAgfSwgKGFuaW1hdG9yLCBzY3JvbGwsIHZhbHVlKSA9PiB2YWx1ZSAhPT0gdW5kZWZpbmVkID8gYW5pbWF0b3IuZ2V0Qmx1cih7IGJsdXI6IHZhbHVlIH0sIHNjcm9sbCkuYmx1ciA6IHVuZGVmaW5lZCwgc2VjdGlvbklkLCBbbGF5b3V0SWRdKTtcbiAgICBjb25zdCBvcGFjaXR5ID0gKDAsIHVzZUtleWZyYW1lVmFsdWVfMS51c2VLZXlmcmFtZVZhbHVlKShpdGVtLCBzZGtfMS5LZXlmcmFtZVR5cGUuT3BhY2l0eSwgKGl0ZW0sIGxheW91dElkKSA9PiB7XG4gICAgICAgIGlmICghbGF5b3V0SWQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IGxheW91dFBhcmFtcyA9IGl0ZW0ubGF5b3V0UGFyYW1zW2xheW91dElkXTtcbiAgICAgICAgcmV0dXJuICdvcGFjaXR5JyBpbiBsYXlvdXRQYXJhbXMgPyBsYXlvdXRQYXJhbXMub3BhY2l0eSA6IDE7XG4gICAgfSwgKGFuaW1hdG9yLCBzY3JvbGwsIHZhbHVlKSA9PiB2YWx1ZSAhPT0gdW5kZWZpbmVkID8gYW5pbWF0b3IuZ2V0T3BhY2l0eSh7IG9wYWNpdHk6IHZhbHVlIH0sIHNjcm9sbCkub3BhY2l0eSA6IHVuZGVmaW5lZCwgc2VjdGlvbklkLCBbbGF5b3V0SWRdKTtcbiAgICByZXR1cm4geyByYWRpdXMsIGJsdXIsIG9wYWNpdHkgfTtcbn07XG5leHBvcnRzLnVzZUVtYmVkVmlkZW9JdGVtID0gdXNlRW1iZWRWaWRlb0l0ZW07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/EmbedVideoItem/useEmbedVideoItem.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/FileItem/ImageItem.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/FileItem/ImageItem.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ImageItem = void 0;\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst style_1 = __importDefault(__webpack_require__(/*! styled-jsx/style */ \"./node_modules/next/node_modules/styled-jsx/style.js\"));\nconst color_1 = __webpack_require__(/*! @cntrl-site/color */ \"./node_modules/@cntrl-site/color/lib/index.js\");\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst LinkWrapper_1 = __webpack_require__(/*! ../LinkWrapper */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/LinkWrapper.js\");\nconst useFileItem_1 = __webpack_require__(/*! ./useFileItem */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/FileItem/useFileItem.js\");\nconst useItemAngle_1 = __webpack_require__(/*! ../useItemAngle */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemAngle.js\");\nconst useCntrlContext_1 = __webpack_require__(/*! ../../../provider/useCntrlContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/useCntrlContext.js\");\nconst useRegisterResize_1 = __webpack_require__(/*! ../../../common/useRegisterResize */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useRegisterResize.js\");\nconst useImageFx_1 = __webpack_require__(/*! ../../../utils/effects/useImageFx */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/effects/useImageFx.js\");\nconst useElementRect_1 = __webpack_require__(/*! ../../../utils/useElementRect */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/useElementRect.js\");\nconst useLayoutContext_1 = __webpack_require__(/*! ../../useLayoutContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/useLayoutContext.js\");\nconst getStyleFromItemStateAndParams_1 = __webpack_require__(/*! ../../../utils/getStyleFromItemStateAndParams */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getStyleFromItemStateAndParams.js\");\nconst useItemFXData_1 = __webpack_require__(/*! ../../../common/useItemFXData */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useItemFXData.js\");\nconst ImageItem = ({ item, sectionId, onResize, interactionCtrl, onVisibilityChange }) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n    const id = (0, react_1.useId)();\n    const { layouts } = (0, useCntrlContext_1.useCntrlContext)();\n    const layoutId = (0, useLayoutContext_1.useLayoutContext)();\n    const { radius: itemRadius, strokeWidth: itemStrokeWidth, opacity: itemOpacity, strokeColor: itemStrokeColor, blur: itemBlur } = (0, useFileItem_1.useFileItem)(item, sectionId);\n    const itemAngle = (0, useItemAngle_1.useItemAngle)(item, sectionId);\n    const [wrapperRef, setWrapperRef] = (0, react_1.useState)(null);\n    (0, useRegisterResize_1.useRegisterResize)(wrapperRef, onResize);\n    const { url, hasGLEffect } = item.commonParams;\n    const fxCanvas = (0, react_1.useRef)(null);\n    const isInitialRef = (0, react_1.useRef)(true);\n    const layoutValues = [item.area, item.layoutParams];\n    const { controlsValues, fragmentShader } = (0, useItemFXData_1.useItemFXData)(item, sectionId);\n    const area = layoutId ? item.area[layoutId] : null;\n    const exemplary = (_a = layouts === null || layouts === void 0 ? void 0 : layouts.find(l => l.id === layoutId)) === null || _a === void 0 ? void 0 : _a.exemplary;\n    const width = area && exemplary ? area.width * exemplary : 0;\n    const height = area && exemplary ? area.height * exemplary : 0;\n    const wrapperStateParams = interactionCtrl === null || interactionCtrl === void 0 ? void 0 : interactionCtrl.getState(['angle', 'opacity', 'blur']);\n    const imgStateParams = interactionCtrl === null || interactionCtrl === void 0 ? void 0 : interactionCtrl.getState(['strokeWidth', 'radius', 'strokeColor']);\n    (0, react_1.useEffect)(() => {\n        isInitialRef.current = false;\n    }, []);\n    const isFXAllowed = (0, useImageFx_1.useImageFx)(fxCanvas.current, !!(hasGLEffect && !isInitialRef.current), {\n        imageUrl: url,\n        fragmentShader,\n        controlsValues\n    }, width, height);\n    const rect = (0, useElementRect_1.useElementRect)(wrapperRef);\n    const rectWidth = Math.floor((_b = rect === null || rect === void 0 ? void 0 : rect.width) !== null && _b !== void 0 ? _b : 0);\n    const rectHeight = Math.floor((_c = rect === null || rect === void 0 ? void 0 : rect.height) !== null && _c !== void 0 ? _c : 0);\n    const borderColor = (0, react_1.useMemo)(() => {\n        var _a;\n        const borderColor = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)((_a = imgStateParams === null || imgStateParams === void 0 ? void 0 : imgStateParams.styles) === null || _a === void 0 ? void 0 : _a.strokeColor, itemStrokeColor);\n        return borderColor ? color_1.CntrlColor.parse(borderColor) : undefined;\n    }, [itemStrokeColor, (_d = imgStateParams === null || imgStateParams === void 0 ? void 0 : imgStateParams.styles) === null || _d === void 0 ? void 0 : _d.strokeColor]);\n    const radius = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)((_e = imgStateParams === null || imgStateParams === void 0 ? void 0 : imgStateParams.styles) === null || _e === void 0 ? void 0 : _e.radius, itemRadius);\n    const strokeWidth = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)((_f = imgStateParams === null || imgStateParams === void 0 ? void 0 : imgStateParams.styles) === null || _f === void 0 ? void 0 : _f.strokeWidth, itemStrokeWidth);\n    const angle = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)((_g = wrapperStateParams === null || wrapperStateParams === void 0 ? void 0 : wrapperStateParams.styles) === null || _g === void 0 ? void 0 : _g.angle, itemAngle);\n    const opacity = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)((_h = wrapperStateParams === null || wrapperStateParams === void 0 ? void 0 : wrapperStateParams.styles) === null || _h === void 0 ? void 0 : _h.opacity, itemOpacity);\n    const blur = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)((_j = wrapperStateParams === null || wrapperStateParams === void 0 ? void 0 : wrapperStateParams.styles) === null || _j === void 0 ? void 0 : _j.blur, itemBlur);\n    const inlineStyles = Object.assign(Object.assign(Object.assign(Object.assign({}, (borderColor ? { borderColor: `${borderColor.fmt('rgba')}` } : {})), (radius !== undefined ? { borderRadius: `${radius * 100}vw` } : {})), (strokeWidth !== undefined ? { borderWidth: `${strokeWidth * 100}vw` } : {})), { transition: (_k = imgStateParams === null || imgStateParams === void 0 ? void 0 : imgStateParams.transition) !== null && _k !== void 0 ? _k : 'none' });\n    const isInteractive = opacity !== 0;\n    (0, react_1.useEffect)(() => {\n        onVisibilityChange === null || onVisibilityChange === void 0 ? void 0 : onVisibilityChange(isInteractive);\n    }, [isInteractive, onVisibilityChange]);\n    return ((0, jsx_runtime_1.jsx)(LinkWrapper_1.LinkWrapper, { url: (_l = item.link) === null || _l === void 0 ? void 0 : _l.url, target: (_m = item.link) === null || _m === void 0 ? void 0 : _m.target, children: (0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(\"div\", { className: `image-wrapper-${item.id}`, ref: setWrapperRef, style: Object.assign(Object.assign(Object.assign(Object.assign({}, (opacity !== undefined ? { opacity } : {})), (angle !== undefined ? { transform: `rotate(${angle}deg) translateZ(0)` } : {})), (blur !== undefined ? { filter: `blur(${blur * 100}vw)` } : {})), { transition: (_o = wrapperStateParams === null || wrapperStateParams === void 0 ? void 0 : wrapperStateParams.transition) !== null && _o !== void 0 ? _o : 'none' }), children: hasGLEffect && isFXAllowed\n                        ? ((0, jsx_runtime_1.jsx)(\"canvas\", { style: inlineStyles, ref: fxCanvas, className: `img-canvas image-${item.id}`, width: rectWidth, height: rectHeight }))\n                        : ((0, jsx_runtime_1.jsx)(\"img\", { alt: \"\", className: `image image-${item.id}`, style: inlineStyles, src: item.commonParams.url })) }), (0, jsx_runtime_1.jsx)(style_1.default, { id: id, children: `\r\n        .image-wrapper-${item.id} {\r\n          position: absolute;\r\n          width: 100%;\r\n          height: 100%;\r\n          box-sizing: border-box;\r\n          display: flex;\r\n        }\r\n        .image {\r\n          width: 100%;\r\n          height: 100%;\r\n          opacity: 1;\r\n          object-fit: cover;\r\n          pointer-events: none;\r\n          border-style: solid;\r\n          overflow: hidden;\r\n          box-sizing: border-box;\r\n        }\r\n        .img-canvas {\r\n          border: solid;\r\n          width: 100%;\r\n          height: 100%;\r\n          pointer-events: none;\r\n          border-width: 0;\r\n          box-sizing: border-box;\r\n        }\r\n        ${(0, sdk_1.getLayoutStyles)(layouts, layoutValues, ([area, layoutParams]) => {\n                        return (`\r\n            .image-wrapper-${item.id} {\r\n              opacity: ${layoutParams.opacity};\r\n              transform: rotate(${area.angle}deg) translateZ(0);\r\n              filter: ${layoutParams.blur !== 0 ? `blur(${layoutParams.blur * 100}vw)` : 'unset'};\r\n            }\r\n            .image-${item.id} {\r\n              border-color: ${color_1.CntrlColor.parse(layoutParams.strokeColor).fmt('rgba')};\r\n              border-radius: ${layoutParams.radius * 100}vw;\r\n              border-width: ${layoutParams.strokeWidth * 100}vw;\r\n            }\r\n          `);\n                    })}\r\n      ` })] }) }));\n};\nexports.ImageItem = ImageItem;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/FileItem/ImageItem.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/FileItem/VideoItem.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/FileItem/VideoItem.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VideoItem = void 0;\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst style_1 = __importDefault(__webpack_require__(/*! styled-jsx/style */ \"./node_modules/next/node_modules/styled-jsx/style.js\"));\nconst color_1 = __webpack_require__(/*! @cntrl-site/color */ \"./node_modules/@cntrl-site/color/lib/index.js\");\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst LinkWrapper_1 = __webpack_require__(/*! ../LinkWrapper */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/LinkWrapper.js\");\nconst useFileItem_1 = __webpack_require__(/*! ./useFileItem */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/FileItem/useFileItem.js\");\nconst useItemAngle_1 = __webpack_require__(/*! ../useItemAngle */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemAngle.js\");\nconst useCntrlContext_1 = __webpack_require__(/*! ../../../provider/useCntrlContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/useCntrlContext.js\");\nconst useRegisterResize_1 = __webpack_require__(/*! ../../../common/useRegisterResize */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useRegisterResize.js\");\nconst useLayoutContext_1 = __webpack_require__(/*! ../../useLayoutContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/useLayoutContext.js\");\nconst ScrollPlaybackVideo_1 = __webpack_require__(/*! ../../ScrollPlaybackVideo */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/ScrollPlaybackVideo.js\");\nconst getStyleFromItemStateAndParams_1 = __webpack_require__(/*! ../../../utils/getStyleFromItemStateAndParams */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getStyleFromItemStateAndParams.js\");\nconst useVideoFx_1 = __webpack_require__(/*! ../../../utils/effects/useVideoFx */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/effects/useVideoFx.js\");\nconst useElementRect_1 = __webpack_require__(/*! ../../../utils/useElementRect */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/useElementRect.js\");\nconst useItemFXData_1 = __webpack_require__(/*! ../../../common/useItemFXData */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useItemFXData.js\");\nconst VideoItem = ({ item, sectionId, onResize, interactionCtrl, onVisibilityChange }) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n    const id = (0, react_1.useId)();\n    const { layouts } = (0, useCntrlContext_1.useCntrlContext)();\n    const layoutId = (0, useLayoutContext_1.useLayoutContext)();\n    const { radius: itemRadius, strokeWidth: itemStrokeWidth, strokeColor: itemStrokeColor, opacity: itemOpacity, blur: itemBlur } = (0, useFileItem_1.useFileItem)(item, sectionId);\n    const itemAngle = (0, useItemAngle_1.useItemAngle)(item, sectionId);\n    const [ref, setRef] = (0, react_1.useState)(null);\n    const videoRef = (0, react_1.useRef)(null);\n    const fxCanvas = (0, react_1.useRef)(null);\n    const { url, hasGLEffect } = item.commonParams;\n    const isInitialRef = (0, react_1.useRef)(true);\n    const area = layoutId ? item.area[layoutId] : null;\n    const exemplary = (_a = layouts === null || layouts === void 0 ? void 0 : layouts.find(l => l.id === layoutId)) === null || _a === void 0 ? void 0 : _a.exemplary;\n    const width = area && exemplary ? area.width * exemplary : 0;\n    const height = area && exemplary ? area.height * exemplary : 0;\n    const { controlsValues, fragmentShader } = (0, useItemFXData_1.useItemFXData)(item, sectionId);\n    const rect = (0, useElementRect_1.useElementRect)(ref);\n    const rectWidth = Math.floor((_b = rect === null || rect === void 0 ? void 0 : rect.width) !== null && _b !== void 0 ? _b : 0);\n    const rectHeight = Math.floor((_c = rect === null || rect === void 0 ? void 0 : rect.height) !== null && _c !== void 0 ? _c : 0);\n    const scrollPlayback = layoutId ? item.layoutParams[layoutId].scrollPlayback : null;\n    const layoutValues = [item.area, item.layoutParams];\n    const hasScrollPlayback = scrollPlayback !== null;\n    const wrapperStateParams = interactionCtrl === null || interactionCtrl === void 0 ? void 0 : interactionCtrl.getState(['angle', 'opacity', 'blur']);\n    const videoStateParams = interactionCtrl === null || interactionCtrl === void 0 ? void 0 : interactionCtrl.getState(['strokeWidth', 'radius', 'strokeColor']);\n    const borderColor = (0, react_1.useMemo)(() => {\n        var _a;\n        const strokeColor = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)((_a = videoStateParams === null || videoStateParams === void 0 ? void 0 : videoStateParams.styles) === null || _a === void 0 ? void 0 : _a.color, itemStrokeColor);\n        return strokeColor ? color_1.CntrlColor.parse(strokeColor) : undefined;\n    }, [(_d = videoStateParams === null || videoStateParams === void 0 ? void 0 : videoStateParams.styles) === null || _d === void 0 ? void 0 : _d.color, itemStrokeColor]);\n    const angle = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)((_e = wrapperStateParams === null || wrapperStateParams === void 0 ? void 0 : wrapperStateParams.styles) === null || _e === void 0 ? void 0 : _e.angle, itemAngle);\n    const opacity = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)((_f = wrapperStateParams === null || wrapperStateParams === void 0 ? void 0 : wrapperStateParams.styles) === null || _f === void 0 ? void 0 : _f.opacity, itemOpacity);\n    const blur = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)((_g = wrapperStateParams === null || wrapperStateParams === void 0 ? void 0 : wrapperStateParams.styles) === null || _g === void 0 ? void 0 : _g.blur, itemBlur);\n    const strokeWidth = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)((_h = wrapperStateParams === null || wrapperStateParams === void 0 ? void 0 : wrapperStateParams.styles) === null || _h === void 0 ? void 0 : _h.strokeWidth, itemStrokeWidth);\n    const radius = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)((_j = wrapperStateParams === null || wrapperStateParams === void 0 ? void 0 : wrapperStateParams.styles) === null || _j === void 0 ? void 0 : _j.radius, itemRadius);\n    (0, react_1.useEffect)(() => {\n        isInitialRef.current = false;\n    }, []);\n    const isFXAllowed = (0, useVideoFx_1.useVideoFx)(fxCanvas.current, !!(hasGLEffect && !isInitialRef.current), {\n        videoUrl: url,\n        fragmentShader,\n        controls: controlsValues\n    }, width, height);\n    (0, useRegisterResize_1.useRegisterResize)(ref, onResize);\n    const inlineStyles = Object.assign(Object.assign(Object.assign(Object.assign({}, (radius !== undefined ? { borderRadius: `${radius * 100}vw` } : {})), (strokeWidth !== undefined ? { borderWidth: `${strokeWidth * 100}vw` } : {})), (borderColor ? { borderColor: `${borderColor.toCss()}` } : {})), { transition: (_k = videoStateParams === null || videoStateParams === void 0 ? void 0 : videoStateParams.transition) !== null && _k !== void 0 ? _k : 'none' });\n    const isInteractive = opacity !== 0;\n    (0, react_1.useEffect)(() => {\n        onVisibilityChange === null || onVisibilityChange === void 0 ? void 0 : onVisibilityChange(isInteractive);\n    }, [isInteractive, onVisibilityChange]);\n    return ((0, jsx_runtime_1.jsxs)(LinkWrapper_1.LinkWrapper, { url: (_l = item.link) === null || _l === void 0 ? void 0 : _l.url, target: (_m = item.link) === null || _m === void 0 ? void 0 : _m.target, children: [(0, jsx_runtime_1.jsx)(\"div\", { className: `video-wrapper-${item.id}`, ref: setRef, style: Object.assign(Object.assign(Object.assign(Object.assign({}, (opacity !== undefined ? { opacity } : {})), (angle !== undefined ? { transform: `rotate(${angle}deg) translateZ(0)` } : {})), (blur !== undefined ? { filter: `blur(${blur * 100}vw)` } : {})), { transition: (_o = wrapperStateParams === null || wrapperStateParams === void 0 ? void 0 : wrapperStateParams.transition) !== null && _o !== void 0 ? _o : 'none' }), children: hasScrollPlayback\n                    ? ((0, jsx_runtime_1.jsx)(ScrollPlaybackVideo_1.ScrollPlaybackVideo, { sectionId: sectionId, src: item.commonParams.url, playbackParams: scrollPlayback, style: inlineStyles, className: `video video-playback-wrapper video-${item.id}` }))\n                    : ((0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, { children: hasGLEffect && isFXAllowed\n                            ? ((0, jsx_runtime_1.jsx)(\"canvas\", { style: inlineStyles, ref: fxCanvas, className: `video-canvas video-${item.id}`, width: rectWidth, height: rectHeight }))\n                            : ((0, jsx_runtime_1.jsx)(\"video\", { poster: (_p = item.commonParams.coverUrl) !== null && _p !== void 0 ? _p : '', ref: videoRef, autoPlay: true, muted: true, loop: true, playsInline: true, className: `video video-${item.id}`, style: inlineStyles, children: (0, jsx_runtime_1.jsx)(\"source\", { src: item.commonParams.url }) })) })) }), (0, jsx_runtime_1.jsx)(style_1.default, { id: id, children: `\r\n        .video-wrapper-${item.id} {\r\n          position: absolute;\r\n          overflow: hidden;\r\n          width: 100%;\r\n          height: 100%;\r\n          box-sizing: border-box;\r\n          opacity: ${opacity};\r\n        }\r\n        .video {\r\n          width: 100%;\r\n          height: 100%;\r\n          box-sizing: border-box;\r\n          opacity: 1;\r\n          object-fit: cover;\r\n          overflow: hidden;\r\n          border-style: solid;\r\n        }\r\n        .video-${item.id} {\r\n          border-color: ${itemStrokeColor};\r\n        }\r\n        .video-playback-wrapper {\r\n          display: flex;\r\n          justify-content: center;\r\n        }\r\n        .video-canvas {\r\n          border: solid;\r\n          width: 100%;\r\n          height: 100%;\r\n          pointer-events: none;\r\n          border-width: 0;\r\n          box-sizing: border-box;\r\n        }\r\n        ${(0, sdk_1.getLayoutStyles)(layouts, layoutValues, ([area, layoutParams]) => {\n                    return (`\r\n            .video-wrapper-${item.id} {\r\n              opacity: ${layoutParams.opacity};\r\n              transform: rotate(${area.angle}deg) translateZ(0);\r\n              filter: ${layoutParams.blur !== 0 ? `blur(${layoutParams.blur * 100}vw)` : 'unset'};\r\n            }\r\n            .video-${item.id} {\r\n              border-color: ${color_1.CntrlColor.parse(layoutParams.strokeColor).fmt('rgba')};\r\n              border-radius: ${layoutParams.radius * 100}vw;\r\n              border-width: ${layoutParams.strokeWidth * 100}vw;\r\n            }\r\n          `);\n                })}\r\n    ` })] }));\n};\nexports.VideoItem = VideoItem;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/FileItem/VideoItem.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/FileItem/useFileItem.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/FileItem/useFileItem.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useFileItem = void 0;\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst useKeyframeValue_1 = __webpack_require__(/*! ../../../common/useKeyframeValue */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useKeyframeValue.js\");\nconst useLayoutContext_1 = __webpack_require__(/*! ../../useLayoutContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/useLayoutContext.js\");\nconst DEFAULT_COLOR = 'rgba(0, 0, 0, 1)';\nfunction useFileItem(item, sectionId) {\n    const layoutId = (0, useLayoutContext_1.useLayoutContext)();\n    const radius = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.BorderRadius, (item, layoutId) => {\n        if (!layoutId)\n            return;\n        const layoutParams = item.layoutParams[layoutId];\n        return 'radius' in layoutParams ? layoutParams.radius : 0;\n    }, (animator, scroll, value) => value !== undefined ? animator.getRadius({ radius: value }, scroll).radius : undefined, sectionId, [layoutId]);\n    const strokeWidth = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.BorderWidth, (item, layoutId) => {\n        if (!layoutId)\n            return;\n        const layoutParams = item.layoutParams[layoutId];\n        return 'strokeWidth' in layoutParams ? layoutParams.strokeWidth : 0;\n    }, (animator, scroll, value) => value !== undefined ? animator.getBorderWidth({ borderWidth: value }, scroll).borderWidth : undefined, sectionId, [layoutId]);\n    const opacity = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.Opacity, (item, layoutId) => {\n        if (!layoutId)\n            return;\n        const layoutParams = item.layoutParams[layoutId];\n        return 'opacity' in layoutParams ? layoutParams.opacity : 1;\n    }, (animator, scroll, value) => value !== undefined ? animator.getOpacity({ opacity: value }, scroll).opacity : undefined, sectionId, [layoutId]);\n    const strokeColor = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.BorderColor, (item, layoutId) => {\n        if (!layoutId)\n            return;\n        const layoutParams = item.layoutParams[layoutId];\n        return 'strokeColor' in layoutParams ? layoutParams.strokeColor : DEFAULT_COLOR;\n    }, (animator, scroll, value) => value ? animator.getBorderColor({ color: value }, scroll).color : undefined, sectionId, [layoutId]);\n    const blur = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.Blur, (item, layoutId) => {\n        if (!layoutId)\n            return;\n        const layoutParams = item.layoutParams[layoutId];\n        return 'blur' in layoutParams ? layoutParams.blur : 0;\n    }, (animator, scroll, value) => value !== undefined ? animator.getBlur({ blur: value }, scroll).blur : undefined, sectionId, [layoutId]);\n    return { radius, strokeWidth, opacity, strokeColor, blur };\n}\nexports.useFileItem = useFileItem;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy9GaWxlSXRlbS91c2VGaWxlSXRlbS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkIsY0FBYyxtQkFBTyxDQUFDLHFFQUFpQjtBQUN2QywyQkFBMkIsbUJBQU8sQ0FBQyw4R0FBa0M7QUFDckUsMkJBQTJCLG1CQUFPLENBQUMsd0dBQXdCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLDBFQUEwRSxlQUFlO0FBQzlGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLCtFQUErRSxvQkFBb0I7QUFDeEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssMkVBQTJFLGdCQUFnQjtBQUNoRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxpRUFBaUUsY0FBYztBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyx3RUFBd0UsYUFBYTtBQUMxRixhQUFhO0FBQ2I7QUFDQSxtQkFBbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbnRybC1zaXRlL3Nkay1uZXh0anMvbGliL2NvbXBvbmVudHMvaXRlbXMvRmlsZUl0ZW0vdXNlRmlsZUl0ZW0uanM/NTUxNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudXNlRmlsZUl0ZW0gPSB2b2lkIDA7XG5jb25zdCBzZGtfMSA9IHJlcXVpcmUoXCJAY250cmwtc2l0ZS9zZGtcIik7XG5jb25zdCB1c2VLZXlmcmFtZVZhbHVlXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vY29tbW9uL3VzZUtleWZyYW1lVmFsdWVcIik7XG5jb25zdCB1c2VMYXlvdXRDb250ZXh0XzEgPSByZXF1aXJlKFwiLi4vLi4vdXNlTGF5b3V0Q29udGV4dFwiKTtcbmNvbnN0IERFRkFVTFRfQ09MT1IgPSAncmdiYSgwLCAwLCAwLCAxKSc7XG5mdW5jdGlvbiB1c2VGaWxlSXRlbShpdGVtLCBzZWN0aW9uSWQpIHtcbiAgICBjb25zdCBsYXlvdXRJZCA9ICgwLCB1c2VMYXlvdXRDb250ZXh0XzEudXNlTGF5b3V0Q29udGV4dCkoKTtcbiAgICBjb25zdCByYWRpdXMgPSAoMCwgdXNlS2V5ZnJhbWVWYWx1ZV8xLnVzZUtleWZyYW1lVmFsdWUpKGl0ZW0sIHNka18xLktleWZyYW1lVHlwZS5Cb3JkZXJSYWRpdXMsIChpdGVtLCBsYXlvdXRJZCkgPT4ge1xuICAgICAgICBpZiAoIWxheW91dElkKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBsYXlvdXRQYXJhbXMgPSBpdGVtLmxheW91dFBhcmFtc1tsYXlvdXRJZF07XG4gICAgICAgIHJldHVybiAncmFkaXVzJyBpbiBsYXlvdXRQYXJhbXMgPyBsYXlvdXRQYXJhbXMucmFkaXVzIDogMDtcbiAgICB9LCAoYW5pbWF0b3IsIHNjcm9sbCwgdmFsdWUpID0+IHZhbHVlICE9PSB1bmRlZmluZWQgPyBhbmltYXRvci5nZXRSYWRpdXMoeyByYWRpdXM6IHZhbHVlIH0sIHNjcm9sbCkucmFkaXVzIDogdW5kZWZpbmVkLCBzZWN0aW9uSWQsIFtsYXlvdXRJZF0pO1xuICAgIGNvbnN0IHN0cm9rZVdpZHRoID0gKDAsIHVzZUtleWZyYW1lVmFsdWVfMS51c2VLZXlmcmFtZVZhbHVlKShpdGVtLCBzZGtfMS5LZXlmcmFtZVR5cGUuQm9yZGVyV2lkdGgsIChpdGVtLCBsYXlvdXRJZCkgPT4ge1xuICAgICAgICBpZiAoIWxheW91dElkKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBsYXlvdXRQYXJhbXMgPSBpdGVtLmxheW91dFBhcmFtc1tsYXlvdXRJZF07XG4gICAgICAgIHJldHVybiAnc3Ryb2tlV2lkdGgnIGluIGxheW91dFBhcmFtcyA/IGxheW91dFBhcmFtcy5zdHJva2VXaWR0aCA6IDA7XG4gICAgfSwgKGFuaW1hdG9yLCBzY3JvbGwsIHZhbHVlKSA9PiB2YWx1ZSAhPT0gdW5kZWZpbmVkID8gYW5pbWF0b3IuZ2V0Qm9yZGVyV2lkdGgoeyBib3JkZXJXaWR0aDogdmFsdWUgfSwgc2Nyb2xsKS5ib3JkZXJXaWR0aCA6IHVuZGVmaW5lZCwgc2VjdGlvbklkLCBbbGF5b3V0SWRdKTtcbiAgICBjb25zdCBvcGFjaXR5ID0gKDAsIHVzZUtleWZyYW1lVmFsdWVfMS51c2VLZXlmcmFtZVZhbHVlKShpdGVtLCBzZGtfMS5LZXlmcmFtZVR5cGUuT3BhY2l0eSwgKGl0ZW0sIGxheW91dElkKSA9PiB7XG4gICAgICAgIGlmICghbGF5b3V0SWQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IGxheW91dFBhcmFtcyA9IGl0ZW0ubGF5b3V0UGFyYW1zW2xheW91dElkXTtcbiAgICAgICAgcmV0dXJuICdvcGFjaXR5JyBpbiBsYXlvdXRQYXJhbXMgPyBsYXlvdXRQYXJhbXMub3BhY2l0eSA6IDE7XG4gICAgfSwgKGFuaW1hdG9yLCBzY3JvbGwsIHZhbHVlKSA9PiB2YWx1ZSAhPT0gdW5kZWZpbmVkID8gYW5pbWF0b3IuZ2V0T3BhY2l0eSh7IG9wYWNpdHk6IHZhbHVlIH0sIHNjcm9sbCkub3BhY2l0eSA6IHVuZGVmaW5lZCwgc2VjdGlvbklkLCBbbGF5b3V0SWRdKTtcbiAgICBjb25zdCBzdHJva2VDb2xvciA9ICgwLCB1c2VLZXlmcmFtZVZhbHVlXzEudXNlS2V5ZnJhbWVWYWx1ZSkoaXRlbSwgc2RrXzEuS2V5ZnJhbWVUeXBlLkJvcmRlckNvbG9yLCAoaXRlbSwgbGF5b3V0SWQpID0+IHtcbiAgICAgICAgaWYgKCFsYXlvdXRJZClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgbGF5b3V0UGFyYW1zID0gaXRlbS5sYXlvdXRQYXJhbXNbbGF5b3V0SWRdO1xuICAgICAgICByZXR1cm4gJ3N0cm9rZUNvbG9yJyBpbiBsYXlvdXRQYXJhbXMgPyBsYXlvdXRQYXJhbXMuc3Ryb2tlQ29sb3IgOiBERUZBVUxUX0NPTE9SO1xuICAgIH0sIChhbmltYXRvciwgc2Nyb2xsLCB2YWx1ZSkgPT4gdmFsdWUgPyBhbmltYXRvci5nZXRCb3JkZXJDb2xvcih7IGNvbG9yOiB2YWx1ZSB9LCBzY3JvbGwpLmNvbG9yIDogdW5kZWZpbmVkLCBzZWN0aW9uSWQsIFtsYXlvdXRJZF0pO1xuICAgIGNvbnN0IGJsdXIgPSAoMCwgdXNlS2V5ZnJhbWVWYWx1ZV8xLnVzZUtleWZyYW1lVmFsdWUpKGl0ZW0sIHNka18xLktleWZyYW1lVHlwZS5CbHVyLCAoaXRlbSwgbGF5b3V0SWQpID0+IHtcbiAgICAgICAgaWYgKCFsYXlvdXRJZClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgbGF5b3V0UGFyYW1zID0gaXRlbS5sYXlvdXRQYXJhbXNbbGF5b3V0SWRdO1xuICAgICAgICByZXR1cm4gJ2JsdXInIGluIGxheW91dFBhcmFtcyA/IGxheW91dFBhcmFtcy5ibHVyIDogMDtcbiAgICB9LCAoYW5pbWF0b3IsIHNjcm9sbCwgdmFsdWUpID0+IHZhbHVlICE9PSB1bmRlZmluZWQgPyBhbmltYXRvci5nZXRCbHVyKHsgYmx1cjogdmFsdWUgfSwgc2Nyb2xsKS5ibHVyIDogdW5kZWZpbmVkLCBzZWN0aW9uSWQsIFtsYXlvdXRJZF0pO1xuICAgIHJldHVybiB7IHJhZGl1cywgc3Ryb2tlV2lkdGgsIG9wYWNpdHksIHN0cm9rZUNvbG9yLCBibHVyIH07XG59XG5leHBvcnRzLnVzZUZpbGVJdGVtID0gdXNlRmlsZUl0ZW07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/FileItem/useFileItem.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/GroupItem/GroupItem.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/GroupItem/GroupItem.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.GroupItem = void 0;\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst Item_1 = __webpack_require__(/*! ../Item */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/Item.js\");\nconst style_1 = __importDefault(__webpack_require__(/*! styled-jsx/style */ \"./node_modules/next/node_modules/styled-jsx/style.js\"));\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst LinkWrapper_1 = __webpack_require__(/*! ../LinkWrapper */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/LinkWrapper.js\");\nconst useRegisterResize_1 = __webpack_require__(/*! ../../../common/useRegisterResize */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useRegisterResize.js\");\nconst useCntrlContext_1 = __webpack_require__(/*! ../../../provider/useCntrlContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/useCntrlContext.js\");\nconst useItemAngle_1 = __webpack_require__(/*! ../useItemAngle */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemAngle.js\");\nconst useGroupItem_1 = __webpack_require__(/*! ./useGroupItem */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/GroupItem/useGroupItem.js\");\nconst getStyleFromItemStateAndParams_1 = __webpack_require__(/*! ../../../utils/getStyleFromItemStateAndParams */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getStyleFromItemStateAndParams.js\");\nconst CompoundChild_1 = __webpack_require__(/*! ../CompoundItem/CompoundChild */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/CompoundItem/CompoundChild.js\");\nconst GroupItem = ({ item, sectionId, onResize, interactionCtrl, onVisibilityChange, isInCompound }) => {\n    var _a, _b, _c, _d, _e, _f;\n    const id = (0, react_1.useId)();\n    const { items } = item;\n    const itemAngle = (0, useItemAngle_1.useItemAngle)(item, sectionId);\n    const { layouts } = (0, useCntrlContext_1.useCntrlContext)();\n    const { opacity: itemOpacity, blur: itemBlur } = (0, useGroupItem_1.useGroupItem)(item, sectionId);\n    const layoutValues = [item.area, item.layoutParams];\n    const [ref, setRef] = (0, react_1.useState)(null);\n    (0, useRegisterResize_1.useRegisterResize)(ref, onResize);\n    const stateParams = interactionCtrl === null || interactionCtrl === void 0 ? void 0 : interactionCtrl.getState(['opacity', 'angle', 'blur']);\n    const angle = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)((_a = stateParams === null || stateParams === void 0 ? void 0 : stateParams.styles) === null || _a === void 0 ? void 0 : _a.angle, itemAngle);\n    const opacity = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)((_b = stateParams === null || stateParams === void 0 ? void 0 : stateParams.styles) === null || _b === void 0 ? void 0 : _b.opacity, itemOpacity);\n    const blur = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)((_c = stateParams === null || stateParams === void 0 ? void 0 : stateParams.styles) === null || _c === void 0 ? void 0 : _c.blur, itemBlur);\n    const isInteractive = opacity !== 0 && opacity !== undefined;\n    (0, react_1.useEffect)(() => {\n        onVisibilityChange === null || onVisibilityChange === void 0 ? void 0 : onVisibilityChange(isInteractive);\n    }, [isInteractive, onVisibilityChange]);\n    return ((0, jsx_runtime_1.jsx)(LinkWrapper_1.LinkWrapper, { url: (_d = item.link) === null || _d === void 0 ? void 0 : _d.url, target: (_e = item.link) === null || _e === void 0 ? void 0 : _e.target, children: (0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(\"div\", { className: `group-${item.id}`, ref: setRef, style: Object.assign(Object.assign(Object.assign(Object.assign({}, (opacity !== undefined ? { opacity } : {})), (angle !== undefined ? { transform: `rotate(${angle}deg) translateZ(0)` } : {})), (blur !== undefined ? { filter: `blur(${blur * 100}vw)` } : {})), { transition: (_f = stateParams === null || stateParams === void 0 ? void 0 : stateParams.transition) !== null && _f !== void 0 ? _f : 'none' }), children: items && items.map(item => isInCompound ? ((0, jsx_runtime_1.jsx)(CompoundChild_1.CompoundChild, { item: item, sectionId: sectionId, isParentVisible: isInteractive }, item.id)) : ((0, jsx_runtime_1.jsx)(Item_1.Item, { item: item, sectionId: sectionId, isParentVisible: isInteractive, isInGroup: true }, item.id))) }), (0, jsx_runtime_1.jsx)(style_1.default, { id: id, children: `\r\n        .group-${item.id} {\r\n          position: absolute;\r\n          width: 100%;\r\n          height: 100%;\r\n          box-sizing: border-box;\r\n        }\r\n        ${(0, sdk_1.getLayoutStyles)(layouts, layoutValues, ([area, layoutParams]) => {\n                        return (`\r\n            .group-${item.id} {\r\n              opacity: ${layoutParams.opacity};\r\n              transform: rotate(${area.angle}deg) translateZ(0);\r\n            }\r\n          `);\n                    })}\r\n      ` })] }) }));\n};\nexports.GroupItem = GroupItem;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy9Hcm91cEl0ZW0vR3JvdXBJdGVtLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCO0FBQ2pCLHNCQUFzQixtQkFBTyxDQUFDLDhEQUFtQjtBQUNqRCxnQkFBZ0IsbUJBQU8sQ0FBQyw0Q0FBTztBQUMvQixlQUFlLG1CQUFPLENBQUMsbUZBQVM7QUFDaEMsZ0NBQWdDLG1CQUFPLENBQUMsOEVBQWtCO0FBQzFELGNBQWMsbUJBQU8sQ0FBQyxxRUFBaUI7QUFDdkMsc0JBQXNCLG1CQUFPLENBQUMsaUdBQWdCO0FBQzlDLDRCQUE0QixtQkFBTyxDQUFDLGdIQUFtQztBQUN2RSwwQkFBMEIsbUJBQU8sQ0FBQyxnSEFBbUM7QUFDckUsdUJBQXVCLG1CQUFPLENBQUMsbUdBQWlCO0FBQ2hELHVCQUF1QixtQkFBTyxDQUFDLDRHQUFnQjtBQUMvQyx5Q0FBeUMsbUJBQU8sQ0FBQyx3SUFBK0M7QUFDaEcsd0JBQXdCLG1CQUFPLENBQUMsK0hBQStCO0FBQy9ELHFCQUFxQiw4RUFBOEU7QUFDbkc7QUFDQTtBQUNBLFlBQVksUUFBUTtBQUNwQjtBQUNBLFlBQVksVUFBVTtBQUN0QixZQUFZLHVDQUF1QztBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxnRUFBZ0Usd01BQXdNLDJDQUEyQyxvQkFBb0IsUUFBUSxpRkFBaUYsNkJBQTZCLFVBQVUsSUFBSSw2QkFBNkIscUJBQXFCLE1BQU0sc0JBQXNCLElBQUksNEJBQTRCLGdCQUFnQixXQUFXLE9BQU8sSUFBSSxNQUFNLDZJQUE2SSxnSEFBZ0gsa0VBQWtFLHFEQUFxRCxtRkFBbUYsY0FBYyw2Q0FBNkM7QUFDdm1DLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0EscUJBQXFCO0FBQ3JCLHlCQUF5QjtBQUN6QixrQ0FBa0MsV0FBVztBQUM3QztBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCLFNBQVMsSUFBSSxHQUFHO0FBQ2hCO0FBQ0EsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi9jb21wb25lbnRzL2l0ZW1zL0dyb3VwSXRlbS9Hcm91cEl0ZW0uanM/MDQ2MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuR3JvdXBJdGVtID0gdm9pZCAwO1xuY29uc3QganN4X3J1bnRpbWVfMSA9IHJlcXVpcmUoXCJyZWFjdC9qc3gtcnVudGltZVwiKTtcbmNvbnN0IHJlYWN0XzEgPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCBJdGVtXzEgPSByZXF1aXJlKFwiLi4vSXRlbVwiKTtcbmNvbnN0IHN0eWxlXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcInN0eWxlZC1qc3gvc3R5bGVcIikpO1xuY29uc3Qgc2RrXzEgPSByZXF1aXJlKFwiQGNudHJsLXNpdGUvc2RrXCIpO1xuY29uc3QgTGlua1dyYXBwZXJfMSA9IHJlcXVpcmUoXCIuLi9MaW5rV3JhcHBlclwiKTtcbmNvbnN0IHVzZVJlZ2lzdGVyUmVzaXplXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vY29tbW9uL3VzZVJlZ2lzdGVyUmVzaXplXCIpO1xuY29uc3QgdXNlQ250cmxDb250ZXh0XzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vcHJvdmlkZXIvdXNlQ250cmxDb250ZXh0XCIpO1xuY29uc3QgdXNlSXRlbUFuZ2xlXzEgPSByZXF1aXJlKFwiLi4vdXNlSXRlbUFuZ2xlXCIpO1xuY29uc3QgdXNlR3JvdXBJdGVtXzEgPSByZXF1aXJlKFwiLi91c2VHcm91cEl0ZW1cIik7XG5jb25zdCBnZXRTdHlsZUZyb21JdGVtU3RhdGVBbmRQYXJhbXNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi91dGlscy9nZXRTdHlsZUZyb21JdGVtU3RhdGVBbmRQYXJhbXNcIik7XG5jb25zdCBDb21wb3VuZENoaWxkXzEgPSByZXF1aXJlKFwiLi4vQ29tcG91bmRJdGVtL0NvbXBvdW5kQ2hpbGRcIik7XG5jb25zdCBHcm91cEl0ZW0gPSAoeyBpdGVtLCBzZWN0aW9uSWQsIG9uUmVzaXplLCBpbnRlcmFjdGlvbkN0cmwsIG9uVmlzaWJpbGl0eUNoYW5nZSwgaXNJbkNvbXBvdW5kIH0pID0+IHtcbiAgICB2YXIgX2EsIF9iLCBfYywgX2QsIF9lLCBfZjtcbiAgICBjb25zdCBpZCA9ICgwLCByZWFjdF8xLnVzZUlkKSgpO1xuICAgIGNvbnN0IHsgaXRlbXMgfSA9IGl0ZW07XG4gICAgY29uc3QgaXRlbUFuZ2xlID0gKDAsIHVzZUl0ZW1BbmdsZV8xLnVzZUl0ZW1BbmdsZSkoaXRlbSwgc2VjdGlvbklkKTtcbiAgICBjb25zdCB7IGxheW91dHMgfSA9ICgwLCB1c2VDbnRybENvbnRleHRfMS51c2VDbnRybENvbnRleHQpKCk7XG4gICAgY29uc3QgeyBvcGFjaXR5OiBpdGVtT3BhY2l0eSwgYmx1cjogaXRlbUJsdXIgfSA9ICgwLCB1c2VHcm91cEl0ZW1fMS51c2VHcm91cEl0ZW0pKGl0ZW0sIHNlY3Rpb25JZCk7XG4gICAgY29uc3QgbGF5b3V0VmFsdWVzID0gW2l0ZW0uYXJlYSwgaXRlbS5sYXlvdXRQYXJhbXNdO1xuICAgIGNvbnN0IFtyZWYsIHNldFJlZl0gPSAoMCwgcmVhY3RfMS51c2VTdGF0ZSkobnVsbCk7XG4gICAgKDAsIHVzZVJlZ2lzdGVyUmVzaXplXzEudXNlUmVnaXN0ZXJSZXNpemUpKHJlZiwgb25SZXNpemUpO1xuICAgIGNvbnN0IHN0YXRlUGFyYW1zID0gaW50ZXJhY3Rpb25DdHJsID09PSBudWxsIHx8IGludGVyYWN0aW9uQ3RybCA9PT0gdm9pZCAwID8gdm9pZCAwIDogaW50ZXJhY3Rpb25DdHJsLmdldFN0YXRlKFsnb3BhY2l0eScsICdhbmdsZScsICdibHVyJ10pO1xuICAgIGNvbnN0IGFuZ2xlID0gKDAsIGdldFN0eWxlRnJvbUl0ZW1TdGF0ZUFuZFBhcmFtc18xLmdldFN0eWxlRnJvbUl0ZW1TdGF0ZUFuZFBhcmFtcykoKF9hID0gc3RhdGVQYXJhbXMgPT09IG51bGwgfHwgc3RhdGVQYXJhbXMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHN0YXRlUGFyYW1zLnN0eWxlcykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmFuZ2xlLCBpdGVtQW5nbGUpO1xuICAgIGNvbnN0IG9wYWNpdHkgPSAoMCwgZ2V0U3R5bGVGcm9tSXRlbVN0YXRlQW5kUGFyYW1zXzEuZ2V0U3R5bGVGcm9tSXRlbVN0YXRlQW5kUGFyYW1zKSgoX2IgPSBzdGF0ZVBhcmFtcyA9PT0gbnVsbCB8fCBzdGF0ZVBhcmFtcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogc3RhdGVQYXJhbXMuc3R5bGVzKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Iub3BhY2l0eSwgaXRlbU9wYWNpdHkpO1xuICAgIGNvbnN0IGJsdXIgPSAoMCwgZ2V0U3R5bGVGcm9tSXRlbVN0YXRlQW5kUGFyYW1zXzEuZ2V0U3R5bGVGcm9tSXRlbVN0YXRlQW5kUGFyYW1zKSgoX2MgPSBzdGF0ZVBhcmFtcyA9PT0gbnVsbCB8fCBzdGF0ZVBhcmFtcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogc3RhdGVQYXJhbXMuc3R5bGVzKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MuYmx1ciwgaXRlbUJsdXIpO1xuICAgIGNvbnN0IGlzSW50ZXJhY3RpdmUgPSBvcGFjaXR5ICE9PSAwICYmIG9wYWNpdHkgIT09IHVuZGVmaW5lZDtcbiAgICAoMCwgcmVhY3RfMS51c2VFZmZlY3QpKCgpID0+IHtcbiAgICAgICAgb25WaXNpYmlsaXR5Q2hhbmdlID09PSBudWxsIHx8IG9uVmlzaWJpbGl0eUNoYW5nZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogb25WaXNpYmlsaXR5Q2hhbmdlKGlzSW50ZXJhY3RpdmUpO1xuICAgIH0sIFtpc0ludGVyYWN0aXZlLCBvblZpc2liaWxpdHlDaGFuZ2VdKTtcbiAgICByZXR1cm4gKCgwLCBqc3hfcnVudGltZV8xLmpzeCkoTGlua1dyYXBwZXJfMS5MaW5rV3JhcHBlciwgeyB1cmw6IChfZCA9IGl0ZW0ubGluaykgPT09IG51bGwgfHwgX2QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kLnVybCwgdGFyZ2V0OiAoX2UgPSBpdGVtLmxpbmspID09PSBudWxsIHx8IF9lID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZS50YXJnZXQsIGNoaWxkcmVuOiAoMCwganN4X3J1bnRpbWVfMS5qc3hzKShqc3hfcnVudGltZV8xLkZyYWdtZW50LCB7IGNoaWxkcmVuOiBbKDAsIGpzeF9ydW50aW1lXzEuanN4KShcImRpdlwiLCB7IGNsYXNzTmFtZTogYGdyb3VwLSR7aXRlbS5pZH1gLCByZWY6IHNldFJlZiwgc3R5bGU6IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIChvcGFjaXR5ICE9PSB1bmRlZmluZWQgPyB7IG9wYWNpdHkgfSA6IHt9KSksIChhbmdsZSAhPT0gdW5kZWZpbmVkID8geyB0cmFuc2Zvcm06IGByb3RhdGUoJHthbmdsZX1kZWcpIHRyYW5zbGF0ZVooMClgIH0gOiB7fSkpLCAoYmx1ciAhPT0gdW5kZWZpbmVkID8geyBmaWx0ZXI6IGBibHVyKCR7Ymx1ciAqIDEwMH12dylgIH0gOiB7fSkpLCB7IHRyYW5zaXRpb246IChfZiA9IHN0YXRlUGFyYW1zID09PSBudWxsIHx8IHN0YXRlUGFyYW1zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzdGF0ZVBhcmFtcy50cmFuc2l0aW9uKSAhPT0gbnVsbCAmJiBfZiAhPT0gdm9pZCAwID8gX2YgOiAnbm9uZScgfSksIGNoaWxkcmVuOiBpdGVtcyAmJiBpdGVtcy5tYXAoaXRlbSA9PiBpc0luQ29tcG91bmQgPyAoKDAsIGpzeF9ydW50aW1lXzEuanN4KShDb21wb3VuZENoaWxkXzEuQ29tcG91bmRDaGlsZCwgeyBpdGVtOiBpdGVtLCBzZWN0aW9uSWQ6IHNlY3Rpb25JZCwgaXNQYXJlbnRWaXNpYmxlOiBpc0ludGVyYWN0aXZlIH0sIGl0ZW0uaWQpKSA6ICgoMCwganN4X3J1bnRpbWVfMS5qc3gpKEl0ZW1fMS5JdGVtLCB7IGl0ZW06IGl0ZW0sIHNlY3Rpb25JZDogc2VjdGlvbklkLCBpc1BhcmVudFZpc2libGU6IGlzSW50ZXJhY3RpdmUsIGlzSW5Hcm91cDogdHJ1ZSB9LCBpdGVtLmlkKSkpIH0pLCAoMCwganN4X3J1bnRpbWVfMS5qc3gpKHN0eWxlXzEuZGVmYXVsdCwgeyBpZDogaWQsIGNoaWxkcmVuOiBgXHJcbiAgICAgICAgLmdyb3VwLSR7aXRlbS5pZH0ge1xyXG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgICAgIH1cclxuICAgICAgICAkeygwLCBzZGtfMS5nZXRMYXlvdXRTdHlsZXMpKGxheW91dHMsIGxheW91dFZhbHVlcywgKFthcmVhLCBsYXlvdXRQYXJhbXNdKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKGBcclxuICAgICAgICAgICAgLmdyb3VwLSR7aXRlbS5pZH0ge1xyXG4gICAgICAgICAgICAgIG9wYWNpdHk6ICR7bGF5b3V0UGFyYW1zLm9wYWNpdHl9O1xyXG4gICAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKCR7YXJlYS5hbmdsZX1kZWcpIHRyYW5zbGF0ZVooMCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIGApO1xuICAgICAgICAgICAgICAgICAgICB9KX1cclxuICAgICAgYCB9KV0gfSkgfSkpO1xufTtcbmV4cG9ydHMuR3JvdXBJdGVtID0gR3JvdXBJdGVtO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/GroupItem/GroupItem.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/GroupItem/useGroupItem.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/GroupItem/useGroupItem.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useGroupItem = void 0;\nconst useKeyframeValue_1 = __webpack_require__(/*! ../../../common/useKeyframeValue */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useKeyframeValue.js\");\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst useLayoutContext_1 = __webpack_require__(/*! ../../useLayoutContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/useLayoutContext.js\");\nfunction useGroupItem(item, sectionId) {\n    const layoutId = (0, useLayoutContext_1.useLayoutContext)();\n    const opacity = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.Opacity, (item, layoutId) => {\n        if (!layoutId)\n            return;\n        const layoutParams = item.layoutParams[layoutId];\n        return 'opacity' in layoutParams ? layoutParams.opacity : 1;\n    }, (animator, scroll, value) => value !== undefined ? animator.getOpacity({ opacity: value }, scroll).opacity : undefined, sectionId, [layoutId]);\n    const blur = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.Blur, (item, layoutId) => {\n        if (!layoutId)\n            return;\n        const layoutParams = item.layoutParams[layoutId];\n        return 'blur' in layoutParams ? layoutParams.blur : 0;\n    }, (animator, scroll, value) => value !== undefined ? animator.getBlur({ blur: value }, scroll).blur : undefined, sectionId, [layoutId]);\n    return { opacity, blur };\n}\nexports.useGroupItem = useGroupItem;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy9Hcm91cEl0ZW0vdXNlR3JvdXBJdGVtLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQiwyQkFBMkIsbUJBQU8sQ0FBQyw4R0FBa0M7QUFDckUsY0FBYyxtQkFBTyxDQUFDLHFFQUFpQjtBQUN2QywyQkFBMkIsbUJBQU8sQ0FBQyx3R0FBd0I7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLDJFQUEyRSxnQkFBZ0I7QUFDaEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssd0VBQXdFLGFBQWE7QUFDMUYsYUFBYTtBQUNiO0FBQ0Esb0JBQW9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi9jb21wb25lbnRzL2l0ZW1zL0dyb3VwSXRlbS91c2VHcm91cEl0ZW0uanM/YjIwOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudXNlR3JvdXBJdGVtID0gdm9pZCAwO1xuY29uc3QgdXNlS2V5ZnJhbWVWYWx1ZV8xID0gcmVxdWlyZShcIi4uLy4uLy4uL2NvbW1vbi91c2VLZXlmcmFtZVZhbHVlXCIpO1xuY29uc3Qgc2RrXzEgPSByZXF1aXJlKFwiQGNudHJsLXNpdGUvc2RrXCIpO1xuY29uc3QgdXNlTGF5b3V0Q29udGV4dF8xID0gcmVxdWlyZShcIi4uLy4uL3VzZUxheW91dENvbnRleHRcIik7XG5mdW5jdGlvbiB1c2VHcm91cEl0ZW0oaXRlbSwgc2VjdGlvbklkKSB7XG4gICAgY29uc3QgbGF5b3V0SWQgPSAoMCwgdXNlTGF5b3V0Q29udGV4dF8xLnVzZUxheW91dENvbnRleHQpKCk7XG4gICAgY29uc3Qgb3BhY2l0eSA9ICgwLCB1c2VLZXlmcmFtZVZhbHVlXzEudXNlS2V5ZnJhbWVWYWx1ZSkoaXRlbSwgc2RrXzEuS2V5ZnJhbWVUeXBlLk9wYWNpdHksIChpdGVtLCBsYXlvdXRJZCkgPT4ge1xuICAgICAgICBpZiAoIWxheW91dElkKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBsYXlvdXRQYXJhbXMgPSBpdGVtLmxheW91dFBhcmFtc1tsYXlvdXRJZF07XG4gICAgICAgIHJldHVybiAnb3BhY2l0eScgaW4gbGF5b3V0UGFyYW1zID8gbGF5b3V0UGFyYW1zLm9wYWNpdHkgOiAxO1xuICAgIH0sIChhbmltYXRvciwgc2Nyb2xsLCB2YWx1ZSkgPT4gdmFsdWUgIT09IHVuZGVmaW5lZCA/IGFuaW1hdG9yLmdldE9wYWNpdHkoeyBvcGFjaXR5OiB2YWx1ZSB9LCBzY3JvbGwpLm9wYWNpdHkgOiB1bmRlZmluZWQsIHNlY3Rpb25JZCwgW2xheW91dElkXSk7XG4gICAgY29uc3QgYmx1ciA9ICgwLCB1c2VLZXlmcmFtZVZhbHVlXzEudXNlS2V5ZnJhbWVWYWx1ZSkoaXRlbSwgc2RrXzEuS2V5ZnJhbWVUeXBlLkJsdXIsIChpdGVtLCBsYXlvdXRJZCkgPT4ge1xuICAgICAgICBpZiAoIWxheW91dElkKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBsYXlvdXRQYXJhbXMgPSBpdGVtLmxheW91dFBhcmFtc1tsYXlvdXRJZF07XG4gICAgICAgIHJldHVybiAnYmx1cicgaW4gbGF5b3V0UGFyYW1zID8gbGF5b3V0UGFyYW1zLmJsdXIgOiAwO1xuICAgIH0sIChhbmltYXRvciwgc2Nyb2xsLCB2YWx1ZSkgPT4gdmFsdWUgIT09IHVuZGVmaW5lZCA/IGFuaW1hdG9yLmdldEJsdXIoeyBibHVyOiB2YWx1ZSB9LCBzY3JvbGwpLmJsdXIgOiB1bmRlZmluZWQsIHNlY3Rpb25JZCwgW2xheW91dElkXSk7XG4gICAgcmV0dXJuIHsgb3BhY2l0eSwgYmx1ciB9O1xufVxuZXhwb3J0cy51c2VHcm91cEl0ZW0gPSB1c2VHcm91cEl0ZW07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/GroupItem/useGroupItem.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/Item.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/Item.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Item = void 0;\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst style_1 = __importDefault(__webpack_require__(/*! styled-jsx/style */ \"./node_modules/next/node_modules/styled-jsx/style.js\"));\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst useCntrlContext_1 = __webpack_require__(/*! ../../provider/useCntrlContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/useCntrlContext.js\");\nconst useItemScale_1 = __webpack_require__(/*! ./useItemScale */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemScale.js\");\nconst ScaleAnchorMap_1 = __webpack_require__(/*! ../../utils/ScaleAnchorMap */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/ScaleAnchorMap.js\");\nconst useSectionHeightMap_1 = __webpack_require__(/*! ../Section/useSectionHeightMap */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/Section/useSectionHeightMap.js\");\nconst getItemTopStyle_1 = __webpack_require__(/*! ../../utils/getItemTopStyle */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getItemTopStyle.js\");\nconst useStickyItemTop_1 = __webpack_require__(/*! ./useStickyItemTop */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useStickyItemTop.js\");\nconst getAnchoredItemTop_1 = __webpack_require__(/*! ../../utils/getAnchoredItemTop */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getAnchoredItemTop.js\");\nconst useLayoutContext_1 = __webpack_require__(/*! ../useLayoutContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/useLayoutContext.js\");\nconst ArticleRectContext_1 = __webpack_require__(/*! ../../provider/ArticleRectContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/ArticleRectContext.js\");\nconst useExemplary_1 = __webpack_require__(/*! ../../common/useExemplary */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useExemplary.js\");\nconst KeyframesContext_1 = __webpack_require__(/*! ../../provider/KeyframesContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/KeyframesContext.js\");\nconst useItemInteractionCtrl_1 = __webpack_require__(/*! ../../interactions/useItemInteractionCtrl */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/interactions/useItemInteractionCtrl.js\");\nconst isItemType_1 = __webpack_require__(/*! ../../utils/isItemType */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/isItemType.js\");\nconst RichTextWrapper_1 = __webpack_require__(/*! ./RichTextWrapper */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/RichTextWrapper.js\");\nconst itemsMap_1 = __webpack_require__(/*! ./itemsMap */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/itemsMap.js\");\nconst useItemTriggers_1 = __webpack_require__(/*! ./useItemTriggers */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemTriggers.js\");\nconst useSizing_1 = __webpack_require__(/*! ./useSizing */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useSizing.js\");\nconst useItemPointerEvents_1 = __webpack_require__(/*! ./useItemPointerEvents */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemPointerEvents.js\");\nconst useItemArea_1 = __webpack_require__(/*! ./useItemArea */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemArea.js\");\nconst useDraggable_1 = __webpack_require__(/*! ./useDraggable */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useDraggable.js\");\nconst stickyFix = `\r\n  -webkit-transform: translate3d(0, 0, 0);\r\n  transform: translate3d(0, 0, 0);\r\n`;\nconst noop = () => null;\nconst Item = ({ item, sectionId, articleHeight, isParentVisible = true, isInGroup = false }) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n    const itemWrapperRef = (0, react_1.useRef)(null);\n    const itemInnerRef = (0, react_1.useRef)(null);\n    const rectObserver = (0, react_1.useContext)(ArticleRectContext_1.ArticleRectContext);\n    const keyframesRepo = (0, react_1.useContext)(KeyframesContext_1.KeyframesContext);\n    const id = (0, react_1.useId)();\n    const keyframes = (0, react_1.useMemo)(() => keyframesRepo.getItemKeyframes(item.id), [keyframesRepo, item.id]);\n    const { layouts } = (0, useCntrlContext_1.useCntrlContext)();\n    const layout = (0, useLayoutContext_1.useLayoutContext)();\n    const exemplary = (0, useExemplary_1.useExemplary)();\n    const { handleVisibilityChange, allowPointerEvents } = (0, useItemPointerEvents_1.useItemPointerEvents)((_a = item.commonParams.pointerEvents) !== null && _a !== void 0 ? _a : 'when_visible', isParentVisible);\n    const [wrapperHeight, setWrapperHeight] = (0, react_1.useState)(undefined);\n    const [itemHeight, setItemHeight] = (0, react_1.useState)(undefined);\n    const itemScale = (0, useItemScale_1.useItemScale)(item, sectionId);\n    const interactionCtrl = (0, useItemInteractionCtrl_1.useItemInteractionCtrl)(item.id);\n    const triggers = (0, useItemTriggers_1.useItemTriggers)(interactionCtrl);\n    const [position, setPosition] = (0, react_1.useState)({ x: 0, y: 0 });\n    const [isDraggingActive, setIsDraggingActive] = (0, react_1.useState)(false);\n    const wrapperStateProps = interactionCtrl === null || interactionCtrl === void 0 ? void 0 : interactionCtrl.getState(['top', 'left']);\n    const innerStateProps = interactionCtrl === null || interactionCtrl === void 0 ? void 0 : interactionCtrl.getState(['width', 'height', 'scale', 'top', 'left']);\n    const { width, height, top, left } = (0, useItemArea_1.useItemArea)(item, sectionId, {\n        top: (_b = wrapperStateProps === null || wrapperStateProps === void 0 ? void 0 : wrapperStateProps.styles) === null || _b === void 0 ? void 0 : _b.top,\n        left: (_c = wrapperStateProps === null || wrapperStateProps === void 0 ? void 0 : wrapperStateProps.styles) === null || _c === void 0 ? void 0 : _c.left,\n        width: (_d = innerStateProps === null || innerStateProps === void 0 ? void 0 : innerStateProps.styles) === null || _d === void 0 ? void 0 : _d.width,\n        height: (_e = innerStateProps === null || innerStateProps === void 0 ? void 0 : innerStateProps.styles) === null || _e === void 0 ? void 0 : _e.height\n    });\n    const sectionHeight = (0, useSectionHeightMap_1.useSectionHeightData)(sectionId);\n    const stickyTop = (0, useStickyItemTop_1.useStickyItemTop)(item, sectionId, (_f = wrapperStateProps === null || wrapperStateProps === void 0 ? void 0 : wrapperStateProps.styles) === null || _f === void 0 ? void 0 : _f.top);\n    const layoutValues = [item.area, item.hidden];\n    layoutValues.push(item.sticky);\n    layoutValues.push(sectionHeight);\n    if (item.layoutParams) {\n        layoutValues.push(item.layoutParams);\n    }\n    const sizingAxis = (0, useSizing_1.useSizing)(item);\n    const ItemComponent = itemsMap_1.itemsMap[item.type] || noop;\n    const sectionTop = rectObserver ? rectObserver.getSectionTop(sectionId) : 0;\n    const layoutParams = layout ? item.layoutParams[layout] : undefined;\n    const isDraggable = layoutParams && 'isDraggable' in layoutParams ? layoutParams.isDraggable : undefined;\n    (0, useDraggable_1.useDraggable)({ draggableRef: itemInnerRef.current, isEnabled: isDraggable !== null && isDraggable !== void 0 ? isDraggable : false }, ({ startX, startY, currentX, currentY, lastX, lastY, drag }) => {\n        const item = itemInnerRef.current;\n        if (!item)\n            return;\n        if (drag) {\n            setIsDraggingActive(true);\n            setPosition({\n                x: (currentX - startX) + lastX,\n                y: (currentY - startY) + lastY\n            });\n        }\n        else {\n            setIsDraggingActive(false);\n        }\n    });\n    const handleItemResize = (height) => {\n        if (!layout)\n            return;\n        const sticky = item.sticky[layout];\n        if (!sticky || stickyTop === undefined || !articleHeight) {\n            setWrapperHeight(undefined);\n            return;\n        }\n        const itemArticleOffset = sectionTop / window.innerWidth + stickyTop;\n        const maxStickyTo = articleHeight - itemArticleOffset - height;\n        const end = sticky.to !== undefined\n            ? Math.min(maxStickyTo, sticky.to)\n            : articleHeight - itemArticleOffset - height;\n        const wrapperHeight = end - sticky.from + height;\n        setItemHeight(height);\n        setWrapperHeight(wrapperHeight);\n    };\n    const isRichText = (0, isItemType_1.isItemType)(item, sdk_1.ArticleItemType.RichText);\n    const anchorSide = layout ? item.area[layout].anchorSide : sdk_1.AnchorSide.Top;\n    const positionType = layout ? item.area[layout].positionType : sdk_1.PositionType.ScreenBased;\n    const isScreenBasedBottom = positionType === sdk_1.PositionType.ScreenBased && anchorSide === sdk_1.AnchorSide.Bottom;\n    const scale = (_h = (_g = innerStateProps === null || innerStateProps === void 0 ? void 0 : innerStateProps.styles) === null || _g === void 0 ? void 0 : _g.scale) !== null && _h !== void 0 ? _h : itemScale;\n    const hasClickTriggers = (_j = interactionCtrl === null || interactionCtrl === void 0 ? void 0 : interactionCtrl.getHasTrigger(item.id, 'click')) !== null && _j !== void 0 ? _j : false;\n    return ((0, jsx_runtime_1.jsxs)(\"div\", { className: `item-wrapper-${item.id}`, ref: itemWrapperRef, onTransitionEnd: (e) => {\n            var _a;\n            e.stopPropagation();\n            (_a = interactionCtrl === null || interactionCtrl === void 0 ? void 0 : interactionCtrl.handleTransitionEnd) === null || _a === void 0 ? void 0 : _a.call(interactionCtrl, e.propertyName);\n        }, style: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, (top !== undefined ? { top: isScreenBasedBottom ? 'unset' : (0, getItemTopStyle_1.getItemTopStyle)(top, anchorSide) } : {})), (left !== undefined ? { left: `${left * 100}vw` } : {})), (top !== undefined ? { bottom: isScreenBasedBottom ? `${-top * 100}vw` : 'unset' } : {})), (wrapperHeight !== undefined ? { height: `${wrapperHeight * 100}vw` } : {})), { transition: (_k = wrapperStateProps === null || wrapperStateProps === void 0 ? void 0 : wrapperStateProps.transition) !== null && _k !== void 0 ? _k : 'none' }), children: [(0, jsx_runtime_1.jsx)(\"div\", { suppressHydrationWarning: true, className: `item-${item.id}`, style: {\n                    opacity: (keyframes.length !== 0 && !layout) ? 0 : 1,\n                    top: `${stickyTop * 100}vw`,\n                    height: isRichText && itemHeight !== undefined ? `${itemHeight * 100}vw` : 'unset',\n                }, children: (0, jsx_runtime_1.jsx)(RichTextWrapper_1.RichTextWrapper, { isRichText: isRichText, children: (0, jsx_runtime_1.jsx)(\"div\", Object.assign({ className: `item-${item.id}-inner`, ref: itemInnerRef, style: Object.assign(Object.assign(Object.assign({ top: `${position.y}px`, left: `${position.x}px` }, ((width !== undefined && height !== undefined)\n                            ? {\n                                width: `${sizingAxis.x === 'manual'\n                                    ? isRichText\n                                        ? `${width * exemplary}px`\n                                        : `${width * 100}vw`\n                                    : 'max-content'}`,\n                                height: `${sizingAxis.y === 'manual' ? `${height * 100}vw` : 'unset'}`\n                            }\n                            : {})), (scale !== undefined ? { transform: `scale(${scale})`, WebkitTransform: `scale(${scale})` } : {})), { transition: (_l = innerStateProps === null || innerStateProps === void 0 ? void 0 : innerStateProps.transition) !== null && _l !== void 0 ? _l : 'none', cursor: isDraggingActive\n                                ? 'grabbing'\n                                : isDraggable\n                                    ? 'grab'\n                                    : hasClickTriggers\n                                        ? 'pointer'\n                                        : 'unset', pointerEvents: allowPointerEvents ? 'auto' : 'none', userSelect: isDraggable ? 'none' : 'unset', WebkitUserSelect: isDraggable ? 'none' : 'unset', MozUserSelect: isDraggable ? 'none' : 'unset', msUserSelect: isDraggable ? 'none' : 'unset' }) }, triggers, { children: (0, jsx_runtime_1.jsx)(ItemComponent, { item: item, sectionId: sectionId, onResize: handleItemResize, articleHeight: articleHeight, interactionCtrl: interactionCtrl, onVisibilityChange: handleVisibilityChange }) })) }) }), (0, jsx_runtime_1.jsx)(style_1.default, { id: id, children: `\r\n        ${(0, sdk_1.getLayoutStyles)(layouts, layoutValues, ([area, hidden, sticky, sectionHeight, layoutParams]) => {\n                    const sizingAxis = (0, useSizing_1.parseSizing)(layoutParams.sizing);\n                    const isScreenBasedBottom = area.positionType === sdk_1.PositionType.ScreenBased && area.anchorSide === sdk_1.AnchorSide.Bottom;\n                    const scaleAnchor = area.scaleAnchor;\n                    return (`\r\n            .item-${item.id} {\r\n              position: ${sticky ? 'sticky' : 'absolute'};\r\n              top: ${sticky ? `${(0, getAnchoredItemTop_1.getAnchoredItemTop)(area.top - sticky.from, sectionHeight, area.anchorSide)}` : 0};\r\n              transition: opacity 0.2s linear 0.1s;\r\n              pointer-events: none;\r\n              display: ${hidden ? 'none' : 'block'};\r\n              height: fit-content;\r\n            }\r\n            .item-${item.id}-inner {\r\n              width: ${sizingAxis.x === 'manual'\n                        ? `${area.width * 100}vw`\n                        : 'max-content'};\r\n              height: ${sizingAxis.y === 'manual' ? `${area.height * 100}vw` : 'unset'};\r\n              transform-origin: ${ScaleAnchorMap_1.ScaleAnchorMap[scaleAnchor]};\r\n              transform: scale(${area.scale});\r\n              position: relative;\r\n            }\r\n            .item-wrapper-${item.id} {\r\n              position: ${area.positionType === sdk_1.PositionType.ScreenBased ? 'fixed' : 'absolute'};\r\n              z-index: ${area.zIndex};\r\n              ${!isInGroup && stickyFix}\r\n              pointer-events: none;\r\n              bottom: ${isScreenBasedBottom ? `${-area.top * 100}vw` : 'unset'};\r\n              top: ${isScreenBasedBottom ? 'unset' : (0, getItemTopStyle_1.getItemTopStyle)(area.top, area.anchorSide)};\r\n              left: ${area.left * 100}vw;\r\n            }\r\n          `);\n                })}\r\n      ` })] }));\n};\nexports.Item = Item;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy9JdGVtLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsWUFBWTtBQUNaLHNCQUFzQixtQkFBTyxDQUFDLDhEQUFtQjtBQUNqRCxnQkFBZ0IsbUJBQU8sQ0FBQyw0Q0FBTztBQUMvQixnQ0FBZ0MsbUJBQU8sQ0FBQyw4RUFBa0I7QUFDMUQsY0FBYyxtQkFBTyxDQUFDLHFFQUFpQjtBQUN2QywwQkFBMEIsbUJBQU8sQ0FBQyw2R0FBZ0M7QUFDbEUsdUJBQXVCLG1CQUFPLENBQUMsa0dBQWdCO0FBQy9DLHlCQUF5QixtQkFBTyxDQUFDLHFHQUE0QjtBQUM3RCw4QkFBOEIsbUJBQU8sQ0FBQywySEFBZ0M7QUFDdEUsMEJBQTBCLG1CQUFPLENBQUMsdUdBQTZCO0FBQy9ELDJCQUEyQixtQkFBTyxDQUFDLDBHQUFvQjtBQUN2RCw2QkFBNkIsbUJBQU8sQ0FBQyw2R0FBZ0M7QUFDckUsMkJBQTJCLG1CQUFPLENBQUMscUdBQXFCO0FBQ3hELDZCQUE2QixtQkFBTyxDQUFDLG1IQUFtQztBQUN4RSx1QkFBdUIsbUJBQU8sQ0FBQyxtR0FBMkI7QUFDMUQsMkJBQTJCLG1CQUFPLENBQUMsK0dBQWlDO0FBQ3BFLGlDQUFpQyxtQkFBTyxDQUFDLG1JQUEyQztBQUNwRixxQkFBcUIsbUJBQU8sQ0FBQyw2RkFBd0I7QUFDckQsMEJBQTBCLG1CQUFPLENBQUMsd0dBQW1CO0FBQ3JELG1CQUFtQixtQkFBTyxDQUFDLDBGQUFZO0FBQ3ZDLDBCQUEwQixtQkFBTyxDQUFDLHdHQUFtQjtBQUNyRCxvQkFBb0IsbUJBQU8sQ0FBQyw0RkFBYTtBQUN6QywrQkFBK0IsbUJBQU8sQ0FBQyxrSEFBd0I7QUFDL0Qsc0JBQXNCLG1CQUFPLENBQUMsZ0dBQWU7QUFDN0MsdUJBQXVCLG1CQUFPLENBQUMsa0dBQWdCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMkVBQTJFO0FBQzNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxVQUFVO0FBQ3RCO0FBQ0E7QUFDQSxZQUFZLDZDQUE2QztBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTRELFlBQVk7QUFDeEU7QUFDQTtBQUNBO0FBQ0EsWUFBWSwyQkFBMkI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMscUhBQXFILEtBQUssd0RBQXdEO0FBQ3pOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QywyQkFBMkIsUUFBUTtBQUNoRjtBQUNBO0FBQ0E7QUFDQSxTQUFTLGlGQUFpRix5QkFBeUIsK0ZBQStGLElBQUksNEJBQTRCLFNBQVMsV0FBVyxNQUFNLElBQUksMkJBQTJCLGlDQUFpQyxXQUFXLGdCQUFnQixJQUFJLHFDQUFxQyxXQUFXLG9CQUFvQixNQUFNLElBQUksTUFBTSwrSkFBK0osOENBQThDLG1EQUFtRCxRQUFRO0FBQ3ZzQjtBQUNBLDRCQUE0QixnQkFBZ0I7QUFDNUMsd0VBQXdFLGlCQUFpQjtBQUN6RixpQkFBaUIsd0VBQXdFLGdGQUFnRixtQkFBbUIsUUFBUSwrRUFBK0UsUUFBUSxXQUFXLGNBQWMsV0FBVyxLQUFLO0FBQ3BVO0FBQ0EsMENBQTBDO0FBQzFDO0FBQ0EsNkNBQTZDLGtCQUFrQjtBQUMvRCw2Q0FBNkMsWUFBWTtBQUN6RCxvREFBb0Q7QUFDcEQsMkNBQTJDLCtCQUErQixhQUFhLGNBQWM7QUFDckc7QUFDQSxnQ0FBZ0MsNkJBQTZCLG9CQUFvQixNQUFNLDhCQUE4QixNQUFNLEtBQUssSUFBSSxNQUFNO0FBQzFJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtU0FBbVMsR0FBRyxjQUFjLGtEQUFrRCwwS0FBMEssR0FBRyxJQUFJLEdBQUcsNkNBQTZDO0FBQ3ZrQixVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEIsMEJBQTBCO0FBQzFCLHFCQUFxQixZQUFZLHFHQUFxRztBQUN0STtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQSxvQkFBb0IsUUFBUTtBQUM1Qix1QkFBdUI7QUFDdkIsNkJBQTZCLGlCQUFpQjtBQUM5QztBQUNBLHdCQUF3QiwrQkFBK0Isa0JBQWtCO0FBQ3pFLGtDQUFrQztBQUNsQyxpQ0FBaUMsV0FBVztBQUM1QztBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCLDBCQUEwQjtBQUMxQix5QkFBeUI7QUFDekIsZ0JBQWdCO0FBQ2hCO0FBQ0Esd0JBQXdCLHlCQUF5QixnQkFBZ0I7QUFDakUscUJBQXFCO0FBQ3JCLHNCQUFzQixnQkFBZ0I7QUFDdEM7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixTQUFTLElBQUk7QUFDYjtBQUNBLFlBQVkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbnRybC1zaXRlL3Nkay1uZXh0anMvbGliL2NvbXBvbmVudHMvaXRlbXMvSXRlbS5qcz9lMTBiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5JdGVtID0gdm9pZCAwO1xuY29uc3QganN4X3J1bnRpbWVfMSA9IHJlcXVpcmUoXCJyZWFjdC9qc3gtcnVudGltZVwiKTtcbmNvbnN0IHJlYWN0XzEgPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCBzdHlsZV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJzdHlsZWQtanN4L3N0eWxlXCIpKTtcbmNvbnN0IHNka18xID0gcmVxdWlyZShcIkBjbnRybC1zaXRlL3Nka1wiKTtcbmNvbnN0IHVzZUNudHJsQ29udGV4dF8xID0gcmVxdWlyZShcIi4uLy4uL3Byb3ZpZGVyL3VzZUNudHJsQ29udGV4dFwiKTtcbmNvbnN0IHVzZUl0ZW1TY2FsZV8xID0gcmVxdWlyZShcIi4vdXNlSXRlbVNjYWxlXCIpO1xuY29uc3QgU2NhbGVBbmNob3JNYXBfMSA9IHJlcXVpcmUoXCIuLi8uLi91dGlscy9TY2FsZUFuY2hvck1hcFwiKTtcbmNvbnN0IHVzZVNlY3Rpb25IZWlnaHRNYXBfMSA9IHJlcXVpcmUoXCIuLi9TZWN0aW9uL3VzZVNlY3Rpb25IZWlnaHRNYXBcIik7XG5jb25zdCBnZXRJdGVtVG9wU3R5bGVfMSA9IHJlcXVpcmUoXCIuLi8uLi91dGlscy9nZXRJdGVtVG9wU3R5bGVcIik7XG5jb25zdCB1c2VTdGlja3lJdGVtVG9wXzEgPSByZXF1aXJlKFwiLi91c2VTdGlja3lJdGVtVG9wXCIpO1xuY29uc3QgZ2V0QW5jaG9yZWRJdGVtVG9wXzEgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHMvZ2V0QW5jaG9yZWRJdGVtVG9wXCIpO1xuY29uc3QgdXNlTGF5b3V0Q29udGV4dF8xID0gcmVxdWlyZShcIi4uL3VzZUxheW91dENvbnRleHRcIik7XG5jb25zdCBBcnRpY2xlUmVjdENvbnRleHRfMSA9IHJlcXVpcmUoXCIuLi8uLi9wcm92aWRlci9BcnRpY2xlUmVjdENvbnRleHRcIik7XG5jb25zdCB1c2VFeGVtcGxhcnlfMSA9IHJlcXVpcmUoXCIuLi8uLi9jb21tb24vdXNlRXhlbXBsYXJ5XCIpO1xuY29uc3QgS2V5ZnJhbWVzQ29udGV4dF8xID0gcmVxdWlyZShcIi4uLy4uL3Byb3ZpZGVyL0tleWZyYW1lc0NvbnRleHRcIik7XG5jb25zdCB1c2VJdGVtSW50ZXJhY3Rpb25DdHJsXzEgPSByZXF1aXJlKFwiLi4vLi4vaW50ZXJhY3Rpb25zL3VzZUl0ZW1JbnRlcmFjdGlvbkN0cmxcIik7XG5jb25zdCBpc0l0ZW1UeXBlXzEgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHMvaXNJdGVtVHlwZVwiKTtcbmNvbnN0IFJpY2hUZXh0V3JhcHBlcl8xID0gcmVxdWlyZShcIi4vUmljaFRleHRXcmFwcGVyXCIpO1xuY29uc3QgaXRlbXNNYXBfMSA9IHJlcXVpcmUoXCIuL2l0ZW1zTWFwXCIpO1xuY29uc3QgdXNlSXRlbVRyaWdnZXJzXzEgPSByZXF1aXJlKFwiLi91c2VJdGVtVHJpZ2dlcnNcIik7XG5jb25zdCB1c2VTaXppbmdfMSA9IHJlcXVpcmUoXCIuL3VzZVNpemluZ1wiKTtcbmNvbnN0IHVzZUl0ZW1Qb2ludGVyRXZlbnRzXzEgPSByZXF1aXJlKFwiLi91c2VJdGVtUG9pbnRlckV2ZW50c1wiKTtcbmNvbnN0IHVzZUl0ZW1BcmVhXzEgPSByZXF1aXJlKFwiLi91c2VJdGVtQXJlYVwiKTtcbmNvbnN0IHVzZURyYWdnYWJsZV8xID0gcmVxdWlyZShcIi4vdXNlRHJhZ2dhYmxlXCIpO1xuY29uc3Qgc3RpY2t5Rml4ID0gYFxyXG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xyXG5gO1xuY29uc3Qgbm9vcCA9ICgpID0+IG51bGw7XG5jb25zdCBJdGVtID0gKHsgaXRlbSwgc2VjdGlvbklkLCBhcnRpY2xlSGVpZ2h0LCBpc1BhcmVudFZpc2libGUgPSB0cnVlLCBpc0luR3JvdXAgPSBmYWxzZSB9KSA9PiB7XG4gICAgdmFyIF9hLCBfYiwgX2MsIF9kLCBfZSwgX2YsIF9nLCBfaCwgX2osIF9rLCBfbDtcbiAgICBjb25zdCBpdGVtV3JhcHBlclJlZiA9ICgwLCByZWFjdF8xLnVzZVJlZikobnVsbCk7XG4gICAgY29uc3QgaXRlbUlubmVyUmVmID0gKDAsIHJlYWN0XzEudXNlUmVmKShudWxsKTtcbiAgICBjb25zdCByZWN0T2JzZXJ2ZXIgPSAoMCwgcmVhY3RfMS51c2VDb250ZXh0KShBcnRpY2xlUmVjdENvbnRleHRfMS5BcnRpY2xlUmVjdENvbnRleHQpO1xuICAgIGNvbnN0IGtleWZyYW1lc1JlcG8gPSAoMCwgcmVhY3RfMS51c2VDb250ZXh0KShLZXlmcmFtZXNDb250ZXh0XzEuS2V5ZnJhbWVzQ29udGV4dCk7XG4gICAgY29uc3QgaWQgPSAoMCwgcmVhY3RfMS51c2VJZCkoKTtcbiAgICBjb25zdCBrZXlmcmFtZXMgPSAoMCwgcmVhY3RfMS51c2VNZW1vKSgoKSA9PiBrZXlmcmFtZXNSZXBvLmdldEl0ZW1LZXlmcmFtZXMoaXRlbS5pZCksIFtrZXlmcmFtZXNSZXBvLCBpdGVtLmlkXSk7XG4gICAgY29uc3QgeyBsYXlvdXRzIH0gPSAoMCwgdXNlQ250cmxDb250ZXh0XzEudXNlQ250cmxDb250ZXh0KSgpO1xuICAgIGNvbnN0IGxheW91dCA9ICgwLCB1c2VMYXlvdXRDb250ZXh0XzEudXNlTGF5b3V0Q29udGV4dCkoKTtcbiAgICBjb25zdCBleGVtcGxhcnkgPSAoMCwgdXNlRXhlbXBsYXJ5XzEudXNlRXhlbXBsYXJ5KSgpO1xuICAgIGNvbnN0IHsgaGFuZGxlVmlzaWJpbGl0eUNoYW5nZSwgYWxsb3dQb2ludGVyRXZlbnRzIH0gPSAoMCwgdXNlSXRlbVBvaW50ZXJFdmVudHNfMS51c2VJdGVtUG9pbnRlckV2ZW50cykoKF9hID0gaXRlbS5jb21tb25QYXJhbXMucG9pbnRlckV2ZW50cykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogJ3doZW5fdmlzaWJsZScsIGlzUGFyZW50VmlzaWJsZSk7XG4gICAgY29uc3QgW3dyYXBwZXJIZWlnaHQsIHNldFdyYXBwZXJIZWlnaHRdID0gKDAsIHJlYWN0XzEudXNlU3RhdGUpKHVuZGVmaW5lZCk7XG4gICAgY29uc3QgW2l0ZW1IZWlnaHQsIHNldEl0ZW1IZWlnaHRdID0gKDAsIHJlYWN0XzEudXNlU3RhdGUpKHVuZGVmaW5lZCk7XG4gICAgY29uc3QgaXRlbVNjYWxlID0gKDAsIHVzZUl0ZW1TY2FsZV8xLnVzZUl0ZW1TY2FsZSkoaXRlbSwgc2VjdGlvbklkKTtcbiAgICBjb25zdCBpbnRlcmFjdGlvbkN0cmwgPSAoMCwgdXNlSXRlbUludGVyYWN0aW9uQ3RybF8xLnVzZUl0ZW1JbnRlcmFjdGlvbkN0cmwpKGl0ZW0uaWQpO1xuICAgIGNvbnN0IHRyaWdnZXJzID0gKDAsIHVzZUl0ZW1UcmlnZ2Vyc18xLnVzZUl0ZW1UcmlnZ2VycykoaW50ZXJhY3Rpb25DdHJsKTtcbiAgICBjb25zdCBbcG9zaXRpb24sIHNldFBvc2l0aW9uXSA9ICgwLCByZWFjdF8xLnVzZVN0YXRlKSh7IHg6IDAsIHk6IDAgfSk7XG4gICAgY29uc3QgW2lzRHJhZ2dpbmdBY3RpdmUsIHNldElzRHJhZ2dpbmdBY3RpdmVdID0gKDAsIHJlYWN0XzEudXNlU3RhdGUpKGZhbHNlKTtcbiAgICBjb25zdCB3cmFwcGVyU3RhdGVQcm9wcyA9IGludGVyYWN0aW9uQ3RybCA9PT0gbnVsbCB8fCBpbnRlcmFjdGlvbkN0cmwgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGludGVyYWN0aW9uQ3RybC5nZXRTdGF0ZShbJ3RvcCcsICdsZWZ0J10pO1xuICAgIGNvbnN0IGlubmVyU3RhdGVQcm9wcyA9IGludGVyYWN0aW9uQ3RybCA9PT0gbnVsbCB8fCBpbnRlcmFjdGlvbkN0cmwgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGludGVyYWN0aW9uQ3RybC5nZXRTdGF0ZShbJ3dpZHRoJywgJ2hlaWdodCcsICdzY2FsZScsICd0b3AnLCAnbGVmdCddKTtcbiAgICBjb25zdCB7IHdpZHRoLCBoZWlnaHQsIHRvcCwgbGVmdCB9ID0gKDAsIHVzZUl0ZW1BcmVhXzEudXNlSXRlbUFyZWEpKGl0ZW0sIHNlY3Rpb25JZCwge1xuICAgICAgICB0b3A6IChfYiA9IHdyYXBwZXJTdGF0ZVByb3BzID09PSBudWxsIHx8IHdyYXBwZXJTdGF0ZVByb3BzID09PSB2b2lkIDAgPyB2b2lkIDAgOiB3cmFwcGVyU3RhdGVQcm9wcy5zdHlsZXMpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi50b3AsXG4gICAgICAgIGxlZnQ6IChfYyA9IHdyYXBwZXJTdGF0ZVByb3BzID09PSBudWxsIHx8IHdyYXBwZXJTdGF0ZVByb3BzID09PSB2b2lkIDAgPyB2b2lkIDAgOiB3cmFwcGVyU3RhdGVQcm9wcy5zdHlsZXMpID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy5sZWZ0LFxuICAgICAgICB3aWR0aDogKF9kID0gaW5uZXJTdGF0ZVByb3BzID09PSBudWxsIHx8IGlubmVyU3RhdGVQcm9wcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogaW5uZXJTdGF0ZVByb3BzLnN0eWxlcykgPT09IG51bGwgfHwgX2QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kLndpZHRoLFxuICAgICAgICBoZWlnaHQ6IChfZSA9IGlubmVyU3RhdGVQcm9wcyA9PT0gbnVsbCB8fCBpbm5lclN0YXRlUHJvcHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGlubmVyU3RhdGVQcm9wcy5zdHlsZXMpID09PSBudWxsIHx8IF9lID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZS5oZWlnaHRcbiAgICB9KTtcbiAgICBjb25zdCBzZWN0aW9uSGVpZ2h0ID0gKDAsIHVzZVNlY3Rpb25IZWlnaHRNYXBfMS51c2VTZWN0aW9uSGVpZ2h0RGF0YSkoc2VjdGlvbklkKTtcbiAgICBjb25zdCBzdGlja3lUb3AgPSAoMCwgdXNlU3RpY2t5SXRlbVRvcF8xLnVzZVN0aWNreUl0ZW1Ub3ApKGl0ZW0sIHNlY3Rpb25JZCwgKF9mID0gd3JhcHBlclN0YXRlUHJvcHMgPT09IG51bGwgfHwgd3JhcHBlclN0YXRlUHJvcHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHdyYXBwZXJTdGF0ZVByb3BzLnN0eWxlcykgPT09IG51bGwgfHwgX2YgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9mLnRvcCk7XG4gICAgY29uc3QgbGF5b3V0VmFsdWVzID0gW2l0ZW0uYXJlYSwgaXRlbS5oaWRkZW5dO1xuICAgIGxheW91dFZhbHVlcy5wdXNoKGl0ZW0uc3RpY2t5KTtcbiAgICBsYXlvdXRWYWx1ZXMucHVzaChzZWN0aW9uSGVpZ2h0KTtcbiAgICBpZiAoaXRlbS5sYXlvdXRQYXJhbXMpIHtcbiAgICAgICAgbGF5b3V0VmFsdWVzLnB1c2goaXRlbS5sYXlvdXRQYXJhbXMpO1xuICAgIH1cbiAgICBjb25zdCBzaXppbmdBeGlzID0gKDAsIHVzZVNpemluZ18xLnVzZVNpemluZykoaXRlbSk7XG4gICAgY29uc3QgSXRlbUNvbXBvbmVudCA9IGl0ZW1zTWFwXzEuaXRlbXNNYXBbaXRlbS50eXBlXSB8fCBub29wO1xuICAgIGNvbnN0IHNlY3Rpb25Ub3AgPSByZWN0T2JzZXJ2ZXIgPyByZWN0T2JzZXJ2ZXIuZ2V0U2VjdGlvblRvcChzZWN0aW9uSWQpIDogMDtcbiAgICBjb25zdCBsYXlvdXRQYXJhbXMgPSBsYXlvdXQgPyBpdGVtLmxheW91dFBhcmFtc1tsYXlvdXRdIDogdW5kZWZpbmVkO1xuICAgIGNvbnN0IGlzRHJhZ2dhYmxlID0gbGF5b3V0UGFyYW1zICYmICdpc0RyYWdnYWJsZScgaW4gbGF5b3V0UGFyYW1zID8gbGF5b3V0UGFyYW1zLmlzRHJhZ2dhYmxlIDogdW5kZWZpbmVkO1xuICAgICgwLCB1c2VEcmFnZ2FibGVfMS51c2VEcmFnZ2FibGUpKHsgZHJhZ2dhYmxlUmVmOiBpdGVtSW5uZXJSZWYuY3VycmVudCwgaXNFbmFibGVkOiBpc0RyYWdnYWJsZSAhPT0gbnVsbCAmJiBpc0RyYWdnYWJsZSAhPT0gdm9pZCAwID8gaXNEcmFnZ2FibGUgOiBmYWxzZSB9LCAoeyBzdGFydFgsIHN0YXJ0WSwgY3VycmVudFgsIGN1cnJlbnRZLCBsYXN0WCwgbGFzdFksIGRyYWcgfSkgPT4ge1xuICAgICAgICBjb25zdCBpdGVtID0gaXRlbUlubmVyUmVmLmN1cnJlbnQ7XG4gICAgICAgIGlmICghaXRlbSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgaWYgKGRyYWcpIHtcbiAgICAgICAgICAgIHNldElzRHJhZ2dpbmdBY3RpdmUodHJ1ZSk7XG4gICAgICAgICAgICBzZXRQb3NpdGlvbih7XG4gICAgICAgICAgICAgICAgeDogKGN1cnJlbnRYIC0gc3RhcnRYKSArIGxhc3RYLFxuICAgICAgICAgICAgICAgIHk6IChjdXJyZW50WSAtIHN0YXJ0WSkgKyBsYXN0WVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzZXRJc0RyYWdnaW5nQWN0aXZlKGZhbHNlKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGNvbnN0IGhhbmRsZUl0ZW1SZXNpemUgPSAoaGVpZ2h0KSA9PiB7XG4gICAgICAgIGlmICghbGF5b3V0KVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBzdGlja3kgPSBpdGVtLnN0aWNreVtsYXlvdXRdO1xuICAgICAgICBpZiAoIXN0aWNreSB8fCBzdGlja3lUb3AgPT09IHVuZGVmaW5lZCB8fCAhYXJ0aWNsZUhlaWdodCkge1xuICAgICAgICAgICAgc2V0V3JhcHBlckhlaWdodCh1bmRlZmluZWQpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGl0ZW1BcnRpY2xlT2Zmc2V0ID0gc2VjdGlvblRvcCAvIHdpbmRvdy5pbm5lcldpZHRoICsgc3RpY2t5VG9wO1xuICAgICAgICBjb25zdCBtYXhTdGlja3lUbyA9IGFydGljbGVIZWlnaHQgLSBpdGVtQXJ0aWNsZU9mZnNldCAtIGhlaWdodDtcbiAgICAgICAgY29uc3QgZW5kID0gc3RpY2t5LnRvICE9PSB1bmRlZmluZWRcbiAgICAgICAgICAgID8gTWF0aC5taW4obWF4U3RpY2t5VG8sIHN0aWNreS50bylcbiAgICAgICAgICAgIDogYXJ0aWNsZUhlaWdodCAtIGl0ZW1BcnRpY2xlT2Zmc2V0IC0gaGVpZ2h0O1xuICAgICAgICBjb25zdCB3cmFwcGVySGVpZ2h0ID0gZW5kIC0gc3RpY2t5LmZyb20gKyBoZWlnaHQ7XG4gICAgICAgIHNldEl0ZW1IZWlnaHQoaGVpZ2h0KTtcbiAgICAgICAgc2V0V3JhcHBlckhlaWdodCh3cmFwcGVySGVpZ2h0KTtcbiAgICB9O1xuICAgIGNvbnN0IGlzUmljaFRleHQgPSAoMCwgaXNJdGVtVHlwZV8xLmlzSXRlbVR5cGUpKGl0ZW0sIHNka18xLkFydGljbGVJdGVtVHlwZS5SaWNoVGV4dCk7XG4gICAgY29uc3QgYW5jaG9yU2lkZSA9IGxheW91dCA/IGl0ZW0uYXJlYVtsYXlvdXRdLmFuY2hvclNpZGUgOiBzZGtfMS5BbmNob3JTaWRlLlRvcDtcbiAgICBjb25zdCBwb3NpdGlvblR5cGUgPSBsYXlvdXQgPyBpdGVtLmFyZWFbbGF5b3V0XS5wb3NpdGlvblR5cGUgOiBzZGtfMS5Qb3NpdGlvblR5cGUuU2NyZWVuQmFzZWQ7XG4gICAgY29uc3QgaXNTY3JlZW5CYXNlZEJvdHRvbSA9IHBvc2l0aW9uVHlwZSA9PT0gc2RrXzEuUG9zaXRpb25UeXBlLlNjcmVlbkJhc2VkICYmIGFuY2hvclNpZGUgPT09IHNka18xLkFuY2hvclNpZGUuQm90dG9tO1xuICAgIGNvbnN0IHNjYWxlID0gKF9oID0gKF9nID0gaW5uZXJTdGF0ZVByb3BzID09PSBudWxsIHx8IGlubmVyU3RhdGVQcm9wcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogaW5uZXJTdGF0ZVByb3BzLnN0eWxlcykgPT09IG51bGwgfHwgX2cgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9nLnNjYWxlKSAhPT0gbnVsbCAmJiBfaCAhPT0gdm9pZCAwID8gX2ggOiBpdGVtU2NhbGU7XG4gICAgY29uc3QgaGFzQ2xpY2tUcmlnZ2VycyA9IChfaiA9IGludGVyYWN0aW9uQ3RybCA9PT0gbnVsbCB8fCBpbnRlcmFjdGlvbkN0cmwgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGludGVyYWN0aW9uQ3RybC5nZXRIYXNUcmlnZ2VyKGl0ZW0uaWQsICdjbGljaycpKSAhPT0gbnVsbCAmJiBfaiAhPT0gdm9pZCAwID8gX2ogOiBmYWxzZTtcbiAgICByZXR1cm4gKCgwLCBqc3hfcnVudGltZV8xLmpzeHMpKFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBgaXRlbS13cmFwcGVyLSR7aXRlbS5pZH1gLCByZWY6IGl0ZW1XcmFwcGVyUmVmLCBvblRyYW5zaXRpb25FbmQ6IChlKSA9PiB7XG4gICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgKF9hID0gaW50ZXJhY3Rpb25DdHJsID09PSBudWxsIHx8IGludGVyYWN0aW9uQ3RybCA9PT0gdm9pZCAwID8gdm9pZCAwIDogaW50ZXJhY3Rpb25DdHJsLmhhbmRsZVRyYW5zaXRpb25FbmQpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jYWxsKGludGVyYWN0aW9uQ3RybCwgZS5wcm9wZXJ0eU5hbWUpO1xuICAgICAgICB9LCBzdHlsZTogT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCAodG9wICE9PSB1bmRlZmluZWQgPyB7IHRvcDogaXNTY3JlZW5CYXNlZEJvdHRvbSA/ICd1bnNldCcgOiAoMCwgZ2V0SXRlbVRvcFN0eWxlXzEuZ2V0SXRlbVRvcFN0eWxlKSh0b3AsIGFuY2hvclNpZGUpIH0gOiB7fSkpLCAobGVmdCAhPT0gdW5kZWZpbmVkID8geyBsZWZ0OiBgJHtsZWZ0ICogMTAwfXZ3YCB9IDoge30pKSwgKHRvcCAhPT0gdW5kZWZpbmVkID8geyBib3R0b206IGlzU2NyZWVuQmFzZWRCb3R0b20gPyBgJHstdG9wICogMTAwfXZ3YCA6ICd1bnNldCcgfSA6IHt9KSksICh3cmFwcGVySGVpZ2h0ICE9PSB1bmRlZmluZWQgPyB7IGhlaWdodDogYCR7d3JhcHBlckhlaWdodCAqIDEwMH12d2AgfSA6IHt9KSksIHsgdHJhbnNpdGlvbjogKF9rID0gd3JhcHBlclN0YXRlUHJvcHMgPT09IG51bGwgfHwgd3JhcHBlclN0YXRlUHJvcHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHdyYXBwZXJTdGF0ZVByb3BzLnRyYW5zaXRpb24pICE9PSBudWxsICYmIF9rICE9PSB2b2lkIDAgPyBfayA6ICdub25lJyB9KSwgY2hpbGRyZW46IFsoMCwganN4X3J1bnRpbWVfMS5qc3gpKFwiZGl2XCIsIHsgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nOiB0cnVlLCBjbGFzc05hbWU6IGBpdGVtLSR7aXRlbS5pZH1gLCBzdHlsZToge1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAoa2V5ZnJhbWVzLmxlbmd0aCAhPT0gMCAmJiAhbGF5b3V0KSA/IDAgOiAxLFxuICAgICAgICAgICAgICAgICAgICB0b3A6IGAke3N0aWNreVRvcCAqIDEwMH12d2AsXG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogaXNSaWNoVGV4dCAmJiBpdGVtSGVpZ2h0ICE9PSB1bmRlZmluZWQgPyBgJHtpdGVtSGVpZ2h0ICogMTAwfXZ3YCA6ICd1bnNldCcsXG4gICAgICAgICAgICAgICAgfSwgY2hpbGRyZW46ICgwLCBqc3hfcnVudGltZV8xLmpzeCkoUmljaFRleHRXcmFwcGVyXzEuUmljaFRleHRXcmFwcGVyLCB7IGlzUmljaFRleHQ6IGlzUmljaFRleHQsIGNoaWxkcmVuOiAoMCwganN4X3J1bnRpbWVfMS5qc3gpKFwiZGl2XCIsIE9iamVjdC5hc3NpZ24oeyBjbGFzc05hbWU6IGBpdGVtLSR7aXRlbS5pZH0taW5uZXJgLCByZWY6IGl0ZW1Jbm5lclJlZiwgc3R5bGU6IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHsgdG9wOiBgJHtwb3NpdGlvbi55fXB4YCwgbGVmdDogYCR7cG9zaXRpb24ueH1weGAgfSwgKCh3aWR0aCAhPT0gdW5kZWZpbmVkICYmIGhlaWdodCAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogYCR7c2l6aW5nQXhpcy54ID09PSAnbWFudWFsJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBpc1JpY2hUZXh0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBgJHt3aWR0aCAqIGV4ZW1wbGFyeX1weGBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IGAke3dpZHRoICogMTAwfXZ3YFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAnbWF4LWNvbnRlbnQnfWAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogYCR7c2l6aW5nQXhpcy55ID09PSAnbWFudWFsJyA/IGAke2hlaWdodCAqIDEwMH12d2AgOiAndW5zZXQnfWBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB7fSkpLCAoc2NhbGUgIT09IHVuZGVmaW5lZCA/IHsgdHJhbnNmb3JtOiBgc2NhbGUoJHtzY2FsZX0pYCwgV2Via2l0VHJhbnNmb3JtOiBgc2NhbGUoJHtzY2FsZX0pYCB9IDoge30pKSwgeyB0cmFuc2l0aW9uOiAoX2wgPSBpbm5lclN0YXRlUHJvcHMgPT09IG51bGwgfHwgaW5uZXJTdGF0ZVByb3BzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpbm5lclN0YXRlUHJvcHMudHJhbnNpdGlvbikgIT09IG51bGwgJiYgX2wgIT09IHZvaWQgMCA/IF9sIDogJ25vbmUnLCBjdXJzb3I6IGlzRHJhZ2dpbmdBY3RpdmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyAnZ3JhYmJpbmcnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogaXNEcmFnZ2FibGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gJ2dyYWInXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IGhhc0NsaWNrVHJpZ2dlcnNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/ICdwb2ludGVyJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogJ3Vuc2V0JywgcG9pbnRlckV2ZW50czogYWxsb3dQb2ludGVyRXZlbnRzID8gJ2F1dG8nIDogJ25vbmUnLCB1c2VyU2VsZWN0OiBpc0RyYWdnYWJsZSA/ICdub25lJyA6ICd1bnNldCcsIFdlYmtpdFVzZXJTZWxlY3Q6IGlzRHJhZ2dhYmxlID8gJ25vbmUnIDogJ3Vuc2V0JywgTW96VXNlclNlbGVjdDogaXNEcmFnZ2FibGUgPyAnbm9uZScgOiAndW5zZXQnLCBtc1VzZXJTZWxlY3Q6IGlzRHJhZ2dhYmxlID8gJ25vbmUnIDogJ3Vuc2V0JyB9KSB9LCB0cmlnZ2VycywgeyBjaGlsZHJlbjogKDAsIGpzeF9ydW50aW1lXzEuanN4KShJdGVtQ29tcG9uZW50LCB7IGl0ZW06IGl0ZW0sIHNlY3Rpb25JZDogc2VjdGlvbklkLCBvblJlc2l6ZTogaGFuZGxlSXRlbVJlc2l6ZSwgYXJ0aWNsZUhlaWdodDogYXJ0aWNsZUhlaWdodCwgaW50ZXJhY3Rpb25DdHJsOiBpbnRlcmFjdGlvbkN0cmwsIG9uVmlzaWJpbGl0eUNoYW5nZTogaGFuZGxlVmlzaWJpbGl0eUNoYW5nZSB9KSB9KSkgfSkgfSksICgwLCBqc3hfcnVudGltZV8xLmpzeCkoc3R5bGVfMS5kZWZhdWx0LCB7IGlkOiBpZCwgY2hpbGRyZW46IGBcclxuICAgICAgICAkeygwLCBzZGtfMS5nZXRMYXlvdXRTdHlsZXMpKGxheW91dHMsIGxheW91dFZhbHVlcywgKFthcmVhLCBoaWRkZW4sIHN0aWNreSwgc2VjdGlvbkhlaWdodCwgbGF5b3V0UGFyYW1zXSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBzaXppbmdBeGlzID0gKDAsIHVzZVNpemluZ18xLnBhcnNlU2l6aW5nKShsYXlvdXRQYXJhbXMuc2l6aW5nKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaXNTY3JlZW5CYXNlZEJvdHRvbSA9IGFyZWEucG9zaXRpb25UeXBlID09PSBzZGtfMS5Qb3NpdGlvblR5cGUuU2NyZWVuQmFzZWQgJiYgYXJlYS5hbmNob3JTaWRlID09PSBzZGtfMS5BbmNob3JTaWRlLkJvdHRvbTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2NhbGVBbmNob3IgPSBhcmVhLnNjYWxlQW5jaG9yO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKGBcclxuICAgICAgICAgICAgLml0ZW0tJHtpdGVtLmlkfSB7XHJcbiAgICAgICAgICAgICAgcG9zaXRpb246ICR7c3RpY2t5ID8gJ3N0aWNreScgOiAnYWJzb2x1dGUnfTtcclxuICAgICAgICAgICAgICB0b3A6ICR7c3RpY2t5ID8gYCR7KDAsIGdldEFuY2hvcmVkSXRlbVRvcF8xLmdldEFuY2hvcmVkSXRlbVRvcCkoYXJlYS50b3AgLSBzdGlja3kuZnJvbSwgc2VjdGlvbkhlaWdodCwgYXJlYS5hbmNob3JTaWRlKX1gIDogMH07XHJcbiAgICAgICAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjJzIGxpbmVhciAwLjFzO1xyXG4gICAgICAgICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gICAgICAgICAgICAgIGRpc3BsYXk6ICR7aGlkZGVuID8gJ25vbmUnIDogJ2Jsb2NrJ307XHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiBmaXQtY29udGVudDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAuaXRlbS0ke2l0ZW0uaWR9LWlubmVyIHtcclxuICAgICAgICAgICAgICB3aWR0aDogJHtzaXppbmdBeGlzLnggPT09ICdtYW51YWwnXG4gICAgICAgICAgICAgICAgICAgICAgICA/IGAke2FyZWEud2lkdGggKiAxMDB9dndgXG4gICAgICAgICAgICAgICAgICAgICAgICA6ICdtYXgtY29udGVudCd9O1xyXG4gICAgICAgICAgICAgIGhlaWdodDogJHtzaXppbmdBeGlzLnkgPT09ICdtYW51YWwnID8gYCR7YXJlYS5oZWlnaHQgKiAxMDB9dndgIDogJ3Vuc2V0J307XHJcbiAgICAgICAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjogJHtTY2FsZUFuY2hvck1hcF8xLlNjYWxlQW5jaG9yTWFwW3NjYWxlQW5jaG9yXX07XHJcbiAgICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgke2FyZWEuc2NhbGV9KTtcclxuICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLml0ZW0td3JhcHBlci0ke2l0ZW0uaWR9IHtcclxuICAgICAgICAgICAgICBwb3NpdGlvbjogJHthcmVhLnBvc2l0aW9uVHlwZSA9PT0gc2RrXzEuUG9zaXRpb25UeXBlLlNjcmVlbkJhc2VkID8gJ2ZpeGVkJyA6ICdhYnNvbHV0ZSd9O1xyXG4gICAgICAgICAgICAgIHotaW5kZXg6ICR7YXJlYS56SW5kZXh9O1xyXG4gICAgICAgICAgICAgICR7IWlzSW5Hcm91cCAmJiBzdGlja3lGaXh9XHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgYm90dG9tOiAke2lzU2NyZWVuQmFzZWRCb3R0b20gPyBgJHstYXJlYS50b3AgKiAxMDB9dndgIDogJ3Vuc2V0J307XHJcbiAgICAgICAgICAgICAgdG9wOiAke2lzU2NyZWVuQmFzZWRCb3R0b20gPyAndW5zZXQnIDogKDAsIGdldEl0ZW1Ub3BTdHlsZV8xLmdldEl0ZW1Ub3BTdHlsZSkoYXJlYS50b3AsIGFyZWEuYW5jaG9yU2lkZSl9O1xyXG4gICAgICAgICAgICAgIGxlZnQ6ICR7YXJlYS5sZWZ0ICogMTAwfXZ3O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9KX1cclxuICAgICAgYCB9KV0gfSkpO1xufTtcbmV4cG9ydHMuSXRlbSA9IEl0ZW07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/Item.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/LinkWrapper.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/LinkWrapper.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LinkWrapper = void 0;\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nconst LinkWrapper = ({ url, children, target }) => {\n    const validUrl = url && buildValidUrl(url);\n    const targetParams = target === '_blank' ? { target, rel: 'noreferrer' } : {};\n    return url ? ((0, jsx_runtime_1.jsx)(\"a\", Object.assign({ href: validUrl }, targetParams, { children: children }))) : ((0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, { children: children }));\n};\nexports.LinkWrapper = LinkWrapper;\nfunction buildValidUrl(url) {\n    const prefixes = [\n        'http://',\n        'https://',\n        '/',\n        'mailto:',\n        'tel:',\n        'file:',\n        'ftp:',\n        'javascript',\n        '#'\n    ];\n    const protocolCheck = prefixes.some(prefix => url.startsWith(prefix));\n    if (protocolCheck)\n        return url;\n    return `//${url}`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy9MaW5rV3JhcHBlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkIsc0JBQXNCLG1CQUFPLENBQUMsOERBQW1CO0FBQ2pELHVCQUF1Qix1QkFBdUI7QUFDOUM7QUFDQSxpREFBaUQsNEJBQTRCO0FBQzdFLDhEQUE4RCxnQkFBZ0Isa0JBQWtCLG9CQUFvQix3REFBd0Qsb0JBQW9CO0FBQ2hNO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixJQUFJO0FBQ3BCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi9jb21wb25lbnRzL2l0ZW1zL0xpbmtXcmFwcGVyLmpzP2U1MzMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkxpbmtXcmFwcGVyID0gdm9pZCAwO1xuY29uc3QganN4X3J1bnRpbWVfMSA9IHJlcXVpcmUoXCJyZWFjdC9qc3gtcnVudGltZVwiKTtcbmNvbnN0IExpbmtXcmFwcGVyID0gKHsgdXJsLCBjaGlsZHJlbiwgdGFyZ2V0IH0pID0+IHtcbiAgICBjb25zdCB2YWxpZFVybCA9IHVybCAmJiBidWlsZFZhbGlkVXJsKHVybCk7XG4gICAgY29uc3QgdGFyZ2V0UGFyYW1zID0gdGFyZ2V0ID09PSAnX2JsYW5rJyA/IHsgdGFyZ2V0LCByZWw6ICdub3JlZmVycmVyJyB9IDoge307XG4gICAgcmV0dXJuIHVybCA/ICgoMCwganN4X3J1bnRpbWVfMS5qc3gpKFwiYVwiLCBPYmplY3QuYXNzaWduKHsgaHJlZjogdmFsaWRVcmwgfSwgdGFyZ2V0UGFyYW1zLCB7IGNoaWxkcmVuOiBjaGlsZHJlbiB9KSkpIDogKCgwLCBqc3hfcnVudGltZV8xLmpzeCkoanN4X3J1bnRpbWVfMS5GcmFnbWVudCwgeyBjaGlsZHJlbjogY2hpbGRyZW4gfSkpO1xufTtcbmV4cG9ydHMuTGlua1dyYXBwZXIgPSBMaW5rV3JhcHBlcjtcbmZ1bmN0aW9uIGJ1aWxkVmFsaWRVcmwodXJsKSB7XG4gICAgY29uc3QgcHJlZml4ZXMgPSBbXG4gICAgICAgICdodHRwOi8vJyxcbiAgICAgICAgJ2h0dHBzOi8vJyxcbiAgICAgICAgJy8nLFxuICAgICAgICAnbWFpbHRvOicsXG4gICAgICAgICd0ZWw6JyxcbiAgICAgICAgJ2ZpbGU6JyxcbiAgICAgICAgJ2Z0cDonLFxuICAgICAgICAnamF2YXNjcmlwdCcsXG4gICAgICAgICcjJ1xuICAgIF07XG4gICAgY29uc3QgcHJvdG9jb2xDaGVjayA9IHByZWZpeGVzLnNvbWUocHJlZml4ID0+IHVybC5zdGFydHNXaXRoKHByZWZpeCkpO1xuICAgIGlmIChwcm90b2NvbENoZWNrKVxuICAgICAgICByZXR1cm4gdXJsO1xuICAgIHJldHVybiBgLy8ke3VybH1gO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/LinkWrapper.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/RectangleItem/RectangleItem.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/RectangleItem/RectangleItem.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RectangleItem = void 0;\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst style_1 = __importDefault(__webpack_require__(/*! styled-jsx/style */ \"./node_modules/next/node_modules/styled-jsx/style.js\"));\nconst color_1 = __webpack_require__(/*! @cntrl-site/color */ \"./node_modules/@cntrl-site/color/lib/index.js\");\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst LinkWrapper_1 = __webpack_require__(/*! ../LinkWrapper */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/LinkWrapper.js\");\nconst useRectangleItem_1 = __webpack_require__(/*! ./useRectangleItem */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/RectangleItem/useRectangleItem.js\");\nconst useItemAngle_1 = __webpack_require__(/*! ../useItemAngle */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemAngle.js\");\nconst useCntrlContext_1 = __webpack_require__(/*! ../../../provider/useCntrlContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/useCntrlContext.js\");\nconst useRegisterResize_1 = __webpack_require__(/*! ../../../common/useRegisterResize */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useRegisterResize.js\");\nconst getStyleFromItemStateAndParams_1 = __webpack_require__(/*! ../../../utils/getStyleFromItemStateAndParams */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getStyleFromItemStateAndParams.js\");\nconst RectangleItem = ({ item, sectionId, onResize, interactionCtrl, onVisibilityChange }) => {\n    var _a, _b, _c, _d;\n    const id = (0, react_1.useId)();\n    const { layouts } = (0, useCntrlContext_1.useCntrlContext)();\n    const { fillColor: itemFillColor, radius: itemRadius, strokeWidth: itemStrokeWidth, strokeColor: itemStrokeColor, blur: itemBlur, backdropBlur: itemBackdropBlur } = (0, useRectangleItem_1.useRectangleItem)(item, sectionId);\n    const itemAngle = (0, useItemAngle_1.useItemAngle)(item, sectionId);\n    const stateParams = interactionCtrl === null || interactionCtrl === void 0 ? void 0 : interactionCtrl.getState(['angle', 'fillColor', 'strokeWidth', 'radius', 'strokeColor', 'blur', 'backdropBlur']);\n    const styles = (_a = stateParams === null || stateParams === void 0 ? void 0 : stateParams.styles) !== null && _a !== void 0 ? _a : {};\n    const backgroundColor = (0, react_1.useMemo)(() => {\n        const fillColor = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)(styles === null || styles === void 0 ? void 0 : styles.fillColor, itemFillColor);\n        return fillColor ? color_1.CntrlColor.parse(fillColor) : undefined;\n    }, [itemFillColor, styles === null || styles === void 0 ? void 0 : styles.fillColor]);\n    const borderColor = (0, react_1.useMemo)(() => {\n        const strokeColor = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)(styles === null || styles === void 0 ? void 0 : styles.strokeColor, itemStrokeColor);\n        return strokeColor ? color_1.CntrlColor.parse(strokeColor) : undefined;\n    }, [itemStrokeColor, styles === null || styles === void 0 ? void 0 : styles.strokeColor]);\n    const layoutValues = [item.area, item.layoutParams];\n    const [ref, setRef] = (0, react_1.useState)(null);\n    (0, useRegisterResize_1.useRegisterResize)(ref, onResize);\n    const backdropBlur = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)(styles === null || styles === void 0 ? void 0 : styles.backdropBlur, itemBackdropBlur);\n    const radius = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)(styles === null || styles === void 0 ? void 0 : styles.radius, itemRadius);\n    const strokeWidth = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)(styles === null || styles === void 0 ? void 0 : styles.strokeWidth, itemStrokeWidth);\n    const angle = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)(styles === null || styles === void 0 ? void 0 : styles.angle, itemAngle);\n    const blur = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)(styles === null || styles === void 0 ? void 0 : styles.blur, itemBlur);\n    const backdropFilterValue = backdropBlur ? `blur(${backdropBlur * 100}vw)` : undefined;\n    const isInteractive = (backgroundColor === null || backgroundColor === void 0 ? void 0 : backgroundColor.getAlpha()) !== 0 || (strokeWidth !== 0 && (borderColor === null || borderColor === void 0 ? void 0 : borderColor.getAlpha()) !== 0);\n    (0, react_1.useEffect)(() => {\n        onVisibilityChange === null || onVisibilityChange === void 0 ? void 0 : onVisibilityChange(isInteractive);\n    }, [isInteractive, onVisibilityChange]);\n    return ((0, jsx_runtime_1.jsx)(LinkWrapper_1.LinkWrapper, { url: (_b = item.link) === null || _b === void 0 ? void 0 : _b.url, target: (_c = item.link) === null || _c === void 0 ? void 0 : _c.target, children: (0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(\"div\", { className: `rectangle-${item.id}`, ref: setRef, style: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, (backgroundColor ? { backgroundColor: `${backgroundColor.fmt('rgba')}` } : {})), (borderColor ? { borderColor: `${borderColor.fmt('rgba')}` } : {})), (radius !== undefined ? { borderRadius: `${radius * 100}vw` } : {})), (strokeWidth !== undefined ? { borderWidth: `${strokeWidth * 100}vw` } : {})), (angle !== undefined ? { transform: `rotate(${angle}deg) translateZ(0)` } : {})), (blur !== undefined ? { filter: `blur(${blur * 100}vw)` } : {})), (backdropFilterValue !== undefined\n                        ? { backdropFilter: backdropFilterValue, WebkitBackdropFilter: backdropFilterValue }\n                        : {})), { transition: (_d = stateParams === null || stateParams === void 0 ? void 0 : stateParams.transition) !== null && _d !== void 0 ? _d : 'none' }) }), (0, jsx_runtime_1.jsx)(style_1.default, { id: id, children: `\r\n        .rectangle-${item.id} {\r\n          position: absolute;\r\n          width: 100%;\r\n          height: 100%;\r\n          border-style: solid;\r\n          box-sizing: border-box;\r\n        }\r\n        ${(0, sdk_1.getLayoutStyles)(layouts, layoutValues, ([area, layoutParams]) => {\n                        return (`\r\n            .rectangle-${item.id} {\r\n              background-color: ${color_1.CntrlColor.parse(layoutParams.fillColor).fmt('rgba')};\r\n              border-color: ${color_1.CntrlColor.parse(layoutParams.strokeColor).fmt('rgba')};\r\n              border-radius: ${layoutParams.radius * 100}vw;\r\n              border-width: ${layoutParams.strokeWidth * 100}vw;\r\n              transform: rotate(${area.angle}deg) translateZ(0);\r\n              filter: ${layoutParams.blur !== 0 ? `blur(${layoutParams.blur * 100}vw)` : 'unset'};\r\n              backdrop-filter: ${layoutParams.backdropBlur !== 0 ? `blur(${layoutParams.backdropBlur * 100}vw)` : 'unset'};\r\n              -webkit-backdrop-filter: ${layoutParams.backdropBlur !== 0 ? `blur(${layoutParams.backdropBlur * 100}vw)` : 'unset'};\r\n            }\r\n          `);\n                    })}\r\n      ` })] }) }));\n};\nexports.RectangleItem = RectangleItem;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/RectangleItem/RectangleItem.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/RectangleItem/useRectangleItem.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/RectangleItem/useRectangleItem.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useRectangleItem = void 0;\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst useKeyframeValue_1 = __webpack_require__(/*! ../../../common/useKeyframeValue */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useKeyframeValue.js\");\nconst useLayoutContext_1 = __webpack_require__(/*! ../../useLayoutContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/useLayoutContext.js\");\nconst defaultColor = 'rgba(0, 0, 0, 1)';\nfunction useRectangleItem(item, sectionId) {\n    const layoutId = (0, useLayoutContext_1.useLayoutContext)();\n    const radius = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.BorderRadius, (item, layoutId) => {\n        if (!layoutId)\n            return;\n        const layoutParams = item.layoutParams[layoutId];\n        return 'radius' in layoutParams ? layoutParams.radius : 0;\n    }, (animator, scroll, value) => value !== undefined ? animator.getRadius({ radius: value }, scroll).radius : undefined, sectionId, [layoutId]);\n    const strokeWidth = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.BorderWidth, (item, layoutId) => {\n        if (!layoutId)\n            return;\n        const layoutParams = item.layoutParams[layoutId];\n        return 'strokeWidth' in layoutParams ? layoutParams.strokeWidth : 0;\n    }, (animator, scroll, value) => value !== undefined ? animator.getBorderWidth({ borderWidth: value }, scroll).borderWidth : undefined, sectionId, [layoutId]);\n    const fillColor = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.Color, (item, layoutId) => {\n        if (!layoutId)\n            return;\n        const layoutParams = item.layoutParams[layoutId];\n        return 'fillColor' in layoutParams ? layoutParams.fillColor : defaultColor;\n    }, (animator, scroll, value) => value ? animator.getColor({ color: value }, scroll).color : undefined, sectionId, [layoutId]);\n    const strokeColor = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.BorderColor, (item, layoutId) => {\n        if (!layoutId)\n            return;\n        const layoutParams = item.layoutParams[layoutId];\n        return 'strokeColor' in layoutParams ? layoutParams.strokeColor : defaultColor;\n    }, (animator, scroll, value) => value ? animator.getBorderColor({ color: value }, scroll).color : undefined, sectionId, [layoutId]);\n    const blur = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.Blur, (item, layoutId) => {\n        if (!layoutId)\n            return;\n        const layoutParams = item.layoutParams[layoutId];\n        return 'blur' in layoutParams ? layoutParams.blur : 0;\n    }, (animator, scroll, value) => value !== undefined ? animator.getBlur({ blur: value }, scroll).blur : undefined, sectionId, [layoutId]);\n    const backdropBlur = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.BackdropBlur, (item, layoutId) => {\n        if (!layoutId)\n            return;\n        const layoutParams = item.layoutParams[layoutId];\n        return 'backdropBlur' in layoutParams ? layoutParams.backdropBlur : 0;\n    }, (animator, scroll, value) => value !== undefined ? animator.getBackdropBlur({ backdropBlur: value }, scroll).backdropBlur : undefined, sectionId, [layoutId]);\n    return { fillColor, strokeWidth, radius, strokeColor, blur, backdropBlur };\n}\nexports.useRectangleItem = useRectangleItem;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy9SZWN0YW5nbGVJdGVtL3VzZVJlY3RhbmdsZUl0ZW0uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLGNBQWMsbUJBQU8sQ0FBQyxxRUFBaUI7QUFDdkMsMkJBQTJCLG1CQUFPLENBQUMsOEdBQWtDO0FBQ3JFLDJCQUEyQixtQkFBTyxDQUFDLHdHQUF3QjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSywwRUFBMEUsZUFBZTtBQUM5RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSywrRUFBK0Usb0JBQW9CO0FBQ3hHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLDJEQUEyRCxjQUFjO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLGlFQUFpRSxjQUFjO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLHdFQUF3RSxhQUFhO0FBQzFGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLGdGQUFnRixxQkFBcUI7QUFDMUcsYUFBYTtBQUNiO0FBQ0Esd0JBQXdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi9jb21wb25lbnRzL2l0ZW1zL1JlY3RhbmdsZUl0ZW0vdXNlUmVjdGFuZ2xlSXRlbS5qcz9kOGE5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy51c2VSZWN0YW5nbGVJdGVtID0gdm9pZCAwO1xuY29uc3Qgc2RrXzEgPSByZXF1aXJlKFwiQGNudHJsLXNpdGUvc2RrXCIpO1xuY29uc3QgdXNlS2V5ZnJhbWVWYWx1ZV8xID0gcmVxdWlyZShcIi4uLy4uLy4uL2NvbW1vbi91c2VLZXlmcmFtZVZhbHVlXCIpO1xuY29uc3QgdXNlTGF5b3V0Q29udGV4dF8xID0gcmVxdWlyZShcIi4uLy4uL3VzZUxheW91dENvbnRleHRcIik7XG5jb25zdCBkZWZhdWx0Q29sb3IgPSAncmdiYSgwLCAwLCAwLCAxKSc7XG5mdW5jdGlvbiB1c2VSZWN0YW5nbGVJdGVtKGl0ZW0sIHNlY3Rpb25JZCkge1xuICAgIGNvbnN0IGxheW91dElkID0gKDAsIHVzZUxheW91dENvbnRleHRfMS51c2VMYXlvdXRDb250ZXh0KSgpO1xuICAgIGNvbnN0IHJhZGl1cyA9ICgwLCB1c2VLZXlmcmFtZVZhbHVlXzEudXNlS2V5ZnJhbWVWYWx1ZSkoaXRlbSwgc2RrXzEuS2V5ZnJhbWVUeXBlLkJvcmRlclJhZGl1cywgKGl0ZW0sIGxheW91dElkKSA9PiB7XG4gICAgICAgIGlmICghbGF5b3V0SWQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IGxheW91dFBhcmFtcyA9IGl0ZW0ubGF5b3V0UGFyYW1zW2xheW91dElkXTtcbiAgICAgICAgcmV0dXJuICdyYWRpdXMnIGluIGxheW91dFBhcmFtcyA/IGxheW91dFBhcmFtcy5yYWRpdXMgOiAwO1xuICAgIH0sIChhbmltYXRvciwgc2Nyb2xsLCB2YWx1ZSkgPT4gdmFsdWUgIT09IHVuZGVmaW5lZCA/IGFuaW1hdG9yLmdldFJhZGl1cyh7IHJhZGl1czogdmFsdWUgfSwgc2Nyb2xsKS5yYWRpdXMgOiB1bmRlZmluZWQsIHNlY3Rpb25JZCwgW2xheW91dElkXSk7XG4gICAgY29uc3Qgc3Ryb2tlV2lkdGggPSAoMCwgdXNlS2V5ZnJhbWVWYWx1ZV8xLnVzZUtleWZyYW1lVmFsdWUpKGl0ZW0sIHNka18xLktleWZyYW1lVHlwZS5Cb3JkZXJXaWR0aCwgKGl0ZW0sIGxheW91dElkKSA9PiB7XG4gICAgICAgIGlmICghbGF5b3V0SWQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IGxheW91dFBhcmFtcyA9IGl0ZW0ubGF5b3V0UGFyYW1zW2xheW91dElkXTtcbiAgICAgICAgcmV0dXJuICdzdHJva2VXaWR0aCcgaW4gbGF5b3V0UGFyYW1zID8gbGF5b3V0UGFyYW1zLnN0cm9rZVdpZHRoIDogMDtcbiAgICB9LCAoYW5pbWF0b3IsIHNjcm9sbCwgdmFsdWUpID0+IHZhbHVlICE9PSB1bmRlZmluZWQgPyBhbmltYXRvci5nZXRCb3JkZXJXaWR0aCh7IGJvcmRlcldpZHRoOiB2YWx1ZSB9LCBzY3JvbGwpLmJvcmRlcldpZHRoIDogdW5kZWZpbmVkLCBzZWN0aW9uSWQsIFtsYXlvdXRJZF0pO1xuICAgIGNvbnN0IGZpbGxDb2xvciA9ICgwLCB1c2VLZXlmcmFtZVZhbHVlXzEudXNlS2V5ZnJhbWVWYWx1ZSkoaXRlbSwgc2RrXzEuS2V5ZnJhbWVUeXBlLkNvbG9yLCAoaXRlbSwgbGF5b3V0SWQpID0+IHtcbiAgICAgICAgaWYgKCFsYXlvdXRJZClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgbGF5b3V0UGFyYW1zID0gaXRlbS5sYXlvdXRQYXJhbXNbbGF5b3V0SWRdO1xuICAgICAgICByZXR1cm4gJ2ZpbGxDb2xvcicgaW4gbGF5b3V0UGFyYW1zID8gbGF5b3V0UGFyYW1zLmZpbGxDb2xvciA6IGRlZmF1bHRDb2xvcjtcbiAgICB9LCAoYW5pbWF0b3IsIHNjcm9sbCwgdmFsdWUpID0+IHZhbHVlID8gYW5pbWF0b3IuZ2V0Q29sb3IoeyBjb2xvcjogdmFsdWUgfSwgc2Nyb2xsKS5jb2xvciA6IHVuZGVmaW5lZCwgc2VjdGlvbklkLCBbbGF5b3V0SWRdKTtcbiAgICBjb25zdCBzdHJva2VDb2xvciA9ICgwLCB1c2VLZXlmcmFtZVZhbHVlXzEudXNlS2V5ZnJhbWVWYWx1ZSkoaXRlbSwgc2RrXzEuS2V5ZnJhbWVUeXBlLkJvcmRlckNvbG9yLCAoaXRlbSwgbGF5b3V0SWQpID0+IHtcbiAgICAgICAgaWYgKCFsYXlvdXRJZClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgbGF5b3V0UGFyYW1zID0gaXRlbS5sYXlvdXRQYXJhbXNbbGF5b3V0SWRdO1xuICAgICAgICByZXR1cm4gJ3N0cm9rZUNvbG9yJyBpbiBsYXlvdXRQYXJhbXMgPyBsYXlvdXRQYXJhbXMuc3Ryb2tlQ29sb3IgOiBkZWZhdWx0Q29sb3I7XG4gICAgfSwgKGFuaW1hdG9yLCBzY3JvbGwsIHZhbHVlKSA9PiB2YWx1ZSA/IGFuaW1hdG9yLmdldEJvcmRlckNvbG9yKHsgY29sb3I6IHZhbHVlIH0sIHNjcm9sbCkuY29sb3IgOiB1bmRlZmluZWQsIHNlY3Rpb25JZCwgW2xheW91dElkXSk7XG4gICAgY29uc3QgYmx1ciA9ICgwLCB1c2VLZXlmcmFtZVZhbHVlXzEudXNlS2V5ZnJhbWVWYWx1ZSkoaXRlbSwgc2RrXzEuS2V5ZnJhbWVUeXBlLkJsdXIsIChpdGVtLCBsYXlvdXRJZCkgPT4ge1xuICAgICAgICBpZiAoIWxheW91dElkKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBsYXlvdXRQYXJhbXMgPSBpdGVtLmxheW91dFBhcmFtc1tsYXlvdXRJZF07XG4gICAgICAgIHJldHVybiAnYmx1cicgaW4gbGF5b3V0UGFyYW1zID8gbGF5b3V0UGFyYW1zLmJsdXIgOiAwO1xuICAgIH0sIChhbmltYXRvciwgc2Nyb2xsLCB2YWx1ZSkgPT4gdmFsdWUgIT09IHVuZGVmaW5lZCA/IGFuaW1hdG9yLmdldEJsdXIoeyBibHVyOiB2YWx1ZSB9LCBzY3JvbGwpLmJsdXIgOiB1bmRlZmluZWQsIHNlY3Rpb25JZCwgW2xheW91dElkXSk7XG4gICAgY29uc3QgYmFja2Ryb3BCbHVyID0gKDAsIHVzZUtleWZyYW1lVmFsdWVfMS51c2VLZXlmcmFtZVZhbHVlKShpdGVtLCBzZGtfMS5LZXlmcmFtZVR5cGUuQmFja2Ryb3BCbHVyLCAoaXRlbSwgbGF5b3V0SWQpID0+IHtcbiAgICAgICAgaWYgKCFsYXlvdXRJZClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgbGF5b3V0UGFyYW1zID0gaXRlbS5sYXlvdXRQYXJhbXNbbGF5b3V0SWRdO1xuICAgICAgICByZXR1cm4gJ2JhY2tkcm9wQmx1cicgaW4gbGF5b3V0UGFyYW1zID8gbGF5b3V0UGFyYW1zLmJhY2tkcm9wQmx1ciA6IDA7XG4gICAgfSwgKGFuaW1hdG9yLCBzY3JvbGwsIHZhbHVlKSA9PiB2YWx1ZSAhPT0gdW5kZWZpbmVkID8gYW5pbWF0b3IuZ2V0QmFja2Ryb3BCbHVyKHsgYmFja2Ryb3BCbHVyOiB2YWx1ZSB9LCBzY3JvbGwpLmJhY2tkcm9wQmx1ciA6IHVuZGVmaW5lZCwgc2VjdGlvbklkLCBbbGF5b3V0SWRdKTtcbiAgICByZXR1cm4geyBmaWxsQ29sb3IsIHN0cm9rZVdpZHRoLCByYWRpdXMsIHN0cm9rZUNvbG9yLCBibHVyLCBiYWNrZHJvcEJsdXIgfTtcbn1cbmV4cG9ydHMudXNlUmVjdGFuZ2xlSXRlbSA9IHVzZVJlY3RhbmdsZUl0ZW07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/RectangleItem/useRectangleItem.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/RichTextItem/RichTextItem.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/RichTextItem/RichTextItem.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RichTextItem = void 0;\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst color_1 = __webpack_require__(/*! @cntrl-site/color */ \"./node_modules/@cntrl-site/color/lib/index.js\");\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst style_1 = __importDefault(__webpack_require__(/*! styled-jsx/style */ \"./node_modules/next/node_modules/styled-jsx/style.js\"));\nconst useRichTextItem_1 = __webpack_require__(/*! ./useRichTextItem */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/RichTextItem/useRichTextItem.js\");\nconst useCntrlContext_1 = __webpack_require__(/*! ../../../provider/useCntrlContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/useCntrlContext.js\");\nconst useRichTextItemValues_1 = __webpack_require__(/*! ../useRichTextItemValues */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useRichTextItemValues.js\");\nconst useRegisterResize_1 = __webpack_require__(/*! ../../../common/useRegisterResize */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useRegisterResize.js\");\nconst getFontFamilyValue_1 = __webpack_require__(/*! ../../../utils/getFontFamilyValue */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getFontFamilyValue.js\");\nconst useExemplary_1 = __webpack_require__(/*! ../../../common/useExemplary */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useExemplary.js\");\nconst useItemAngle_1 = __webpack_require__(/*! ../useItemAngle */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemAngle.js\");\nconst getStyleFromItemStateAndParams_1 = __webpack_require__(/*! ../../../utils/getStyleFromItemStateAndParams */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getStyleFromItemStateAndParams.js\");\nconst useCurrentLayout_1 = __webpack_require__(/*! ../../../common/useCurrentLayout */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useCurrentLayout.js\");\nconst RichTextItem = ({ item, sectionId, onResize, interactionCtrl, onVisibilityChange }) => {\n    var _a, _b, _c, _d;\n    const id = (0, react_1.useId)();\n    const [ref, setRef] = (0, react_1.useState)(null);\n    const { layouts } = (0, useCntrlContext_1.useCntrlContext)();\n    const itemAngle = (0, useItemAngle_1.useItemAngle)(item, sectionId);\n    const { blur: itemBlur, wordSpacing: itemWordSpacing, letterSpacing: itemLetterSpacing, color: itemColor, fontSize, lineHeight } = (0, useRichTextItemValues_1.useRichTextItemValues)(item, sectionId);\n    const layoutValues = [item.area, item.layoutParams];\n    const exemplary = (0, useExemplary_1.useExemplary)();\n    const { layoutId } = (0, useCurrentLayout_1.useCurrentLayout)();\n    (0, useRegisterResize_1.useRegisterResize)(ref, onResize);\n    const stateParams = interactionCtrl === null || interactionCtrl === void 0 ? void 0 : interactionCtrl.getState(['angle', 'blur', 'letterSpacing', 'wordSpacing', 'color']);\n    const stateStyles = (_a = stateParams === null || stateParams === void 0 ? void 0 : stateParams.styles) !== null && _a !== void 0 ? _a : {};\n    const transition = (_b = stateParams === null || stateParams === void 0 ? void 0 : stateParams.transition) !== null && _b !== void 0 ? _b : 'none';\n    const textColor = (0, react_1.useMemo)(() => {\n        var _a;\n        const color = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)((_a = stateParams === null || stateParams === void 0 ? void 0 : stateParams.styles) === null || _a === void 0 ? void 0 : _a.color, itemColor);\n        return color ? color_1.CntrlColor.parse(color) : undefined;\n    }, [itemColor, stateStyles.color]);\n    const angle = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)(stateStyles.angle, itemAngle);\n    const blur = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)(stateStyles.blur, itemBlur);\n    const letterSpacing = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)(stateStyles.letterSpacing, itemLetterSpacing);\n    const wordSpacing = (0, getStyleFromItemStateAndParams_1.getStyleFromItemStateAndParams)(stateStyles.wordSpacing, itemWordSpacing);\n    const colorAlpha = textColor === null || textColor === void 0 ? void 0 : textColor.getAlpha();\n    const rangeStyles = layoutId ? (_d = (_c = item.layoutParams[layoutId]) === null || _c === void 0 ? void 0 : _c.rangeStyles) !== null && _d !== void 0 ? _d : [] : [];\n    const rangeColors = rangeStyles.filter((style) => style.style === 'COLOR');\n    const hasVisibleRangeColors = rangeColors.some((color) => {\n        const alpha = color_1.CntrlColor.parse(color.value).getAlpha();\n        return alpha > 0;\n    });\n    const isInteractive = colorAlpha !== 0 || hasVisibleRangeColors;\n    const [content, styles] = (0, useRichTextItem_1.useRichTextItem)(item);\n    (0, react_1.useEffect)(() => {\n        onVisibilityChange === null || onVisibilityChange === void 0 ? void 0 : onVisibilityChange(isInteractive);\n    }, [isInteractive, onVisibilityChange]);\n    return ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(\"div\", { ref: setRef, className: `rich-text-wrapper-${item.id}`, style: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, (blur !== undefined ? { filter: `blur(${blur * 100}vw)` } : {})), (textColor ? { color: `${textColor.fmt('rgba')}` } : {})), (angle !== undefined ? { transform: `rotate(${angle}deg) translateZ(0)` } : {})), (letterSpacing !== undefined ? { letterSpacing: `${letterSpacing * exemplary}px` } : {})), (wordSpacing !== undefined ? { wordSpacing: `${wordSpacing * exemplary}px` } : {})), (fontSize !== undefined ? { fontSize: `${Math.round(fontSize * exemplary)}px` } : {})), (lineHeight !== undefined ? { lineHeight: `${lineHeight * exemplary}px` } : {})), { transition }), children: content }), (0, jsx_runtime_1.jsxs)(style_1.default, { id: id, children: [styles, `${(0, sdk_1.getLayoutStyles)(layouts, layoutValues, ([area, layoutParams]) => {\n                        const color = color_1.CntrlColor.parse(layoutParams.color);\n                        return (`\r\n            .rich-text-wrapper-${item.id} {\r\n              font-size: ${layoutParams.fontSize * 100}vw;\r\n              line-height: ${layoutParams.lineHeight * 100}vw;\r\n              letter-spacing: ${layoutParams.letterSpacing * 100}vw;\r\n              word-spacing: ${layoutParams.wordSpacing * 100}vw;\r\n              font-family: ${(0, getFontFamilyValue_1.getFontFamilyValue)(layoutParams.typeFace)};\r\n              font-weight: ${layoutParams.fontWeight};\r\n              font-style: ${layoutParams.fontStyle ? layoutParams.fontStyle : 'normal'};\r\n              vertical-align: ${layoutParams.verticalAlign};\r\n              font-variant: ${layoutParams.fontVariant};\r\n              color: ${color.fmt('rgba')};\r\n              transform: rotate(${area.angle}deg) translateZ(0);\r\n              filter: ${layoutParams.blur !== 0 ? `blur(${layoutParams.blur * 100}vw)` : 'unset'};\r\n              text-transform: ${layoutParams.textTransform};\r\n            }\r\n            @supports not (color: oklch(42% 0.3 90 / 1)) {\r\n              .rich-text-wrapper-${item.id} {\r\n                color: ${color.fmt('rgba')};\r\n              }\r\n            }\r\n          `);\n                    })}`] })] }));\n};\nexports.RichTextItem = RichTextItem;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/RichTextItem/RichTextItem.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/RichTextItem/useRichTextItem.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/RichTextItem/useRichTextItem.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useRichTextItem = void 0;\nconst RichTextConverter_1 = __webpack_require__(/*! ../../../utils/RichTextConverter/RichTextConverter */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/RichTextConverter/RichTextConverter.js\");\nconst useCntrlContext_1 = __webpack_require__(/*! ../../../provider/useCntrlContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/useCntrlContext.js\");\nconst richTextConverter = new RichTextConverter_1.RichTextConverter();\nconst useRichTextItem = (item) => {\n    const { layouts } = (0, useCntrlContext_1.useCntrlContext)();\n    const [content, styles] = richTextConverter.toHtml(item, layouts);\n    return [content, styles];\n};\nexports.useRichTextItem = useRichTextItem;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy9SaWNoVGV4dEl0ZW0vdXNlUmljaFRleHRJdGVtLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QjtBQUN2Qiw0QkFBNEIsbUJBQU8sQ0FBQyxrSkFBb0Q7QUFDeEYsMEJBQTBCLG1CQUFPLENBQUMsZ0hBQW1DO0FBQ3JFO0FBQ0E7QUFDQSxZQUFZLFVBQVU7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi9jb21wb25lbnRzL2l0ZW1zL1JpY2hUZXh0SXRlbS91c2VSaWNoVGV4dEl0ZW0uanM/ZmExYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudXNlUmljaFRleHRJdGVtID0gdm9pZCAwO1xuY29uc3QgUmljaFRleHRDb252ZXJ0ZXJfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi91dGlscy9SaWNoVGV4dENvbnZlcnRlci9SaWNoVGV4dENvbnZlcnRlclwiKTtcbmNvbnN0IHVzZUNudHJsQ29udGV4dF8xID0gcmVxdWlyZShcIi4uLy4uLy4uL3Byb3ZpZGVyL3VzZUNudHJsQ29udGV4dFwiKTtcbmNvbnN0IHJpY2hUZXh0Q29udmVydGVyID0gbmV3IFJpY2hUZXh0Q29udmVydGVyXzEuUmljaFRleHRDb252ZXJ0ZXIoKTtcbmNvbnN0IHVzZVJpY2hUZXh0SXRlbSA9IChpdGVtKSA9PiB7XG4gICAgY29uc3QgeyBsYXlvdXRzIH0gPSAoMCwgdXNlQ250cmxDb250ZXh0XzEudXNlQ250cmxDb250ZXh0KSgpO1xuICAgIGNvbnN0IFtjb250ZW50LCBzdHlsZXNdID0gcmljaFRleHRDb252ZXJ0ZXIudG9IdG1sKGl0ZW0sIGxheW91dHMpO1xuICAgIHJldHVybiBbY29udGVudCwgc3R5bGVzXTtcbn07XG5leHBvcnRzLnVzZVJpY2hUZXh0SXRlbSA9IHVzZVJpY2hUZXh0SXRlbTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/RichTextItem/useRichTextItem.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/RichTextWrapper.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/RichTextWrapper.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RichTextWrapper = void 0;\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nconst RichTextWrapper = ({ isRichText, children, transformOrigin = 'top left' }) => {\n    if (!isRichText)\n        return (0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, { children: children });\n    return ((0, jsx_runtime_1.jsx)(\"div\", { style: { transformOrigin, transform: 'scale(var(--layout-deviation))' }, children: children }));\n};\nexports.RichTextWrapper = RichTextWrapper;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy9SaWNoVGV4dFdyYXBwZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCLHNCQUFzQixtQkFBTyxDQUFDLDhEQUFtQjtBQUNqRCwyQkFBMkIsb0RBQW9EO0FBQy9FO0FBQ0EsZ0VBQWdFLG9CQUFvQjtBQUNwRiw0Q0FBNEMsU0FBUyw4REFBOEQsc0JBQXNCO0FBQ3pJO0FBQ0EsdUJBQXVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi9jb21wb25lbnRzL2l0ZW1zL1JpY2hUZXh0V3JhcHBlci5qcz82ZGNmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5SaWNoVGV4dFdyYXBwZXIgPSB2b2lkIDA7XG5jb25zdCBqc3hfcnVudGltZV8xID0gcmVxdWlyZShcInJlYWN0L2pzeC1ydW50aW1lXCIpO1xuY29uc3QgUmljaFRleHRXcmFwcGVyID0gKHsgaXNSaWNoVGV4dCwgY2hpbGRyZW4sIHRyYW5zZm9ybU9yaWdpbiA9ICd0b3AgbGVmdCcgfSkgPT4ge1xuICAgIGlmICghaXNSaWNoVGV4dClcbiAgICAgICAgcmV0dXJuICgwLCBqc3hfcnVudGltZV8xLmpzeCkoanN4X3J1bnRpbWVfMS5GcmFnbWVudCwgeyBjaGlsZHJlbjogY2hpbGRyZW4gfSk7XG4gICAgcmV0dXJuICgoMCwganN4X3J1bnRpbWVfMS5qc3gpKFwiZGl2XCIsIHsgc3R5bGU6IHsgdHJhbnNmb3JtT3JpZ2luLCB0cmFuc2Zvcm06ICdzY2FsZSh2YXIoLS1sYXlvdXQtZGV2aWF0aW9uKSknIH0sIGNoaWxkcmVuOiBjaGlsZHJlbiB9KSk7XG59O1xuZXhwb3J0cy5SaWNoVGV4dFdyYXBwZXIgPSBSaWNoVGV4dFdyYXBwZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/RichTextWrapper.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/itemsMap.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/itemsMap.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.itemsMap = void 0;\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst RectangleItem_1 = __webpack_require__(/*! ./RectangleItem/RectangleItem */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/RectangleItem/RectangleItem.js\");\nconst ImageItem_1 = __webpack_require__(/*! ./FileItem/ImageItem */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/FileItem/ImageItem.js\");\nconst VideoItem_1 = __webpack_require__(/*! ./FileItem/VideoItem */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/FileItem/VideoItem.js\");\nconst RichTextItem_1 = __webpack_require__(/*! ./RichTextItem/RichTextItem */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/RichTextItem/RichTextItem.js\");\nconst YoutubeEmbed_1 = __webpack_require__(/*! ./EmbedVideoItem/YoutubeEmbed */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/EmbedVideoItem/YoutubeEmbed.js\");\nconst VimeoEmbed_1 = __webpack_require__(/*! ./EmbedVideoItem/VimeoEmbed */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/EmbedVideoItem/VimeoEmbed.js\");\nconst CustomItem_1 = __webpack_require__(/*! ./CustomItem/CustomItem */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/CustomItem/CustomItem.js\");\nconst GroupItem_1 = __webpack_require__(/*! ./GroupItem/GroupItem */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/GroupItem/GroupItem.js\");\nconst CodeEmbedItem_1 = __webpack_require__(/*! ./CodeEmbedItem/CodeEmbedItem */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/CodeEmbedItem/CodeEmbedItem.js\");\nconst CompoundItem_1 = __webpack_require__(/*! ./CompoundItem/CompoundItem */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/CompoundItem/CompoundItem.js\");\nconst ComponentItem_1 = __webpack_require__(/*! ./ComponentItem/ComponentItem */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/ComponentItem/ComponentItem.js\");\nexports.itemsMap = {\n    [sdk_1.ArticleItemType.Rectangle]: RectangleItem_1.RectangleItem,\n    [sdk_1.ArticleItemType.Image]: ImageItem_1.ImageItem,\n    [sdk_1.ArticleItemType.Video]: VideoItem_1.VideoItem,\n    [sdk_1.ArticleItemType.RichText]: RichTextItem_1.RichTextItem,\n    [sdk_1.ArticleItemType.YoutubeEmbed]: YoutubeEmbed_1.YoutubeEmbedItem,\n    [sdk_1.ArticleItemType.VimeoEmbed]: VimeoEmbed_1.VimeoEmbedItem,\n    [sdk_1.ArticleItemType.Custom]: CustomItem_1.CustomItem,\n    [sdk_1.ArticleItemType.Group]: GroupItem_1.GroupItem,\n    [sdk_1.ArticleItemType.Compound]: CompoundItem_1.CompoundItem,\n    [sdk_1.ArticleItemType.CodeEmbed]: CodeEmbedItem_1.CodeEmbedItem,\n    [sdk_1.ArticleItemType.Component]: ComponentItem_1.ComponentItem\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy9pdGVtc01hcC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0I7QUFDaEIsY0FBYyxtQkFBTyxDQUFDLHFFQUFpQjtBQUN2Qyx3QkFBd0IsbUJBQU8sQ0FBQyxnSUFBK0I7QUFDL0Qsb0JBQW9CLG1CQUFPLENBQUMsOEdBQXNCO0FBQ2xELG9CQUFvQixtQkFBTyxDQUFDLDhHQUFzQjtBQUNsRCx1QkFBdUIsbUJBQU8sQ0FBQyw0SEFBNkI7QUFDNUQsdUJBQXVCLG1CQUFPLENBQUMsZ0lBQStCO0FBQzlELHFCQUFxQixtQkFBTyxDQUFDLDRIQUE2QjtBQUMxRCxxQkFBcUIsbUJBQU8sQ0FBQyxvSEFBeUI7QUFDdEQsb0JBQW9CLG1CQUFPLENBQUMsZ0hBQXVCO0FBQ25ELHdCQUF3QixtQkFBTyxDQUFDLGdJQUErQjtBQUMvRCx1QkFBdUIsbUJBQU8sQ0FBQyw0SEFBNkI7QUFDNUQsd0JBQXdCLG1CQUFPLENBQUMsZ0lBQStCO0FBQy9ELGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbnRybC1zaXRlL3Nkay1uZXh0anMvbGliL2NvbXBvbmVudHMvaXRlbXMvaXRlbXNNYXAuanM/MmFhMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXRlbXNNYXAgPSB2b2lkIDA7XG5jb25zdCBzZGtfMSA9IHJlcXVpcmUoXCJAY250cmwtc2l0ZS9zZGtcIik7XG5jb25zdCBSZWN0YW5nbGVJdGVtXzEgPSByZXF1aXJlKFwiLi9SZWN0YW5nbGVJdGVtL1JlY3RhbmdsZUl0ZW1cIik7XG5jb25zdCBJbWFnZUl0ZW1fMSA9IHJlcXVpcmUoXCIuL0ZpbGVJdGVtL0ltYWdlSXRlbVwiKTtcbmNvbnN0IFZpZGVvSXRlbV8xID0gcmVxdWlyZShcIi4vRmlsZUl0ZW0vVmlkZW9JdGVtXCIpO1xuY29uc3QgUmljaFRleHRJdGVtXzEgPSByZXF1aXJlKFwiLi9SaWNoVGV4dEl0ZW0vUmljaFRleHRJdGVtXCIpO1xuY29uc3QgWW91dHViZUVtYmVkXzEgPSByZXF1aXJlKFwiLi9FbWJlZFZpZGVvSXRlbS9Zb3V0dWJlRW1iZWRcIik7XG5jb25zdCBWaW1lb0VtYmVkXzEgPSByZXF1aXJlKFwiLi9FbWJlZFZpZGVvSXRlbS9WaW1lb0VtYmVkXCIpO1xuY29uc3QgQ3VzdG9tSXRlbV8xID0gcmVxdWlyZShcIi4vQ3VzdG9tSXRlbS9DdXN0b21JdGVtXCIpO1xuY29uc3QgR3JvdXBJdGVtXzEgPSByZXF1aXJlKFwiLi9Hcm91cEl0ZW0vR3JvdXBJdGVtXCIpO1xuY29uc3QgQ29kZUVtYmVkSXRlbV8xID0gcmVxdWlyZShcIi4vQ29kZUVtYmVkSXRlbS9Db2RlRW1iZWRJdGVtXCIpO1xuY29uc3QgQ29tcG91bmRJdGVtXzEgPSByZXF1aXJlKFwiLi9Db21wb3VuZEl0ZW0vQ29tcG91bmRJdGVtXCIpO1xuY29uc3QgQ29tcG9uZW50SXRlbV8xID0gcmVxdWlyZShcIi4vQ29tcG9uZW50SXRlbS9Db21wb25lbnRJdGVtXCIpO1xuZXhwb3J0cy5pdGVtc01hcCA9IHtcbiAgICBbc2RrXzEuQXJ0aWNsZUl0ZW1UeXBlLlJlY3RhbmdsZV06IFJlY3RhbmdsZUl0ZW1fMS5SZWN0YW5nbGVJdGVtLFxuICAgIFtzZGtfMS5BcnRpY2xlSXRlbVR5cGUuSW1hZ2VdOiBJbWFnZUl0ZW1fMS5JbWFnZUl0ZW0sXG4gICAgW3Nka18xLkFydGljbGVJdGVtVHlwZS5WaWRlb106IFZpZGVvSXRlbV8xLlZpZGVvSXRlbSxcbiAgICBbc2RrXzEuQXJ0aWNsZUl0ZW1UeXBlLlJpY2hUZXh0XTogUmljaFRleHRJdGVtXzEuUmljaFRleHRJdGVtLFxuICAgIFtzZGtfMS5BcnRpY2xlSXRlbVR5cGUuWW91dHViZUVtYmVkXTogWW91dHViZUVtYmVkXzEuWW91dHViZUVtYmVkSXRlbSxcbiAgICBbc2RrXzEuQXJ0aWNsZUl0ZW1UeXBlLlZpbWVvRW1iZWRdOiBWaW1lb0VtYmVkXzEuVmltZW9FbWJlZEl0ZW0sXG4gICAgW3Nka18xLkFydGljbGVJdGVtVHlwZS5DdXN0b21dOiBDdXN0b21JdGVtXzEuQ3VzdG9tSXRlbSxcbiAgICBbc2RrXzEuQXJ0aWNsZUl0ZW1UeXBlLkdyb3VwXTogR3JvdXBJdGVtXzEuR3JvdXBJdGVtLFxuICAgIFtzZGtfMS5BcnRpY2xlSXRlbVR5cGUuQ29tcG91bmRdOiBDb21wb3VuZEl0ZW1fMS5Db21wb3VuZEl0ZW0sXG4gICAgW3Nka18xLkFydGljbGVJdGVtVHlwZS5Db2RlRW1iZWRdOiBDb2RlRW1iZWRJdGVtXzEuQ29kZUVtYmVkSXRlbSxcbiAgICBbc2RrXzEuQXJ0aWNsZUl0ZW1UeXBlLkNvbXBvbmVudF06IENvbXBvbmVudEl0ZW1fMS5Db21wb25lbnRJdGVtXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/itemsMap.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useDraggable.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useDraggable.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useDraggable = void 0;\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst INITIAL_STATE = {\n    drag: false,\n    startX: 0,\n    startY: 0,\n    currentX: 0,\n    currentY: 0,\n    pivotX: 0,\n    pivotY: 0,\n    lastX: 0,\n    lastY: 0\n};\nfunction useDraggable(data, dragHandler, preventDragOnChildren = false) {\n    const dragStateRef = (0, react_1.useRef)(INITIAL_STATE);\n    const prevDragStateRef = (0, react_1.useRef)();\n    const dragHandlerRef = (0, react_1.useRef)();\n    const untrackMouseMoveRef = (0, react_1.useRef)();\n    const animationFrameRef = (0, react_1.useRef)();\n    dragHandlerRef.current = dragHandler;\n    const setDragState = (0, react_1.useCallback)(action => {\n        const state = isStateGetter(action)\n            ? action(dragStateRef.current)\n            : action;\n        if (!prevDragStateRef.current) {\n            prevDragStateRef.current = dragStateRef.current;\n        }\n        dragStateRef.current = state;\n        if (animationFrameRef.current !== undefined)\n            return;\n        animationFrameRef.current = window.requestAnimationFrame(() => {\n            var _a;\n            animationFrameRef.current = undefined;\n            (_a = dragHandlerRef.current) === null || _a === void 0 ? void 0 : _a.call(dragHandlerRef, dragStateRef.current, prevDragStateRef.current);\n            prevDragStateRef.current = dragStateRef.current;\n        });\n    }, []);\n    const handleMouseMove = (0, react_1.useCallback)(event => {\n        event.stopPropagation();\n        const el = event.target;\n        if (!(el instanceof HTMLElement))\n            return;\n        setDragState(state => {\n            if (!state.drag) {\n                const clientRect = el.getBoundingClientRect();\n                return {\n                    drag: true,\n                    startX: event.clientX,\n                    startY: event.clientY,\n                    currentX: event.clientX,\n                    currentY: event.clientY,\n                    pivotX: event.clientX - clientRect.x,\n                    pivotY: event.clientY - clientRect.y,\n                    lastX: state.lastX,\n                    lastY: state.lastY\n                };\n            }\n            return Object.assign(Object.assign({}, state), { currentX: state.currentX + event.movementX, currentY: state.currentY + event.movementY });\n        });\n    }, [setDragState, data.draggableRef, preventDragOnChildren]);\n    const handleMouseUp = (0, react_1.useCallback)(event => {\n        var _a;\n        event.stopPropagation();\n        setDragState(state => (Object.assign(Object.assign({}, state), { drag: false, lastX: state.currentX - state.startX + state.lastX, lastY: state.currentY - state.startY + state.lastY })));\n        (_a = untrackMouseMoveRef.current) === null || _a === void 0 ? void 0 : _a.call(untrackMouseMoveRef);\n    }, [setDragState]);\n    const handleScroll = (0, react_1.useCallback)(() => {\n        setDragState(state => state);\n    }, [setDragState]);\n    const trackMouseMove = (0, react_1.useCallback)(() => {\n        window.addEventListener('mousemove', handleMouseMove, { capture: true });\n        window.addEventListener('mouseup', handleMouseUp, { capture: true });\n        window.addEventListener('scroll', handleScroll, { capture: true, passive: true });\n        return () => {\n            window.removeEventListener('mousemove', handleMouseMove, { capture: true });\n            window.removeEventListener('mouseup', handleMouseUp, { capture: true });\n            window.removeEventListener('scroll', handleScroll, { capture: true });\n        };\n    }, [handleMouseMove, handleMouseUp, handleScroll]);\n    const handleMouseDown = (0, react_1.useCallback)(event => {\n        var _a;\n        event.stopPropagation();\n        if (preventDragOnChildren && event.target instanceof Node && data.draggableRef instanceof Node) {\n            if (event.target !== data.draggableRef && data.draggableRef.contains(event.target))\n                return;\n        }\n        if (event.button !== 0)\n            return;\n        (_a = untrackMouseMoveRef.current) === null || _a === void 0 ? void 0 : _a.call(untrackMouseMoveRef);\n        untrackMouseMoveRef.current = trackMouseMove();\n    }, [trackMouseMove]);\n    const handleTouchMove = (0, react_1.useCallback)(event => {\n        event.stopPropagation();\n        event.preventDefault();\n        const touch = event.touches[0];\n        const el = event.target;\n        if (!(el instanceof HTMLElement))\n            return;\n        setDragState(state => {\n            if (!state.drag) {\n                const clientRect = el.getBoundingClientRect();\n                return {\n                    drag: true,\n                    startX: touch.clientX,\n                    startY: touch.clientY,\n                    currentX: touch.clientX,\n                    currentY: touch.clientY,\n                    pivotX: touch.clientX - clientRect.x,\n                    pivotY: touch.clientY - clientRect.y,\n                    lastX: state.lastX,\n                    lastY: state.lastY\n                };\n            }\n            const movementX = touch.clientX - state.currentX;\n            const movementY = touch.clientY - state.currentY;\n            return Object.assign(Object.assign({}, state), { currentX: state.currentX + movementX, currentY: state.currentY + movementY });\n        });\n    }, [setDragState]);\n    const handleTouchEnd = (0, react_1.useCallback)(event => {\n        var _a;\n        event.stopPropagation();\n        document.body.style.overflow = '';\n        document.documentElement.style.overflow = '';\n        setDragState(state => (Object.assign(Object.assign({}, state), { drag: false, lastX: state.currentX - state.startX + state.lastX, lastY: state.currentY - state.startY + state.lastY })));\n        (_a = untrackMouseMoveRef.current) === null || _a === void 0 ? void 0 : _a.call(untrackMouseMoveRef);\n    }, [setDragState]);\n    const trackTouchMove = (0, react_1.useCallback)(() => {\n        window.addEventListener('touchmove', handleTouchMove, { capture: true, passive: false });\n        window.addEventListener('touchend', handleTouchEnd, { capture: true });\n        window.addEventListener('touchcancel', handleTouchEnd, { capture: true });\n        return () => {\n            window.removeEventListener('touchmove', handleTouchMove, { capture: true });\n            window.removeEventListener('touchend', handleTouchEnd, { capture: true });\n            window.removeEventListener('touchcancel', handleTouchEnd, { capture: true });\n        };\n    }, [handleTouchMove, handleTouchEnd]);\n    const handleTouchStart = (0, react_1.useCallback)(event => {\n        var _a;\n        event.stopPropagation();\n        if (preventDragOnChildren && event.target instanceof Node && data.draggableRef instanceof Node) {\n            if (event.target !== data.draggableRef && data.draggableRef.contains(event.target))\n                return;\n        }\n        document.body.style.overflow = 'hidden';\n        document.documentElement.style.overflow = 'hidden';\n        const selection = document.getSelection();\n        if (selection) {\n            selection.removeAllRanges();\n        }\n        (_a = untrackMouseMoveRef.current) === null || _a === void 0 ? void 0 : _a.call(untrackMouseMoveRef);\n        untrackMouseMoveRef.current = trackTouchMove();\n    }, [trackTouchMove]);\n    (0, react_1.useEffect)(() => {\n        if (!data.draggableRef || !data.isEnabled)\n            return;\n        const mouseHandler = handleMouseDown;\n        const touchHandler = handleTouchStart;\n        data.draggableRef.addEventListener('mousedown', mouseHandler);\n        data.draggableRef.addEventListener('touchstart', touchHandler);\n        return () => {\n            var _a, _b, _c;\n            (_a = data.draggableRef) === null || _a === void 0 ? void 0 : _a.removeEventListener('mousedown', mouseHandler);\n            (_b = data.draggableRef) === null || _b === void 0 ? void 0 : _b.removeEventListener('touchstart', touchHandler);\n            (_c = untrackMouseMoveRef.current) === null || _c === void 0 ? void 0 : _c.call(untrackMouseMoveRef);\n            if (animationFrameRef.current !== undefined) {\n                window.cancelAnimationFrame(animationFrameRef.current);\n            }\n            document.body.style.overflow = '';\n            document.documentElement.style.overflow = '';\n        };\n    }, [data.draggableRef, data.isEnabled, handleMouseDown, handleTouchStart]);\n}\nexports.useDraggable = useDraggable;\nfunction isStateGetter(action) {\n    return typeof action === 'function';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useDraggable.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemAngle.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemAngle.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useItemAngle = void 0;\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst useKeyframeValue_1 = __webpack_require__(/*! ../../common/useKeyframeValue */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useKeyframeValue.js\");\nconst useItemAngle = (item, sectionId) => {\n    const angle = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.Rotation, (item, layoutId) => layoutId ? item.area[layoutId].angle : undefined, (animator, scroll, value) => value !== undefined ? animator.getRotation({ angle: value }, scroll).angle : undefined, sectionId);\n    return angle;\n};\nexports.useItemAngle = useItemAngle;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy91c2VJdGVtQW5nbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CO0FBQ3BCLGNBQWMsbUJBQU8sQ0FBQyxxRUFBaUI7QUFDdkMsMkJBQTJCLG1CQUFPLENBQUMsMkdBQStCO0FBQ2xFO0FBQ0EsOE9BQThPLGNBQWM7QUFDNVA7QUFDQTtBQUNBLG9CQUFvQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy91c2VJdGVtQW5nbGUuanM/ZTkzYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudXNlSXRlbUFuZ2xlID0gdm9pZCAwO1xuY29uc3Qgc2RrXzEgPSByZXF1aXJlKFwiQGNudHJsLXNpdGUvc2RrXCIpO1xuY29uc3QgdXNlS2V5ZnJhbWVWYWx1ZV8xID0gcmVxdWlyZShcIi4uLy4uL2NvbW1vbi91c2VLZXlmcmFtZVZhbHVlXCIpO1xuY29uc3QgdXNlSXRlbUFuZ2xlID0gKGl0ZW0sIHNlY3Rpb25JZCkgPT4ge1xuICAgIGNvbnN0IGFuZ2xlID0gKDAsIHVzZUtleWZyYW1lVmFsdWVfMS51c2VLZXlmcmFtZVZhbHVlKShpdGVtLCBzZGtfMS5LZXlmcmFtZVR5cGUuUm90YXRpb24sIChpdGVtLCBsYXlvdXRJZCkgPT4gbGF5b3V0SWQgPyBpdGVtLmFyZWFbbGF5b3V0SWRdLmFuZ2xlIDogdW5kZWZpbmVkLCAoYW5pbWF0b3IsIHNjcm9sbCwgdmFsdWUpID0+IHZhbHVlICE9PSB1bmRlZmluZWQgPyBhbmltYXRvci5nZXRSb3RhdGlvbih7IGFuZ2xlOiB2YWx1ZSB9LCBzY3JvbGwpLmFuZ2xlIDogdW5kZWZpbmVkLCBzZWN0aW9uSWQpO1xuICAgIHJldHVybiBhbmdsZTtcbn07XG5leHBvcnRzLnVzZUl0ZW1BbmdsZSA9IHVzZUl0ZW1BbmdsZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemAngle.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemArea.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemArea.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useItemArea = void 0;\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst useLayoutContext_1 = __webpack_require__(/*! ../useLayoutContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/useLayoutContext.js\");\nconst useKeyframeValue_1 = __webpack_require__(/*! ../../common/useKeyframeValue */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useKeyframeValue.js\");\nfunction useItemArea(item, sectionId, stateValues) {\n    var _a, _b, _c, _d;\n    const layoutId = (0, useLayoutContext_1.useLayoutContext)();\n    const position = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.Position, (item, layoutId) => {\n        if (!layoutId)\n            return;\n        return item.area[layoutId];\n    }, (animator, scroll, value) => value ? animator.getPositions(value, scroll) : undefined, sectionId, [layoutId]);\n    const dimensions = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.Dimensions, (item, layoutId) => layoutId ? item.area[layoutId] : undefined, (animator, scroll, value) => value ? animator.getDimensions(value, scroll) : undefined, sectionId, [layoutId]);\n    const width = ((_a = stateValues.width) !== null && _a !== void 0 ? _a : dimensions === null || dimensions === void 0 ? void 0 : dimensions.width);\n    const height = ((_b = stateValues.height) !== null && _b !== void 0 ? _b : dimensions === null || dimensions === void 0 ? void 0 : dimensions.height);\n    const top = ((_c = stateValues.top) !== null && _c !== void 0 ? _c : position === null || position === void 0 ? void 0 : position.top);\n    const left = ((_d = stateValues.left) !== null && _d !== void 0 ? _d : position === null || position === void 0 ? void 0 : position.left);\n    return { width, height, top, left };\n}\nexports.useItemArea = useItemArea;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy91c2VJdGVtQXJlYS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkIsY0FBYyxtQkFBTyxDQUFDLHFFQUFpQjtBQUN2QywyQkFBMkIsbUJBQU8sQ0FBQyxxR0FBcUI7QUFDeEQsMkJBQTJCLG1CQUFPLENBQUMsMkdBQStCO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxtQkFBbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbnRybC1zaXRlL3Nkay1uZXh0anMvbGliL2NvbXBvbmVudHMvaXRlbXMvdXNlSXRlbUFyZWEuanM/NGUzYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudXNlSXRlbUFyZWEgPSB2b2lkIDA7XG5jb25zdCBzZGtfMSA9IHJlcXVpcmUoXCJAY250cmwtc2l0ZS9zZGtcIik7XG5jb25zdCB1c2VMYXlvdXRDb250ZXh0XzEgPSByZXF1aXJlKFwiLi4vdXNlTGF5b3V0Q29udGV4dFwiKTtcbmNvbnN0IHVzZUtleWZyYW1lVmFsdWVfMSA9IHJlcXVpcmUoXCIuLi8uLi9jb21tb24vdXNlS2V5ZnJhbWVWYWx1ZVwiKTtcbmZ1bmN0aW9uIHVzZUl0ZW1BcmVhKGl0ZW0sIHNlY3Rpb25JZCwgc3RhdGVWYWx1ZXMpIHtcbiAgICB2YXIgX2EsIF9iLCBfYywgX2Q7XG4gICAgY29uc3QgbGF5b3V0SWQgPSAoMCwgdXNlTGF5b3V0Q29udGV4dF8xLnVzZUxheW91dENvbnRleHQpKCk7XG4gICAgY29uc3QgcG9zaXRpb24gPSAoMCwgdXNlS2V5ZnJhbWVWYWx1ZV8xLnVzZUtleWZyYW1lVmFsdWUpKGl0ZW0sIHNka18xLktleWZyYW1lVHlwZS5Qb3NpdGlvbiwgKGl0ZW0sIGxheW91dElkKSA9PiB7XG4gICAgICAgIGlmICghbGF5b3V0SWQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHJldHVybiBpdGVtLmFyZWFbbGF5b3V0SWRdO1xuICAgIH0sIChhbmltYXRvciwgc2Nyb2xsLCB2YWx1ZSkgPT4gdmFsdWUgPyBhbmltYXRvci5nZXRQb3NpdGlvbnModmFsdWUsIHNjcm9sbCkgOiB1bmRlZmluZWQsIHNlY3Rpb25JZCwgW2xheW91dElkXSk7XG4gICAgY29uc3QgZGltZW5zaW9ucyA9ICgwLCB1c2VLZXlmcmFtZVZhbHVlXzEudXNlS2V5ZnJhbWVWYWx1ZSkoaXRlbSwgc2RrXzEuS2V5ZnJhbWVUeXBlLkRpbWVuc2lvbnMsIChpdGVtLCBsYXlvdXRJZCkgPT4gbGF5b3V0SWQgPyBpdGVtLmFyZWFbbGF5b3V0SWRdIDogdW5kZWZpbmVkLCAoYW5pbWF0b3IsIHNjcm9sbCwgdmFsdWUpID0+IHZhbHVlID8gYW5pbWF0b3IuZ2V0RGltZW5zaW9ucyh2YWx1ZSwgc2Nyb2xsKSA6IHVuZGVmaW5lZCwgc2VjdGlvbklkLCBbbGF5b3V0SWRdKTtcbiAgICBjb25zdCB3aWR0aCA9ICgoX2EgPSBzdGF0ZVZhbHVlcy53aWR0aCkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogZGltZW5zaW9ucyA9PT0gbnVsbCB8fCBkaW1lbnNpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBkaW1lbnNpb25zLndpZHRoKTtcbiAgICBjb25zdCBoZWlnaHQgPSAoKF9iID0gc3RhdGVWYWx1ZXMuaGVpZ2h0KSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBkaW1lbnNpb25zID09PSBudWxsIHx8IGRpbWVuc2lvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGRpbWVuc2lvbnMuaGVpZ2h0KTtcbiAgICBjb25zdCB0b3AgPSAoKF9jID0gc3RhdGVWYWx1ZXMudG9wKSAhPT0gbnVsbCAmJiBfYyAhPT0gdm9pZCAwID8gX2MgOiBwb3NpdGlvbiA9PT0gbnVsbCB8fCBwb3NpdGlvbiA9PT0gdm9pZCAwID8gdm9pZCAwIDogcG9zaXRpb24udG9wKTtcbiAgICBjb25zdCBsZWZ0ID0gKChfZCA9IHN0YXRlVmFsdWVzLmxlZnQpICE9PSBudWxsICYmIF9kICE9PSB2b2lkIDAgPyBfZCA6IHBvc2l0aW9uID09PSBudWxsIHx8IHBvc2l0aW9uID09PSB2b2lkIDAgPyB2b2lkIDAgOiBwb3NpdGlvbi5sZWZ0KTtcbiAgICByZXR1cm4geyB3aWR0aCwgaGVpZ2h0LCB0b3AsIGxlZnQgfTtcbn1cbmV4cG9ydHMudXNlSXRlbUFyZWEgPSB1c2VJdGVtQXJlYTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemArea.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemPointerEvents.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemPointerEvents.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useItemPointerEvents = void 0;\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nfunction useItemPointerEvents(pointerEvents, isParentVisible) {\n    const getAllowPointerEvents = () => {\n        switch (pointerEvents) {\n            case 'never':\n                return false;\n            case 'when_visible':\n                return isParentVisible;\n            case 'always':\n                return true;\n        }\n    };\n    const [allowPointerEvents, setAllowPointerEvents] = (0, react_1.useState)(getAllowPointerEvents());\n    const handleVisibilityChange = (0, react_1.useCallback)((isVisible) => {\n        if (!isParentVisible || pointerEvents !== 'when_visible')\n            return;\n        setAllowPointerEvents(isVisible);\n    }, [isParentVisible, pointerEvents]);\n    return { allowPointerEvents, handleVisibilityChange };\n}\nexports.useItemPointerEvents = useItemPointerEvents;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy91c2VJdGVtUG9pbnRlckV2ZW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw0QkFBNEI7QUFDNUIsZ0JBQWdCLG1CQUFPLENBQUMsNENBQU87QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsYUFBYTtBQUNiO0FBQ0EsNEJBQTRCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi9jb21wb25lbnRzL2l0ZW1zL3VzZUl0ZW1Qb2ludGVyRXZlbnRzLmpzPzM0YzEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnVzZUl0ZW1Qb2ludGVyRXZlbnRzID0gdm9pZCAwO1xuY29uc3QgcmVhY3RfMSA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmZ1bmN0aW9uIHVzZUl0ZW1Qb2ludGVyRXZlbnRzKHBvaW50ZXJFdmVudHMsIGlzUGFyZW50VmlzaWJsZSkge1xuICAgIGNvbnN0IGdldEFsbG93UG9pbnRlckV2ZW50cyA9ICgpID0+IHtcbiAgICAgICAgc3dpdGNoIChwb2ludGVyRXZlbnRzKSB7XG4gICAgICAgICAgICBjYXNlICduZXZlcic6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgY2FzZSAnd2hlbl92aXNpYmxlJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gaXNQYXJlbnRWaXNpYmxlO1xuICAgICAgICAgICAgY2FzZSAnYWx3YXlzJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgY29uc3QgW2FsbG93UG9pbnRlckV2ZW50cywgc2V0QWxsb3dQb2ludGVyRXZlbnRzXSA9ICgwLCByZWFjdF8xLnVzZVN0YXRlKShnZXRBbGxvd1BvaW50ZXJFdmVudHMoKSk7XG4gICAgY29uc3QgaGFuZGxlVmlzaWJpbGl0eUNoYW5nZSA9ICgwLCByZWFjdF8xLnVzZUNhbGxiYWNrKSgoaXNWaXNpYmxlKSA9PiB7XG4gICAgICAgIGlmICghaXNQYXJlbnRWaXNpYmxlIHx8IHBvaW50ZXJFdmVudHMgIT09ICd3aGVuX3Zpc2libGUnKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBzZXRBbGxvd1BvaW50ZXJFdmVudHMoaXNWaXNpYmxlKTtcbiAgICB9LCBbaXNQYXJlbnRWaXNpYmxlLCBwb2ludGVyRXZlbnRzXSk7XG4gICAgcmV0dXJuIHsgYWxsb3dQb2ludGVyRXZlbnRzLCBoYW5kbGVWaXNpYmlsaXR5Q2hhbmdlIH07XG59XG5leHBvcnRzLnVzZUl0ZW1Qb2ludGVyRXZlbnRzID0gdXNlSXRlbVBvaW50ZXJFdmVudHM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemPointerEvents.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemScale.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemScale.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useItemScale = void 0;\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst useKeyframeValue_1 = __webpack_require__(/*! ../../common/useKeyframeValue */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useKeyframeValue.js\");\nconst useLayoutContext_1 = __webpack_require__(/*! ../useLayoutContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/useLayoutContext.js\");\nconst useItemScale = (item, sectionId) => {\n    const layoutId = (0, useLayoutContext_1.useLayoutContext)();\n    const scale = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.Scale, (item, layoutId) => (layoutId ? item.area[layoutId].scale : undefined), (animator, scroll, value) => value !== undefined ? animator.getScale({ scale: value }, scroll).scale : undefined, sectionId, [layoutId]);\n    return scale;\n};\nexports.useItemScale = useItemScale;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy91c2VJdGVtU2NhbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CO0FBQ3BCLGNBQWMsbUJBQU8sQ0FBQyxxRUFBaUI7QUFDdkMsMkJBQTJCLG1CQUFPLENBQUMsMkdBQStCO0FBQ2xFLDJCQUEyQixtQkFBTyxDQUFDLHFHQUFxQjtBQUN4RDtBQUNBO0FBQ0EsME9BQTBPLGNBQWM7QUFDeFA7QUFDQTtBQUNBLG9CQUFvQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy91c2VJdGVtU2NhbGUuanM/ZDg5OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudXNlSXRlbVNjYWxlID0gdm9pZCAwO1xuY29uc3Qgc2RrXzEgPSByZXF1aXJlKFwiQGNudHJsLXNpdGUvc2RrXCIpO1xuY29uc3QgdXNlS2V5ZnJhbWVWYWx1ZV8xID0gcmVxdWlyZShcIi4uLy4uL2NvbW1vbi91c2VLZXlmcmFtZVZhbHVlXCIpO1xuY29uc3QgdXNlTGF5b3V0Q29udGV4dF8xID0gcmVxdWlyZShcIi4uL3VzZUxheW91dENvbnRleHRcIik7XG5jb25zdCB1c2VJdGVtU2NhbGUgPSAoaXRlbSwgc2VjdGlvbklkKSA9PiB7XG4gICAgY29uc3QgbGF5b3V0SWQgPSAoMCwgdXNlTGF5b3V0Q29udGV4dF8xLnVzZUxheW91dENvbnRleHQpKCk7XG4gICAgY29uc3Qgc2NhbGUgPSAoMCwgdXNlS2V5ZnJhbWVWYWx1ZV8xLnVzZUtleWZyYW1lVmFsdWUpKGl0ZW0sIHNka18xLktleWZyYW1lVHlwZS5TY2FsZSwgKGl0ZW0sIGxheW91dElkKSA9PiAobGF5b3V0SWQgPyBpdGVtLmFyZWFbbGF5b3V0SWRdLnNjYWxlIDogdW5kZWZpbmVkKSwgKGFuaW1hdG9yLCBzY3JvbGwsIHZhbHVlKSA9PiB2YWx1ZSAhPT0gdW5kZWZpbmVkID8gYW5pbWF0b3IuZ2V0U2NhbGUoeyBzY2FsZTogdmFsdWUgfSwgc2Nyb2xsKS5zY2FsZSA6IHVuZGVmaW5lZCwgc2VjdGlvbklkLCBbbGF5b3V0SWRdKTtcbiAgICByZXR1cm4gc2NhbGU7XG59O1xuZXhwb3J0cy51c2VJdGVtU2NhbGUgPSB1c2VJdGVtU2NhbGU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemScale.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemTriggers.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemTriggers.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useItemTriggers = void 0;\nfunction useItemTriggers(interactionCtrl) {\n    return {\n        onClick: () => {\n            interactionCtrl === null || interactionCtrl === void 0 ? void 0 : interactionCtrl.sendTrigger('click');\n        },\n        onMouseEnter: () => {\n            interactionCtrl === null || interactionCtrl === void 0 ? void 0 : interactionCtrl.sendTrigger('hover-in');\n        },\n        onMouseLeave: () => {\n            interactionCtrl === null || interactionCtrl === void 0 ? void 0 : interactionCtrl.sendTrigger('hover-out');\n        }\n    };\n}\nexports.useItemTriggers = useItemTriggers;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy91c2VJdGVtVHJpZ2dlcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy91c2VJdGVtVHJpZ2dlcnMuanM/YmEwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudXNlSXRlbVRyaWdnZXJzID0gdm9pZCAwO1xuZnVuY3Rpb24gdXNlSXRlbVRyaWdnZXJzKGludGVyYWN0aW9uQ3RybCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIG9uQ2xpY2s6ICgpID0+IHtcbiAgICAgICAgICAgIGludGVyYWN0aW9uQ3RybCA9PT0gbnVsbCB8fCBpbnRlcmFjdGlvbkN0cmwgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGludGVyYWN0aW9uQ3RybC5zZW5kVHJpZ2dlcignY2xpY2snKTtcbiAgICAgICAgfSxcbiAgICAgICAgb25Nb3VzZUVudGVyOiAoKSA9PiB7XG4gICAgICAgICAgICBpbnRlcmFjdGlvbkN0cmwgPT09IG51bGwgfHwgaW50ZXJhY3Rpb25DdHJsID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpbnRlcmFjdGlvbkN0cmwuc2VuZFRyaWdnZXIoJ2hvdmVyLWluJyk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uTW91c2VMZWF2ZTogKCkgPT4ge1xuICAgICAgICAgICAgaW50ZXJhY3Rpb25DdHJsID09PSBudWxsIHx8IGludGVyYWN0aW9uQ3RybCA9PT0gdm9pZCAwID8gdm9pZCAwIDogaW50ZXJhY3Rpb25DdHJsLnNlbmRUcmlnZ2VyKCdob3Zlci1vdXQnKTtcbiAgICAgICAgfVxuICAgIH07XG59XG5leHBvcnRzLnVzZUl0ZW1UcmlnZ2VycyA9IHVzZUl0ZW1UcmlnZ2VycztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useItemTriggers.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useRichTextItemValues.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useRichTextItemValues.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useRichTextItemValues = void 0;\nconst useKeyframeValue_1 = __webpack_require__(/*! ../../common/useKeyframeValue */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useKeyframeValue.js\");\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst useLayoutContext_1 = __webpack_require__(/*! ../useLayoutContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/useLayoutContext.js\");\nconst DEFAULT_COLOR = 'rgba(0, 0, 0, 1)';\nconst useRichTextItemValues = (item, sectionId) => {\n    const layoutId = (0, useLayoutContext_1.useLayoutContext)();\n    const blur = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.Blur, (item, layoutId) => {\n        if (!layoutId)\n            return;\n        const layoutParams = item.layoutParams[layoutId];\n        return 'blur' in layoutParams ? layoutParams.blur : 0;\n    }, (animator, scroll, value) => value !== undefined ? animator.getBlur({ blur: value }, scroll).blur : undefined, sectionId, [layoutId]);\n    const letterSpacing = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.LetterSpacing, (item, layoutId) => {\n        if (!layoutId)\n            return;\n        const layoutParams = item.layoutParams[layoutId];\n        return 'letterSpacing' in layoutParams ? layoutParams.letterSpacing : 0;\n    }, (animator, scroll, value) => value !== undefined ? animator.getLetterSpacing({ letterSpacing: value }, scroll).letterSpacing : undefined, sectionId, [layoutId]);\n    const wordSpacing = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.WordSpacing, (item, layoutId) => {\n        if (!layoutId)\n            return;\n        const layoutParams = item.layoutParams[layoutId];\n        return 'wordSpacing' in layoutParams ? layoutParams.wordSpacing : 0;\n    }, (animator, scroll, value) => value !== undefined ? animator.getWordSpacing({ wordSpacing: value }, scroll).wordSpacing : undefined, sectionId, [layoutId]);\n    const color = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.TextColor, (item, layoutId) => {\n        if (!layoutId)\n            return;\n        const layoutParams = item.layoutParams[layoutId];\n        return 'color' in layoutParams ? layoutParams.color : DEFAULT_COLOR;\n    }, (animator, scroll, value) => value ? animator.getTextColor({ color: value }, scroll).color : undefined, sectionId, [layoutId]);\n    const fontSize = layoutId ? item.layoutParams[layoutId].fontSize : undefined;\n    const lineHeight = layoutId ? item.layoutParams[layoutId].lineHeight : undefined;\n    return { blur, letterSpacing, wordSpacing, color, fontSize, lineHeight };\n};\nexports.useRichTextItemValues = useRichTextItemValues;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy91c2VSaWNoVGV4dEl0ZW1WYWx1ZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCO0FBQzdCLDJCQUEyQixtQkFBTyxDQUFDLDJHQUErQjtBQUNsRSxjQUFjLG1CQUFPLENBQUMscUVBQWlCO0FBQ3ZDLDJCQUEyQixtQkFBTyxDQUFDLHFHQUFxQjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyx3RUFBd0UsYUFBYTtBQUMxRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxpRkFBaUYsc0JBQXNCO0FBQzVHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLCtFQUErRSxvQkFBb0I7QUFDeEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssK0RBQStELGNBQWM7QUFDbEY7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLDZCQUE2QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy91c2VSaWNoVGV4dEl0ZW1WYWx1ZXMuanM/NDkyMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudXNlUmljaFRleHRJdGVtVmFsdWVzID0gdm9pZCAwO1xuY29uc3QgdXNlS2V5ZnJhbWVWYWx1ZV8xID0gcmVxdWlyZShcIi4uLy4uL2NvbW1vbi91c2VLZXlmcmFtZVZhbHVlXCIpO1xuY29uc3Qgc2RrXzEgPSByZXF1aXJlKFwiQGNudHJsLXNpdGUvc2RrXCIpO1xuY29uc3QgdXNlTGF5b3V0Q29udGV4dF8xID0gcmVxdWlyZShcIi4uL3VzZUxheW91dENvbnRleHRcIik7XG5jb25zdCBERUZBVUxUX0NPTE9SID0gJ3JnYmEoMCwgMCwgMCwgMSknO1xuY29uc3QgdXNlUmljaFRleHRJdGVtVmFsdWVzID0gKGl0ZW0sIHNlY3Rpb25JZCkgPT4ge1xuICAgIGNvbnN0IGxheW91dElkID0gKDAsIHVzZUxheW91dENvbnRleHRfMS51c2VMYXlvdXRDb250ZXh0KSgpO1xuICAgIGNvbnN0IGJsdXIgPSAoMCwgdXNlS2V5ZnJhbWVWYWx1ZV8xLnVzZUtleWZyYW1lVmFsdWUpKGl0ZW0sIHNka18xLktleWZyYW1lVHlwZS5CbHVyLCAoaXRlbSwgbGF5b3V0SWQpID0+IHtcbiAgICAgICAgaWYgKCFsYXlvdXRJZClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgbGF5b3V0UGFyYW1zID0gaXRlbS5sYXlvdXRQYXJhbXNbbGF5b3V0SWRdO1xuICAgICAgICByZXR1cm4gJ2JsdXInIGluIGxheW91dFBhcmFtcyA/IGxheW91dFBhcmFtcy5ibHVyIDogMDtcbiAgICB9LCAoYW5pbWF0b3IsIHNjcm9sbCwgdmFsdWUpID0+IHZhbHVlICE9PSB1bmRlZmluZWQgPyBhbmltYXRvci5nZXRCbHVyKHsgYmx1cjogdmFsdWUgfSwgc2Nyb2xsKS5ibHVyIDogdW5kZWZpbmVkLCBzZWN0aW9uSWQsIFtsYXlvdXRJZF0pO1xuICAgIGNvbnN0IGxldHRlclNwYWNpbmcgPSAoMCwgdXNlS2V5ZnJhbWVWYWx1ZV8xLnVzZUtleWZyYW1lVmFsdWUpKGl0ZW0sIHNka18xLktleWZyYW1lVHlwZS5MZXR0ZXJTcGFjaW5nLCAoaXRlbSwgbGF5b3V0SWQpID0+IHtcbiAgICAgICAgaWYgKCFsYXlvdXRJZClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgbGF5b3V0UGFyYW1zID0gaXRlbS5sYXlvdXRQYXJhbXNbbGF5b3V0SWRdO1xuICAgICAgICByZXR1cm4gJ2xldHRlclNwYWNpbmcnIGluIGxheW91dFBhcmFtcyA/IGxheW91dFBhcmFtcy5sZXR0ZXJTcGFjaW5nIDogMDtcbiAgICB9LCAoYW5pbWF0b3IsIHNjcm9sbCwgdmFsdWUpID0+IHZhbHVlICE9PSB1bmRlZmluZWQgPyBhbmltYXRvci5nZXRMZXR0ZXJTcGFjaW5nKHsgbGV0dGVyU3BhY2luZzogdmFsdWUgfSwgc2Nyb2xsKS5sZXR0ZXJTcGFjaW5nIDogdW5kZWZpbmVkLCBzZWN0aW9uSWQsIFtsYXlvdXRJZF0pO1xuICAgIGNvbnN0IHdvcmRTcGFjaW5nID0gKDAsIHVzZUtleWZyYW1lVmFsdWVfMS51c2VLZXlmcmFtZVZhbHVlKShpdGVtLCBzZGtfMS5LZXlmcmFtZVR5cGUuV29yZFNwYWNpbmcsIChpdGVtLCBsYXlvdXRJZCkgPT4ge1xuICAgICAgICBpZiAoIWxheW91dElkKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBsYXlvdXRQYXJhbXMgPSBpdGVtLmxheW91dFBhcmFtc1tsYXlvdXRJZF07XG4gICAgICAgIHJldHVybiAnd29yZFNwYWNpbmcnIGluIGxheW91dFBhcmFtcyA/IGxheW91dFBhcmFtcy53b3JkU3BhY2luZyA6IDA7XG4gICAgfSwgKGFuaW1hdG9yLCBzY3JvbGwsIHZhbHVlKSA9PiB2YWx1ZSAhPT0gdW5kZWZpbmVkID8gYW5pbWF0b3IuZ2V0V29yZFNwYWNpbmcoeyB3b3JkU3BhY2luZzogdmFsdWUgfSwgc2Nyb2xsKS53b3JkU3BhY2luZyA6IHVuZGVmaW5lZCwgc2VjdGlvbklkLCBbbGF5b3V0SWRdKTtcbiAgICBjb25zdCBjb2xvciA9ICgwLCB1c2VLZXlmcmFtZVZhbHVlXzEudXNlS2V5ZnJhbWVWYWx1ZSkoaXRlbSwgc2RrXzEuS2V5ZnJhbWVUeXBlLlRleHRDb2xvciwgKGl0ZW0sIGxheW91dElkKSA9PiB7XG4gICAgICAgIGlmICghbGF5b3V0SWQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IGxheW91dFBhcmFtcyA9IGl0ZW0ubGF5b3V0UGFyYW1zW2xheW91dElkXTtcbiAgICAgICAgcmV0dXJuICdjb2xvcicgaW4gbGF5b3V0UGFyYW1zID8gbGF5b3V0UGFyYW1zLmNvbG9yIDogREVGQVVMVF9DT0xPUjtcbiAgICB9LCAoYW5pbWF0b3IsIHNjcm9sbCwgdmFsdWUpID0+IHZhbHVlID8gYW5pbWF0b3IuZ2V0VGV4dENvbG9yKHsgY29sb3I6IHZhbHVlIH0sIHNjcm9sbCkuY29sb3IgOiB1bmRlZmluZWQsIHNlY3Rpb25JZCwgW2xheW91dElkXSk7XG4gICAgY29uc3QgZm9udFNpemUgPSBsYXlvdXRJZCA/IGl0ZW0ubGF5b3V0UGFyYW1zW2xheW91dElkXS5mb250U2l6ZSA6IHVuZGVmaW5lZDtcbiAgICBjb25zdCBsaW5lSGVpZ2h0ID0gbGF5b3V0SWQgPyBpdGVtLmxheW91dFBhcmFtc1tsYXlvdXRJZF0ubGluZUhlaWdodCA6IHVuZGVmaW5lZDtcbiAgICByZXR1cm4geyBibHVyLCBsZXR0ZXJTcGFjaW5nLCB3b3JkU3BhY2luZywgY29sb3IsIGZvbnRTaXplLCBsaW5lSGVpZ2h0IH07XG59O1xuZXhwb3J0cy51c2VSaWNoVGV4dEl0ZW1WYWx1ZXMgPSB1c2VSaWNoVGV4dEl0ZW1WYWx1ZXM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useRichTextItemValues.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useSizing.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useSizing.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseSizing = exports.useSizing = void 0;\nconst isItemType_1 = __webpack_require__(/*! ../../utils/isItemType */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/isItemType.js\");\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst useLayoutContext_1 = __webpack_require__(/*! ../useLayoutContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/useLayoutContext.js\");\nfunction useSizing(item) {\n    const layout = (0, useLayoutContext_1.useLayoutContext)();\n    const sizing = layout && (0, isItemType_1.isItemType)(item, sdk_1.ArticleItemType.RichText)\n        ? item.layoutParams[layout].sizing\n        : undefined;\n    const sizingAxis = parseSizing(sizing);\n    return sizingAxis;\n}\nexports.useSizing = useSizing;\nfunction parseSizing(sizing = 'manual') {\n    const axisSizing = sizing.split(' ');\n    return {\n        y: axisSizing[0],\n        x: axisSizing[1] ? axisSizing[1] : axisSizing[0]\n    };\n}\nexports.parseSizing = parseSizing;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy91c2VTaXppbmcuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CLEdBQUcsaUJBQWlCO0FBQ3ZDLHFCQUFxQixtQkFBTyxDQUFDLDZGQUF3QjtBQUNyRCxjQUFjLG1CQUFPLENBQUMscUVBQWlCO0FBQ3ZDLDJCQUEyQixtQkFBTyxDQUFDLHFHQUFxQjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi9jb21wb25lbnRzL2l0ZW1zL3VzZVNpemluZy5qcz83NDA2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5wYXJzZVNpemluZyA9IGV4cG9ydHMudXNlU2l6aW5nID0gdm9pZCAwO1xuY29uc3QgaXNJdGVtVHlwZV8xID0gcmVxdWlyZShcIi4uLy4uL3V0aWxzL2lzSXRlbVR5cGVcIik7XG5jb25zdCBzZGtfMSA9IHJlcXVpcmUoXCJAY250cmwtc2l0ZS9zZGtcIik7XG5jb25zdCB1c2VMYXlvdXRDb250ZXh0XzEgPSByZXF1aXJlKFwiLi4vdXNlTGF5b3V0Q29udGV4dFwiKTtcbmZ1bmN0aW9uIHVzZVNpemluZyhpdGVtKSB7XG4gICAgY29uc3QgbGF5b3V0ID0gKDAsIHVzZUxheW91dENvbnRleHRfMS51c2VMYXlvdXRDb250ZXh0KSgpO1xuICAgIGNvbnN0IHNpemluZyA9IGxheW91dCAmJiAoMCwgaXNJdGVtVHlwZV8xLmlzSXRlbVR5cGUpKGl0ZW0sIHNka18xLkFydGljbGVJdGVtVHlwZS5SaWNoVGV4dClcbiAgICAgICAgPyBpdGVtLmxheW91dFBhcmFtc1tsYXlvdXRdLnNpemluZ1xuICAgICAgICA6IHVuZGVmaW5lZDtcbiAgICBjb25zdCBzaXppbmdBeGlzID0gcGFyc2VTaXppbmcoc2l6aW5nKTtcbiAgICByZXR1cm4gc2l6aW5nQXhpcztcbn1cbmV4cG9ydHMudXNlU2l6aW5nID0gdXNlU2l6aW5nO1xuZnVuY3Rpb24gcGFyc2VTaXppbmcoc2l6aW5nID0gJ21hbnVhbCcpIHtcbiAgICBjb25zdCBheGlzU2l6aW5nID0gc2l6aW5nLnNwbGl0KCcgJyk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgeTogYXhpc1NpemluZ1swXSxcbiAgICAgICAgeDogYXhpc1NpemluZ1sxXSA/IGF4aXNTaXppbmdbMV0gOiBheGlzU2l6aW5nWzBdXG4gICAgfTtcbn1cbmV4cG9ydHMucGFyc2VTaXppbmcgPSBwYXJzZVNpemluZztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useSizing.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useStickyItemTop.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useStickyItemTop.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useStickyItemTop = void 0;\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst useKeyframeValue_1 = __webpack_require__(/*! ../../common/useKeyframeValue */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useKeyframeValue.js\");\nconst useLayoutContext_1 = __webpack_require__(/*! ../useLayoutContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/useLayoutContext.js\");\nfunction useStickyItemTop(item, sectionId, stateTop) {\n    const layoutId = (0, useLayoutContext_1.useLayoutContext)();\n    const data = (0, useKeyframeValue_1.useKeyframeValue)(item, sdk_1.KeyframeType.Position, (item, layoutId) => {\n        if (!layoutId)\n            return;\n        return item.area[layoutId];\n    }, (animator, scroll, value) => value ? animator.getPositions(value, scroll) : undefined, sectionId, [layoutId]);\n    const top = data ? data.top : layoutId ? item.area[layoutId].top : 0;\n    const sticky = layoutId ? item.sticky[layoutId] : undefined;\n    return sticky ? (stateTop !== null && stateTop !== void 0 ? stateTop : top) - sticky.from : 0;\n}\nexports.useStickyItemTop = useStickyItemTop;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy9pdGVtcy91c2VTdGlja3lJdGVtVG9wLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QjtBQUN4QixjQUFjLG1CQUFPLENBQUMscUVBQWlCO0FBQ3ZDLDJCQUEyQixtQkFBTyxDQUFDLDJHQUErQjtBQUNsRSwyQkFBMkIsbUJBQU8sQ0FBQyxxR0FBcUI7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi9jb21wb25lbnRzL2l0ZW1zL3VzZVN0aWNreUl0ZW1Ub3AuanM/MmI2MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudXNlU3RpY2t5SXRlbVRvcCA9IHZvaWQgMDtcbmNvbnN0IHNka18xID0gcmVxdWlyZShcIkBjbnRybC1zaXRlL3Nka1wiKTtcbmNvbnN0IHVzZUtleWZyYW1lVmFsdWVfMSA9IHJlcXVpcmUoXCIuLi8uLi9jb21tb24vdXNlS2V5ZnJhbWVWYWx1ZVwiKTtcbmNvbnN0IHVzZUxheW91dENvbnRleHRfMSA9IHJlcXVpcmUoXCIuLi91c2VMYXlvdXRDb250ZXh0XCIpO1xuZnVuY3Rpb24gdXNlU3RpY2t5SXRlbVRvcChpdGVtLCBzZWN0aW9uSWQsIHN0YXRlVG9wKSB7XG4gICAgY29uc3QgbGF5b3V0SWQgPSAoMCwgdXNlTGF5b3V0Q29udGV4dF8xLnVzZUxheW91dENvbnRleHQpKCk7XG4gICAgY29uc3QgZGF0YSA9ICgwLCB1c2VLZXlmcmFtZVZhbHVlXzEudXNlS2V5ZnJhbWVWYWx1ZSkoaXRlbSwgc2RrXzEuS2V5ZnJhbWVUeXBlLlBvc2l0aW9uLCAoaXRlbSwgbGF5b3V0SWQpID0+IHtcbiAgICAgICAgaWYgKCFsYXlvdXRJZClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgcmV0dXJuIGl0ZW0uYXJlYVtsYXlvdXRJZF07XG4gICAgfSwgKGFuaW1hdG9yLCBzY3JvbGwsIHZhbHVlKSA9PiB2YWx1ZSA/IGFuaW1hdG9yLmdldFBvc2l0aW9ucyh2YWx1ZSwgc2Nyb2xsKSA6IHVuZGVmaW5lZCwgc2VjdGlvbklkLCBbbGF5b3V0SWRdKTtcbiAgICBjb25zdCB0b3AgPSBkYXRhID8gZGF0YS50b3AgOiBsYXlvdXRJZCA/IGl0ZW0uYXJlYVtsYXlvdXRJZF0udG9wIDogMDtcbiAgICBjb25zdCBzdGlja3kgPSBsYXlvdXRJZCA/IGl0ZW0uc3RpY2t5W2xheW91dElkXSA6IHVuZGVmaW5lZDtcbiAgICByZXR1cm4gc3RpY2t5ID8gKHN0YXRlVG9wICE9PSBudWxsICYmIHN0YXRlVG9wICE9PSB2b2lkIDAgPyBzdGF0ZVRvcCA6IHRvcCkgLSBzdGlja3kuZnJvbSA6IDA7XG59XG5leHBvcnRzLnVzZVN0aWNreUl0ZW1Ub3AgPSB1c2VTdGlja3lJdGVtVG9wO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/useStickyItemTop.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/components/useLayoutContext.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/components/useLayoutContext.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useLayoutContext = void 0;\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst LayoutContext_1 = __webpack_require__(/*! ../provider/LayoutContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/LayoutContext.js\");\nfunction useLayoutContext() {\n    const layoutId = (0, react_1.useContext)(LayoutContext_1.LayoutContext);\n    return layoutId;\n}\nexports.useLayoutContext = useLayoutContext;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvY29tcG9uZW50cy91c2VMYXlvdXRDb250ZXh0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QjtBQUN4QixnQkFBZ0IsbUJBQU8sQ0FBQyw0Q0FBTztBQUMvQix3QkFBd0IsbUJBQU8sQ0FBQyxzR0FBMkI7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbnRybC1zaXRlL3Nkay1uZXh0anMvbGliL2NvbXBvbmVudHMvdXNlTGF5b3V0Q29udGV4dC5qcz9jNWYyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy51c2VMYXlvdXRDb250ZXh0ID0gdm9pZCAwO1xuY29uc3QgcmVhY3RfMSA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmNvbnN0IExheW91dENvbnRleHRfMSA9IHJlcXVpcmUoXCIuLi9wcm92aWRlci9MYXlvdXRDb250ZXh0XCIpO1xuZnVuY3Rpb24gdXNlTGF5b3V0Q29udGV4dCgpIHtcbiAgICBjb25zdCBsYXlvdXRJZCA9ICgwLCByZWFjdF8xLnVzZUNvbnRleHQpKExheW91dENvbnRleHRfMS5MYXlvdXRDb250ZXh0KTtcbiAgICByZXR1cm4gbGF5b3V0SWQ7XG59XG5leHBvcnRzLnVzZUxheW91dENvbnRleHQgPSB1c2VMYXlvdXRDb250ZXh0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/components/useLayoutContext.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.cntrlSdkContext = exports.customSections = exports.customItems = exports.useCntrlContext = exports.CntrlProvider = exports.YoutubeEmbedItem = exports.VimeoEmbedItem = exports.LayoutStyle = exports.VideoItem = exports.RichTextItem = exports.RectangleItem = exports.ImageItem = exports.Item = exports.Section = exports.Article = exports.Head = exports.Page = exports.RichTextConverter = void 0;\nconst defaultContext_1 = __webpack_require__(/*! ./provider/defaultContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/defaultContext.js\");\n__exportStar(__webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\"), exports);\nvar RichTextConverter_1 = __webpack_require__(/*! ./utils/RichTextConverter/RichTextConverter */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/RichTextConverter/RichTextConverter.js\");\nObject.defineProperty(exports, \"RichTextConverter\", ({ enumerable: true, get: function () { return RichTextConverter_1.RichTextConverter; } }));\nvar Page_1 = __webpack_require__(/*! ./components/Page */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/Page.js\");\nObject.defineProperty(exports, \"Page\", ({ enumerable: true, get: function () { return Page_1.Page; } }));\nvar Head_1 = __webpack_require__(/*! ./components/Head */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/Head.js\");\nObject.defineProperty(exports, \"Head\", ({ enumerable: true, get: function () { return Head_1.CNTRLHead; } }));\nvar Article_1 = __webpack_require__(/*! ./components/Article */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/Article.js\");\nObject.defineProperty(exports, \"Article\", ({ enumerable: true, get: function () { return Article_1.Article; } }));\nvar Section_1 = __webpack_require__(/*! ./components/Section/Section */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/Section/Section.js\");\nObject.defineProperty(exports, \"Section\", ({ enumerable: true, get: function () { return Section_1.Section; } }));\nvar Item_1 = __webpack_require__(/*! ./components/items/Item */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/Item.js\");\nObject.defineProperty(exports, \"Item\", ({ enumerable: true, get: function () { return Item_1.Item; } }));\nvar ImageItem_1 = __webpack_require__(/*! ./components/items/FileItem/ImageItem */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/FileItem/ImageItem.js\");\nObject.defineProperty(exports, \"ImageItem\", ({ enumerable: true, get: function () { return ImageItem_1.ImageItem; } }));\nvar RectangleItem_1 = __webpack_require__(/*! ./components/items/RectangleItem/RectangleItem */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/RectangleItem/RectangleItem.js\");\nObject.defineProperty(exports, \"RectangleItem\", ({ enumerable: true, get: function () { return RectangleItem_1.RectangleItem; } }));\nvar RichTextItem_1 = __webpack_require__(/*! ./components/items/RichTextItem/RichTextItem */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/RichTextItem/RichTextItem.js\");\nObject.defineProperty(exports, \"RichTextItem\", ({ enumerable: true, get: function () { return RichTextItem_1.RichTextItem; } }));\nvar VideoItem_1 = __webpack_require__(/*! ./components/items/FileItem/VideoItem */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/FileItem/VideoItem.js\");\nObject.defineProperty(exports, \"VideoItem\", ({ enumerable: true, get: function () { return VideoItem_1.VideoItem; } }));\nvar LayoutStyle_1 = __webpack_require__(/*! ./components/LayoutStyle */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/LayoutStyle.js\");\nObject.defineProperty(exports, \"LayoutStyle\", ({ enumerable: true, get: function () { return LayoutStyle_1.LayoutStyle; } }));\nvar VimeoEmbed_1 = __webpack_require__(/*! ./components/items/EmbedVideoItem/VimeoEmbed */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/EmbedVideoItem/VimeoEmbed.js\");\nObject.defineProperty(exports, \"VimeoEmbedItem\", ({ enumerable: true, get: function () { return VimeoEmbed_1.VimeoEmbedItem; } }));\nvar YoutubeEmbed_1 = __webpack_require__(/*! ./components/items/EmbedVideoItem/YoutubeEmbed */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/EmbedVideoItem/YoutubeEmbed.js\");\nObject.defineProperty(exports, \"YoutubeEmbedItem\", ({ enumerable: true, get: function () { return YoutubeEmbed_1.YoutubeEmbedItem; } }));\nvar CntrlProvider_1 = __webpack_require__(/*! ./provider/CntrlProvider */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/CntrlProvider.js\");\nObject.defineProperty(exports, \"CntrlProvider\", ({ enumerable: true, get: function () { return CntrlProvider_1.CntrlProvider; } }));\nvar useCntrlContext_1 = __webpack_require__(/*! ./provider/useCntrlContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/useCntrlContext.js\");\nObject.defineProperty(exports, \"useCntrlContext\", ({ enumerable: true, get: function () { return useCntrlContext_1.useCntrlContext; } }));\nexports.customItems = defaultContext_1.cntrlSdkContext.customItems;\nexports.customSections = defaultContext_1.cntrlSdkContext.customSections;\nexports.cntrlSdkContext = defaultContext_1.cntrlSdkContext;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/interactions/CSSPropertyNameMap.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/interactions/CSSPropertyNameMap.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getStyleKeysFromCSSProperty = exports.CSSPropertyNameMap = void 0;\nexports.CSSPropertyNameMap = {\n    'width': 'width',\n    'height': 'height',\n    'top': 'top',\n    'left': 'left',\n    'scale': 'transform',\n    'angle': 'transform',\n    'opacity': 'opacity',\n    'radius': 'border-radius',\n    'strokeWidth': 'border-width',\n    'strokeColor': 'border-color',\n    'fillColor': 'background-color',\n    'blur': 'filter',\n    'backdropBlur': 'backdrop-filter',\n    'letterSpacing': 'letter-spacing',\n    'wordSpacing': 'word-spacing',\n    'color': 'color'\n};\nconst PropertyNameCSSMap = {\n    'transform': ['angle', 'scale'],\n    'border-radius': ['radius'],\n    'border-width': ['strokeWidth'],\n    'border-color': ['strokeColor'],\n    'background-color': ['fillColor'],\n    'filter': ['blur'],\n    'backdrop-filter': ['backdrop-blur'],\n    'letter-spacing': ['letterSpacing'],\n    'word-spacing': ['wordSpacing'],\n};\nfunction getStyleKeysFromCSSProperty(cssProp) {\n    var _a;\n    const key = (_a = PropertyNameCSSMap[cssProp]) !== null && _a !== void 0 ? _a : [cssProp];\n    return key;\n}\nexports.getStyleKeysFromCSSProperty = getStyleKeysFromCSSProperty;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvaW50ZXJhY3Rpb25zL0NTU1Byb3BlcnR5TmFtZU1hcC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQ0FBbUMsR0FBRywwQkFBMEI7QUFDaEUsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvaW50ZXJhY3Rpb25zL0NTU1Byb3BlcnR5TmFtZU1hcC5qcz83ZTY3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRTdHlsZUtleXNGcm9tQ1NTUHJvcGVydHkgPSBleHBvcnRzLkNTU1Byb3BlcnR5TmFtZU1hcCA9IHZvaWQgMDtcbmV4cG9ydHMuQ1NTUHJvcGVydHlOYW1lTWFwID0ge1xuICAgICd3aWR0aCc6ICd3aWR0aCcsXG4gICAgJ2hlaWdodCc6ICdoZWlnaHQnLFxuICAgICd0b3AnOiAndG9wJyxcbiAgICAnbGVmdCc6ICdsZWZ0JyxcbiAgICAnc2NhbGUnOiAndHJhbnNmb3JtJyxcbiAgICAnYW5nbGUnOiAndHJhbnNmb3JtJyxcbiAgICAnb3BhY2l0eSc6ICdvcGFjaXR5JyxcbiAgICAncmFkaXVzJzogJ2JvcmRlci1yYWRpdXMnLFxuICAgICdzdHJva2VXaWR0aCc6ICdib3JkZXItd2lkdGgnLFxuICAgICdzdHJva2VDb2xvcic6ICdib3JkZXItY29sb3InLFxuICAgICdmaWxsQ29sb3InOiAnYmFja2dyb3VuZC1jb2xvcicsXG4gICAgJ2JsdXInOiAnZmlsdGVyJyxcbiAgICAnYmFja2Ryb3BCbHVyJzogJ2JhY2tkcm9wLWZpbHRlcicsXG4gICAgJ2xldHRlclNwYWNpbmcnOiAnbGV0dGVyLXNwYWNpbmcnLFxuICAgICd3b3JkU3BhY2luZyc6ICd3b3JkLXNwYWNpbmcnLFxuICAgICdjb2xvcic6ICdjb2xvcidcbn07XG5jb25zdCBQcm9wZXJ0eU5hbWVDU1NNYXAgPSB7XG4gICAgJ3RyYW5zZm9ybSc6IFsnYW5nbGUnLCAnc2NhbGUnXSxcbiAgICAnYm9yZGVyLXJhZGl1cyc6IFsncmFkaXVzJ10sXG4gICAgJ2JvcmRlci13aWR0aCc6IFsnc3Ryb2tlV2lkdGgnXSxcbiAgICAnYm9yZGVyLWNvbG9yJzogWydzdHJva2VDb2xvciddLFxuICAgICdiYWNrZ3JvdW5kLWNvbG9yJzogWydmaWxsQ29sb3InXSxcbiAgICAnZmlsdGVyJzogWydibHVyJ10sXG4gICAgJ2JhY2tkcm9wLWZpbHRlcic6IFsnYmFja2Ryb3AtYmx1ciddLFxuICAgICdsZXR0ZXItc3BhY2luZyc6IFsnbGV0dGVyU3BhY2luZyddLFxuICAgICd3b3JkLXNwYWNpbmcnOiBbJ3dvcmRTcGFjaW5nJ10sXG59O1xuZnVuY3Rpb24gZ2V0U3R5bGVLZXlzRnJvbUNTU1Byb3BlcnR5KGNzc1Byb3ApIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3Qga2V5ID0gKF9hID0gUHJvcGVydHlOYW1lQ1NTTWFwW2Nzc1Byb3BdKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBbY3NzUHJvcF07XG4gICAgcmV0dXJuIGtleTtcbn1cbmV4cG9ydHMuZ2V0U3R5bGVLZXlzRnJvbUNTU1Byb3BlcnR5ID0gZ2V0U3R5bGVLZXlzRnJvbUNTU1Byb3BlcnR5O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/interactions/CSSPropertyNameMap.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/interactions/InteractionsRegistry.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/interactions/InteractionsRegistry.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InteractionsRegistry = void 0;\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst isItemType_1 = __webpack_require__(/*! ../utils/isItemType */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/isItemType.js\");\nclass InteractionsRegistry {\n    constructor(article, layoutId) {\n        var _a;\n        this.ctrls = new Map();\n        this.items = this.unpackItems(article);\n        const interactions = (_a = article.interactions[layoutId]) !== null && _a !== void 0 ? _a : [];\n        const activeStatesIds = interactions.reduce((map, inter) => {\n            var _a;\n            const activeStateId = (_a = inter.states.find((state) => state.id !== inter.startStateId)) === null || _a === void 0 ? void 0 : _a.id;\n            if (!activeStateId) {\n                throw new Error(`Failed to find active state for interaction w/ id=\"${inter.id}\"`);\n            }\n            map.push(activeStateId);\n            return map;\n        }, []);\n        const interactionStateMap = interactions.reduce((map, { id, startStateId }) => {\n            map[id] = startStateId;\n            return map;\n        }, {});\n        this.activeStateIdInteractionIdMap = interactions.reduce((map, interaction) => {\n            const activeState = interaction.states.find((state) => state.id !== interaction.startStateId);\n            if (activeState) {\n                map[activeState.id] = interaction.id;\n            }\n            return map;\n        }, {});\n        const itemStages = this.getDefaultItemStages();\n        const stateItemsIdsMap = activeStatesIds.reduce((map, stateId) => {\n            map[stateId] = this.items\n                .filter((item) => {\n                var _a;\n                const state = (_a = item.state[stateId]) !== null && _a !== void 0 ? _a : {};\n                const hasKeys = Object.keys(state).length !== 0;\n                return hasKeys;\n            })\n                .map((item) => item.id);\n            return map;\n        }, {});\n        this.interactions = interactions;\n        this.itemsStages = itemStages;\n        this.stateItemsIdsMap = stateItemsIdsMap;\n        this.interactionStateMap = interactionStateMap;\n    }\n    register(itemId, ctrl) {\n        this.ctrls.set(itemId, ctrl);\n    }\n    getStatePropsForItem(itemId) {\n        var _a, _b, _c;\n        const { items } = this;\n        const item = items.find((item) => item.id === itemId);\n        const itemStages = this.itemsStages.filter((stage) => stage.itemId === itemId);\n        itemStages.sort((a, b) => a.updated - b.updated);\n        const itemStyles = {};\n        for (const stage of itemStages) {\n            if (stage.type === 'active') {\n                if (stage.isStartState)\n                    continue;\n                const params = (_a = item.state[stage.stateId]) !== null && _a !== void 0 ? _a : {};\n                for (const [key, stateDetails] of Object.entries(params)) {\n                    itemStyles[key] = {\n                        value: stateDetails.value\n                    };\n                }\n            }\n            if (stage.type === 'transitioning') {\n                const activeStateId = stage.direction === 'in' ? stage.to : stage.from;\n                const params = (_b = item.state[activeStateId]) !== null && _b !== void 0 ? _b : {};\n                for (const [key, stateDetails] of Object.entries(params)) {\n                    const transitionDetails = stateDetails[stage.direction];\n                    if (!transitionDetails)\n                        continue;\n                    itemStyles[key] = {\n                        value: stage.direction === 'in' ? stateDetails.value : (_c = itemStyles[key]) === null || _c === void 0 ? void 0 : _c.value,\n                        transition: {\n                            timing: transitionDetails.timing,\n                            duration: transitionDetails.duration,\n                            delay: transitionDetails.delay\n                        }\n                    };\n                }\n            }\n        }\n        return itemStyles;\n    }\n    getItemAvailableTriggers(itemId) {\n        const available = new Set();\n        const activeStates = Object.values(this.interactionStateMap);\n        for (const interaction of this.interactions) {\n            const { triggers } = interaction;\n            for (const trigger of triggers) {\n                if (trigger.itemId !== itemId)\n                    continue;\n                if (activeStates.includes(trigger.from)) {\n                    available.add(trigger.type);\n                }\n            }\n        }\n        return available;\n    }\n    notifyTrigger(itemId, triggerType) {\n        var _a, _b;\n        const timestamp = Date.now();\n        for (const interaction of this.interactions) {\n            const currentStateId = this.getCurrentStateByInteractionId(interaction.id);\n            const matchingTrigger = interaction.triggers.find((trigger) => trigger.itemId === itemId\n                && trigger.from === currentStateId\n                && trigger.type === triggerType);\n            if (!matchingTrigger)\n                continue;\n            const activeStateId = this.getActiveInteractionState(interaction.id);\n            const isNewStateActive = matchingTrigger.to === activeStateId;\n            this.setCurrentStateForInteraction(interaction.id, matchingTrigger.to);\n            const transitioningItems = (_a = this.stateItemsIdsMap[activeStateId]) !== null && _a !== void 0 ? _a : [];\n            const state = interaction.states.find((state) => state.id === matchingTrigger.to);\n            const actions = (_b = state === null || state === void 0 ? void 0 : state.actions) !== null && _b !== void 0 ? _b : [];\n            for (const action of actions) {\n                const ctrl = this.ctrls.get(action.itemId);\n                if (!ctrl)\n                    continue;\n                ctrl.receiveAction(action.type);\n            }\n            this.itemsStages = this.itemsStages.map((stage) => {\n                if (stage.interactionId !== interaction.id)\n                    return stage;\n                return {\n                    itemId: stage.itemId,\n                    interactionId: stage.interactionId,\n                    type: 'transitioning',\n                    from: stage.type === 'transitioning' ? stage.to : stage.stateId,\n                    to: matchingTrigger.to,\n                    direction: isNewStateActive ? 'in' : 'out',\n                    updated: timestamp\n                };\n            });\n            const itemsToNotify = new Set(transitioningItems);\n            for (const trigger of interaction.triggers) {\n                itemsToNotify.add(trigger.itemId);\n            }\n            this.notifyItemCtrlsChange(Array.from(itemsToNotify));\n            this.notifyTransitionStartForItems(transitioningItems, activeStateId);\n        }\n    }\n    notifyTransitionStartForItems(itemsIds, activeStateId) {\n        var _a, _b;\n        for (const itemId of itemsIds) {\n            const ctrl = this.ctrls.get(itemId);\n            const item = this.items.find((item) => item.id === itemId);\n            const keys = Object.keys((_a = item.state[activeStateId]) !== null && _a !== void 0 ? _a : {});\n            (_b = ctrl === null || ctrl === void 0 ? void 0 : ctrl.handleTransitionStart) === null || _b === void 0 ? void 0 : _b.call(ctrl, keys);\n        }\n    }\n    notifyTransitionEnd(itemId) {\n        var _a;\n        const timestamp = Date.now();\n        this.itemsStages = this.itemsStages.map((stage) => {\n            if (stage.itemId !== itemId || stage.type !== 'transitioning')\n                return stage;\n            return {\n                itemId,\n                interactionId: stage.interactionId,\n                type: 'active',\n                stateId: stage.to,\n                isStartState: stage.direction === 'out',\n                updated: timestamp\n            };\n        });\n        (_a = this.ctrls.get(itemId)) === null || _a === void 0 ? void 0 : _a.receiveChange();\n    }\n    getCurrentStateByInteractionId(id) {\n        let state;\n        for (const interactionId of Object.keys(this.interactionStateMap)) {\n            if (id !== interactionId)\n                continue;\n            state = this.interactionStateMap[interactionId];\n        }\n        if (!state)\n            throw new Error(`Failed to find current state for interaction w/ id=\"${id}\"`);\n        return state;\n    }\n    setCurrentStateForInteraction(interactionId, stateId) {\n        this.interactionStateMap = Object.assign(Object.assign({}, this.interactionStateMap), { [interactionId]: stateId });\n    }\n    getActiveInteractionState(interactionId) {\n        var _a;\n        const { interactions } = this;\n        const interaction = interactions.find((interaction) => interaction.id === interactionId);\n        const activeStateId = (_a = interaction.states.find(state => state.id !== interaction.startStateId)) === null || _a === void 0 ? void 0 : _a.id;\n        if (!activeStateId) {\n            throw new Error(`Failed to find active state for interaction w/ id=\"${interactionId}\"`);\n        }\n        return activeStateId;\n    }\n    notifyItemCtrlsChange(itemsIds) {\n        var _a;\n        for (const itemId of itemsIds) {\n            (_a = this.ctrls.get(itemId)) === null || _a === void 0 ? void 0 : _a.receiveChange();\n        }\n    }\n    unpackItems(article) {\n        const itemsArr = [];\n        for (const section of article.sections) {\n            const items = this.getNestedItems(section.items);\n            itemsArr.push(...items);\n        }\n        return itemsArr;\n    }\n    getNestedItems(items) {\n        var _a;\n        const allItems = [];\n        for (const item of items) {\n            if ((0, isItemType_1.isItemType)(item, sdk_1.ArticleItemType.Group) || (0, isItemType_1.isItemType)(item, sdk_1.ArticleItemType.Compound)) {\n                const groupChildren = (_a = item === null || item === void 0 ? void 0 : item.items) !== null && _a !== void 0 ? _a : [];\n                const nestedItems = this.getNestedItems(groupChildren);\n                allItems.push(...nestedItems);\n            }\n            allItems.push(item);\n        }\n        return allItems;\n    }\n    getDefaultItemStages() {\n        const timestamp = Date.now();\n        const { items } = this;\n        const stages = [];\n        for (const item of items) {\n            const itemStatesMap = item.state;\n            if (!itemStatesMap)\n                continue;\n            for (const stateId of Object.keys(itemStatesMap)) {\n                const interactionId = this.activeStateIdInteractionIdMap[stateId];\n                if (!interactionId)\n                    continue;\n                stages.push({\n                    itemId: item.id,\n                    interactionId,\n                    type: 'active',\n                    isStartState: true,\n                    updated: timestamp\n                });\n            }\n        }\n        return stages;\n    }\n}\nexports.InteractionsRegistry = InteractionsRegistry;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/interactions/InteractionsRegistry.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/interactions/ItemInteractionCtrl.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/interactions/ItemInteractionCtrl.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ItemInteractionController = void 0;\nconst getTransition_1 = __webpack_require__(/*! ./getTransition */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/interactions/getTransition.js\");\nconst CSSPropertyNameMap_1 = __webpack_require__(/*! ./CSSPropertyNameMap */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/interactions/CSSPropertyNameMap.js\");\nclass ItemInteractionController {\n    constructor(itemId, registry, onChange) {\n        this.itemId = itemId;\n        this.registry = registry;\n        this.onChange = onChange;\n        this.transitionsInProgress = new Set();\n        this.handleTransitionStart = (types) => {\n            this.transitionsInProgress.clear();\n            for (const type of types) {\n                this.transitionsInProgress.add(type);\n            }\n        };\n        this.handleTransitionEnd = (cssPropKey) => {\n            if (cssPropKey.startsWith('border-') && cssPropKey.endsWith('-radius')) {\n                cssPropKey = 'border-radius';\n            }\n            if (cssPropKey.startsWith('border-') && cssPropKey.endsWith('-width')) {\n                cssPropKey = 'border-width';\n            }\n            const styleKeys = (0, CSSPropertyNameMap_1.getStyleKeysFromCSSProperty)(cssPropKey);\n            for (const key of styleKeys) {\n                const found = this.transitionsInProgress.has(key);\n                if (!found)\n                    continue;\n                this.transitionsInProgress.delete(key);\n                break;\n            }\n            if (this.transitionsInProgress.size !== 0)\n                return;\n            this.registry.notifyTransitionEnd(this.itemId);\n        };\n        this.registry.register(itemId, this);\n    }\n    getState(keys) {\n        const stateProps = this.registry.getStatePropsForItem(this.itemId);\n        const styles = keys.reduce((map, styleKey) => {\n            const prop = stateProps[styleKey];\n            if ((prop === null || prop === void 0 ? void 0 : prop.value) === undefined)\n                return map;\n            map[styleKey] = prop.value;\n            return map;\n        }, {});\n        const transition = (0, getTransition_1.getTransition)(stateProps, keys);\n        return {\n            styles,\n            transition\n        };\n    }\n    getHasTrigger(itemId, triggerType) {\n        const triggers = this.registry.getItemAvailableTriggers(itemId);\n        return triggers.has(triggerType);\n    }\n    sendTrigger(type) {\n        this.registry.notifyTrigger(this.itemId, type);\n    }\n    receiveAction(type) {\n        var _a;\n        (_a = this.actionReceiver) === null || _a === void 0 ? void 0 : _a.call(this, type);\n    }\n    setActionReceiver(action) {\n        this.actionReceiver = action;\n    }\n    receiveChange() {\n        this.onChange();\n    }\n}\nexports.ItemInteractionController = ItemInteractionController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvaW50ZXJhY3Rpb25zL0l0ZW1JbnRlcmFjdGlvbkN0cmwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUNBQWlDO0FBQ2pDLHdCQUF3QixtQkFBTyxDQUFDLGdHQUFpQjtBQUNqRCw2QkFBNkIsbUJBQU8sQ0FBQywwR0FBc0I7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsSUFBSTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvaW50ZXJhY3Rpb25zL0l0ZW1JbnRlcmFjdGlvbkN0cmwuanM/MjhhYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSXRlbUludGVyYWN0aW9uQ29udHJvbGxlciA9IHZvaWQgMDtcbmNvbnN0IGdldFRyYW5zaXRpb25fMSA9IHJlcXVpcmUoXCIuL2dldFRyYW5zaXRpb25cIik7XG5jb25zdCBDU1NQcm9wZXJ0eU5hbWVNYXBfMSA9IHJlcXVpcmUoXCIuL0NTU1Byb3BlcnR5TmFtZU1hcFwiKTtcbmNsYXNzIEl0ZW1JbnRlcmFjdGlvbkNvbnRyb2xsZXIge1xuICAgIGNvbnN0cnVjdG9yKGl0ZW1JZCwgcmVnaXN0cnksIG9uQ2hhbmdlKSB7XG4gICAgICAgIHRoaXMuaXRlbUlkID0gaXRlbUlkO1xuICAgICAgICB0aGlzLnJlZ2lzdHJ5ID0gcmVnaXN0cnk7XG4gICAgICAgIHRoaXMub25DaGFuZ2UgPSBvbkNoYW5nZTtcbiAgICAgICAgdGhpcy50cmFuc2l0aW9uc0luUHJvZ3Jlc3MgPSBuZXcgU2V0KCk7XG4gICAgICAgIHRoaXMuaGFuZGxlVHJhbnNpdGlvblN0YXJ0ID0gKHR5cGVzKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnRyYW5zaXRpb25zSW5Qcm9ncmVzcy5jbGVhcigpO1xuICAgICAgICAgICAgZm9yIChjb25zdCB0eXBlIG9mIHR5cGVzKSB7XG4gICAgICAgICAgICAgICAgdGhpcy50cmFuc2l0aW9uc0luUHJvZ3Jlc3MuYWRkKHR5cGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLmhhbmRsZVRyYW5zaXRpb25FbmQgPSAoY3NzUHJvcEtleSkgPT4ge1xuICAgICAgICAgICAgaWYgKGNzc1Byb3BLZXkuc3RhcnRzV2l0aCgnYm9yZGVyLScpICYmIGNzc1Byb3BLZXkuZW5kc1dpdGgoJy1yYWRpdXMnKSkge1xuICAgICAgICAgICAgICAgIGNzc1Byb3BLZXkgPSAnYm9yZGVyLXJhZGl1cyc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoY3NzUHJvcEtleS5zdGFydHNXaXRoKCdib3JkZXItJykgJiYgY3NzUHJvcEtleS5lbmRzV2l0aCgnLXdpZHRoJykpIHtcbiAgICAgICAgICAgICAgICBjc3NQcm9wS2V5ID0gJ2JvcmRlci13aWR0aCc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBzdHlsZUtleXMgPSAoMCwgQ1NTUHJvcGVydHlOYW1lTWFwXzEuZ2V0U3R5bGVLZXlzRnJvbUNTU1Byb3BlcnR5KShjc3NQcm9wS2V5KTtcbiAgICAgICAgICAgIGZvciAoY29uc3Qga2V5IG9mIHN0eWxlS2V5cykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGZvdW5kID0gdGhpcy50cmFuc2l0aW9uc0luUHJvZ3Jlc3MuaGFzKGtleSk7XG4gICAgICAgICAgICAgICAgaWYgKCFmb3VuZClcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgdGhpcy50cmFuc2l0aW9uc0luUHJvZ3Jlc3MuZGVsZXRlKGtleSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy50cmFuc2l0aW9uc0luUHJvZ3Jlc3Muc2l6ZSAhPT0gMClcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB0aGlzLnJlZ2lzdHJ5Lm5vdGlmeVRyYW5zaXRpb25FbmQodGhpcy5pdGVtSWQpO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLnJlZ2lzdHJ5LnJlZ2lzdGVyKGl0ZW1JZCwgdGhpcyk7XG4gICAgfVxuICAgIGdldFN0YXRlKGtleXMpIHtcbiAgICAgICAgY29uc3Qgc3RhdGVQcm9wcyA9IHRoaXMucmVnaXN0cnkuZ2V0U3RhdGVQcm9wc0Zvckl0ZW0odGhpcy5pdGVtSWQpO1xuICAgICAgICBjb25zdCBzdHlsZXMgPSBrZXlzLnJlZHVjZSgobWFwLCBzdHlsZUtleSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgcHJvcCA9IHN0YXRlUHJvcHNbc3R5bGVLZXldO1xuICAgICAgICAgICAgaWYgKChwcm9wID09PSBudWxsIHx8IHByb3AgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHByb3AudmFsdWUpID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICAgICAgcmV0dXJuIG1hcDtcbiAgICAgICAgICAgIG1hcFtzdHlsZUtleV0gPSBwcm9wLnZhbHVlO1xuICAgICAgICAgICAgcmV0dXJuIG1hcDtcbiAgICAgICAgfSwge30pO1xuICAgICAgICBjb25zdCB0cmFuc2l0aW9uID0gKDAsIGdldFRyYW5zaXRpb25fMS5nZXRUcmFuc2l0aW9uKShzdGF0ZVByb3BzLCBrZXlzKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN0eWxlcyxcbiAgICAgICAgICAgIHRyYW5zaXRpb25cbiAgICAgICAgfTtcbiAgICB9XG4gICAgZ2V0SGFzVHJpZ2dlcihpdGVtSWQsIHRyaWdnZXJUeXBlKSB7XG4gICAgICAgIGNvbnN0IHRyaWdnZXJzID0gdGhpcy5yZWdpc3RyeS5nZXRJdGVtQXZhaWxhYmxlVHJpZ2dlcnMoaXRlbUlkKTtcbiAgICAgICAgcmV0dXJuIHRyaWdnZXJzLmhhcyh0cmlnZ2VyVHlwZSk7XG4gICAgfVxuICAgIHNlbmRUcmlnZ2VyKHR5cGUpIHtcbiAgICAgICAgdGhpcy5yZWdpc3RyeS5ub3RpZnlUcmlnZ2VyKHRoaXMuaXRlbUlkLCB0eXBlKTtcbiAgICB9XG4gICAgcmVjZWl2ZUFjdGlvbih0eXBlKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgKF9hID0gdGhpcy5hY3Rpb25SZWNlaXZlcikgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNhbGwodGhpcywgdHlwZSk7XG4gICAgfVxuICAgIHNldEFjdGlvblJlY2VpdmVyKGFjdGlvbikge1xuICAgICAgICB0aGlzLmFjdGlvblJlY2VpdmVyID0gYWN0aW9uO1xuICAgIH1cbiAgICByZWNlaXZlQ2hhbmdlKCkge1xuICAgICAgICB0aGlzLm9uQ2hhbmdlKCk7XG4gICAgfVxufVxuZXhwb3J0cy5JdGVtSW50ZXJhY3Rpb25Db250cm9sbGVyID0gSXRlbUludGVyYWN0aW9uQ29udHJvbGxlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/interactions/ItemInteractionCtrl.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/interactions/getTransition.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/interactions/getTransition.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getTransition = void 0;\nconst CSSPropertyNameMap_1 = __webpack_require__(/*! ./CSSPropertyNameMap */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/interactions/CSSPropertyNameMap.js\");\nfunction getTransition(state, keys) {\n    if (Object.keys(state).length === 0)\n        return 'none';\n    const transitions = [];\n    for (const [key, params] of Object.entries(state)) {\n        if (!keys.includes(key) || !params.transition)\n            continue;\n        const { transition: { duration, delay, timing } } = params;\n        const cssKey = CSSPropertyNameMap_1.CSSPropertyNameMap[key];\n        const nonZeroDuration = Math.max(duration, 0.01);\n        transitions.push(`${cssKey} ${nonZeroDuration}ms ${timing} ${delay}ms`);\n    }\n    return transitions.length > 0\n        ? transitions.join(', ')\n        : 'none';\n}\nexports.getTransition = getTransition;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvaW50ZXJhY3Rpb25zL2dldFRyYW5zaXRpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCLDZCQUE2QixtQkFBTyxDQUFDLDBHQUFzQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixjQUFjLDRCQUE0QjtBQUMxRDtBQUNBO0FBQ0EsNEJBQTRCLFFBQVEsRUFBRSxnQkFBZ0IsS0FBSyxRQUFRLEVBQUUsTUFBTTtBQUMzRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi9pbnRlcmFjdGlvbnMvZ2V0VHJhbnNpdGlvbi5qcz9jMzI2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRUcmFuc2l0aW9uID0gdm9pZCAwO1xuY29uc3QgQ1NTUHJvcGVydHlOYW1lTWFwXzEgPSByZXF1aXJlKFwiLi9DU1NQcm9wZXJ0eU5hbWVNYXBcIik7XG5mdW5jdGlvbiBnZXRUcmFuc2l0aW9uKHN0YXRlLCBrZXlzKSB7XG4gICAgaWYgKE9iamVjdC5rZXlzKHN0YXRlKS5sZW5ndGggPT09IDApXG4gICAgICAgIHJldHVybiAnbm9uZSc7XG4gICAgY29uc3QgdHJhbnNpdGlvbnMgPSBbXTtcbiAgICBmb3IgKGNvbnN0IFtrZXksIHBhcmFtc10gb2YgT2JqZWN0LmVudHJpZXMoc3RhdGUpKSB7XG4gICAgICAgIGlmICgha2V5cy5pbmNsdWRlcyhrZXkpIHx8ICFwYXJhbXMudHJhbnNpdGlvbilcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICBjb25zdCB7IHRyYW5zaXRpb246IHsgZHVyYXRpb24sIGRlbGF5LCB0aW1pbmcgfSB9ID0gcGFyYW1zO1xuICAgICAgICBjb25zdCBjc3NLZXkgPSBDU1NQcm9wZXJ0eU5hbWVNYXBfMS5DU1NQcm9wZXJ0eU5hbWVNYXBba2V5XTtcbiAgICAgICAgY29uc3Qgbm9uWmVyb0R1cmF0aW9uID0gTWF0aC5tYXgoZHVyYXRpb24sIDAuMDEpO1xuICAgICAgICB0cmFuc2l0aW9ucy5wdXNoKGAke2Nzc0tleX0gJHtub25aZXJvRHVyYXRpb259bXMgJHt0aW1pbmd9ICR7ZGVsYXl9bXNgKTtcbiAgICB9XG4gICAgcmV0dXJuIHRyYW5zaXRpb25zLmxlbmd0aCA+IDBcbiAgICAgICAgPyB0cmFuc2l0aW9ucy5qb2luKCcsICcpXG4gICAgICAgIDogJ25vbmUnO1xufVxuZXhwb3J0cy5nZXRUcmFuc2l0aW9uID0gZ2V0VHJhbnNpdGlvbjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/interactions/getTransition.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/interactions/useItemInteractionCtrl.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/interactions/useItemInteractionCtrl.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useItemInteractionCtrl = void 0;\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst ItemInteractionCtrl_1 = __webpack_require__(/*! ./ItemInteractionCtrl */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/interactions/ItemInteractionCtrl.js\");\nconst InteractionsContext_1 = __webpack_require__(/*! ../provider/InteractionsContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/InteractionsContext.js\");\nfunction useItemInteractionCtrl(itemId) {\n    const [_, triggerRender] = (0, react_1.useState)(0);\n    const registry = (0, InteractionsContext_1.useInteractionsRegistry)();\n    const ctrl = (0, react_1.useMemo)(() => {\n        if (!registry)\n            return;\n        return new ItemInteractionCtrl_1.ItemInteractionController(itemId, registry, () => triggerRender(prev => prev + 1));\n    }, [itemId, registry]);\n    return ctrl;\n}\nexports.useItemInteractionCtrl = useItemInteractionCtrl;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvaW50ZXJhY3Rpb25zL3VzZUl0ZW1JbnRlcmFjdGlvbkN0cmwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsOEJBQThCO0FBQzlCLGdCQUFnQixtQkFBTyxDQUFDLDRDQUFPO0FBQy9CLDhCQUE4QixtQkFBTyxDQUFDLDRHQUF1QjtBQUM3RCw4QkFBOEIsbUJBQU8sQ0FBQyxrSEFBaUM7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLDhCQUE4QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvaW50ZXJhY3Rpb25zL3VzZUl0ZW1JbnRlcmFjdGlvbkN0cmwuanM/YjhkMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudXNlSXRlbUludGVyYWN0aW9uQ3RybCA9IHZvaWQgMDtcbmNvbnN0IHJlYWN0XzEgPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCBJdGVtSW50ZXJhY3Rpb25DdHJsXzEgPSByZXF1aXJlKFwiLi9JdGVtSW50ZXJhY3Rpb25DdHJsXCIpO1xuY29uc3QgSW50ZXJhY3Rpb25zQ29udGV4dF8xID0gcmVxdWlyZShcIi4uL3Byb3ZpZGVyL0ludGVyYWN0aW9uc0NvbnRleHRcIik7XG5mdW5jdGlvbiB1c2VJdGVtSW50ZXJhY3Rpb25DdHJsKGl0ZW1JZCkge1xuICAgIGNvbnN0IFtfLCB0cmlnZ2VyUmVuZGVyXSA9ICgwLCByZWFjdF8xLnVzZVN0YXRlKSgwKTtcbiAgICBjb25zdCByZWdpc3RyeSA9ICgwLCBJbnRlcmFjdGlvbnNDb250ZXh0XzEudXNlSW50ZXJhY3Rpb25zUmVnaXN0cnkpKCk7XG4gICAgY29uc3QgY3RybCA9ICgwLCByZWFjdF8xLnVzZU1lbW8pKCgpID0+IHtcbiAgICAgICAgaWYgKCFyZWdpc3RyeSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgcmV0dXJuIG5ldyBJdGVtSW50ZXJhY3Rpb25DdHJsXzEuSXRlbUludGVyYWN0aW9uQ29udHJvbGxlcihpdGVtSWQsIHJlZ2lzdHJ5LCAoKSA9PiB0cmlnZ2VyUmVuZGVyKHByZXYgPT4gcHJldiArIDEpKTtcbiAgICB9LCBbaXRlbUlkLCByZWdpc3RyeV0pO1xuICAgIHJldHVybiBjdHJsO1xufVxuZXhwb3J0cy51c2VJdGVtSW50ZXJhY3Rpb25DdHJsID0gdXNlSXRlbUludGVyYWN0aW9uQ3RybDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/interactions/useItemInteractionCtrl.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/provider/ArticleRectContext.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/provider/ArticleRectContext.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ArticleRectContext = void 0;\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nexports.ArticleRectContext = (0, react_1.createContext)(null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvcHJvdmlkZXIvQXJ0aWNsZVJlY3RDb250ZXh0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQjtBQUMxQixnQkFBZ0IsbUJBQU8sQ0FBQyw0Q0FBTztBQUMvQiwwQkFBMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbnRybC1zaXRlL3Nkay1uZXh0anMvbGliL3Byb3ZpZGVyL0FydGljbGVSZWN0Q29udGV4dC5qcz9lOWU1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BcnRpY2xlUmVjdENvbnRleHQgPSB2b2lkIDA7XG5jb25zdCByZWFjdF8xID0gcmVxdWlyZShcInJlYWN0XCIpO1xuZXhwb3J0cy5BcnRpY2xlUmVjdENvbnRleHQgPSAoMCwgcmVhY3RfMS5jcmVhdGVDb250ZXh0KShudWxsKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/provider/ArticleRectContext.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/provider/CntrlContext.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/provider/CntrlContext.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CntrlContext = void 0;\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst defaultContext_1 = __webpack_require__(/*! ./defaultContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/defaultContext.js\");\nexports.CntrlContext = (0, react_1.createContext)(defaultContext_1.cntrlSdkContext);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvcHJvdmlkZXIvQ250cmxDb250ZXh0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQixnQkFBZ0IsbUJBQU8sQ0FBQyw0Q0FBTztBQUMvQix5QkFBeUIsbUJBQU8sQ0FBQyw4RkFBa0I7QUFDbkQsb0JBQW9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi9wcm92aWRlci9DbnRybENvbnRleHQuanM/MThmMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ250cmxDb250ZXh0ID0gdm9pZCAwO1xuY29uc3QgcmVhY3RfMSA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmNvbnN0IGRlZmF1bHRDb250ZXh0XzEgPSByZXF1aXJlKFwiLi9kZWZhdWx0Q29udGV4dFwiKTtcbmV4cG9ydHMuQ250cmxDb250ZXh0ID0gKDAsIHJlYWN0XzEuY3JlYXRlQ29udGV4dCkoZGVmYXVsdENvbnRleHRfMS5jbnRybFNka0NvbnRleHQpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/provider/CntrlContext.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/provider/CntrlProvider.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/provider/CntrlProvider.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CntrlProvider = void 0;\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nconst CntrlContext_1 = __webpack_require__(/*! ./CntrlContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/CntrlContext.js\");\nconst defaultContext_1 = __webpack_require__(/*! ./defaultContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/defaultContext.js\");\nconst CntrlProvider = ({ children }) => {\n    return ((0, jsx_runtime_1.jsx)(CntrlContext_1.CntrlContext.Provider, { value: defaultContext_1.cntrlSdkContext, children: children }));\n};\nexports.CntrlProvider = CntrlProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvcHJvdmlkZXIvQ250cmxQcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckIsc0JBQXNCLG1CQUFPLENBQUMsOERBQW1CO0FBQ2pELHVCQUF1QixtQkFBTyxDQUFDLDBGQUFnQjtBQUMvQyx5QkFBeUIsbUJBQU8sQ0FBQyw4RkFBa0I7QUFDbkQseUJBQXlCLFVBQVU7QUFDbkMsMkVBQTJFLDZEQUE2RDtBQUN4STtBQUNBLHFCQUFxQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvcHJvdmlkZXIvQ250cmxQcm92aWRlci5qcz9lM2MzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5DbnRybFByb3ZpZGVyID0gdm9pZCAwO1xuY29uc3QganN4X3J1bnRpbWVfMSA9IHJlcXVpcmUoXCJyZWFjdC9qc3gtcnVudGltZVwiKTtcbmNvbnN0IENudHJsQ29udGV4dF8xID0gcmVxdWlyZShcIi4vQ250cmxDb250ZXh0XCIpO1xuY29uc3QgZGVmYXVsdENvbnRleHRfMSA9IHJlcXVpcmUoXCIuL2RlZmF1bHRDb250ZXh0XCIpO1xuY29uc3QgQ250cmxQcm92aWRlciA9ICh7IGNoaWxkcmVuIH0pID0+IHtcbiAgICByZXR1cm4gKCgwLCBqc3hfcnVudGltZV8xLmpzeCkoQ250cmxDb250ZXh0XzEuQ250cmxDb250ZXh0LlByb3ZpZGVyLCB7IHZhbHVlOiBkZWZhdWx0Q29udGV4dF8xLmNudHJsU2RrQ29udGV4dCwgY2hpbGRyZW46IGNoaWxkcmVuIH0pKTtcbn07XG5leHBvcnRzLkNudHJsUHJvdmlkZXIgPSBDbnRybFByb3ZpZGVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/provider/CntrlProvider.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/provider/CntrlSdkContext.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/provider/CntrlSdkContext.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CntrlSdkContext = void 0;\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nclass CntrlSdkContext {\n    constructor(customItems, customSections) {\n        this.customItems = customItems;\n        this.customSections = customSections;\n        this._layouts = [];\n        this._fonts = undefined;\n        this.sectionHeightMap = new Map();\n        this.components = new Map();\n    }\n    resolveSectionData(sections) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resolvers = sections.map(section => {\n                const resolver = section.name ? this.customSections.getResolver(section.name) : undefined;\n                if (!resolver)\n                    return;\n                return {\n                    name: section.name,\n                    resolver\n                };\n            }).filter(isDefined);\n            return Object.fromEntries(yield Promise.all(resolvers.map(({ name, resolver }) => __awaiter(this, void 0, void 0, function* () { return [name, yield resolver()]; }))));\n        });\n    }\n    init({ project, article }) {\n        this.setLayouts(project.layouts);\n        this.setComponents(sdk_1.components);\n        this.setFonts(project.fonts);\n        this.setSectionsHeight(article.sections);\n    }\n    setLayouts(layouts) {\n        this._layouts = layouts;\n    }\n    setComponents(components) {\n        for (const component of components) {\n            this.components.set(component.id, component);\n        }\n    }\n    setFonts(fonts) {\n        this._fonts = fonts;\n    }\n    setSectionsHeight(sections) {\n        for (const section of sections) {\n            this.sectionHeightMap.set(section.id, section.height);\n        }\n    }\n    getSectionHeightData(sectionId) {\n        const sectionHeightData = this.sectionHeightMap.get(sectionId);\n        return sectionHeightData;\n    }\n    get layouts() {\n        return this._layouts;\n    }\n    get fonts() {\n        return this._fonts;\n    }\n    getComponent(id) {\n        return this.components.get(id);\n    }\n}\nexports.CntrlSdkContext = CntrlSdkContext;\nfunction isDefined(value) {\n    return value !== undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvcHJvdmlkZXIvQ250cmxTZGtDb250ZXh0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUI7QUFDdkIsY0FBYyxtQkFBTyxDQUFDLHFFQUFpQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYix5RUFBeUUsZ0JBQWdCLG9EQUFvRCxrQ0FBa0M7QUFDL0ssU0FBUztBQUNUO0FBQ0EsV0FBVyxrQkFBa0I7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbnRybC1zaXRlL3Nkay1uZXh0anMvbGliL3Byb3ZpZGVyL0NudHJsU2RrQ29udGV4dC5qcz9hN2U5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNudHJsU2RrQ29udGV4dCA9IHZvaWQgMDtcbmNvbnN0IHNka18xID0gcmVxdWlyZShcIkBjbnRybC1zaXRlL3Nka1wiKTtcbmNsYXNzIENudHJsU2RrQ29udGV4dCB7XG4gICAgY29uc3RydWN0b3IoY3VzdG9tSXRlbXMsIGN1c3RvbVNlY3Rpb25zKSB7XG4gICAgICAgIHRoaXMuY3VzdG9tSXRlbXMgPSBjdXN0b21JdGVtcztcbiAgICAgICAgdGhpcy5jdXN0b21TZWN0aW9ucyA9IGN1c3RvbVNlY3Rpb25zO1xuICAgICAgICB0aGlzLl9sYXlvdXRzID0gW107XG4gICAgICAgIHRoaXMuX2ZvbnRzID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLnNlY3Rpb25IZWlnaHRNYXAgPSBuZXcgTWFwKCk7XG4gICAgICAgIHRoaXMuY29tcG9uZW50cyA9IG5ldyBNYXAoKTtcbiAgICB9XG4gICAgcmVzb2x2ZVNlY3Rpb25EYXRhKHNlY3Rpb25zKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCByZXNvbHZlcnMgPSBzZWN0aW9ucy5tYXAoc2VjdGlvbiA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzb2x2ZXIgPSBzZWN0aW9uLm5hbWUgPyB0aGlzLmN1c3RvbVNlY3Rpb25zLmdldFJlc29sdmVyKHNlY3Rpb24ubmFtZSkgOiB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgaWYgKCFyZXNvbHZlcilcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IHNlY3Rpb24ubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZXJcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSkuZmlsdGVyKGlzRGVmaW5lZCk7XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmZyb21FbnRyaWVzKHlpZWxkIFByb21pc2UuYWxsKHJlc29sdmVycy5tYXAoKHsgbmFtZSwgcmVzb2x2ZXIgfSkgPT4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gW25hbWUsIHlpZWxkIHJlc29sdmVyKCldOyB9KSkpKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGluaXQoeyBwcm9qZWN0LCBhcnRpY2xlIH0pIHtcbiAgICAgICAgdGhpcy5zZXRMYXlvdXRzKHByb2plY3QubGF5b3V0cyk7XG4gICAgICAgIHRoaXMuc2V0Q29tcG9uZW50cyhzZGtfMS5jb21wb25lbnRzKTtcbiAgICAgICAgdGhpcy5zZXRGb250cyhwcm9qZWN0LmZvbnRzKTtcbiAgICAgICAgdGhpcy5zZXRTZWN0aW9uc0hlaWdodChhcnRpY2xlLnNlY3Rpb25zKTtcbiAgICB9XG4gICAgc2V0TGF5b3V0cyhsYXlvdXRzKSB7XG4gICAgICAgIHRoaXMuX2xheW91dHMgPSBsYXlvdXRzO1xuICAgIH1cbiAgICBzZXRDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgICAgICAgZm9yIChjb25zdCBjb21wb25lbnQgb2YgY29tcG9uZW50cykge1xuICAgICAgICAgICAgdGhpcy5jb21wb25lbnRzLnNldChjb21wb25lbnQuaWQsIGNvbXBvbmVudCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc2V0Rm9udHMoZm9udHMpIHtcbiAgICAgICAgdGhpcy5fZm9udHMgPSBmb250cztcbiAgICB9XG4gICAgc2V0U2VjdGlvbnNIZWlnaHQoc2VjdGlvbnMpIHtcbiAgICAgICAgZm9yIChjb25zdCBzZWN0aW9uIG9mIHNlY3Rpb25zKSB7XG4gICAgICAgICAgICB0aGlzLnNlY3Rpb25IZWlnaHRNYXAuc2V0KHNlY3Rpb24uaWQsIHNlY3Rpb24uaGVpZ2h0KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXRTZWN0aW9uSGVpZ2h0RGF0YShzZWN0aW9uSWQpIHtcbiAgICAgICAgY29uc3Qgc2VjdGlvbkhlaWdodERhdGEgPSB0aGlzLnNlY3Rpb25IZWlnaHRNYXAuZ2V0KHNlY3Rpb25JZCk7XG4gICAgICAgIHJldHVybiBzZWN0aW9uSGVpZ2h0RGF0YTtcbiAgICB9XG4gICAgZ2V0IGxheW91dHMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9sYXlvdXRzO1xuICAgIH1cbiAgICBnZXQgZm9udHMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9mb250cztcbiAgICB9XG4gICAgZ2V0Q29tcG9uZW50KGlkKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBvbmVudHMuZ2V0KGlkKTtcbiAgICB9XG59XG5leHBvcnRzLkNudHJsU2RrQ29udGV4dCA9IENudHJsU2RrQ29udGV4dDtcbmZ1bmN0aW9uIGlzRGVmaW5lZCh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZSAhPT0gdW5kZWZpbmVkO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/provider/CntrlSdkContext.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/provider/CustomItemRegistry.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/provider/CustomItemRegistry.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CustomItemRegistry = void 0;\nclass CustomItemRegistry {\n    constructor() {\n        this.definitions = new Map();\n    }\n    define(type, component) {\n        this.definitions.set(type, component);\n        return this;\n    }\n    get(type) {\n        return this.definitions.get(type);\n    }\n}\nexports.CustomItemRegistry = CustomItemRegistry;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvcHJvdmlkZXIvQ3VzdG9tSXRlbVJlZ2lzdHJ5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbnRybC1zaXRlL3Nkay1uZXh0anMvbGliL3Byb3ZpZGVyL0N1c3RvbUl0ZW1SZWdpc3RyeS5qcz9mMWNmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5DdXN0b21JdGVtUmVnaXN0cnkgPSB2b2lkIDA7XG5jbGFzcyBDdXN0b21JdGVtUmVnaXN0cnkge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmRlZmluaXRpb25zID0gbmV3IE1hcCgpO1xuICAgIH1cbiAgICBkZWZpbmUodHlwZSwgY29tcG9uZW50KSB7XG4gICAgICAgIHRoaXMuZGVmaW5pdGlvbnMuc2V0KHR5cGUsIGNvbXBvbmVudCk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBnZXQodHlwZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5kZWZpbml0aW9ucy5nZXQodHlwZSk7XG4gICAgfVxufVxuZXhwb3J0cy5DdXN0b21JdGVtUmVnaXN0cnkgPSBDdXN0b21JdGVtUmVnaXN0cnk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/provider/CustomItemRegistry.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/provider/CustomSectionRegistry.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/provider/CustomSectionRegistry.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CustomSectionRegistry = void 0;\nclass CustomSectionRegistry {\n    constructor() {\n        this.definitions = new Map();\n    }\n    define(name, section) {\n        this.definitions.set(name, section);\n        return this;\n    }\n    getComponent(name) {\n        var _a;\n        return (_a = this.definitions.get(name)) === null || _a === void 0 ? void 0 : _a.component;\n    }\n    getResolver(name) {\n        var _a;\n        return (_a = this.definitions.get(name)) === null || _a === void 0 ? void 0 : _a.dataResolver;\n    }\n}\nexports.CustomSectionRegistry = CustomSectionRegistry;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvcHJvdmlkZXIvQ3VzdG9tU2VjdGlvblJlZ2lzdHJ5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi9wcm92aWRlci9DdXN0b21TZWN0aW9uUmVnaXN0cnkuanM/MjQ5MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ3VzdG9tU2VjdGlvblJlZ2lzdHJ5ID0gdm9pZCAwO1xuY2xhc3MgQ3VzdG9tU2VjdGlvblJlZ2lzdHJ5IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5kZWZpbml0aW9ucyA9IG5ldyBNYXAoKTtcbiAgICB9XG4gICAgZGVmaW5lKG5hbWUsIHNlY3Rpb24pIHtcbiAgICAgICAgdGhpcy5kZWZpbml0aW9ucy5zZXQobmFtZSwgc2VjdGlvbik7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBnZXRDb21wb25lbnQobmFtZSkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHJldHVybiAoX2EgPSB0aGlzLmRlZmluaXRpb25zLmdldChuYW1lKSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNvbXBvbmVudDtcbiAgICB9XG4gICAgZ2V0UmVzb2x2ZXIobmFtZSkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHJldHVybiAoX2EgPSB0aGlzLmRlZmluaXRpb25zLmdldChuYW1lKSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmRhdGFSZXNvbHZlcjtcbiAgICB9XG59XG5leHBvcnRzLkN1c3RvbVNlY3Rpb25SZWdpc3RyeSA9IEN1c3RvbVNlY3Rpb25SZWdpc3RyeTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/provider/CustomSectionRegistry.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/provider/InteractionsContext.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/provider/InteractionsContext.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useInteractionsRegistry = exports.InteractionsProvider = exports.InteractionsContext = void 0;\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst InteractionsRegistry_1 = __webpack_require__(/*! ../interactions/InteractionsRegistry */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/interactions/InteractionsRegistry.js\");\nconst useCurrentLayout_1 = __webpack_require__(/*! ../common/useCurrentLayout */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/common/useCurrentLayout.js\");\nexports.InteractionsContext = (0, react_1.createContext)(undefined);\nconst InteractionsProvider = ({ article, children }) => {\n    const { layoutId } = (0, useCurrentLayout_1.useCurrentLayout)();\n    const registry = (0, react_1.useMemo)(() => {\n        if (!layoutId)\n            return;\n        return new InteractionsRegistry_1.InteractionsRegistry(article, layoutId);\n    }, [layoutId]);\n    return ((0, jsx_runtime_1.jsx)(exports.InteractionsContext.Provider, { value: registry, children: children }));\n};\nexports.InteractionsProvider = InteractionsProvider;\nfunction useInteractionsRegistry() {\n    const registry = (0, react_1.useContext)(exports.InteractionsContext);\n    return registry;\n}\nexports.useInteractionsRegistry = useInteractionsRegistry;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvcHJvdmlkZXIvSW50ZXJhY3Rpb25zQ29udGV4dC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwrQkFBK0IsR0FBRyw0QkFBNEIsR0FBRywyQkFBMkI7QUFDNUYsc0JBQXNCLG1CQUFPLENBQUMsOERBQW1CO0FBQ2pELGdCQUFnQixtQkFBTyxDQUFDLDRDQUFPO0FBQy9CLCtCQUErQixtQkFBTyxDQUFDLDRIQUFzQztBQUM3RSwyQkFBMkIsbUJBQU8sQ0FBQyx3R0FBNEI7QUFDL0QsMkJBQTJCO0FBQzNCLGdDQUFnQyxtQkFBbUI7QUFDbkQsWUFBWSxXQUFXO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLDJFQUEyRSxxQ0FBcUM7QUFDaEg7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbnRybC1zaXRlL3Nkay1uZXh0anMvbGliL3Byb3ZpZGVyL0ludGVyYWN0aW9uc0NvbnRleHQuanM/MWYwZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudXNlSW50ZXJhY3Rpb25zUmVnaXN0cnkgPSBleHBvcnRzLkludGVyYWN0aW9uc1Byb3ZpZGVyID0gZXhwb3J0cy5JbnRlcmFjdGlvbnNDb250ZXh0ID0gdm9pZCAwO1xuY29uc3QganN4X3J1bnRpbWVfMSA9IHJlcXVpcmUoXCJyZWFjdC9qc3gtcnVudGltZVwiKTtcbmNvbnN0IHJlYWN0XzEgPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCBJbnRlcmFjdGlvbnNSZWdpc3RyeV8xID0gcmVxdWlyZShcIi4uL2ludGVyYWN0aW9ucy9JbnRlcmFjdGlvbnNSZWdpc3RyeVwiKTtcbmNvbnN0IHVzZUN1cnJlbnRMYXlvdXRfMSA9IHJlcXVpcmUoXCIuLi9jb21tb24vdXNlQ3VycmVudExheW91dFwiKTtcbmV4cG9ydHMuSW50ZXJhY3Rpb25zQ29udGV4dCA9ICgwLCByZWFjdF8xLmNyZWF0ZUNvbnRleHQpKHVuZGVmaW5lZCk7XG5jb25zdCBJbnRlcmFjdGlvbnNQcm92aWRlciA9ICh7IGFydGljbGUsIGNoaWxkcmVuIH0pID0+IHtcbiAgICBjb25zdCB7IGxheW91dElkIH0gPSAoMCwgdXNlQ3VycmVudExheW91dF8xLnVzZUN1cnJlbnRMYXlvdXQpKCk7XG4gICAgY29uc3QgcmVnaXN0cnkgPSAoMCwgcmVhY3RfMS51c2VNZW1vKSgoKSA9PiB7XG4gICAgICAgIGlmICghbGF5b3V0SWQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHJldHVybiBuZXcgSW50ZXJhY3Rpb25zUmVnaXN0cnlfMS5JbnRlcmFjdGlvbnNSZWdpc3RyeShhcnRpY2xlLCBsYXlvdXRJZCk7XG4gICAgfSwgW2xheW91dElkXSk7XG4gICAgcmV0dXJuICgoMCwganN4X3J1bnRpbWVfMS5qc3gpKGV4cG9ydHMuSW50ZXJhY3Rpb25zQ29udGV4dC5Qcm92aWRlciwgeyB2YWx1ZTogcmVnaXN0cnksIGNoaWxkcmVuOiBjaGlsZHJlbiB9KSk7XG59O1xuZXhwb3J0cy5JbnRlcmFjdGlvbnNQcm92aWRlciA9IEludGVyYWN0aW9uc1Byb3ZpZGVyO1xuZnVuY3Rpb24gdXNlSW50ZXJhY3Rpb25zUmVnaXN0cnkoKSB7XG4gICAgY29uc3QgcmVnaXN0cnkgPSAoMCwgcmVhY3RfMS51c2VDb250ZXh0KShleHBvcnRzLkludGVyYWN0aW9uc0NvbnRleHQpO1xuICAgIHJldHVybiByZWdpc3RyeTtcbn1cbmV4cG9ydHMudXNlSW50ZXJhY3Rpb25zUmVnaXN0cnkgPSB1c2VJbnRlcmFjdGlvbnNSZWdpc3RyeTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/provider/InteractionsContext.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/provider/Keyframes.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/provider/Keyframes.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Keyframes = void 0;\nclass Keyframes {\n    constructor(keyframes = []) {\n        this.keyframes = keyframes;\n    }\n    getItemKeyframes(itemId) {\n        return this.keyframes.filter(kf => kf.itemId === itemId);\n    }\n}\nexports.Keyframes = Keyframes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvcHJvdmlkZXIvS2V5ZnJhbWVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi9wcm92aWRlci9LZXlmcmFtZXMuanM/ZmJmZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuS2V5ZnJhbWVzID0gdm9pZCAwO1xuY2xhc3MgS2V5ZnJhbWVzIHtcbiAgICBjb25zdHJ1Y3RvcihrZXlmcmFtZXMgPSBbXSkge1xuICAgICAgICB0aGlzLmtleWZyYW1lcyA9IGtleWZyYW1lcztcbiAgICB9XG4gICAgZ2V0SXRlbUtleWZyYW1lcyhpdGVtSWQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMua2V5ZnJhbWVzLmZpbHRlcihrZiA9PiBrZi5pdGVtSWQgPT09IGl0ZW1JZCk7XG4gICAgfVxufVxuZXhwb3J0cy5LZXlmcmFtZXMgPSBLZXlmcmFtZXM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/provider/Keyframes.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/provider/KeyframesContext.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/provider/KeyframesContext.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyframesContext = void 0;\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst Keyframes_1 = __webpack_require__(/*! ./Keyframes */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/Keyframes.js\");\nexports.KeyframesContext = (0, react_1.createContext)(new Keyframes_1.Keyframes());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvcHJvdmlkZXIvS2V5ZnJhbWVzQ29udGV4dC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0I7QUFDeEIsZ0JBQWdCLG1CQUFPLENBQUMsNENBQU87QUFDL0Isb0JBQW9CLG1CQUFPLENBQUMsb0ZBQWE7QUFDekMsd0JBQXdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi9wcm92aWRlci9LZXlmcmFtZXNDb250ZXh0LmpzPzc3NWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktleWZyYW1lc0NvbnRleHQgPSB2b2lkIDA7XG5jb25zdCByZWFjdF8xID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgS2V5ZnJhbWVzXzEgPSByZXF1aXJlKFwiLi9LZXlmcmFtZXNcIik7XG5leHBvcnRzLktleWZyYW1lc0NvbnRleHQgPSAoMCwgcmVhY3RfMS5jcmVhdGVDb250ZXh0KShuZXcgS2V5ZnJhbWVzXzEuS2V5ZnJhbWVzKCkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/provider/KeyframesContext.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/provider/LayoutContext.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/provider/LayoutContext.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LayoutContext = void 0;\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nexports.LayoutContext = (0, react_1.createContext)(undefined);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvcHJvdmlkZXIvTGF5b3V0Q29udGV4dC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckIsZ0JBQWdCLG1CQUFPLENBQUMsNENBQU87QUFDL0IscUJBQXFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi9wcm92aWRlci9MYXlvdXRDb250ZXh0LmpzPzY2OTAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkxheW91dENvbnRleHQgPSB2b2lkIDA7XG5jb25zdCByZWFjdF8xID0gcmVxdWlyZShcInJlYWN0XCIpO1xuZXhwb3J0cy5MYXlvdXRDb250ZXh0ID0gKDAsIHJlYWN0XzEuY3JlYXRlQ29udGV4dCkodW5kZWZpbmVkKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/provider/LayoutContext.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/provider/WebGLContextManagerContext.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/provider/WebGLContextManagerContext.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WebglContextManagerContext = void 0;\nconst effects_1 = __webpack_require__(/*! @cntrl-site/effects */ \"./node_modules/@cntrl-site/effects/lib/index.js\");\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nexports.WebglContextManagerContext = (0, react_1.createContext)(new effects_1.WebGLContextManager());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvcHJvdmlkZXIvV2ViR0xDb250ZXh0TWFuYWdlckNvbnRleHQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0NBQWtDO0FBQ2xDLGtCQUFrQixtQkFBTyxDQUFDLDRFQUFxQjtBQUMvQyxnQkFBZ0IsbUJBQU8sQ0FBQyw0Q0FBTztBQUMvQixrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbnRybC1zaXRlL3Nkay1uZXh0anMvbGliL3Byb3ZpZGVyL1dlYkdMQ29udGV4dE1hbmFnZXJDb250ZXh0LmpzP2NjZTAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLldlYmdsQ29udGV4dE1hbmFnZXJDb250ZXh0ID0gdm9pZCAwO1xuY29uc3QgZWZmZWN0c18xID0gcmVxdWlyZShcIkBjbnRybC1zaXRlL2VmZmVjdHNcIik7XG5jb25zdCByZWFjdF8xID0gcmVxdWlyZShcInJlYWN0XCIpO1xuZXhwb3J0cy5XZWJnbENvbnRleHRNYW5hZ2VyQ29udGV4dCA9ICgwLCByZWFjdF8xLmNyZWF0ZUNvbnRleHQpKG5ldyBlZmZlY3RzXzEuV2ViR0xDb250ZXh0TWFuYWdlcigpKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/provider/WebGLContextManagerContext.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/provider/defaultContext.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/provider/defaultContext.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.cntrlSdkContext = void 0;\nconst CntrlSdkContext_1 = __webpack_require__(/*! ./CntrlSdkContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/CntrlSdkContext.js\");\nconst CustomItemRegistry_1 = __webpack_require__(/*! ./CustomItemRegistry */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/CustomItemRegistry.js\");\nconst CustomSectionRegistry_1 = __webpack_require__(/*! ./CustomSectionRegistry */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/CustomSectionRegistry.js\");\nconst customItems = new CustomItemRegistry_1.CustomItemRegistry();\nconst customSections = new CustomSectionRegistry_1.CustomSectionRegistry();\nexports.cntrlSdkContext = new CntrlSdkContext_1.CntrlSdkContext(customItems, customSections);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvcHJvdmlkZXIvZGVmYXVsdENvbnRleHQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCLDBCQUEwQixtQkFBTyxDQUFDLGdHQUFtQjtBQUNyRCw2QkFBNkIsbUJBQU8sQ0FBQyxzR0FBc0I7QUFDM0QsZ0NBQWdDLG1CQUFPLENBQUMsNEdBQXlCO0FBQ2pFO0FBQ0E7QUFDQSx1QkFBdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbnRybC1zaXRlL3Nkay1uZXh0anMvbGliL3Byb3ZpZGVyL2RlZmF1bHRDb250ZXh0LmpzPzdmOTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNudHJsU2RrQ29udGV4dCA9IHZvaWQgMDtcbmNvbnN0IENudHJsU2RrQ29udGV4dF8xID0gcmVxdWlyZShcIi4vQ250cmxTZGtDb250ZXh0XCIpO1xuY29uc3QgQ3VzdG9tSXRlbVJlZ2lzdHJ5XzEgPSByZXF1aXJlKFwiLi9DdXN0b21JdGVtUmVnaXN0cnlcIik7XG5jb25zdCBDdXN0b21TZWN0aW9uUmVnaXN0cnlfMSA9IHJlcXVpcmUoXCIuL0N1c3RvbVNlY3Rpb25SZWdpc3RyeVwiKTtcbmNvbnN0IGN1c3RvbUl0ZW1zID0gbmV3IEN1c3RvbUl0ZW1SZWdpc3RyeV8xLkN1c3RvbUl0ZW1SZWdpc3RyeSgpO1xuY29uc3QgY3VzdG9tU2VjdGlvbnMgPSBuZXcgQ3VzdG9tU2VjdGlvblJlZ2lzdHJ5XzEuQ3VzdG9tU2VjdGlvblJlZ2lzdHJ5KCk7XG5leHBvcnRzLmNudHJsU2RrQ29udGV4dCA9IG5ldyBDbnRybFNka0NvbnRleHRfMS5DbnRybFNka0NvbnRleHQoY3VzdG9tSXRlbXMsIGN1c3RvbVNlY3Rpb25zKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/provider/defaultContext.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/provider/useCntrlContext.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/provider/useCntrlContext.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useCntrlContext = void 0;\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst CntrlContext_1 = __webpack_require__(/*! ./CntrlContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/CntrlContext.js\");\nfunction useCntrlContext() {\n    const context = (0, react_1.useContext)(CntrlContext_1.CntrlContext);\n    return context;\n}\nexports.useCntrlContext = useCntrlContext;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvcHJvdmlkZXIvdXNlQ250cmxDb250ZXh0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QjtBQUN2QixnQkFBZ0IsbUJBQU8sQ0FBQyw0Q0FBTztBQUMvQix1QkFBdUIsbUJBQU8sQ0FBQywwRkFBZ0I7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbnRybC1zaXRlL3Nkay1uZXh0anMvbGliL3Byb3ZpZGVyL3VzZUNudHJsQ29udGV4dC5qcz9iZDEzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy51c2VDbnRybENvbnRleHQgPSB2b2lkIDA7XG5jb25zdCByZWFjdF8xID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgQ250cmxDb250ZXh0XzEgPSByZXF1aXJlKFwiLi9DbnRybENvbnRleHRcIik7XG5mdW5jdGlvbiB1c2VDbnRybENvbnRleHQoKSB7XG4gICAgY29uc3QgY29udGV4dCA9ICgwLCByZWFjdF8xLnVzZUNvbnRleHQpKENudHJsQ29udGV4dF8xLkNudHJsQ29udGV4dCk7XG4gICAgcmV0dXJuIGNvbnRleHQ7XG59XG5leHBvcnRzLnVzZUNudHJsQ29udGV4dCA9IHVzZUNudHJsQ29udGV4dDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/provider/useCntrlContext.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/utils/Animator/Animator.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/utils/Animator/Animator.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Animator = void 0;\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst color_1 = __webpack_require__(/*! @cntrl-site/color */ \"./node_modules/@cntrl-site/color/lib/index.js\");\nconst binSearchInsertAt_1 = __webpack_require__(/*! ../binSearchInsertAt */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/binSearchInsertAt.js\");\nconst rangeMap_1 = __webpack_require__(/*! ../rangeMap */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/rangeMap.js\");\nconst compare = (lhs, rhs) => lhs.position - rhs.position;\nconst insertBin = (0, binSearchInsertAt_1.createInsert)(binSearchInsertAt_1.binSearchInsertAt, compare);\nclass Animator {\n    static pushKeyframeToMap(keyframe, map) {\n        insertBin(map[keyframe.type], keyframe);\n    }\n    constructor(keyframes) {\n        this.keyframes = keyframes;\n        this.keyframesMap = createKeyframesMap();\n        this.fillKeyframesMap();\n    }\n    getFXParams(valuesMap, pos) {\n        const keyframes = this.keyframesMap[sdk_1.KeyframeType.FXParams];\n        if (!keyframes.length)\n            return valuesMap;\n        if (keyframes.length === 1) {\n            const [keyframe] = keyframes;\n            return Object.entries(valuesMap).reduce((acc, [key, fallbackValue]) => {\n                var _a;\n                acc[key] = (_a = keyframe.value[key]) !== null && _a !== void 0 ? _a : fallbackValue;\n                return acc;\n            }, {});\n        }\n        const { start, end } = this.getStartEnd(pos, keyframes);\n        return Object.entries(valuesMap).reduce((acc, [key, fallbackValue]) => {\n            var _a, _b;\n            acc[key] = (0, rangeMap_1.rangeMap)(pos, start.position, end.position, (_a = start.value[key]) !== null && _a !== void 0 ? _a : fallbackValue, (_b = end.value[key]) !== null && _b !== void 0 ? _b : fallbackValue, true);\n            return acc;\n        }, {});\n    }\n    getDimensions(values, pos) {\n        const keyframes = this.keyframesMap[sdk_1.KeyframeType.Dimensions];\n        if (!keyframes || !keyframes.length)\n            return values;\n        if (keyframes.length === 1) {\n            const [keyframe] = keyframes;\n            return {\n                width: keyframe.value.width,\n                height: keyframe.value.height\n            };\n        }\n        const { start, end } = this.getStartEnd(pos, keyframes);\n        return {\n            width: (0, rangeMap_1.rangeMap)(pos, start.position, end.position, start.value.width, end.value.width, true),\n            height: (0, rangeMap_1.rangeMap)(pos, start.position, end.position, start.value.height, end.value.height, true)\n        };\n    }\n    getPositions(values, pos) {\n        const keyframes = this.keyframesMap[sdk_1.KeyframeType.Position];\n        if (!keyframes || !keyframes.length)\n            return values;\n        if (keyframes.length === 1) {\n            const [keyframe] = keyframes;\n            return {\n                left: keyframe.value.left,\n                top: keyframe.value.top\n            };\n        }\n        const { start, end } = this.getStartEnd(pos, keyframes);\n        return {\n            left: (0, rangeMap_1.rangeMap)(pos, start.position, end.position, start.value.left, end.value.left, true),\n            top: (0, rangeMap_1.rangeMap)(pos, start.position, end.position, start.value.top, end.value.top, true)\n        };\n    }\n    getColor(values, pos) {\n        const keyframes = this.keyframesMap[sdk_1.KeyframeType.Color];\n        if (!keyframes || !keyframes.length)\n            return values;\n        if (keyframes.length === 1) {\n            const [keyframe] = keyframes;\n            return {\n                color: keyframe.value.color\n            };\n        }\n        const { start, end } = this.getStartEnd(pos, keyframes);\n        return {\n            color: this.getRangeColor(start, end, pos)\n        };\n    }\n    getBorderColor(values, pos) {\n        const keyframes = this.keyframesMap[sdk_1.KeyframeType.BorderColor];\n        if (!keyframes || !keyframes.length)\n            return values;\n        if (keyframes.length === 1) {\n            const [keyframe] = keyframes;\n            return {\n                color: keyframe.value.color\n            };\n        }\n        const { start, end } = this.getStartEnd(pos, keyframes);\n        return {\n            color: this.getRangeColor(start, end, pos)\n        };\n    }\n    getRadius(values, pos) {\n        const keyframes = this.keyframesMap[sdk_1.KeyframeType.BorderRadius];\n        if (!keyframes || !keyframes.length)\n            return values;\n        if (keyframes.length === 1) {\n            const [keyframe] = keyframes;\n            return {\n                radius: keyframe.value.radius\n            };\n        }\n        const { start, end } = this.getStartEnd(pos, keyframes);\n        return {\n            radius: (0, rangeMap_1.rangeMap)(pos, start.position, end.position, start.value.radius, end.value.radius, true)\n        };\n    }\n    getBorderWidth(values, pos) {\n        const keyframes = this.keyframesMap[sdk_1.KeyframeType.BorderWidth];\n        if (!keyframes || !keyframes.length)\n            return values;\n        if (keyframes.length === 1) {\n            const [keyframe] = keyframes;\n            return {\n                borderWidth: keyframe.value.borderWidth\n            };\n        }\n        const { start, end } = this.getStartEnd(pos, keyframes);\n        return {\n            borderWidth: (0, rangeMap_1.rangeMap)(pos, start.position, end.position, start.value.borderWidth, end.value.borderWidth, true)\n        };\n    }\n    getRotation(values, pos) {\n        const keyframes = this.keyframesMap[sdk_1.KeyframeType.Rotation];\n        if (!keyframes || !keyframes.length)\n            return values;\n        if (keyframes.length === 1) {\n            const [keyframe] = keyframes;\n            return {\n                angle: keyframe.value.angle\n            };\n        }\n        const { start, end } = this.getStartEnd(pos, keyframes);\n        return {\n            angle: (0, rangeMap_1.rangeMap)(pos, start.position, end.position, start.value.angle, end.value.angle, true)\n        };\n    }\n    getOpacity(values, pos) {\n        const keyframes = this.keyframesMap[sdk_1.KeyframeType.Opacity];\n        if (!keyframes || !keyframes.length)\n            return values;\n        if (keyframes.length === 1) {\n            const [keyframe] = keyframes;\n            return {\n                opacity: keyframe.value.opacity\n            };\n        }\n        const { start, end } = this.getStartEnd(pos, keyframes);\n        return {\n            opacity: (0, rangeMap_1.rangeMap)(pos, start.position, end.position, start.value.opacity, end.value.opacity, true)\n        };\n    }\n    getScale(values, pos) {\n        const keyframes = this.keyframesMap[sdk_1.KeyframeType.Scale];\n        if (!keyframes || !keyframes.length)\n            return values;\n        if (keyframes.length === 1) {\n            const [keyframe] = keyframes;\n            return {\n                scale: keyframe.value.scale\n            };\n        }\n        const { start, end } = this.getStartEnd(pos, keyframes);\n        return {\n            scale: (0, rangeMap_1.rangeMap)(pos, start.position, end.position, start.value.scale, end.value.scale, true)\n        };\n    }\n    getBlur(values, pos) {\n        const keyframes = this.keyframesMap[sdk_1.KeyframeType.Blur];\n        if (!keyframes || !keyframes.length)\n            return values;\n        if (keyframes.length === 1) {\n            const [keyframe] = keyframes;\n            return {\n                blur: keyframe.value.blur\n            };\n        }\n        const { start, end } = this.getStartEnd(pos, keyframes);\n        return {\n            blur: (0, rangeMap_1.rangeMap)(pos, start.position, end.position, start.value.blur, end.value.blur, true)\n        };\n    }\n    getBackdropBlur(values, pos) {\n        const keyframes = this.keyframesMap[sdk_1.KeyframeType.BackdropBlur];\n        if (!keyframes || !keyframes.length)\n            return values;\n        if (keyframes.length === 1) {\n            const [keyframe] = keyframes;\n            return {\n                backdropBlur: keyframe.value.backdropBlur\n            };\n        }\n        const { start, end } = this.getStartEnd(pos, keyframes);\n        return {\n            backdropBlur: (0, rangeMap_1.rangeMap)(pos, start.position, end.position, start.value.backdropBlur, end.value.backdropBlur, true)\n        };\n    }\n    getTextColor(values, pos) {\n        const keyframes = this.keyframesMap[sdk_1.KeyframeType.TextColor];\n        if (!keyframes || !keyframes.length)\n            return values;\n        if (keyframes.length === 1) {\n            const [keyframe] = keyframes;\n            return {\n                color: keyframe.value.color\n            };\n        }\n        const { start, end } = this.getStartEnd(pos, keyframes);\n        return {\n            color: this.getRangeColor(start, end, pos)\n        };\n    }\n    getLetterSpacing(values, pos) {\n        const keyframes = this.keyframesMap[sdk_1.KeyframeType.LetterSpacing];\n        if (!keyframes || !keyframes.length)\n            return values;\n        if (keyframes.length === 1) {\n            const [keyframe] = keyframes;\n            return {\n                letterSpacing: keyframe.value.letterSpacing\n            };\n        }\n        const { start, end } = this.getStartEnd(pos, keyframes);\n        return {\n            letterSpacing: (0, rangeMap_1.rangeMap)(pos, start.position, end.position, start.value.letterSpacing, end.value.letterSpacing, true)\n        };\n    }\n    getWordSpacing(values, pos) {\n        const keyframes = this.keyframesMap[sdk_1.KeyframeType.WordSpacing];\n        if (!keyframes || !keyframes.length)\n            return values;\n        if (keyframes.length === 1) {\n            const [keyframe] = keyframes;\n            return {\n                wordSpacing: keyframe.value.wordSpacing\n            };\n        }\n        const { start, end } = this.getStartEnd(pos, keyframes);\n        return {\n            wordSpacing: (0, rangeMap_1.rangeMap)(pos, start.position, end.position, start.value.wordSpacing, end.value.wordSpacing, true)\n        };\n    }\n    getStartEnd(position, keyframes) {\n        const index = (0, binSearchInsertAt_1.binSearchInsertAt)(keyframes, { position }, compare);\n        const end = index === keyframes.length ? index - 1 : index;\n        const start = end === 0 ? end : end - 1;\n        return { start: keyframes[start], end: keyframes[end] };\n    }\n    fillKeyframesMap() {\n        this.keyframesMap = createKeyframesMap();\n        for (const keyframe of this.keyframes) {\n            Animator.pushKeyframeToMap(keyframe, this.keyframesMap);\n        }\n    }\n    getRangeColor(start, end, position) {\n        const rangeAmount = (0, rangeMap_1.rangeMap)(position, start.position, end.position, 0, 1, true);\n        const startColor = color_1.CntrlColor.parse(start.value.color);\n        const endColor = color_1.CntrlColor.parse(end.value.color);\n        const mixedColor = startColor.mix(endColor, rangeAmount);\n        return mixedColor.fmt('oklch');\n    }\n}\nexports.Animator = Animator;\nfunction createKeyframesMap() {\n    return {\n        [sdk_1.KeyframeType.Dimensions]: [],\n        [sdk_1.KeyframeType.Position]: [],\n        [sdk_1.KeyframeType.BorderWidth]: [],\n        [sdk_1.KeyframeType.BorderRadius]: [],\n        [sdk_1.KeyframeType.Color]: [],\n        [sdk_1.KeyframeType.Rotation]: [],\n        [sdk_1.KeyframeType.BorderColor]: [],\n        [sdk_1.KeyframeType.Opacity]: [],\n        [sdk_1.KeyframeType.Scale]: [],\n        [sdk_1.KeyframeType.Blur]: [],\n        [sdk_1.KeyframeType.BackdropBlur]: [],\n        [sdk_1.KeyframeType.LetterSpacing]: [],\n        [sdk_1.KeyframeType.WordSpacing]: [],\n        [sdk_1.KeyframeType.TextColor]: [],\n        [sdk_1.KeyframeType.FXParams]: []\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/utils/Animator/Animator.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/utils/ArticleRectManager/ArticleRectObserver.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/utils/ArticleRectManager/ArticleRectObserver.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ArticleRectObserver = void 0;\nconst EventEmitter_1 = __webpack_require__(/*! ../EventEmitter */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/EventEmitter.js\");\nconst resize_observer_polyfill_1 = __importDefault(__webpack_require__(/*! resize-observer-polyfill */ \"./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js\"));\nclass ArticleRectObserver extends EventEmitter_1.EventEmitter {\n    constructor() {\n        super();\n        this.articleWidth = 0;\n        this.registry = new Map();\n        this.scrollPos = window.scrollY;\n        this.animationFrame = NaN;\n        this.parent = undefined;\n        this.sectionsScrollMap = new Map();\n        this.handleScroll = (scroll) => {\n            this.setScroll(scroll / this.articleWidth);\n        };\n        this.resizeObserver = new resize_observer_polyfill_1.default(this.handleResize.bind(this));\n    }\n    get scroll() {\n        return this.scrollPos;\n    }\n    getSectionScroll(sectionId) {\n        const sectionTop = this.sectionsScrollMap.get(sectionId);\n        if (sectionTop === undefined)\n            return 0;\n        return -(sectionTop / this.articleWidth - this.scrollPos);\n    }\n    getSectionTop(sectionId) {\n        const sectionTop = this.sectionsScrollMap.get(sectionId);\n        return sectionTop !== null && sectionTop !== void 0 ? sectionTop : 0;\n    }\n    get width() {\n        return this.articleWidth;\n    }\n    setScroll(scroll) {\n        this.scrollPos = scroll;\n    }\n    init(parent) {\n        this.parent = parent;\n        const onScroll = () => {\n            this.handleScroll(window.scrollY);\n            if (!isNaN(this.animationFrame))\n                return;\n            this.animationFrame = window.requestAnimationFrame(() => {\n                this.animationFrame = NaN;\n                this.emit('scroll', undefined);\n            });\n        };\n        window.addEventListener('scroll', onScroll);\n        return () => {\n            this.parent = undefined;\n            window.removeEventListener('scroll', onScroll);\n            if (!isNaN(this.animationFrame)) {\n                window.cancelAnimationFrame(this.animationFrame);\n                this.animationFrame = NaN;\n            }\n        };\n    }\n    register(el, sectionId) {\n        this.registry.set(sectionId, el);\n        this.resizeObserver.observe(el);\n        return () => {\n            this.registry.delete(sectionId);\n            this.resizeObserver.unobserve(el);\n        };\n    }\n    handleResize() {\n        if (!this.parent)\n            return;\n        const parentBoundary = this.parent.getBoundingClientRect();\n        this.articleWidth = parentBoundary.width;\n        this.setScroll(window.scrollY / this.articleWidth);\n        this.emit('resize', parentBoundary);\n        for (const sectionId of this.registry.keys()) {\n            const el = this.registry.get(sectionId);\n            if (!el)\n                continue;\n            const rect = el.getBoundingClientRect();\n            this.sectionsScrollMap.set(sectionId, rect.top - parentBoundary.top);\n        }\n    }\n    ;\n}\nexports.ArticleRectObserver = ArticleRectObserver;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvdXRpbHMvQXJ0aWNsZVJlY3RNYW5hZ2VyL0FydGljbGVSZWN0T2JzZXJ2ZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkI7QUFDM0IsdUJBQXVCLG1CQUFPLENBQUMsd0ZBQWlCO0FBQ2hELG1EQUFtRCxtQkFBTyxDQUFDLG1HQUEwQjtBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi91dGlscy9BcnRpY2xlUmVjdE1hbmFnZXIvQXJ0aWNsZVJlY3RPYnNlcnZlci5qcz9kYjQyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BcnRpY2xlUmVjdE9ic2VydmVyID0gdm9pZCAwO1xuY29uc3QgRXZlbnRFbWl0dGVyXzEgPSByZXF1aXJlKFwiLi4vRXZlbnRFbWl0dGVyXCIpO1xuY29uc3QgcmVzaXplX29ic2VydmVyX3BvbHlmaWxsXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcInJlc2l6ZS1vYnNlcnZlci1wb2x5ZmlsbFwiKSk7XG5jbGFzcyBBcnRpY2xlUmVjdE9ic2VydmVyIGV4dGVuZHMgRXZlbnRFbWl0dGVyXzEuRXZlbnRFbWl0dGVyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5hcnRpY2xlV2lkdGggPSAwO1xuICAgICAgICB0aGlzLnJlZ2lzdHJ5ID0gbmV3IE1hcCgpO1xuICAgICAgICB0aGlzLnNjcm9sbFBvcyA9IHdpbmRvdy5zY3JvbGxZO1xuICAgICAgICB0aGlzLmFuaW1hdGlvbkZyYW1lID0gTmFOO1xuICAgICAgICB0aGlzLnBhcmVudCA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy5zZWN0aW9uc1Njcm9sbE1hcCA9IG5ldyBNYXAoKTtcbiAgICAgICAgdGhpcy5oYW5kbGVTY3JvbGwgPSAoc2Nyb2xsKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnNldFNjcm9sbChzY3JvbGwgLyB0aGlzLmFydGljbGVXaWR0aCk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMucmVzaXplT2JzZXJ2ZXIgPSBuZXcgcmVzaXplX29ic2VydmVyX3BvbHlmaWxsXzEuZGVmYXVsdCh0aGlzLmhhbmRsZVJlc2l6ZS5iaW5kKHRoaXMpKTtcbiAgICB9XG4gICAgZ2V0IHNjcm9sbCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2Nyb2xsUG9zO1xuICAgIH1cbiAgICBnZXRTZWN0aW9uU2Nyb2xsKHNlY3Rpb25JZCkge1xuICAgICAgICBjb25zdCBzZWN0aW9uVG9wID0gdGhpcy5zZWN0aW9uc1Njcm9sbE1hcC5nZXQoc2VjdGlvbklkKTtcbiAgICAgICAgaWYgKHNlY3Rpb25Ub3AgPT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICByZXR1cm4gLShzZWN0aW9uVG9wIC8gdGhpcy5hcnRpY2xlV2lkdGggLSB0aGlzLnNjcm9sbFBvcyk7XG4gICAgfVxuICAgIGdldFNlY3Rpb25Ub3Aoc2VjdGlvbklkKSB7XG4gICAgICAgIGNvbnN0IHNlY3Rpb25Ub3AgPSB0aGlzLnNlY3Rpb25zU2Nyb2xsTWFwLmdldChzZWN0aW9uSWQpO1xuICAgICAgICByZXR1cm4gc2VjdGlvblRvcCAhPT0gbnVsbCAmJiBzZWN0aW9uVG9wICE9PSB2b2lkIDAgPyBzZWN0aW9uVG9wIDogMDtcbiAgICB9XG4gICAgZ2V0IHdpZHRoKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5hcnRpY2xlV2lkdGg7XG4gICAgfVxuICAgIHNldFNjcm9sbChzY3JvbGwpIHtcbiAgICAgICAgdGhpcy5zY3JvbGxQb3MgPSBzY3JvbGw7XG4gICAgfVxuICAgIGluaXQocGFyZW50KSB7XG4gICAgICAgIHRoaXMucGFyZW50ID0gcGFyZW50O1xuICAgICAgICBjb25zdCBvblNjcm9sbCA9ICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuaGFuZGxlU2Nyb2xsKHdpbmRvdy5zY3JvbGxZKTtcbiAgICAgICAgICAgIGlmICghaXNOYU4odGhpcy5hbmltYXRpb25GcmFtZSkpXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgdGhpcy5hbmltYXRpb25GcmFtZSA9IHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuYW5pbWF0aW9uRnJhbWUgPSBOYU47XG4gICAgICAgICAgICAgICAgdGhpcy5lbWl0KCdzY3JvbGwnLCB1bmRlZmluZWQpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBvblNjcm9sbCk7XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnBhcmVudCA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBvblNjcm9sbCk7XG4gICAgICAgICAgICBpZiAoIWlzTmFOKHRoaXMuYW5pbWF0aW9uRnJhbWUpKSB7XG4gICAgICAgICAgICAgICAgd2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMuYW5pbWF0aW9uRnJhbWUpO1xuICAgICAgICAgICAgICAgIHRoaXMuYW5pbWF0aW9uRnJhbWUgPSBOYU47XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfVxuICAgIHJlZ2lzdGVyKGVsLCBzZWN0aW9uSWQpIHtcbiAgICAgICAgdGhpcy5yZWdpc3RyeS5zZXQoc2VjdGlvbklkLCBlbCk7XG4gICAgICAgIHRoaXMucmVzaXplT2JzZXJ2ZXIub2JzZXJ2ZShlbCk7XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnJlZ2lzdHJ5LmRlbGV0ZShzZWN0aW9uSWQpO1xuICAgICAgICAgICAgdGhpcy5yZXNpemVPYnNlcnZlci51bm9ic2VydmUoZWwpO1xuICAgICAgICB9O1xuICAgIH1cbiAgICBoYW5kbGVSZXNpemUoKSB7XG4gICAgICAgIGlmICghdGhpcy5wYXJlbnQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IHBhcmVudEJvdW5kYXJ5ID0gdGhpcy5wYXJlbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgIHRoaXMuYXJ0aWNsZVdpZHRoID0gcGFyZW50Qm91bmRhcnkud2lkdGg7XG4gICAgICAgIHRoaXMuc2V0U2Nyb2xsKHdpbmRvdy5zY3JvbGxZIC8gdGhpcy5hcnRpY2xlV2lkdGgpO1xuICAgICAgICB0aGlzLmVtaXQoJ3Jlc2l6ZScsIHBhcmVudEJvdW5kYXJ5KTtcbiAgICAgICAgZm9yIChjb25zdCBzZWN0aW9uSWQgb2YgdGhpcy5yZWdpc3RyeS5rZXlzKCkpIHtcbiAgICAgICAgICAgIGNvbnN0IGVsID0gdGhpcy5yZWdpc3RyeS5nZXQoc2VjdGlvbklkKTtcbiAgICAgICAgICAgIGlmICghZWwpXG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICBjb25zdCByZWN0ID0gZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgICAgICB0aGlzLnNlY3Rpb25zU2Nyb2xsTWFwLnNldChzZWN0aW9uSWQsIHJlY3QudG9wIC0gcGFyZW50Qm91bmRhcnkudG9wKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICA7XG59XG5leHBvcnRzLkFydGljbGVSZWN0T2JzZXJ2ZXIgPSBBcnRpY2xlUmVjdE9ic2VydmVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/utils/ArticleRectManager/ArticleRectObserver.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/utils/ArticleRectManager/useArticleRectObserver.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/utils/ArticleRectManager/useArticleRectObserver.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useArticleRectObserver = void 0;\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst ArticleRectObserver_1 = __webpack_require__(/*! ./ArticleRectObserver */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/ArticleRectManager/ArticleRectObserver.js\");\nconst useArticleRectObserver = (el) => {\n    const [articleRectObserver, setArticleRectObserver] = (0, react_1.useState)(null);\n    (0, react_1.useEffect)(() => {\n        setArticleRectObserver(new ArticleRectObserver_1.ArticleRectObserver());\n    }, []);\n    (0, react_1.useEffect)(() => {\n        if (!el || !articleRectObserver)\n            return;\n        return articleRectObserver.init(el);\n    }, [el, articleRectObserver]);\n    return articleRectObserver;\n};\nexports.useArticleRectObserver = useArticleRectObserver;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvdXRpbHMvQXJ0aWNsZVJlY3RNYW5hZ2VyL3VzZUFydGljbGVSZWN0T2JzZXJ2ZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsOEJBQThCO0FBQzlCLGdCQUFnQixtQkFBTyxDQUFDLDRDQUFPO0FBQy9CLDhCQUE4QixtQkFBTyxDQUFDLHdIQUF1QjtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsOEJBQThCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi91dGlscy9BcnRpY2xlUmVjdE1hbmFnZXIvdXNlQXJ0aWNsZVJlY3RPYnNlcnZlci5qcz8yMGQxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy51c2VBcnRpY2xlUmVjdE9ic2VydmVyID0gdm9pZCAwO1xuY29uc3QgcmVhY3RfMSA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmNvbnN0IEFydGljbGVSZWN0T2JzZXJ2ZXJfMSA9IHJlcXVpcmUoXCIuL0FydGljbGVSZWN0T2JzZXJ2ZXJcIik7XG5jb25zdCB1c2VBcnRpY2xlUmVjdE9ic2VydmVyID0gKGVsKSA9PiB7XG4gICAgY29uc3QgW2FydGljbGVSZWN0T2JzZXJ2ZXIsIHNldEFydGljbGVSZWN0T2JzZXJ2ZXJdID0gKDAsIHJlYWN0XzEudXNlU3RhdGUpKG51bGwpO1xuICAgICgwLCByZWFjdF8xLnVzZUVmZmVjdCkoKCkgPT4ge1xuICAgICAgICBzZXRBcnRpY2xlUmVjdE9ic2VydmVyKG5ldyBBcnRpY2xlUmVjdE9ic2VydmVyXzEuQXJ0aWNsZVJlY3RPYnNlcnZlcigpKTtcbiAgICB9LCBbXSk7XG4gICAgKDAsIHJlYWN0XzEudXNlRWZmZWN0KSgoKSA9PiB7XG4gICAgICAgIGlmICghZWwgfHwgIWFydGljbGVSZWN0T2JzZXJ2ZXIpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHJldHVybiBhcnRpY2xlUmVjdE9ic2VydmVyLmluaXQoZWwpO1xuICAgIH0sIFtlbCwgYXJ0aWNsZVJlY3RPYnNlcnZlcl0pO1xuICAgIHJldHVybiBhcnRpY2xlUmVjdE9ic2VydmVyO1xufTtcbmV4cG9ydHMudXNlQXJ0aWNsZVJlY3RPYnNlcnZlciA9IHVzZUFydGljbGVSZWN0T2JzZXJ2ZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/utils/ArticleRectManager/useArticleRectObserver.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/utils/ArticleRectManager/useSectionRegistry.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/utils/ArticleRectManager/useSectionRegistry.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useSectionRegistry = void 0;\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst ArticleRectContext_1 = __webpack_require__(/*! ../../provider/ArticleRectContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/ArticleRectContext.js\");\nconst useSectionRegistry = (sectionId, el) => {\n    const articleRectObserver = (0, react_1.useContext)(ArticleRectContext_1.ArticleRectContext);\n    (0, react_1.useEffect)(() => {\n        if (!el || !articleRectObserver)\n            return;\n        return articleRectObserver.register(el, sectionId);\n    }, [el, articleRectObserver]);\n};\nexports.useSectionRegistry = useSectionRegistry;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvdXRpbHMvQXJ0aWNsZVJlY3RNYW5hZ2VyL3VzZVNlY3Rpb25SZWdpc3RyeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwwQkFBMEI7QUFDMUIsZ0JBQWdCLG1CQUFPLENBQUMsNENBQU87QUFDL0IsNkJBQTZCLG1CQUFPLENBQUMsbUhBQW1DO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDBCQUEwQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvdXRpbHMvQXJ0aWNsZVJlY3RNYW5hZ2VyL3VzZVNlY3Rpb25SZWdpc3RyeS5qcz80YWI4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy51c2VTZWN0aW9uUmVnaXN0cnkgPSB2b2lkIDA7XG5jb25zdCByZWFjdF8xID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgQXJ0aWNsZVJlY3RDb250ZXh0XzEgPSByZXF1aXJlKFwiLi4vLi4vcHJvdmlkZXIvQXJ0aWNsZVJlY3RDb250ZXh0XCIpO1xuY29uc3QgdXNlU2VjdGlvblJlZ2lzdHJ5ID0gKHNlY3Rpb25JZCwgZWwpID0+IHtcbiAgICBjb25zdCBhcnRpY2xlUmVjdE9ic2VydmVyID0gKDAsIHJlYWN0XzEudXNlQ29udGV4dCkoQXJ0aWNsZVJlY3RDb250ZXh0XzEuQXJ0aWNsZVJlY3RDb250ZXh0KTtcbiAgICAoMCwgcmVhY3RfMS51c2VFZmZlY3QpKCgpID0+IHtcbiAgICAgICAgaWYgKCFlbCB8fCAhYXJ0aWNsZVJlY3RPYnNlcnZlcilcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgcmV0dXJuIGFydGljbGVSZWN0T2JzZXJ2ZXIucmVnaXN0ZXIoZWwsIHNlY3Rpb25JZCk7XG4gICAgfSwgW2VsLCBhcnRpY2xlUmVjdE9ic2VydmVyXSk7XG59O1xuZXhwb3J0cy51c2VTZWN0aW9uUmVnaXN0cnkgPSB1c2VTZWN0aW9uUmVnaXN0cnk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/utils/ArticleRectManager/useSectionRegistry.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/utils/EventEmitter.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/utils/EventEmitter.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EventEmitter = void 0;\nclass EventEmitter {\n    constructor() {\n        this.listeners = {};\n    }\n    on(event, listener) {\n        var _a;\n        if (!Array.isArray(this.listeners[event])) {\n            this.listeners[event] = [];\n        }\n        (_a = this.listeners[event]) === null || _a === void 0 ? void 0 : _a.push(listener);\n        return () => {\n            this.off(event, listener);\n        };\n    }\n    off(event, listener) {\n        var _a;\n        const filtered = (_a = this.listeners[event]) === null || _a === void 0 ? void 0 : _a.filter(l => l !== listener);\n        this.listeners[event] = filtered && filtered.length > 0 ? filtered : undefined;\n    }\n    emit(event, payload) {\n        const listeners = this.listeners[event];\n        if (!Array.isArray(listeners))\n            return;\n        for (const listener of listeners) {\n            try {\n                listener(payload);\n            }\n            catch (error) {\n                console.error(error instanceof Error ? error.stack : error);\n            }\n        }\n    }\n}\nexports.EventEmitter = EventEmitter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvdXRpbHMvRXZlbnRFbWl0dGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbnRybC1zaXRlL3Nkay1uZXh0anMvbGliL3V0aWxzL0V2ZW50RW1pdHRlci5qcz83YmY4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5FdmVudEVtaXR0ZXIgPSB2b2lkIDA7XG5jbGFzcyBFdmVudEVtaXR0ZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmxpc3RlbmVycyA9IHt9O1xuICAgIH1cbiAgICBvbihldmVudCwgbGlzdGVuZXIpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkodGhpcy5saXN0ZW5lcnNbZXZlbnRdKSkge1xuICAgICAgICAgICAgdGhpcy5saXN0ZW5lcnNbZXZlbnRdID0gW107XG4gICAgICAgIH1cbiAgICAgICAgKF9hID0gdGhpcy5saXN0ZW5lcnNbZXZlbnRdKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EucHVzaChsaXN0ZW5lcik7XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLm9mZihldmVudCwgbGlzdGVuZXIpO1xuICAgICAgICB9O1xuICAgIH1cbiAgICBvZmYoZXZlbnQsIGxpc3RlbmVyKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgY29uc3QgZmlsdGVyZWQgPSAoX2EgPSB0aGlzLmxpc3RlbmVyc1tldmVudF0pID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5maWx0ZXIobCA9PiBsICE9PSBsaXN0ZW5lcik7XG4gICAgICAgIHRoaXMubGlzdGVuZXJzW2V2ZW50XSA9IGZpbHRlcmVkICYmIGZpbHRlcmVkLmxlbmd0aCA+IDAgPyBmaWx0ZXJlZCA6IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgZW1pdChldmVudCwgcGF5bG9hZCkge1xuICAgICAgICBjb25zdCBsaXN0ZW5lcnMgPSB0aGlzLmxpc3RlbmVyc1tldmVudF07XG4gICAgICAgIGlmICghQXJyYXkuaXNBcnJheShsaXN0ZW5lcnMpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBmb3IgKGNvbnN0IGxpc3RlbmVyIG9mIGxpc3RlbmVycykge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBsaXN0ZW5lcihwYXlsb2FkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLnN0YWNrIDogZXJyb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5FdmVudEVtaXR0ZXIgPSBFdmVudEVtaXR0ZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/utils/EventEmitter.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/utils/RichTextConverter/RichTextConverter.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/utils/RichTextConverter/RichTextConverter.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RichTextConverter = exports.FontStyles = void 0;\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nconst color_1 = __webpack_require__(/*! @cntrl-site/color */ \"./node_modules/@cntrl-site/color/lib/index.js\");\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst LinkWrapper_1 = __webpack_require__(/*! ../../components/items/LinkWrapper */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/components/items/LinkWrapper.js\");\nconst getFontFamilyValue_1 = __webpack_require__(/*! ../getFontFamilyValue */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getFontFamilyValue.js\");\nexports.FontStyles = {\n    normal: { 'font-style': 'normal' },\n    bold: { 'font-weight': 'bold' },\n    italic: { 'font-style': 'italic' }\n};\nclass RichTextConverter {\n    toHtml(richText, layouts) {\n        var _a, _b, _c;\n        const { text, blocks = [] } = richText.commonParams;\n        const root = [];\n        const styleRules = layouts.reduce((rec, layout) => {\n            rec[layout.id] = [];\n            return rec;\n        }, {});\n        const currentLineHeight = layouts.reduce((rec, layout) => {\n            var _a;\n            const styles = richText.layoutParams[layout.id].rangeStyles;\n            rec[layout.id] = (_a = styles === null || styles === void 0 ? void 0 : styles.find(s => s.style === 'LINEHEIGHT')) === null || _a === void 0 ? void 0 : _a.value;\n            return rec;\n        }, {});\n        for (let blockIndex = 0; blockIndex < blocks.length; blockIndex++) {\n            const block = blocks[blockIndex];\n            const content = text.slice(block.start, block.end + 1);\n            const entities = (_a = block.entities.sort((a, b) => a.start - b.start)) !== null && _a !== void 0 ? _a : [];\n            if (content.length === 1) {\n                const id = `rt_${richText.id}_br_${blockIndex}`;\n                root.push((0, jsx_runtime_1.jsx)(\"div\", { className: id, children: (0, jsx_runtime_1.jsx)(\"br\", {}) }, id));\n                layouts.forEach(l => {\n                    const lhForLayout = currentLineHeight[l.id];\n                    if (lhForLayout === undefined)\n                        return;\n                    const lh = RichTextConverter.fromRangeStylesToInline({\n                        name: 'LINEHEIGHT',\n                        value: lhForLayout\n                    }, l.exemplary);\n                    styleRules[l.id].push(`.rt_${richText.id}_br_${blockIndex} {${lh}}`);\n                });\n                continue;\n            }\n            const newStylesGroup = layouts.map(({ id: layoutId }) => {\n                const params = richText.layoutParams[layoutId];\n                const styles = params.rangeStyles\n                    .filter(s => s.start >= block.start && s.end <= block.end)\n                    .map(s => (Object.assign(Object.assign({}, s), { start: s.start - block.start, end: s.end - block.start })));\n                return ({\n                    layout: layoutId,\n                    styles: this.normalizeStyles(styles, entities)\n                });\n            });\n            const sameLayouts = groupBy(newStylesGroup, (item) => { var _a; return this.serializeRanges((_a = item.styles) !== null && _a !== void 0 ? _a : []); });\n            for (const group of Object.values(sameLayouts)) {\n                const blockClass = `rt_${richText.id}-b${blockIndex}_${layouts.map(l => group.some(g => g.layout === l.id) ? '1' : '0').join('')}`;\n                const kids = [];\n                layouts.forEach(l => {\n                    const ta = richText.layoutParams[l.id].textAlign;\n                    styleRules[l.id].push(`\r\n            .${blockClass} {\r\n              display: ${group.some(g => g.layout === l.id) ? 'block' : 'none'};\r\n              text-align: ${ta};\r\n              white-space: pre-wrap;\r\n              overflow-wrap: break-word;\r\n            }\r\n          `);\n                });\n                const item = group[0];\n                const entitiesGroups = (_b = this.groupEntities(entities, item.styles)) !== null && _b !== void 0 ? _b : [];\n                let offset = 0;\n                for (const entity of entitiesGroups) {\n                    const entityKids = [];\n                    if (offset < entity.start) {\n                        kids.push(sliceSymbols(content, offset, entity.start));\n                        offset = entity.start;\n                    }\n                    for (const style of entity.stylesGroup) {\n                        if (offset < style.start) {\n                            entityKids.push(sliceSymbols(content, offset, style.start));\n                        }\n                        entityKids.push((0, jsx_runtime_1.jsx)(\"span\", { className: `s-${style.start}-${style.end}`, children: sliceSymbols(content, style.start, style.end) }, style.start));\n                        offset = style.end;\n                    }\n                    if (offset < entity.end) {\n                        entityKids.push(sliceSymbols(content, offset, entity.end));\n                        offset = entity.end;\n                    }\n                    if (entity.link) {\n                        kids.push((0, jsx_runtime_1.jsx)(LinkWrapper_1.LinkWrapper, { url: entity.link, target: entity.target, children: entityKids }, entity.start));\n                        continue;\n                    }\n                    kids.push(...entityKids);\n                }\n                if (offset < getSymbolsCount(content)) {\n                    kids.push(sliceSymbols(content, offset));\n                }\n                for (const item of group) {\n                    const { exemplary } = layouts.find(l => l.id === item.layout);\n                    const entitiesGroups = (_c = this.groupEntities(entities, item.styles)) !== null && _c !== void 0 ? _c : [];\n                    for (const entitiesGroup of entitiesGroups) {\n                        if (!entitiesGroup.stylesGroup)\n                            continue;\n                        for (const styleGroup of entitiesGroup.stylesGroup) {\n                            const lineHeight = styleGroup.styles.find(s => s.name === 'LINEHEIGHT');\n                            const color = styleGroup.styles.find(s => s.name === 'COLOR');\n                            if (lineHeight === null || lineHeight === void 0 ? void 0 : lineHeight.value) {\n                                currentLineHeight[item.layout] = lineHeight.value;\n                            }\n                            styleRules[item.layout].push(`\r\n                .${blockClass} .s-${styleGroup.start}-${styleGroup.end} {\r\n                  ${styleGroup.styles.map(s => RichTextConverter.fromRangeStylesToInline(s, exemplary)).join('\\n')}\r\n                }\r\n              `);\n                            if (color) {\n                                styleRules[item.layout].push(`\r\n                @supports not (color: oklch(42% 0.3 90 / 1)) {\r\n                  .${blockClass} .s-${styleGroup.start}-${styleGroup.end} {\r\n                    color: ${color_1.CntrlColor.parse(getResolvedValue(color.value, 'COLOR')).fmt('rgba')};\r\n                  }\r\n                }\r\n              `);\n                            }\n                        }\n                    }\n                }\n                root.push((0, jsx_runtime_1.jsx)(\"div\", { className: blockClass, children: kids }, blockClass));\n            }\n        }\n        const styles = layouts.map(l => `\r\n      ${(0, sdk_1.getLayoutMediaQuery)(l.id, layouts)} {\r\n        ${styleRules[l.id].join('\\n')}\r\n      }\r\n    `).join('\\n');\n        return [\n            root,\n            styles\n        ];\n    }\n    serializeRanges(ranges) {\n        return ranges.map(r => `${r.start},${r.end}`).join(' ');\n    }\n    normalizeStyles(styles, entities) {\n        const styleGroups = [];\n        const dividers = [...styles, ...entities].reduce((ds, s) => {\n            ds.add(s.start);\n            ds.add(s.end);\n            return ds;\n        }, new Set());\n        if (dividers.size === 0)\n            return;\n        const edges = Array.from(dividers).sort((a, b) => a - b);\n        for (let i = 0; i < edges.length - 1; i += 1) {\n            const start = edges[i];\n            const end = edges[i + 1];\n            const applied = styles.filter(s => Math.max(s.start, start) < Math.min(s.end, end));\n            if (applied.length === 0)\n                continue;\n            styleGroups.push({\n                start,\n                end,\n                styles: applied.map(s => ({ name: s.style, value: s.value }))\n            });\n        }\n        return styleGroups;\n    }\n    groupEntities(entities, styleGroups) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        const entitiesGroups = [];\n        if (!entities.length && !styleGroups)\n            return;\n        if (!styleGroups || styleGroups.length === 0) {\n            const dividersSet = entities.reduce((ds, e) => {\n                // some entities may have no data, need to filter them out\n                // (case with deleting a section/page that was linked to)\n                if (!e.hasOwnProperty('data'))\n                    return ds;\n                ds.add(e.start);\n                ds.add(e.end);\n                return ds;\n            }, new Set([entities[0].start, entities[entities.length - 1].end]));\n            const dividers = Array.from(dividersSet).sort((a, b) => a - b);\n            for (let i = 0; i < dividers.length - 1; i += 1) {\n                const start = dividers[i];\n                const end = dividers[i + 1];\n                const entity = entities.find(e => e.start === start);\n                entitiesGroups.push(Object.assign({ stylesGroup: [], start,\n                    end }, (entity && { link: (_b = (_a = entity.data) === null || _a === void 0 ? void 0 : _a.url) !== null && _b !== void 0 ? _b : '', target: (_d = (_c = entity.data) === null || _c === void 0 ? void 0 : _c.target) !== null && _d !== void 0 ? _d : '_self' })));\n            }\n            return entitiesGroups;\n        }\n        if (entities.length === 0) {\n            entitiesGroups.push({\n                stylesGroup: styleGroups,\n                start: styleGroups[0].start,\n                end: styleGroups[styleGroups.length - 1].end\n            });\n            return entitiesGroups;\n        }\n        const start = entities[0].start < styleGroups[0].start ? entities[0].start : styleGroups[0].start;\n        const end = entities[entities.length - 1].end > styleGroups[styleGroups.length - 1].end ? entities[entities.length - 1].end : styleGroups[styleGroups.length - 1].end;\n        const entitiesDividers = entities.reduce((ds, e) => {\n            if (!e.hasOwnProperty('data'))\n                return ds;\n            ds.add(e.start);\n            ds.add(e.end);\n            return ds;\n        }, new Set([start, end]));\n        const entityDividers = Array.from(entitiesDividers).sort((a, b) => a - b);\n        for (let i = 0; i < entityDividers.length - 1; i += 1) {\n            const start = entityDividers[i];\n            const end = entityDividers[i + 1];\n            const entity = entities.find(e => e.start === start);\n            entitiesGroups.push(Object.assign({ stylesGroup: styleGroups.filter(s => s.start >= start && s.end <= end), start,\n                end }, (entity && { link: (_f = (_e = entity.data) === null || _e === void 0 ? void 0 : _e.url) !== null && _f !== void 0 ? _f : '', target: (_h = (_g = entity.data) === null || _g === void 0 ? void 0 : _g.target) !== null && _h !== void 0 ? _h : '_self' })));\n        }\n        return entitiesGroups;\n    }\n    static fromRangeStylesToInline(draftStyle, exemplary) {\n        const { value, name } = draftStyle;\n        const map = {\n            COLOR: { color: getResolvedValue(value, name) },\n            TYPEFACE: { 'font-family': `${(0, getFontFamilyValue_1.getFontFamilyValue)(value)}` },\n            FONTSTYLE: value ? Object.assign({}, exports.FontStyles[value]) : {},\n            FONTWEIGHT: { 'font-weight': value },\n            FONTSIZE: { 'font-size': `${Number.parseFloat(value) * exemplary}px` },\n            LINEHEIGHT: { 'line-height': `${Number.parseFloat(value) * exemplary}px` },\n            LETTERSPACING: { 'letter-spacing': `${Number.parseFloat(value) * exemplary}px` },\n            WORDSPACING: { 'word-spacing': `${Number.parseFloat(value) * exemplary}px` },\n            TEXTTRANSFORM: value ? { 'text-transform': value } : { 'text-transform': sdk_1.TextTransform.None },\n            VERTICALALIGN: value ? { 'vertical-align': value } : { 'vertical-align': sdk_1.VerticalAlign.Unset },\n            TEXTDECORATION: { 'text-decoration': value },\n            FONTVARIANT: { 'font-variant': value }\n        };\n        const css = map[name];\n        if (!css) {\n            return '';\n        }\n        return Object.entries(css).filter(([, value]) => !!value).map(([prop, value]) => `${prop}: ${value};`).join('\\n');\n    }\n}\nexports.RichTextConverter = RichTextConverter;\nfunction groupBy(items, getKey) {\n    const groups = {};\n    for (const item of items) {\n        const key = getKey(item);\n        if (!groups[key]) {\n            groups[key] = [];\n        }\n        groups[key].push(item);\n    }\n    return groups;\n}\nfunction getResolvedValue(value, name) {\n    if (name !== 'COLOR')\n        return value;\n    return value ? color_1.CntrlColor.parse(value).toCss() : value;\n}\nfunction sliceSymbols(text, start, end = Number.NaN) {\n    let startOffset = Number.NaN;\n    let endOffset = 0;\n    let count = -1;\n    for (const ch of text) {\n        count += 1;\n        if (count === start) {\n            startOffset = endOffset;\n        }\n        if (count === end)\n            break;\n        endOffset += ch.length;\n    }\n    if (isNaN(startOffset))\n        return '';\n    return text.slice(startOffset, endOffset);\n}\nfunction getSymbolsCount(input) {\n    let count = 0;\n    let ch;\n    for (ch of input) {\n        count += 1;\n    }\n    return count;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvdXRpbHMvUmljaFRleHRDb252ZXJ0ZXIvUmljaFRleHRDb252ZXJ0ZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QseUJBQXlCLEdBQUcsa0JBQWtCO0FBQzlDLHNCQUFzQixtQkFBTyxDQUFDLDhEQUFtQjtBQUNqRCxnQkFBZ0IsbUJBQU8sQ0FBQyx3RUFBbUI7QUFDM0MsY0FBYyxtQkFBTyxDQUFDLHFFQUFpQjtBQUN2QyxzQkFBc0IsbUJBQU8sQ0FBQyxxSEFBb0M7QUFDbEUsNkJBQTZCLG1CQUFPLENBQUMsb0dBQXVCO0FBQzVELGtCQUFrQjtBQUNsQixjQUFjLHdCQUF3QjtBQUN0QyxZQUFZLHVCQUF1QjtBQUNuQyxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isb0JBQW9CO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxJQUFJO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsSUFBSTtBQUNiLGlDQUFpQyw0QkFBNEI7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsWUFBWSxNQUFNLFdBQVc7QUFDOUQsMERBQTBELHdEQUF3RCxHQUFHO0FBQ3JIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCLGlEQUFpRCxZQUFZLE1BQU0sYUFBYSxFQUFFLElBQUk7QUFDdEYsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxrREFBa0QsY0FBYztBQUNoRTtBQUNBO0FBQ0E7QUFDQSw2REFBNkQsUUFBUSx3REFBd0Q7QUFDN0g7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYixvRUFBb0UsUUFBUSxzRkFBc0Y7QUFDbEs7QUFDQSx5Q0FBeUMsWUFBWSxJQUFJLFdBQVcsR0FBRywwRUFBMEU7QUFDako7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2YseUJBQXlCO0FBQ3pCLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlFQUF5RSxnQkFBZ0IsWUFBWSxHQUFHLFVBQVUsNERBQTREO0FBQzlLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0ZBQXNGLCtEQUErRDtBQUNySjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLFlBQVk7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixZQUFZLEtBQUssaUJBQWlCLEdBQUc7QUFDeEQsb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsWUFBWSxLQUFLLGlCQUFpQixHQUFHO0FBQzFELDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBEQUEwRCx1Q0FBdUM7QUFDakc7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLFFBQVEsR0FBRyxNQUFNO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixzQkFBc0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QywrQkFBK0I7QUFDM0UsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSw0QkFBNEIseUJBQXlCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRDtBQUNwRCx5QkFBeUIsZUFBZSw0T0FBNE87QUFDcFI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLHdCQUF3QiwrQkFBK0I7QUFDdkQ7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdEO0FBQ2hELHFCQUFxQixlQUFlLDRPQUE0TztBQUNoUjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixjQUFjO0FBQzlCO0FBQ0EscUJBQXFCLHNDQUFzQztBQUMzRCx3QkFBd0Isa0JBQWtCLG9EQUFvRCxHQUFHO0FBQ2pHLCtDQUErQyxpQ0FBaUM7QUFDaEYsMEJBQTBCLHNCQUFzQjtBQUNoRCx3QkFBd0IsZ0JBQWdCLHFDQUFxQyxLQUFLO0FBQ2xGLDBCQUEwQixrQkFBa0IscUNBQXFDLEtBQUs7QUFDdEYsNkJBQTZCLHFCQUFxQixxQ0FBcUMsS0FBSztBQUM1RiwyQkFBMkIsbUJBQW1CLHFDQUFxQyxLQUFLO0FBQ3hGLHFDQUFxQywwQkFBMEIsSUFBSSw0Q0FBNEM7QUFDL0cscUNBQXFDLDBCQUEwQixJQUFJLDZDQUE2QztBQUNoSCw4QkFBOEIsMEJBQTBCO0FBQ3hELDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEZBQTRGLEtBQUssSUFBSSxPQUFPO0FBQzVHO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvdXRpbHMvUmljaFRleHRDb252ZXJ0ZXIvUmljaFRleHRDb252ZXJ0ZXIuanM/N2Y4YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUmljaFRleHRDb252ZXJ0ZXIgPSBleHBvcnRzLkZvbnRTdHlsZXMgPSB2b2lkIDA7XG5jb25zdCBqc3hfcnVudGltZV8xID0gcmVxdWlyZShcInJlYWN0L2pzeC1ydW50aW1lXCIpO1xuY29uc3QgY29sb3JfMSA9IHJlcXVpcmUoXCJAY250cmwtc2l0ZS9jb2xvclwiKTtcbmNvbnN0IHNka18xID0gcmVxdWlyZShcIkBjbnRybC1zaXRlL3Nka1wiKTtcbmNvbnN0IExpbmtXcmFwcGVyXzEgPSByZXF1aXJlKFwiLi4vLi4vY29tcG9uZW50cy9pdGVtcy9MaW5rV3JhcHBlclwiKTtcbmNvbnN0IGdldEZvbnRGYW1pbHlWYWx1ZV8xID0gcmVxdWlyZShcIi4uL2dldEZvbnRGYW1pbHlWYWx1ZVwiKTtcbmV4cG9ydHMuRm9udFN0eWxlcyA9IHtcbiAgICBub3JtYWw6IHsgJ2ZvbnQtc3R5bGUnOiAnbm9ybWFsJyB9LFxuICAgIGJvbGQ6IHsgJ2ZvbnQtd2VpZ2h0JzogJ2JvbGQnIH0sXG4gICAgaXRhbGljOiB7ICdmb250LXN0eWxlJzogJ2l0YWxpYycgfVxufTtcbmNsYXNzIFJpY2hUZXh0Q29udmVydGVyIHtcbiAgICB0b0h0bWwocmljaFRleHQsIGxheW91dHMpIHtcbiAgICAgICAgdmFyIF9hLCBfYiwgX2M7XG4gICAgICAgIGNvbnN0IHsgdGV4dCwgYmxvY2tzID0gW10gfSA9IHJpY2hUZXh0LmNvbW1vblBhcmFtcztcbiAgICAgICAgY29uc3Qgcm9vdCA9IFtdO1xuICAgICAgICBjb25zdCBzdHlsZVJ1bGVzID0gbGF5b3V0cy5yZWR1Y2UoKHJlYywgbGF5b3V0KSA9PiB7XG4gICAgICAgICAgICByZWNbbGF5b3V0LmlkXSA9IFtdO1xuICAgICAgICAgICAgcmV0dXJuIHJlYztcbiAgICAgICAgfSwge30pO1xuICAgICAgICBjb25zdCBjdXJyZW50TGluZUhlaWdodCA9IGxheW91dHMucmVkdWNlKChyZWMsIGxheW91dCkgPT4ge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgY29uc3Qgc3R5bGVzID0gcmljaFRleHQubGF5b3V0UGFyYW1zW2xheW91dC5pZF0ucmFuZ2VTdHlsZXM7XG4gICAgICAgICAgICByZWNbbGF5b3V0LmlkXSA9IChfYSA9IHN0eWxlcyA9PT0gbnVsbCB8fCBzdHlsZXMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHN0eWxlcy5maW5kKHMgPT4gcy5zdHlsZSA9PT0gJ0xJTkVIRUlHSFQnKSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnZhbHVlO1xuICAgICAgICAgICAgcmV0dXJuIHJlYztcbiAgICAgICAgfSwge30pO1xuICAgICAgICBmb3IgKGxldCBibG9ja0luZGV4ID0gMDsgYmxvY2tJbmRleCA8IGJsb2Nrcy5sZW5ndGg7IGJsb2NrSW5kZXgrKykge1xuICAgICAgICAgICAgY29uc3QgYmxvY2sgPSBibG9ja3NbYmxvY2tJbmRleF07XG4gICAgICAgICAgICBjb25zdCBjb250ZW50ID0gdGV4dC5zbGljZShibG9jay5zdGFydCwgYmxvY2suZW5kICsgMSk7XG4gICAgICAgICAgICBjb25zdCBlbnRpdGllcyA9IChfYSA9IGJsb2NrLmVudGl0aWVzLnNvcnQoKGEsIGIpID0+IGEuc3RhcnQgLSBiLnN0YXJ0KSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogW107XG4gICAgICAgICAgICBpZiAoY29udGVudC5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBpZCA9IGBydF8ke3JpY2hUZXh0LmlkfV9icl8ke2Jsb2NrSW5kZXh9YDtcbiAgICAgICAgICAgICAgICByb290LnB1c2goKDAsIGpzeF9ydW50aW1lXzEuanN4KShcImRpdlwiLCB7IGNsYXNzTmFtZTogaWQsIGNoaWxkcmVuOiAoMCwganN4X3J1bnRpbWVfMS5qc3gpKFwiYnJcIiwge30pIH0sIGlkKSk7XG4gICAgICAgICAgICAgICAgbGF5b3V0cy5mb3JFYWNoKGwgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBsaEZvckxheW91dCA9IGN1cnJlbnRMaW5lSGVpZ2h0W2wuaWRdO1xuICAgICAgICAgICAgICAgICAgICBpZiAobGhGb3JMYXlvdXQgPT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbGggPSBSaWNoVGV4dENvbnZlcnRlci5mcm9tUmFuZ2VTdHlsZXNUb0lubGluZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnTElORUhFSUdIVCcsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogbGhGb3JMYXlvdXRcbiAgICAgICAgICAgICAgICAgICAgfSwgbC5leGVtcGxhcnkpO1xuICAgICAgICAgICAgICAgICAgICBzdHlsZVJ1bGVzW2wuaWRdLnB1c2goYC5ydF8ke3JpY2hUZXh0LmlkfV9icl8ke2Jsb2NrSW5kZXh9IHske2xofX1gKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IG5ld1N0eWxlc0dyb3VwID0gbGF5b3V0cy5tYXAoKHsgaWQ6IGxheW91dElkIH0pID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBwYXJhbXMgPSByaWNoVGV4dC5sYXlvdXRQYXJhbXNbbGF5b3V0SWRdO1xuICAgICAgICAgICAgICAgIGNvbnN0IHN0eWxlcyA9IHBhcmFtcy5yYW5nZVN0eWxlc1xuICAgICAgICAgICAgICAgICAgICAuZmlsdGVyKHMgPT4gcy5zdGFydCA+PSBibG9jay5zdGFydCAmJiBzLmVuZCA8PSBibG9jay5lbmQpXG4gICAgICAgICAgICAgICAgICAgIC5tYXAocyA9PiAoT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBzKSwgeyBzdGFydDogcy5zdGFydCAtIGJsb2NrLnN0YXJ0LCBlbmQ6IHMuZW5kIC0gYmxvY2suc3RhcnQgfSkpKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKHtcbiAgICAgICAgICAgICAgICAgICAgbGF5b3V0OiBsYXlvdXRJZCxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGVzOiB0aGlzLm5vcm1hbGl6ZVN0eWxlcyhzdHlsZXMsIGVudGl0aWVzKVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBjb25zdCBzYW1lTGF5b3V0cyA9IGdyb3VwQnkobmV3U3R5bGVzR3JvdXAsIChpdGVtKSA9PiB7IHZhciBfYTsgcmV0dXJuIHRoaXMuc2VyaWFsaXplUmFuZ2VzKChfYSA9IGl0ZW0uc3R5bGVzKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBbXSk7IH0pO1xuICAgICAgICAgICAgZm9yIChjb25zdCBncm91cCBvZiBPYmplY3QudmFsdWVzKHNhbWVMYXlvdXRzKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGJsb2NrQ2xhc3MgPSBgcnRfJHtyaWNoVGV4dC5pZH0tYiR7YmxvY2tJbmRleH1fJHtsYXlvdXRzLm1hcChsID0+IGdyb3VwLnNvbWUoZyA9PiBnLmxheW91dCA9PT0gbC5pZCkgPyAnMScgOiAnMCcpLmpvaW4oJycpfWA7XG4gICAgICAgICAgICAgICAgY29uc3Qga2lkcyA9IFtdO1xuICAgICAgICAgICAgICAgIGxheW91dHMuZm9yRWFjaChsID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdGEgPSByaWNoVGV4dC5sYXlvdXRQYXJhbXNbbC5pZF0udGV4dEFsaWduO1xuICAgICAgICAgICAgICAgICAgICBzdHlsZVJ1bGVzW2wuaWRdLnB1c2goYFxyXG4gICAgICAgICAgICAuJHtibG9ja0NsYXNzfSB7XHJcbiAgICAgICAgICAgICAgZGlzcGxheTogJHtncm91cC5zb21lKGcgPT4gZy5sYXlvdXQgPT09IGwuaWQpID8gJ2Jsb2NrJyA6ICdub25lJ307XHJcbiAgICAgICAgICAgICAgdGV4dC1hbGlnbjogJHt0YX07XHJcbiAgICAgICAgICAgICAgd2hpdGUtc3BhY2U6IHByZS13cmFwO1xyXG4gICAgICAgICAgICAgIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIGApO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGNvbnN0IGl0ZW0gPSBncm91cFswXTtcbiAgICAgICAgICAgICAgICBjb25zdCBlbnRpdGllc0dyb3VwcyA9IChfYiA9IHRoaXMuZ3JvdXBFbnRpdGllcyhlbnRpdGllcywgaXRlbS5zdHlsZXMpKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBbXTtcbiAgICAgICAgICAgICAgICBsZXQgb2Zmc2V0ID0gMDtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGVudGl0eSBvZiBlbnRpdGllc0dyb3Vwcykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBlbnRpdHlLaWRzID0gW107XG4gICAgICAgICAgICAgICAgICAgIGlmIChvZmZzZXQgPCBlbnRpdHkuc3RhcnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGtpZHMucHVzaChzbGljZVN5bWJvbHMoY29udGVudCwgb2Zmc2V0LCBlbnRpdHkuc3RhcnQpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9mZnNldCA9IGVudGl0eS5zdGFydDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHN0eWxlIG9mIGVudGl0eS5zdHlsZXNHcm91cCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9mZnNldCA8IHN0eWxlLnN0YXJ0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZW50aXR5S2lkcy5wdXNoKHNsaWNlU3ltYm9scyhjb250ZW50LCBvZmZzZXQsIHN0eWxlLnN0YXJ0KSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbnRpdHlLaWRzLnB1c2goKDAsIGpzeF9ydW50aW1lXzEuanN4KShcInNwYW5cIiwgeyBjbGFzc05hbWU6IGBzLSR7c3R5bGUuc3RhcnR9LSR7c3R5bGUuZW5kfWAsIGNoaWxkcmVuOiBzbGljZVN5bWJvbHMoY29udGVudCwgc3R5bGUuc3RhcnQsIHN0eWxlLmVuZCkgfSwgc3R5bGUuc3RhcnQpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9mZnNldCA9IHN0eWxlLmVuZDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAob2Zmc2V0IDwgZW50aXR5LmVuZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZW50aXR5S2lkcy5wdXNoKHNsaWNlU3ltYm9scyhjb250ZW50LCBvZmZzZXQsIGVudGl0eS5lbmQpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9mZnNldCA9IGVudGl0eS5lbmQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKGVudGl0eS5saW5rKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBraWRzLnB1c2goKDAsIGpzeF9ydW50aW1lXzEuanN4KShMaW5rV3JhcHBlcl8xLkxpbmtXcmFwcGVyLCB7IHVybDogZW50aXR5LmxpbmssIHRhcmdldDogZW50aXR5LnRhcmdldCwgY2hpbGRyZW46IGVudGl0eUtpZHMgfSwgZW50aXR5LnN0YXJ0KSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBraWRzLnB1c2goLi4uZW50aXR5S2lkcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChvZmZzZXQgPCBnZXRTeW1ib2xzQ291bnQoY29udGVudCkpIHtcbiAgICAgICAgICAgICAgICAgICAga2lkcy5wdXNoKHNsaWNlU3ltYm9scyhjb250ZW50LCBvZmZzZXQpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBpdGVtIG9mIGdyb3VwKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgZXhlbXBsYXJ5IH0gPSBsYXlvdXRzLmZpbmQobCA9PiBsLmlkID09PSBpdGVtLmxheW91dCk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGVudGl0aWVzR3JvdXBzID0gKF9jID0gdGhpcy5ncm91cEVudGl0aWVzKGVudGl0aWVzLCBpdGVtLnN0eWxlcykpICE9PSBudWxsICYmIF9jICE9PSB2b2lkIDAgPyBfYyA6IFtdO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGVudGl0aWVzR3JvdXAgb2YgZW50aXRpZXNHcm91cHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghZW50aXRpZXNHcm91cC5zdHlsZXNHcm91cClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3Qgc3R5bGVHcm91cCBvZiBlbnRpdGllc0dyb3VwLnN0eWxlc0dyb3VwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbGluZUhlaWdodCA9IHN0eWxlR3JvdXAuc3R5bGVzLmZpbmQocyA9PiBzLm5hbWUgPT09ICdMSU5FSEVJR0hUJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY29sb3IgPSBzdHlsZUdyb3VwLnN0eWxlcy5maW5kKHMgPT4gcy5uYW1lID09PSAnQ09MT1InKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobGluZUhlaWdodCA9PT0gbnVsbCB8fCBsaW5lSGVpZ2h0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBsaW5lSGVpZ2h0LnZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRMaW5lSGVpZ2h0W2l0ZW0ubGF5b3V0XSA9IGxpbmVIZWlnaHQudmFsdWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlUnVsZXNbaXRlbS5sYXlvdXRdLnB1c2goYFxyXG4gICAgICAgICAgICAgICAgLiR7YmxvY2tDbGFzc30gLnMtJHtzdHlsZUdyb3VwLnN0YXJ0fS0ke3N0eWxlR3JvdXAuZW5kfSB7XHJcbiAgICAgICAgICAgICAgICAgICR7c3R5bGVHcm91cC5zdHlsZXMubWFwKHMgPT4gUmljaFRleHRDb252ZXJ0ZXIuZnJvbVJhbmdlU3R5bGVzVG9JbmxpbmUocywgZXhlbXBsYXJ5KSkuam9pbignXFxuJyl9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgYCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNvbG9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlUnVsZXNbaXRlbS5sYXlvdXRdLnB1c2goYFxyXG4gICAgICAgICAgICAgICAgQHN1cHBvcnRzIG5vdCAoY29sb3I6IG9rbGNoKDQyJSAwLjMgOTAgLyAxKSkge1xyXG4gICAgICAgICAgICAgICAgICAuJHtibG9ja0NsYXNzfSAucy0ke3N0eWxlR3JvdXAuc3RhcnR9LSR7c3R5bGVHcm91cC5lbmR9IHtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJHtjb2xvcl8xLkNudHJsQ29sb3IucGFyc2UoZ2V0UmVzb2x2ZWRWYWx1ZShjb2xvci52YWx1ZSwgJ0NPTE9SJykpLmZtdCgncmdiYScpfTtcclxuICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIGApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByb290LnB1c2goKDAsIGpzeF9ydW50aW1lXzEuanN4KShcImRpdlwiLCB7IGNsYXNzTmFtZTogYmxvY2tDbGFzcywgY2hpbGRyZW46IGtpZHMgfSwgYmxvY2tDbGFzcykpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHN0eWxlcyA9IGxheW91dHMubWFwKGwgPT4gYFxyXG4gICAgICAkeygwLCBzZGtfMS5nZXRMYXlvdXRNZWRpYVF1ZXJ5KShsLmlkLCBsYXlvdXRzKX0ge1xyXG4gICAgICAgICR7c3R5bGVSdWxlc1tsLmlkXS5qb2luKCdcXG4nKX1cclxuICAgICAgfVxyXG4gICAgYCkuam9pbignXFxuJyk7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICByb290LFxuICAgICAgICAgICAgc3R5bGVzXG4gICAgICAgIF07XG4gICAgfVxuICAgIHNlcmlhbGl6ZVJhbmdlcyhyYW5nZXMpIHtcbiAgICAgICAgcmV0dXJuIHJhbmdlcy5tYXAociA9PiBgJHtyLnN0YXJ0fSwke3IuZW5kfWApLmpvaW4oJyAnKTtcbiAgICB9XG4gICAgbm9ybWFsaXplU3R5bGVzKHN0eWxlcywgZW50aXRpZXMpIHtcbiAgICAgICAgY29uc3Qgc3R5bGVHcm91cHMgPSBbXTtcbiAgICAgICAgY29uc3QgZGl2aWRlcnMgPSBbLi4uc3R5bGVzLCAuLi5lbnRpdGllc10ucmVkdWNlKChkcywgcykgPT4ge1xuICAgICAgICAgICAgZHMuYWRkKHMuc3RhcnQpO1xuICAgICAgICAgICAgZHMuYWRkKHMuZW5kKTtcbiAgICAgICAgICAgIHJldHVybiBkcztcbiAgICAgICAgfSwgbmV3IFNldCgpKTtcbiAgICAgICAgaWYgKGRpdmlkZXJzLnNpemUgPT09IDApXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IGVkZ2VzID0gQXJyYXkuZnJvbShkaXZpZGVycykuc29ydCgoYSwgYikgPT4gYSAtIGIpO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGVkZ2VzLmxlbmd0aCAtIDE7IGkgKz0gMSkge1xuICAgICAgICAgICAgY29uc3Qgc3RhcnQgPSBlZGdlc1tpXTtcbiAgICAgICAgICAgIGNvbnN0IGVuZCA9IGVkZ2VzW2kgKyAxXTtcbiAgICAgICAgICAgIGNvbnN0IGFwcGxpZWQgPSBzdHlsZXMuZmlsdGVyKHMgPT4gTWF0aC5tYXgocy5zdGFydCwgc3RhcnQpIDwgTWF0aC5taW4ocy5lbmQsIGVuZCkpO1xuICAgICAgICAgICAgaWYgKGFwcGxpZWQubGVuZ3RoID09PSAwKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgc3R5bGVHcm91cHMucHVzaCh7XG4gICAgICAgICAgICAgICAgc3RhcnQsXG4gICAgICAgICAgICAgICAgZW5kLFxuICAgICAgICAgICAgICAgIHN0eWxlczogYXBwbGllZC5tYXAocyA9PiAoeyBuYW1lOiBzLnN0eWxlLCB2YWx1ZTogcy52YWx1ZSB9KSlcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzdHlsZUdyb3VwcztcbiAgICB9XG4gICAgZ3JvdXBFbnRpdGllcyhlbnRpdGllcywgc3R5bGVHcm91cHMpIHtcbiAgICAgICAgdmFyIF9hLCBfYiwgX2MsIF9kLCBfZSwgX2YsIF9nLCBfaDtcbiAgICAgICAgY29uc3QgZW50aXRpZXNHcm91cHMgPSBbXTtcbiAgICAgICAgaWYgKCFlbnRpdGllcy5sZW5ndGggJiYgIXN0eWxlR3JvdXBzKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBpZiAoIXN0eWxlR3JvdXBzIHx8IHN0eWxlR3JvdXBzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgY29uc3QgZGl2aWRlcnNTZXQgPSBlbnRpdGllcy5yZWR1Y2UoKGRzLCBlKSA9PiB7XG4gICAgICAgICAgICAgICAgLy8gc29tZSBlbnRpdGllcyBtYXkgaGF2ZSBubyBkYXRhLCBuZWVkIHRvIGZpbHRlciB0aGVtIG91dFxuICAgICAgICAgICAgICAgIC8vIChjYXNlIHdpdGggZGVsZXRpbmcgYSBzZWN0aW9uL3BhZ2UgdGhhdCB3YXMgbGlua2VkIHRvKVxuICAgICAgICAgICAgICAgIGlmICghZS5oYXNPd25Qcm9wZXJ0eSgnZGF0YScpKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZHM7XG4gICAgICAgICAgICAgICAgZHMuYWRkKGUuc3RhcnQpO1xuICAgICAgICAgICAgICAgIGRzLmFkZChlLmVuZCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRzO1xuICAgICAgICAgICAgfSwgbmV3IFNldChbZW50aXRpZXNbMF0uc3RhcnQsIGVudGl0aWVzW2VudGl0aWVzLmxlbmd0aCAtIDFdLmVuZF0pKTtcbiAgICAgICAgICAgIGNvbnN0IGRpdmlkZXJzID0gQXJyYXkuZnJvbShkaXZpZGVyc1NldCkuc29ydCgoYSwgYikgPT4gYSAtIGIpO1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkaXZpZGVycy5sZW5ndGggLSAxOyBpICs9IDEpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBzdGFydCA9IGRpdmlkZXJzW2ldO1xuICAgICAgICAgICAgICAgIGNvbnN0IGVuZCA9IGRpdmlkZXJzW2kgKyAxXTtcbiAgICAgICAgICAgICAgICBjb25zdCBlbnRpdHkgPSBlbnRpdGllcy5maW5kKGUgPT4gZS5zdGFydCA9PT0gc3RhcnQpO1xuICAgICAgICAgICAgICAgIGVudGl0aWVzR3JvdXBzLnB1c2goT2JqZWN0LmFzc2lnbih7IHN0eWxlc0dyb3VwOiBbXSwgc3RhcnQsXG4gICAgICAgICAgICAgICAgICAgIGVuZCB9LCAoZW50aXR5ICYmIHsgbGluazogKF9iID0gKF9hID0gZW50aXR5LmRhdGEpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS51cmwpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6ICcnLCB0YXJnZXQ6IChfZCA9IChfYyA9IGVudGl0eS5kYXRhKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MudGFyZ2V0KSAhPT0gbnVsbCAmJiBfZCAhPT0gdm9pZCAwID8gX2QgOiAnX3NlbGYnIH0pKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZW50aXRpZXNHcm91cHM7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGVudGl0aWVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgZW50aXRpZXNHcm91cHMucHVzaCh7XG4gICAgICAgICAgICAgICAgc3R5bGVzR3JvdXA6IHN0eWxlR3JvdXBzLFxuICAgICAgICAgICAgICAgIHN0YXJ0OiBzdHlsZUdyb3Vwc1swXS5zdGFydCxcbiAgICAgICAgICAgICAgICBlbmQ6IHN0eWxlR3JvdXBzW3N0eWxlR3JvdXBzLmxlbmd0aCAtIDFdLmVuZFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gZW50aXRpZXNHcm91cHM7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc3RhcnQgPSBlbnRpdGllc1swXS5zdGFydCA8IHN0eWxlR3JvdXBzWzBdLnN0YXJ0ID8gZW50aXRpZXNbMF0uc3RhcnQgOiBzdHlsZUdyb3Vwc1swXS5zdGFydDtcbiAgICAgICAgY29uc3QgZW5kID0gZW50aXRpZXNbZW50aXRpZXMubGVuZ3RoIC0gMV0uZW5kID4gc3R5bGVHcm91cHNbc3R5bGVHcm91cHMubGVuZ3RoIC0gMV0uZW5kID8gZW50aXRpZXNbZW50aXRpZXMubGVuZ3RoIC0gMV0uZW5kIDogc3R5bGVHcm91cHNbc3R5bGVHcm91cHMubGVuZ3RoIC0gMV0uZW5kO1xuICAgICAgICBjb25zdCBlbnRpdGllc0RpdmlkZXJzID0gZW50aXRpZXMucmVkdWNlKChkcywgZSkgPT4ge1xuICAgICAgICAgICAgaWYgKCFlLmhhc093blByb3BlcnR5KCdkYXRhJykpXG4gICAgICAgICAgICAgICAgcmV0dXJuIGRzO1xuICAgICAgICAgICAgZHMuYWRkKGUuc3RhcnQpO1xuICAgICAgICAgICAgZHMuYWRkKGUuZW5kKTtcbiAgICAgICAgICAgIHJldHVybiBkcztcbiAgICAgICAgfSwgbmV3IFNldChbc3RhcnQsIGVuZF0pKTtcbiAgICAgICAgY29uc3QgZW50aXR5RGl2aWRlcnMgPSBBcnJheS5mcm9tKGVudGl0aWVzRGl2aWRlcnMpLnNvcnQoKGEsIGIpID0+IGEgLSBiKTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBlbnRpdHlEaXZpZGVycy5sZW5ndGggLSAxOyBpICs9IDEpIHtcbiAgICAgICAgICAgIGNvbnN0IHN0YXJ0ID0gZW50aXR5RGl2aWRlcnNbaV07XG4gICAgICAgICAgICBjb25zdCBlbmQgPSBlbnRpdHlEaXZpZGVyc1tpICsgMV07XG4gICAgICAgICAgICBjb25zdCBlbnRpdHkgPSBlbnRpdGllcy5maW5kKGUgPT4gZS5zdGFydCA9PT0gc3RhcnQpO1xuICAgICAgICAgICAgZW50aXRpZXNHcm91cHMucHVzaChPYmplY3QuYXNzaWduKHsgc3R5bGVzR3JvdXA6IHN0eWxlR3JvdXBzLmZpbHRlcihzID0+IHMuc3RhcnQgPj0gc3RhcnQgJiYgcy5lbmQgPD0gZW5kKSwgc3RhcnQsXG4gICAgICAgICAgICAgICAgZW5kIH0sIChlbnRpdHkgJiYgeyBsaW5rOiAoX2YgPSAoX2UgPSBlbnRpdHkuZGF0YSkgPT09IG51bGwgfHwgX2UgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9lLnVybCkgIT09IG51bGwgJiYgX2YgIT09IHZvaWQgMCA/IF9mIDogJycsIHRhcmdldDogKF9oID0gKF9nID0gZW50aXR5LmRhdGEpID09PSBudWxsIHx8IF9nID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZy50YXJnZXQpICE9PSBudWxsICYmIF9oICE9PSB2b2lkIDAgPyBfaCA6ICdfc2VsZicgfSkpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZW50aXRpZXNHcm91cHM7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tUmFuZ2VTdHlsZXNUb0lubGluZShkcmFmdFN0eWxlLCBleGVtcGxhcnkpIHtcbiAgICAgICAgY29uc3QgeyB2YWx1ZSwgbmFtZSB9ID0gZHJhZnRTdHlsZTtcbiAgICAgICAgY29uc3QgbWFwID0ge1xuICAgICAgICAgICAgQ09MT1I6IHsgY29sb3I6IGdldFJlc29sdmVkVmFsdWUodmFsdWUsIG5hbWUpIH0sXG4gICAgICAgICAgICBUWVBFRkFDRTogeyAnZm9udC1mYW1pbHknOiBgJHsoMCwgZ2V0Rm9udEZhbWlseVZhbHVlXzEuZ2V0Rm9udEZhbWlseVZhbHVlKSh2YWx1ZSl9YCB9LFxuICAgICAgICAgICAgRk9OVFNUWUxFOiB2YWx1ZSA/IE9iamVjdC5hc3NpZ24oe30sIGV4cG9ydHMuRm9udFN0eWxlc1t2YWx1ZV0pIDoge30sXG4gICAgICAgICAgICBGT05UV0VJR0hUOiB7ICdmb250LXdlaWdodCc6IHZhbHVlIH0sXG4gICAgICAgICAgICBGT05UU0laRTogeyAnZm9udC1zaXplJzogYCR7TnVtYmVyLnBhcnNlRmxvYXQodmFsdWUpICogZXhlbXBsYXJ5fXB4YCB9LFxuICAgICAgICAgICAgTElORUhFSUdIVDogeyAnbGluZS1oZWlnaHQnOiBgJHtOdW1iZXIucGFyc2VGbG9hdCh2YWx1ZSkgKiBleGVtcGxhcnl9cHhgIH0sXG4gICAgICAgICAgICBMRVRURVJTUEFDSU5HOiB7ICdsZXR0ZXItc3BhY2luZyc6IGAke051bWJlci5wYXJzZUZsb2F0KHZhbHVlKSAqIGV4ZW1wbGFyeX1weGAgfSxcbiAgICAgICAgICAgIFdPUkRTUEFDSU5HOiB7ICd3b3JkLXNwYWNpbmcnOiBgJHtOdW1iZXIucGFyc2VGbG9hdCh2YWx1ZSkgKiBleGVtcGxhcnl9cHhgIH0sXG4gICAgICAgICAgICBURVhUVFJBTlNGT1JNOiB2YWx1ZSA/IHsgJ3RleHQtdHJhbnNmb3JtJzogdmFsdWUgfSA6IHsgJ3RleHQtdHJhbnNmb3JtJzogc2RrXzEuVGV4dFRyYW5zZm9ybS5Ob25lIH0sXG4gICAgICAgICAgICBWRVJUSUNBTEFMSUdOOiB2YWx1ZSA/IHsgJ3ZlcnRpY2FsLWFsaWduJzogdmFsdWUgfSA6IHsgJ3ZlcnRpY2FsLWFsaWduJzogc2RrXzEuVmVydGljYWxBbGlnbi5VbnNldCB9LFxuICAgICAgICAgICAgVEVYVERFQ09SQVRJT046IHsgJ3RleHQtZGVjb3JhdGlvbic6IHZhbHVlIH0sXG4gICAgICAgICAgICBGT05UVkFSSUFOVDogeyAnZm9udC12YXJpYW50JzogdmFsdWUgfVxuICAgICAgICB9O1xuICAgICAgICBjb25zdCBjc3MgPSBtYXBbbmFtZV07XG4gICAgICAgIGlmICghY3NzKSB7XG4gICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIE9iamVjdC5lbnRyaWVzKGNzcykuZmlsdGVyKChbLCB2YWx1ZV0pID0+ICEhdmFsdWUpLm1hcCgoW3Byb3AsIHZhbHVlXSkgPT4gYCR7cHJvcH06ICR7dmFsdWV9O2ApLmpvaW4oJ1xcbicpO1xuICAgIH1cbn1cbmV4cG9ydHMuUmljaFRleHRDb252ZXJ0ZXIgPSBSaWNoVGV4dENvbnZlcnRlcjtcbmZ1bmN0aW9uIGdyb3VwQnkoaXRlbXMsIGdldEtleSkge1xuICAgIGNvbnN0IGdyb3VwcyA9IHt9O1xuICAgIGZvciAoY29uc3QgaXRlbSBvZiBpdGVtcykge1xuICAgICAgICBjb25zdCBrZXkgPSBnZXRLZXkoaXRlbSk7XG4gICAgICAgIGlmICghZ3JvdXBzW2tleV0pIHtcbiAgICAgICAgICAgIGdyb3Vwc1trZXldID0gW107XG4gICAgICAgIH1cbiAgICAgICAgZ3JvdXBzW2tleV0ucHVzaChpdGVtKTtcbiAgICB9XG4gICAgcmV0dXJuIGdyb3Vwcztcbn1cbmZ1bmN0aW9uIGdldFJlc29sdmVkVmFsdWUodmFsdWUsIG5hbWUpIHtcbiAgICBpZiAobmFtZSAhPT0gJ0NPTE9SJylcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIHJldHVybiB2YWx1ZSA/IGNvbG9yXzEuQ250cmxDb2xvci5wYXJzZSh2YWx1ZSkudG9Dc3MoKSA6IHZhbHVlO1xufVxuZnVuY3Rpb24gc2xpY2VTeW1ib2xzKHRleHQsIHN0YXJ0LCBlbmQgPSBOdW1iZXIuTmFOKSB7XG4gICAgbGV0IHN0YXJ0T2Zmc2V0ID0gTnVtYmVyLk5hTjtcbiAgICBsZXQgZW5kT2Zmc2V0ID0gMDtcbiAgICBsZXQgY291bnQgPSAtMTtcbiAgICBmb3IgKGNvbnN0IGNoIG9mIHRleHQpIHtcbiAgICAgICAgY291bnQgKz0gMTtcbiAgICAgICAgaWYgKGNvdW50ID09PSBzdGFydCkge1xuICAgICAgICAgICAgc3RhcnRPZmZzZXQgPSBlbmRPZmZzZXQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNvdW50ID09PSBlbmQpXG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgZW5kT2Zmc2V0ICs9IGNoLmxlbmd0aDtcbiAgICB9XG4gICAgaWYgKGlzTmFOKHN0YXJ0T2Zmc2V0KSlcbiAgICAgICAgcmV0dXJuICcnO1xuICAgIHJldHVybiB0ZXh0LnNsaWNlKHN0YXJ0T2Zmc2V0LCBlbmRPZmZzZXQpO1xufVxuZnVuY3Rpb24gZ2V0U3ltYm9sc0NvdW50KGlucHV0KSB7XG4gICAgbGV0IGNvdW50ID0gMDtcbiAgICBsZXQgY2g7XG4gICAgZm9yIChjaCBvZiBpbnB1dCkge1xuICAgICAgICBjb3VudCArPSAxO1xuICAgIH1cbiAgICByZXR1cm4gY291bnQ7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/utils/RichTextConverter/RichTextConverter.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/utils/ScaleAnchorMap.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/utils/ScaleAnchorMap.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ScaleAnchorMap = void 0;\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nexports.ScaleAnchorMap = {\n    [sdk_1.AreaAnchor.TopLeft]: 'top left',\n    [sdk_1.AreaAnchor.TopCenter]: 'top center',\n    [sdk_1.AreaAnchor.TopRight]: 'top right',\n    [sdk_1.AreaAnchor.MiddleLeft]: 'center left',\n    [sdk_1.AreaAnchor.MiddleCenter]: 'center',\n    [sdk_1.AreaAnchor.MiddleRight]: 'center right',\n    [sdk_1.AreaAnchor.BottomLeft]: 'bottom left',\n    [sdk_1.AreaAnchor.BottomCenter]: 'bottom center',\n    [sdk_1.AreaAnchor.BottomRight]: 'bottom right'\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvdXRpbHMvU2NhbGVBbmNob3JNYXAuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCLGNBQWMsbUJBQU8sQ0FBQyxxRUFBaUI7QUFDdkMsc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi91dGlscy9TY2FsZUFuY2hvck1hcC5qcz8wZDY3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TY2FsZUFuY2hvck1hcCA9IHZvaWQgMDtcbmNvbnN0IHNka18xID0gcmVxdWlyZShcIkBjbnRybC1zaXRlL3Nka1wiKTtcbmV4cG9ydHMuU2NhbGVBbmNob3JNYXAgPSB7XG4gICAgW3Nka18xLkFyZWFBbmNob3IuVG9wTGVmdF06ICd0b3AgbGVmdCcsXG4gICAgW3Nka18xLkFyZWFBbmNob3IuVG9wQ2VudGVyXTogJ3RvcCBjZW50ZXInLFxuICAgIFtzZGtfMS5BcmVhQW5jaG9yLlRvcFJpZ2h0XTogJ3RvcCByaWdodCcsXG4gICAgW3Nka18xLkFyZWFBbmNob3IuTWlkZGxlTGVmdF06ICdjZW50ZXIgbGVmdCcsXG4gICAgW3Nka18xLkFyZWFBbmNob3IuTWlkZGxlQ2VudGVyXTogJ2NlbnRlcicsXG4gICAgW3Nka18xLkFyZWFBbmNob3IuTWlkZGxlUmlnaHRdOiAnY2VudGVyIHJpZ2h0JyxcbiAgICBbc2RrXzEuQXJlYUFuY2hvci5Cb3R0b21MZWZ0XTogJ2JvdHRvbSBsZWZ0JyxcbiAgICBbc2RrXzEuQXJlYUFuY2hvci5Cb3R0b21DZW50ZXJdOiAnYm90dG9tIGNlbnRlcicsXG4gICAgW3Nka18xLkFyZWFBbmNob3IuQm90dG9tUmlnaHRdOiAnYm90dG9tIHJpZ2h0J1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/utils/ScaleAnchorMap.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/utils/Youtube/YouTubeIframeApiLoader.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/utils/Youtube/YouTubeIframeApiLoader.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.captureStackTrace = exports.YouTubeIframeApiLoader = void 0;\nconst YT_IFRAME_API_URL = 'https://www.youtube.com/iframe_api';\nclass YouTubeIframeApiLoader {\n    static create() {\n        if (!YouTubeIframeApiLoader.instance) {\n            YouTubeIframeApiLoader.instance = new YouTubeIframeApiLoader();\n        }\n        return YouTubeIframeApiLoader.instance;\n    }\n    constructor() {\n        this.loadingPromise = this.loadApi();\n    }\n    getApi() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.loadingPromise;\n            if (!window.YT) {\n                throw new Error('YouTube IFrame API is not loaded');\n            }\n            return window.YT;\n        });\n    }\n    loadApi() {\n        return new Promise((resolve, reject) => {\n            const script = document.createElement('script');\n            script.src = YT_IFRAME_API_URL;\n            const loadError = new Error('YouTube IFrame API loading failed');\n            captureStackTrace(loadError);\n            script.addEventListener('abort', () => {\n                reject(loadError);\n            });\n            script.addEventListener('error', () => {\n                reject(loadError);\n            });\n            window.onYouTubeIframeAPIReady = () => {\n                window.onYouTubeIframeAPIReady = undefined;\n                resolve();\n            };\n            document.head.appendChild(script);\n        });\n    }\n}\nexports.YouTubeIframeApiLoader = YouTubeIframeApiLoader;\nfunction captureStackTrace(error) {\n    if (typeof Error.captureStackTrace === 'function') {\n        Error.captureStackTrace(error);\n        return;\n    }\n    try {\n        throw error;\n    }\n    catch (errWithStack) { }\n}\nexports.captureStackTrace = captureStackTrace;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvdXRpbHMvWW91dHViZS9Zb3VUdWJlSWZyYW1lQXBpTG9hZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUIsR0FBRyw4QkFBOEI7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvdXRpbHMvWW91dHViZS9Zb3VUdWJlSWZyYW1lQXBpTG9hZGVyLmpzP2NhODciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY2FwdHVyZVN0YWNrVHJhY2UgPSBleHBvcnRzLllvdVR1YmVJZnJhbWVBcGlMb2FkZXIgPSB2b2lkIDA7XG5jb25zdCBZVF9JRlJBTUVfQVBJX1VSTCA9ICdodHRwczovL3d3dy55b3V0dWJlLmNvbS9pZnJhbWVfYXBpJztcbmNsYXNzIFlvdVR1YmVJZnJhbWVBcGlMb2FkZXIge1xuICAgIHN0YXRpYyBjcmVhdGUoKSB7XG4gICAgICAgIGlmICghWW91VHViZUlmcmFtZUFwaUxvYWRlci5pbnN0YW5jZSkge1xuICAgICAgICAgICAgWW91VHViZUlmcmFtZUFwaUxvYWRlci5pbnN0YW5jZSA9IG5ldyBZb3VUdWJlSWZyYW1lQXBpTG9hZGVyKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFlvdVR1YmVJZnJhbWVBcGlMb2FkZXIuaW5zdGFuY2U7XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmxvYWRpbmdQcm9taXNlID0gdGhpcy5sb2FkQXBpKCk7XG4gICAgfVxuICAgIGdldEFwaSgpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHlpZWxkIHRoaXMubG9hZGluZ1Byb21pc2U7XG4gICAgICAgICAgICBpZiAoIXdpbmRvdy5ZVCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignWW91VHViZSBJRnJhbWUgQVBJIGlzIG5vdCBsb2FkZWQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB3aW5kb3cuWVQ7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBsb2FkQXBpKCkge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgY29uc3Qgc2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XG4gICAgICAgICAgICBzY3JpcHQuc3JjID0gWVRfSUZSQU1FX0FQSV9VUkw7XG4gICAgICAgICAgICBjb25zdCBsb2FkRXJyb3IgPSBuZXcgRXJyb3IoJ1lvdVR1YmUgSUZyYW1lIEFQSSBsb2FkaW5nIGZhaWxlZCcpO1xuICAgICAgICAgICAgY2FwdHVyZVN0YWNrVHJhY2UobG9hZEVycm9yKTtcbiAgICAgICAgICAgIHNjcmlwdC5hZGRFdmVudExpc3RlbmVyKCdhYm9ydCcsICgpID0+IHtcbiAgICAgICAgICAgICAgICByZWplY3QobG9hZEVycm9yKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgc2NyaXB0LmFkZEV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHJlamVjdChsb2FkRXJyb3IpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB3aW5kb3cub25Zb3VUdWJlSWZyYW1lQVBJUmVhZHkgPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgd2luZG93Lm9uWW91VHViZUlmcmFtZUFQSVJlYWR5ID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHNjcmlwdCk7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuWW91VHViZUlmcmFtZUFwaUxvYWRlciA9IFlvdVR1YmVJZnJhbWVBcGlMb2FkZXI7XG5mdW5jdGlvbiBjYXB0dXJlU3RhY2tUcmFjZShlcnJvcikge1xuICAgIGlmICh0eXBlb2YgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UoZXJyb3IpO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyV2l0aFN0YWNrKSB7IH1cbn1cbmV4cG9ydHMuY2FwdHVyZVN0YWNrVHJhY2UgPSBjYXB0dXJlU3RhY2tUcmFjZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/utils/Youtube/YouTubeIframeApiLoader.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/utils/Youtube/useYouTubeIframeApi.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/utils/Youtube/useYouTubeIframeApi.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useYouTubeIframeApi = void 0;\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst YouTubeIframeApiLoader_1 = __webpack_require__(/*! ./YouTubeIframeApiLoader */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/Youtube/YouTubeIframeApiLoader.js\");\nfunction useYouTubeIframeApi() {\n    const [YT, setYT] = (0, react_1.useState)(undefined);\n    (0, react_1.useEffect)(() => {\n        const loader = YouTubeIframeApiLoader_1.YouTubeIframeApiLoader.create();\n        loader.getApi().then((YT) => setYT(YT));\n    }, []);\n    return YT;\n}\nexports.useYouTubeIframeApi = useYouTubeIframeApi;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvdXRpbHMvWW91dHViZS91c2VZb3VUdWJlSWZyYW1lQXBpLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQjtBQUMzQixnQkFBZ0IsbUJBQU8sQ0FBQyw0Q0FBTztBQUMvQixpQ0FBaUMsbUJBQU8sQ0FBQyxtSEFBMEI7QUFDbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsMkJBQTJCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi91dGlscy9Zb3V0dWJlL3VzZVlvdVR1YmVJZnJhbWVBcGkuanM/Zjg4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudXNlWW91VHViZUlmcmFtZUFwaSA9IHZvaWQgMDtcbmNvbnN0IHJlYWN0XzEgPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCBZb3VUdWJlSWZyYW1lQXBpTG9hZGVyXzEgPSByZXF1aXJlKFwiLi9Zb3VUdWJlSWZyYW1lQXBpTG9hZGVyXCIpO1xuZnVuY3Rpb24gdXNlWW91VHViZUlmcmFtZUFwaSgpIHtcbiAgICBjb25zdCBbWVQsIHNldFlUXSA9ICgwLCByZWFjdF8xLnVzZVN0YXRlKSh1bmRlZmluZWQpO1xuICAgICgwLCByZWFjdF8xLnVzZUVmZmVjdCkoKCkgPT4ge1xuICAgICAgICBjb25zdCBsb2FkZXIgPSBZb3VUdWJlSWZyYW1lQXBpTG9hZGVyXzEuWW91VHViZUlmcmFtZUFwaUxvYWRlci5jcmVhdGUoKTtcbiAgICAgICAgbG9hZGVyLmdldEFwaSgpLnRoZW4oKFlUKSA9PiBzZXRZVChZVCkpO1xuICAgIH0sIFtdKTtcbiAgICByZXR1cm4gWVQ7XG59XG5leHBvcnRzLnVzZVlvdVR1YmVJZnJhbWVBcGkgPSB1c2VZb3VUdWJlSWZyYW1lQXBpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/utils/Youtube/useYouTubeIframeApi.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/utils/binSearchInsertAt.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/utils/binSearchInsertAt.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createInsert = exports.binSearchInsertAt = void 0;\nfunction binSearchInsertAt(list, item, compare) {\n    switch (list.length) {\n        case 0: return 0;\n        case 1: return compare(item, list[0]) < 0 ? 0 : 1;\n    }\n    let start = 0;\n    let end = list.length;\n    let pivot;\n    let cmpResult;\n    while (start < end) {\n        pivot = start + Math.floor((end - start) / 2);\n        cmpResult = compare(item, list[pivot]);\n        if (cmpResult === 0)\n            return pivot + 1;\n        if (cmpResult < 0) {\n            end = pivot;\n        }\n        if (cmpResult > 0) {\n            start = pivot + 1;\n        }\n    }\n    if (start >= list.length)\n        return list.length;\n    return compare(item, list[start]) < 0 ? start : start + 1;\n}\nexports.binSearchInsertAt = binSearchInsertAt;\nfunction createInsert(start, compare) {\n    return (list, item) => {\n        const pos = start(list, item, compare);\n        list.splice(pos, 0, item);\n    };\n}\nexports.createInsert = createInsert;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvdXRpbHMvYmluU2VhcmNoSW5zZXJ0QXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CLEdBQUcseUJBQXlCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvdXRpbHMvYmluU2VhcmNoSW5zZXJ0QXQuanM/MTg1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlSW5zZXJ0ID0gZXhwb3J0cy5iaW5TZWFyY2hJbnNlcnRBdCA9IHZvaWQgMDtcbmZ1bmN0aW9uIGJpblNlYXJjaEluc2VydEF0KGxpc3QsIGl0ZW0sIGNvbXBhcmUpIHtcbiAgICBzd2l0Y2ggKGxpc3QubGVuZ3RoKSB7XG4gICAgICAgIGNhc2UgMDogcmV0dXJuIDA7XG4gICAgICAgIGNhc2UgMTogcmV0dXJuIGNvbXBhcmUoaXRlbSwgbGlzdFswXSkgPCAwID8gMCA6IDE7XG4gICAgfVxuICAgIGxldCBzdGFydCA9IDA7XG4gICAgbGV0IGVuZCA9IGxpc3QubGVuZ3RoO1xuICAgIGxldCBwaXZvdDtcbiAgICBsZXQgY21wUmVzdWx0O1xuICAgIHdoaWxlIChzdGFydCA8IGVuZCkge1xuICAgICAgICBwaXZvdCA9IHN0YXJ0ICsgTWF0aC5mbG9vcigoZW5kIC0gc3RhcnQpIC8gMik7XG4gICAgICAgIGNtcFJlc3VsdCA9IGNvbXBhcmUoaXRlbSwgbGlzdFtwaXZvdF0pO1xuICAgICAgICBpZiAoY21wUmVzdWx0ID09PSAwKVxuICAgICAgICAgICAgcmV0dXJuIHBpdm90ICsgMTtcbiAgICAgICAgaWYgKGNtcFJlc3VsdCA8IDApIHtcbiAgICAgICAgICAgIGVuZCA9IHBpdm90O1xuICAgICAgICB9XG4gICAgICAgIGlmIChjbXBSZXN1bHQgPiAwKSB7XG4gICAgICAgICAgICBzdGFydCA9IHBpdm90ICsgMTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoc3RhcnQgPj0gbGlzdC5sZW5ndGgpXG4gICAgICAgIHJldHVybiBsaXN0Lmxlbmd0aDtcbiAgICByZXR1cm4gY29tcGFyZShpdGVtLCBsaXN0W3N0YXJ0XSkgPCAwID8gc3RhcnQgOiBzdGFydCArIDE7XG59XG5leHBvcnRzLmJpblNlYXJjaEluc2VydEF0ID0gYmluU2VhcmNoSW5zZXJ0QXQ7XG5mdW5jdGlvbiBjcmVhdGVJbnNlcnQoc3RhcnQsIGNvbXBhcmUpIHtcbiAgICByZXR1cm4gKGxpc3QsIGl0ZW0pID0+IHtcbiAgICAgICAgY29uc3QgcG9zID0gc3RhcnQobGlzdCwgaXRlbSwgY29tcGFyZSk7XG4gICAgICAgIGxpc3Quc3BsaWNlKHBvcywgMCwgaXRlbSk7XG4gICAgfTtcbn1cbmV4cG9ydHMuY3JlYXRlSW5zZXJ0ID0gY3JlYXRlSW5zZXJ0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/utils/binSearchInsertAt.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/utils/effects/useImageFx.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/utils/effects/useImageFx.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useImageFx = void 0;\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst effects_1 = __webpack_require__(/*! @cntrl-site/effects */ \"./node_modules/@cntrl-site/effects/lib/index.js\");\nconst rangeMap_1 = __webpack_require__(/*! ../rangeMap */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/rangeMap.js\");\nconst WebGLContextManagerContext_1 = __webpack_require__(/*! ../../provider/WebGLContextManagerContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/WebGLContextManagerContext.js\");\nconst PATTERN_URL = 'https://cdn.cntrl.site/client-app-files/texture2.png';\nconst PATTERN_2_URL = 'https://cdn.cntrl.site/client-app-files/bayer16.png';\nfunction useImageFx(canvas, enabled, { imageUrl, fragmentShader, controlsValues }, width, height) {\n    const webGLContextManager = (0, react_1.useContext)(WebGLContextManagerContext_1.WebglContextManagerContext);\n    const [isFXAllowed, setIsFXAllowed] = (0, react_1.useState)(true);\n    const glRef = (0, react_1.useRef)(null);\n    const isRenderingRef = (0, react_1.useRef)(false);\n    const frameRef = (0, react_1.useRef)();\n    const imageTextureManager = (0, react_1.useMemo)(() => {\n        if (!imageUrl || !enabled)\n            return;\n        return new effects_1.ImageTextureManager(imageUrl);\n    }, [imageUrl, enabled]);\n    const imageFx = (0, react_1.useMemo)(() => {\n        if (!imageTextureManager)\n            return;\n        return new effects_1.MediaEffect(imageTextureManager, PATTERN_URL, PATTERN_2_URL, fragmentShader, Object.assign({ time: 0, cursor: [0, 0] }, controlsValues), width, height);\n    }, [imageTextureManager, fragmentShader, width, height]);\n    (0, react_1.useEffect)(() => {\n        if (!imageFx || !controlsValues)\n            return;\n        for (const [key, value] of Object.entries(controlsValues)) {\n            imageFx.setParam(key, value);\n        }\n    }, [imageFx, controlsValues]);\n    (0, react_1.useEffect)(() => {\n        if (!canvas || !imageFx)\n            return;\n        const handleMouseMove = (evt) => {\n            const rect = canvas.getBoundingClientRect();\n            const x = (0, rangeMap_1.rangeMap)(evt.clientX, rect.left, rect.left + rect.width, 0, 1, true);\n            const y = (0, rangeMap_1.rangeMap)(evt.clientY, rect.top, rect.top + rect.height, 0, 1, true);\n            imageFx.setParam('cursor', [x, y]);\n        };\n        window.addEventListener('mousemove', handleMouseMove, { capture: true, passive: true });\n        return () => {\n            window.removeEventListener('mousemove', handleMouseMove);\n        };\n    }, [canvas, imageFx]);\n    (0, react_1.useEffect)(() => {\n        if (!enabled || !canvas || !imageFx)\n            return;\n        let time = 0;\n        const startRendering = () => {\n            if (isRenderingRef.current)\n                return;\n            const gl = webGLContextManager.getContext(canvas);\n            if (!gl) {\n                return;\n            }\n            glRef.current = gl;\n            isRenderingRef.current = true;\n            imageFx.prepare(gl);\n            const renderFrame = () => {\n                if (!isRenderingRef.current || !glRef.current)\n                    return;\n                time += 0.1;\n                webGLContextManager.updateContextSize(glRef.current, canvas.width, canvas.height);\n                imageFx.setViewport(Math.floor(canvas.width), Math.floor(canvas.height));\n                imageFx.setParam('time', time);\n                try {\n                    imageFx.render(glRef.current);\n                }\n                catch (_a) {\n                    setIsFXAllowed(false);\n                }\n                webGLContextManager.renderToCanvas(glRef.current, canvas);\n                frameRef.current = requestAnimationFrame(renderFrame);\n            };\n            frameRef.current = requestAnimationFrame(renderFrame);\n        };\n        const stopRendering = () => {\n            if (!isRenderingRef.current)\n                return;\n            if (frameRef.current) {\n                cancelAnimationFrame(frameRef.current);\n                frameRef.current = undefined;\n            }\n            if (glRef.current) {\n                webGLContextManager.releaseContext(canvas);\n                glRef.current = null;\n            }\n            const ctx = canvas.getContext('2d');\n            if (ctx) {\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\n            }\n            isRenderingRef.current = false;\n        };\n        const observer = new IntersectionObserver(([entry]) => {\n            if (entry.isIntersecting) {\n                startRendering();\n            }\n            else {\n                stopRendering();\n            }\n        }, {\n            threshold: 0,\n            rootMargin: '75px'\n        });\n        observer.observe(canvas);\n        return () => {\n            stopRendering();\n            observer.disconnect();\n        };\n    }, [canvas, imageFx, enabled]);\n    return isFXAllowed;\n}\nexports.useImageFx = useImageFx;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvdXRpbHMvZWZmZWN0cy91c2VJbWFnZUZ4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQixnQkFBZ0IsbUJBQU8sQ0FBQyw0Q0FBTztBQUMvQixrQkFBa0IsbUJBQU8sQ0FBQyw0RUFBcUI7QUFDL0MsbUJBQW1CLG1CQUFPLENBQUMsZ0ZBQWE7QUFDeEMscUNBQXFDLG1CQUFPLENBQUMsbUlBQTJDO0FBQ3hGO0FBQ0E7QUFDQSx1Q0FBdUMsMENBQTBDO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSwwSEFBMEgseUJBQXlCO0FBQ25KLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0VBQWdFLDhCQUE4QjtBQUM5RjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLGtCQUFrQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvdXRpbHMvZWZmZWN0cy91c2VJbWFnZUZ4LmpzP2FiYWIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnVzZUltYWdlRnggPSB2b2lkIDA7XG5jb25zdCByZWFjdF8xID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgZWZmZWN0c18xID0gcmVxdWlyZShcIkBjbnRybC1zaXRlL2VmZmVjdHNcIik7XG5jb25zdCByYW5nZU1hcF8xID0gcmVxdWlyZShcIi4uL3JhbmdlTWFwXCIpO1xuY29uc3QgV2ViR0xDb250ZXh0TWFuYWdlckNvbnRleHRfMSA9IHJlcXVpcmUoXCIuLi8uLi9wcm92aWRlci9XZWJHTENvbnRleHRNYW5hZ2VyQ29udGV4dFwiKTtcbmNvbnN0IFBBVFRFUk5fVVJMID0gJ2h0dHBzOi8vY2RuLmNudHJsLnNpdGUvY2xpZW50LWFwcC1maWxlcy90ZXh0dXJlMi5wbmcnO1xuY29uc3QgUEFUVEVSTl8yX1VSTCA9ICdodHRwczovL2Nkbi5jbnRybC5zaXRlL2NsaWVudC1hcHAtZmlsZXMvYmF5ZXIxNi5wbmcnO1xuZnVuY3Rpb24gdXNlSW1hZ2VGeChjYW52YXMsIGVuYWJsZWQsIHsgaW1hZ2VVcmwsIGZyYWdtZW50U2hhZGVyLCBjb250cm9sc1ZhbHVlcyB9LCB3aWR0aCwgaGVpZ2h0KSB7XG4gICAgY29uc3Qgd2ViR0xDb250ZXh0TWFuYWdlciA9ICgwLCByZWFjdF8xLnVzZUNvbnRleHQpKFdlYkdMQ29udGV4dE1hbmFnZXJDb250ZXh0XzEuV2ViZ2xDb250ZXh0TWFuYWdlckNvbnRleHQpO1xuICAgIGNvbnN0IFtpc0ZYQWxsb3dlZCwgc2V0SXNGWEFsbG93ZWRdID0gKDAsIHJlYWN0XzEudXNlU3RhdGUpKHRydWUpO1xuICAgIGNvbnN0IGdsUmVmID0gKDAsIHJlYWN0XzEudXNlUmVmKShudWxsKTtcbiAgICBjb25zdCBpc1JlbmRlcmluZ1JlZiA9ICgwLCByZWFjdF8xLnVzZVJlZikoZmFsc2UpO1xuICAgIGNvbnN0IGZyYW1lUmVmID0gKDAsIHJlYWN0XzEudXNlUmVmKSgpO1xuICAgIGNvbnN0IGltYWdlVGV4dHVyZU1hbmFnZXIgPSAoMCwgcmVhY3RfMS51c2VNZW1vKSgoKSA9PiB7XG4gICAgICAgIGlmICghaW1hZ2VVcmwgfHwgIWVuYWJsZWQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHJldHVybiBuZXcgZWZmZWN0c18xLkltYWdlVGV4dHVyZU1hbmFnZXIoaW1hZ2VVcmwpO1xuICAgIH0sIFtpbWFnZVVybCwgZW5hYmxlZF0pO1xuICAgIGNvbnN0IGltYWdlRnggPSAoMCwgcmVhY3RfMS51c2VNZW1vKSgoKSA9PiB7XG4gICAgICAgIGlmICghaW1hZ2VUZXh0dXJlTWFuYWdlcilcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgcmV0dXJuIG5ldyBlZmZlY3RzXzEuTWVkaWFFZmZlY3QoaW1hZ2VUZXh0dXJlTWFuYWdlciwgUEFUVEVSTl9VUkwsIFBBVFRFUk5fMl9VUkwsIGZyYWdtZW50U2hhZGVyLCBPYmplY3QuYXNzaWduKHsgdGltZTogMCwgY3Vyc29yOiBbMCwgMF0gfSwgY29udHJvbHNWYWx1ZXMpLCB3aWR0aCwgaGVpZ2h0KTtcbiAgICB9LCBbaW1hZ2VUZXh0dXJlTWFuYWdlciwgZnJhZ21lbnRTaGFkZXIsIHdpZHRoLCBoZWlnaHRdKTtcbiAgICAoMCwgcmVhY3RfMS51c2VFZmZlY3QpKCgpID0+IHtcbiAgICAgICAgaWYgKCFpbWFnZUZ4IHx8ICFjb250cm9sc1ZhbHVlcylcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoY29udHJvbHNWYWx1ZXMpKSB7XG4gICAgICAgICAgICBpbWFnZUZ4LnNldFBhcmFtKGtleSwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgfSwgW2ltYWdlRngsIGNvbnRyb2xzVmFsdWVzXSk7XG4gICAgKDAsIHJlYWN0XzEudXNlRWZmZWN0KSgoKSA9PiB7XG4gICAgICAgIGlmICghY2FudmFzIHx8ICFpbWFnZUZ4KVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBoYW5kbGVNb3VzZU1vdmUgPSAoZXZ0KSA9PiB7XG4gICAgICAgICAgICBjb25zdCByZWN0ID0gY2FudmFzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgICAgICAgY29uc3QgeCA9ICgwLCByYW5nZU1hcF8xLnJhbmdlTWFwKShldnQuY2xpZW50WCwgcmVjdC5sZWZ0LCByZWN0LmxlZnQgKyByZWN0LndpZHRoLCAwLCAxLCB0cnVlKTtcbiAgICAgICAgICAgIGNvbnN0IHkgPSAoMCwgcmFuZ2VNYXBfMS5yYW5nZU1hcCkoZXZ0LmNsaWVudFksIHJlY3QudG9wLCByZWN0LnRvcCArIHJlY3QuaGVpZ2h0LCAwLCAxLCB0cnVlKTtcbiAgICAgICAgICAgIGltYWdlRnguc2V0UGFyYW0oJ2N1cnNvcicsIFt4LCB5XSk7XG4gICAgICAgIH07XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBoYW5kbGVNb3VzZU1vdmUsIHsgY2FwdHVyZTogdHJ1ZSwgcGFzc2l2ZTogdHJ1ZSB9KTtcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBoYW5kbGVNb3VzZU1vdmUpO1xuICAgICAgICB9O1xuICAgIH0sIFtjYW52YXMsIGltYWdlRnhdKTtcbiAgICAoMCwgcmVhY3RfMS51c2VFZmZlY3QpKCgpID0+IHtcbiAgICAgICAgaWYgKCFlbmFibGVkIHx8ICFjYW52YXMgfHwgIWltYWdlRngpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGxldCB0aW1lID0gMDtcbiAgICAgICAgY29uc3Qgc3RhcnRSZW5kZXJpbmcgPSAoKSA9PiB7XG4gICAgICAgICAgICBpZiAoaXNSZW5kZXJpbmdSZWYuY3VycmVudClcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICBjb25zdCBnbCA9IHdlYkdMQ29udGV4dE1hbmFnZXIuZ2V0Q29udGV4dChjYW52YXMpO1xuICAgICAgICAgICAgaWYgKCFnbCkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGdsUmVmLmN1cnJlbnQgPSBnbDtcbiAgICAgICAgICAgIGlzUmVuZGVyaW5nUmVmLmN1cnJlbnQgPSB0cnVlO1xuICAgICAgICAgICAgaW1hZ2VGeC5wcmVwYXJlKGdsKTtcbiAgICAgICAgICAgIGNvbnN0IHJlbmRlckZyYW1lID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghaXNSZW5kZXJpbmdSZWYuY3VycmVudCB8fCAhZ2xSZWYuY3VycmVudClcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIHRpbWUgKz0gMC4xO1xuICAgICAgICAgICAgICAgIHdlYkdMQ29udGV4dE1hbmFnZXIudXBkYXRlQ29udGV4dFNpemUoZ2xSZWYuY3VycmVudCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTtcbiAgICAgICAgICAgICAgICBpbWFnZUZ4LnNldFZpZXdwb3J0KE1hdGguZmxvb3IoY2FudmFzLndpZHRoKSwgTWF0aC5mbG9vcihjYW52YXMuaGVpZ2h0KSk7XG4gICAgICAgICAgICAgICAgaW1hZ2VGeC5zZXRQYXJhbSgndGltZScsIHRpbWUpO1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIGltYWdlRngucmVuZGVyKGdsUmVmLmN1cnJlbnQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXRjaCAoX2EpIHtcbiAgICAgICAgICAgICAgICAgICAgc2V0SXNGWEFsbG93ZWQoZmFsc2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB3ZWJHTENvbnRleHRNYW5hZ2VyLnJlbmRlclRvQ2FudmFzKGdsUmVmLmN1cnJlbnQsIGNhbnZhcyk7XG4gICAgICAgICAgICAgICAgZnJhbWVSZWYuY3VycmVudCA9IHJlcXVlc3RBbmltYXRpb25GcmFtZShyZW5kZXJGcmFtZSk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgZnJhbWVSZWYuY3VycmVudCA9IHJlcXVlc3RBbmltYXRpb25GcmFtZShyZW5kZXJGcmFtZSk7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHN0b3BSZW5kZXJpbmcgPSAoKSA9PiB7XG4gICAgICAgICAgICBpZiAoIWlzUmVuZGVyaW5nUmVmLmN1cnJlbnQpXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgaWYgKGZyYW1lUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgICAgICAgICBjYW5jZWxBbmltYXRpb25GcmFtZShmcmFtZVJlZi5jdXJyZW50KTtcbiAgICAgICAgICAgICAgICBmcmFtZVJlZi5jdXJyZW50ID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGdsUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgICAgICAgICB3ZWJHTENvbnRleHRNYW5hZ2VyLnJlbGVhc2VDb250ZXh0KGNhbnZhcyk7XG4gICAgICAgICAgICAgICAgZ2xSZWYuY3VycmVudCA9IG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBjdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcbiAgICAgICAgICAgIGlmIChjdHgpIHtcbiAgICAgICAgICAgICAgICBjdHguY2xlYXJSZWN0KDAsIDAsIGNhbnZhcy53aWR0aCwgY2FudmFzLmhlaWdodCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpc1JlbmRlcmluZ1JlZi5jdXJyZW50ID0gZmFsc2U7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IG9ic2VydmVyID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKChbZW50cnldKSA9PiB7XG4gICAgICAgICAgICBpZiAoZW50cnkuaXNJbnRlcnNlY3RpbmcpIHtcbiAgICAgICAgICAgICAgICBzdGFydFJlbmRlcmluZygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgc3RvcFJlbmRlcmluZygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LCB7XG4gICAgICAgICAgICB0aHJlc2hvbGQ6IDAsXG4gICAgICAgICAgICByb290TWFyZ2luOiAnNzVweCdcbiAgICAgICAgfSk7XG4gICAgICAgIG9ic2VydmVyLm9ic2VydmUoY2FudmFzKTtcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN0b3BSZW5kZXJpbmcoKTtcbiAgICAgICAgICAgIG9ic2VydmVyLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgfTtcbiAgICB9LCBbY2FudmFzLCBpbWFnZUZ4LCBlbmFibGVkXSk7XG4gICAgcmV0dXJuIGlzRlhBbGxvd2VkO1xufVxuZXhwb3J0cy51c2VJbWFnZUZ4ID0gdXNlSW1hZ2VGeDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/utils/effects/useImageFx.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/utils/effects/useVideoFx.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/utils/effects/useVideoFx.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useVideoFx = void 0;\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst effects_1 = __webpack_require__(/*! @cntrl-site/effects */ \"./node_modules/@cntrl-site/effects/lib/index.js\");\nconst rangeMap_1 = __webpack_require__(/*! ../rangeMap */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/utils/rangeMap.js\");\nconst WebGLContextManagerContext_1 = __webpack_require__(/*! ../../provider/WebGLContextManagerContext */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/provider/WebGLContextManagerContext.js\");\nconst PATTERN_URL = 'https://cdn.cntrl.site/client-app-files/texture2.png';\nconst PATTERN_2_URL = 'https://cdn.cntrl.site/client-app-files/bayer16.png';\nfunction useVideoFx(canvas, enabled, { videoUrl, fragmentShader, controls }, width, height) {\n    const [isFXAllowed, setIsFXAllowed] = (0, react_1.useState)(true);\n    const [isReady, setIsReady] = (0, react_1.useState)(false);\n    const active = enabled && isReady;\n    const webGLContextManager = (0, react_1.useContext)(WebGLContextManagerContext_1.WebglContextManagerContext);\n    const glRef = (0, react_1.useRef)(null);\n    const isRenderingRef = (0, react_1.useRef)(false);\n    const frameRef = (0, react_1.useRef)();\n    const videoTextureManager = (0, react_1.useMemo)(() => {\n        if (!videoUrl || !enabled)\n            return;\n        const handlePlayError = () => {\n            setIsFXAllowed(false);\n        };\n        return new effects_1.VideoTextureManager(videoUrl, handlePlayError);\n    }, [videoUrl, enabled]);\n    const videoFx = (0, react_1.useMemo)(() => {\n        if (!videoTextureManager)\n            return;\n        return new effects_1.MediaEffect(videoTextureManager, PATTERN_URL, PATTERN_2_URL, fragmentShader, Object.assign({ time: 0, cursor: [0, 0] }, controls), width, height);\n    }, [videoTextureManager, fragmentShader, width, height]);\n    (0, react_1.useEffect)(() => {\n        if (!videoTextureManager)\n            return;\n        videoTextureManager.onReadyStatusChange(setIsReady);\n    }, [videoTextureManager]);\n    (0, react_1.useEffect)(() => {\n        if (!canvas || !videoFx)\n            return;\n        const handleMouseMove = (evt) => {\n            const rect = canvas.getBoundingClientRect();\n            const x = (0, rangeMap_1.rangeMap)(evt.clientX, rect.left, rect.left + rect.width, 0, 1, true);\n            const y = (0, rangeMap_1.rangeMap)(evt.clientY, rect.top, rect.top + rect.height, 0, 1, true);\n            videoFx.setParam('cursor', [x, y]);\n        };\n        window.addEventListener('mousemove', handleMouseMove, { capture: true, passive: true });\n        return () => {\n            window.removeEventListener('mousemove', handleMouseMove);\n        };\n    }, [canvas, videoFx]);\n    (0, react_1.useEffect)(() => {\n        if (!active || !canvas || !videoFx)\n            return;\n        let time = 0;\n        const startRendering = () => {\n            if (isRenderingRef.current)\n                return;\n            const gl = webGLContextManager.getContext(canvas);\n            if (!gl) {\n                return;\n            }\n            glRef.current = gl;\n            isRenderingRef.current = true;\n            videoFx.prepare(gl);\n            const renderFrame = () => {\n                if (!isRenderingRef.current || !glRef.current)\n                    return;\n                time += 0.1;\n                webGLContextManager.updateContextSize(glRef.current, canvas.width, canvas.height);\n                videoFx.setViewport(Math.floor(canvas.width), Math.floor(canvas.height));\n                videoFx.setParam('time', time);\n                try {\n                    videoFx.render(glRef.current);\n                }\n                catch (_a) {\n                    setIsFXAllowed(false);\n                }\n                webGLContextManager.renderToCanvas(glRef.current, canvas);\n                frameRef.current = requestAnimationFrame(renderFrame);\n            };\n            frameRef.current = requestAnimationFrame(renderFrame);\n        };\n        const stopRendering = () => {\n            if (!isRenderingRef.current)\n                return;\n            if (frameRef.current) {\n                cancelAnimationFrame(frameRef.current);\n                frameRef.current = undefined;\n            }\n            if (glRef.current) {\n                webGLContextManager.releaseContext(canvas);\n                glRef.current = null;\n            }\n            const ctx = canvas.getContext('2d');\n            if (ctx) {\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\n            }\n            isRenderingRef.current = false;\n        };\n        const observer = new IntersectionObserver(([entry]) => {\n            if (entry.isIntersecting) {\n                startRendering();\n            }\n            else {\n                stopRendering();\n            }\n        }, {\n            threshold: 0,\n            rootMargin: '75px'\n        });\n        observer.observe(canvas);\n        return () => {\n            stopRendering();\n            observer.disconnect();\n        };\n    }, [canvas, videoFx, active]);\n    return isFXAllowed;\n}\nexports.useVideoFx = useVideoFx;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/utils/effects/useVideoFx.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getAnchoredItemTop.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getAnchoredItemTop.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getAnchoredItemTop = void 0;\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nfunction getAnchoredItemTop(top, sectionHeight, anchorSide) {\n    const styleTop = `${top * 100}vw`;\n    switch (anchorSide) {\n        case sdk_1.AnchorSide.Center: return `calc(${styleTop} + ${sectionHeight} / 2)`;\n        case sdk_1.AnchorSide.Bottom: return `calc(${styleTop} + ${sectionHeight})`;\n        case sdk_1.AnchorSide.Top:\n        default:\n            return styleTop;\n    }\n}\nexports.getAnchoredItemTop = getAnchoredItemTop;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvdXRpbHMvZ2V0QW5jaG9yZWRJdGVtVG9wLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQjtBQUMxQixjQUFjLG1CQUFPLENBQUMscUVBQWlCO0FBQ3ZDO0FBQ0Esd0JBQXdCLFVBQVU7QUFDbEM7QUFDQSxxREFBcUQsVUFBVSxJQUFJLGVBQWU7QUFDbEYscURBQXFELFVBQVUsSUFBSSxjQUFjO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbnRybC1zaXRlL3Nkay1uZXh0anMvbGliL3V0aWxzL2dldEFuY2hvcmVkSXRlbVRvcC5qcz85NzM3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRBbmNob3JlZEl0ZW1Ub3AgPSB2b2lkIDA7XG5jb25zdCBzZGtfMSA9IHJlcXVpcmUoXCJAY250cmwtc2l0ZS9zZGtcIik7XG5mdW5jdGlvbiBnZXRBbmNob3JlZEl0ZW1Ub3AodG9wLCBzZWN0aW9uSGVpZ2h0LCBhbmNob3JTaWRlKSB7XG4gICAgY29uc3Qgc3R5bGVUb3AgPSBgJHt0b3AgKiAxMDB9dndgO1xuICAgIHN3aXRjaCAoYW5jaG9yU2lkZSkge1xuICAgICAgICBjYXNlIHNka18xLkFuY2hvclNpZGUuQ2VudGVyOiByZXR1cm4gYGNhbGMoJHtzdHlsZVRvcH0gKyAke3NlY3Rpb25IZWlnaHR9IC8gMilgO1xuICAgICAgICBjYXNlIHNka18xLkFuY2hvclNpZGUuQm90dG9tOiByZXR1cm4gYGNhbGMoJHtzdHlsZVRvcH0gKyAke3NlY3Rpb25IZWlnaHR9KWA7XG4gICAgICAgIGNhc2Ugc2RrXzEuQW5jaG9yU2lkZS5Ub3A6XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gc3R5bGVUb3A7XG4gICAgfVxufVxuZXhwb3J0cy5nZXRBbmNob3JlZEl0ZW1Ub3AgPSBnZXRBbmNob3JlZEl0ZW1Ub3A7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getAnchoredItemTop.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getCompoundBoundaryStyles.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getCompoundBoundaryStyles.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getCompoundTransform = exports.getCompoundLeft = exports.getCompoundTop = exports.getCompoundWidth = exports.getCompoundHeight = void 0;\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nconst positionMatrix = {\n    [sdk_1.AreaAnchor.TopLeft]: [0, 0],\n    [sdk_1.AreaAnchor.TopCenter]: [0, 0.5],\n    [sdk_1.AreaAnchor.TopRight]: [0, 1],\n    [sdk_1.AreaAnchor.MiddleLeft]: [0.5, 0],\n    [sdk_1.AreaAnchor.MiddleCenter]: [0.5, 0.5],\n    [sdk_1.AreaAnchor.MiddleRight]: [0.5, 1],\n    [sdk_1.AreaAnchor.BottomLeft]: [1, 0],\n    [sdk_1.AreaAnchor.BottomCenter]: [1, 0.5],\n    [sdk_1.AreaAnchor.BottomRight]: [1, 1]\n};\nfunction getCompoundHeight(compoundSettings, height) {\n    if (height === undefined || !compoundSettings)\n        return;\n    if (compoundSettings.heightMode === 'relative') {\n        return `${height * 100}%`;\n    }\n    return `${height * 100}vw`;\n}\nexports.getCompoundHeight = getCompoundHeight;\nfunction getCompoundWidth(compoundSettings, width, isRichText, exemplary) {\n    if (width === undefined || !compoundSettings)\n        return;\n    if (compoundSettings.widthMode === 'relative') {\n        return `${width * 100}%`;\n    }\n    return isRichText && exemplary ? `${width * exemplary}px` : `${width * 100}vw`;\n}\nexports.getCompoundWidth = getCompoundWidth;\nfunction getCompoundTop(compoundSettings, top) {\n    if (top === undefined || !compoundSettings)\n        return;\n    if (compoundSettings.heightMode === 'relative') {\n        return `${top * 100}%`;\n    }\n    const [ky] = positionMatrix[compoundSettings.positionAnchor];\n    return `calc(${ky * 100}% + ${top * 100}vw)`;\n}\nexports.getCompoundTop = getCompoundTop;\nfunction getCompoundLeft(compoundSettings, left) {\n    if (left === undefined || !compoundSettings)\n        return;\n    if (compoundSettings.widthMode === 'relative') {\n        return `${left * 100}%`;\n    }\n    const [_, kx] = positionMatrix[compoundSettings.positionAnchor];\n    return `calc(${kx * 100}% + ${left * 100}vw)`;\n}\nexports.getCompoundLeft = getCompoundLeft;\nfunction getCompoundTransform(compoundSettings) {\n    if (!compoundSettings)\n        return 'unset';\n    const areaAnchor = compoundSettings.positionAnchor;\n    const [ky, kx] = positionMatrix[areaAnchor];\n    return `translate(${kx * (-100)}%, ${ky * (-100)}%)`;\n}\nexports.getCompoundTransform = getCompoundTransform;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvdXRpbHMvZ2V0Q29tcG91bmRCb3VuZGFyeVN0eWxlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw0QkFBNEIsR0FBRyx1QkFBdUIsR0FBRyxzQkFBc0IsR0FBRyx3QkFBd0IsR0FBRyx5QkFBeUI7QUFDdEksY0FBYyxtQkFBTyxDQUFDLHFFQUFpQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsYUFBYTtBQUMvQjtBQUNBLGNBQWMsYUFBYTtBQUMzQjtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixZQUFZO0FBQzlCO0FBQ0Esd0NBQXdDLGtCQUFrQixTQUFTLFlBQVk7QUFDL0U7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsVUFBVTtBQUM1QjtBQUNBO0FBQ0EsbUJBQW1CLFNBQVMsTUFBTSxVQUFVO0FBQzVDO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLFdBQVc7QUFDN0I7QUFDQTtBQUNBLG1CQUFtQixTQUFTLE1BQU0sV0FBVztBQUM3QztBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFlBQVksS0FBSyxZQUFZO0FBQ3JEO0FBQ0EsNEJBQTRCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi91dGlscy9nZXRDb21wb3VuZEJvdW5kYXJ5U3R5bGVzLmpzPzdjNzgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldENvbXBvdW5kVHJhbnNmb3JtID0gZXhwb3J0cy5nZXRDb21wb3VuZExlZnQgPSBleHBvcnRzLmdldENvbXBvdW5kVG9wID0gZXhwb3J0cy5nZXRDb21wb3VuZFdpZHRoID0gZXhwb3J0cy5nZXRDb21wb3VuZEhlaWdodCA9IHZvaWQgMDtcbmNvbnN0IHNka18xID0gcmVxdWlyZShcIkBjbnRybC1zaXRlL3Nka1wiKTtcbmNvbnN0IHBvc2l0aW9uTWF0cml4ID0ge1xuICAgIFtzZGtfMS5BcmVhQW5jaG9yLlRvcExlZnRdOiBbMCwgMF0sXG4gICAgW3Nka18xLkFyZWFBbmNob3IuVG9wQ2VudGVyXTogWzAsIDAuNV0sXG4gICAgW3Nka18xLkFyZWFBbmNob3IuVG9wUmlnaHRdOiBbMCwgMV0sXG4gICAgW3Nka18xLkFyZWFBbmNob3IuTWlkZGxlTGVmdF06IFswLjUsIDBdLFxuICAgIFtzZGtfMS5BcmVhQW5jaG9yLk1pZGRsZUNlbnRlcl06IFswLjUsIDAuNV0sXG4gICAgW3Nka18xLkFyZWFBbmNob3IuTWlkZGxlUmlnaHRdOiBbMC41LCAxXSxcbiAgICBbc2RrXzEuQXJlYUFuY2hvci5Cb3R0b21MZWZ0XTogWzEsIDBdLFxuICAgIFtzZGtfMS5BcmVhQW5jaG9yLkJvdHRvbUNlbnRlcl06IFsxLCAwLjVdLFxuICAgIFtzZGtfMS5BcmVhQW5jaG9yLkJvdHRvbVJpZ2h0XTogWzEsIDFdXG59O1xuZnVuY3Rpb24gZ2V0Q29tcG91bmRIZWlnaHQoY29tcG91bmRTZXR0aW5ncywgaGVpZ2h0KSB7XG4gICAgaWYgKGhlaWdodCA9PT0gdW5kZWZpbmVkIHx8ICFjb21wb3VuZFNldHRpbmdzKVxuICAgICAgICByZXR1cm47XG4gICAgaWYgKGNvbXBvdW5kU2V0dGluZ3MuaGVpZ2h0TW9kZSA9PT0gJ3JlbGF0aXZlJykge1xuICAgICAgICByZXR1cm4gYCR7aGVpZ2h0ICogMTAwfSVgO1xuICAgIH1cbiAgICByZXR1cm4gYCR7aGVpZ2h0ICogMTAwfXZ3YDtcbn1cbmV4cG9ydHMuZ2V0Q29tcG91bmRIZWlnaHQgPSBnZXRDb21wb3VuZEhlaWdodDtcbmZ1bmN0aW9uIGdldENvbXBvdW5kV2lkdGgoY29tcG91bmRTZXR0aW5ncywgd2lkdGgsIGlzUmljaFRleHQsIGV4ZW1wbGFyeSkge1xuICAgIGlmICh3aWR0aCA9PT0gdW5kZWZpbmVkIHx8ICFjb21wb3VuZFNldHRpbmdzKVxuICAgICAgICByZXR1cm47XG4gICAgaWYgKGNvbXBvdW5kU2V0dGluZ3Mud2lkdGhNb2RlID09PSAncmVsYXRpdmUnKSB7XG4gICAgICAgIHJldHVybiBgJHt3aWR0aCAqIDEwMH0lYDtcbiAgICB9XG4gICAgcmV0dXJuIGlzUmljaFRleHQgJiYgZXhlbXBsYXJ5ID8gYCR7d2lkdGggKiBleGVtcGxhcnl9cHhgIDogYCR7d2lkdGggKiAxMDB9dndgO1xufVxuZXhwb3J0cy5nZXRDb21wb3VuZFdpZHRoID0gZ2V0Q29tcG91bmRXaWR0aDtcbmZ1bmN0aW9uIGdldENvbXBvdW5kVG9wKGNvbXBvdW5kU2V0dGluZ3MsIHRvcCkge1xuICAgIGlmICh0b3AgPT09IHVuZGVmaW5lZCB8fCAhY29tcG91bmRTZXR0aW5ncylcbiAgICAgICAgcmV0dXJuO1xuICAgIGlmIChjb21wb3VuZFNldHRpbmdzLmhlaWdodE1vZGUgPT09ICdyZWxhdGl2ZScpIHtcbiAgICAgICAgcmV0dXJuIGAke3RvcCAqIDEwMH0lYDtcbiAgICB9XG4gICAgY29uc3QgW2t5XSA9IHBvc2l0aW9uTWF0cml4W2NvbXBvdW5kU2V0dGluZ3MucG9zaXRpb25BbmNob3JdO1xuICAgIHJldHVybiBgY2FsYygke2t5ICogMTAwfSUgKyAke3RvcCAqIDEwMH12dylgO1xufVxuZXhwb3J0cy5nZXRDb21wb3VuZFRvcCA9IGdldENvbXBvdW5kVG9wO1xuZnVuY3Rpb24gZ2V0Q29tcG91bmRMZWZ0KGNvbXBvdW5kU2V0dGluZ3MsIGxlZnQpIHtcbiAgICBpZiAobGVmdCA9PT0gdW5kZWZpbmVkIHx8ICFjb21wb3VuZFNldHRpbmdzKVxuICAgICAgICByZXR1cm47XG4gICAgaWYgKGNvbXBvdW5kU2V0dGluZ3Mud2lkdGhNb2RlID09PSAncmVsYXRpdmUnKSB7XG4gICAgICAgIHJldHVybiBgJHtsZWZ0ICogMTAwfSVgO1xuICAgIH1cbiAgICBjb25zdCBbXywga3hdID0gcG9zaXRpb25NYXRyaXhbY29tcG91bmRTZXR0aW5ncy5wb3NpdGlvbkFuY2hvcl07XG4gICAgcmV0dXJuIGBjYWxjKCR7a3ggKiAxMDB9JSArICR7bGVmdCAqIDEwMH12dylgO1xufVxuZXhwb3J0cy5nZXRDb21wb3VuZExlZnQgPSBnZXRDb21wb3VuZExlZnQ7XG5mdW5jdGlvbiBnZXRDb21wb3VuZFRyYW5zZm9ybShjb21wb3VuZFNldHRpbmdzKSB7XG4gICAgaWYgKCFjb21wb3VuZFNldHRpbmdzKVxuICAgICAgICByZXR1cm4gJ3Vuc2V0JztcbiAgICBjb25zdCBhcmVhQW5jaG9yID0gY29tcG91bmRTZXR0aW5ncy5wb3NpdGlvbkFuY2hvcjtcbiAgICBjb25zdCBba3ksIGt4XSA9IHBvc2l0aW9uTWF0cml4W2FyZWFBbmNob3JdO1xuICAgIHJldHVybiBgdHJhbnNsYXRlKCR7a3ggKiAoLTEwMCl9JSwgJHtreSAqICgtMTAwKX0lKWA7XG59XG5leHBvcnRzLmdldENvbXBvdW5kVHJhbnNmb3JtID0gZ2V0Q29tcG91bmRUcmFuc2Zvcm07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getCompoundBoundaryStyles.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getFontFamilyValue.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getFontFamilyValue.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getFontFamilyValue = void 0;\nfunction getFontFamilyValue(value) {\n    return value && value.includes('\"') ? value : `\"${value}\"`;\n}\nexports.getFontFamilyValue = getFontFamilyValue;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvdXRpbHMvZ2V0Rm9udEZhbWlseVZhbHVlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQjtBQUMxQjtBQUNBLHNEQUFzRCxNQUFNO0FBQzVEO0FBQ0EsMEJBQTBCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi91dGlscy9nZXRGb250RmFtaWx5VmFsdWUuanM/NDU3YSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0Rm9udEZhbWlseVZhbHVlID0gdm9pZCAwO1xuZnVuY3Rpb24gZ2V0Rm9udEZhbWlseVZhbHVlKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlICYmIHZhbHVlLmluY2x1ZGVzKCdcIicpID8gdmFsdWUgOiBgXCIke3ZhbHVlfVwiYDtcbn1cbmV4cG9ydHMuZ2V0Rm9udEZhbWlseVZhbHVlID0gZ2V0Rm9udEZhbWlseVZhbHVlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getFontFamilyValue.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getItemTopStyle.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getItemTopStyle.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getItemTopStyle = void 0;\nconst sdk_1 = __webpack_require__(/*! @cntrl-site/sdk */ \"./node_modules/@cntrl-site/sdk/dist/index.js\");\nfunction getItemTopStyle(top, anchorSide) {\n    const defaultValue = `${top * 100}vw`;\n    if (!anchorSide)\n        return defaultValue;\n    switch (anchorSide) {\n        case sdk_1.AnchorSide.Top:\n            return defaultValue;\n        case sdk_1.AnchorSide.Center:\n            return `calc(50% + ${top * 100}vw)`;\n        case sdk_1.AnchorSide.Bottom:\n            return `calc(100% + ${top * 100}vw)`;\n    }\n}\nexports.getItemTopStyle = getItemTopStyle;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvdXRpbHMvZ2V0SXRlbVRvcFN0eWxlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QjtBQUN2QixjQUFjLG1CQUFPLENBQUMscUVBQWlCO0FBQ3ZDO0FBQ0EsNEJBQTRCLFVBQVU7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLFVBQVU7QUFDM0M7QUFDQSxrQ0FBa0MsVUFBVTtBQUM1QztBQUNBO0FBQ0EsdUJBQXVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi91dGlscy9nZXRJdGVtVG9wU3R5bGUuanM/MWFiOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0SXRlbVRvcFN0eWxlID0gdm9pZCAwO1xuY29uc3Qgc2RrXzEgPSByZXF1aXJlKFwiQGNudHJsLXNpdGUvc2RrXCIpO1xuZnVuY3Rpb24gZ2V0SXRlbVRvcFN0eWxlKHRvcCwgYW5jaG9yU2lkZSkge1xuICAgIGNvbnN0IGRlZmF1bHRWYWx1ZSA9IGAke3RvcCAqIDEwMH12d2A7XG4gICAgaWYgKCFhbmNob3JTaWRlKVxuICAgICAgICByZXR1cm4gZGVmYXVsdFZhbHVlO1xuICAgIHN3aXRjaCAoYW5jaG9yU2lkZSkge1xuICAgICAgICBjYXNlIHNka18xLkFuY2hvclNpZGUuVG9wOlxuICAgICAgICAgICAgcmV0dXJuIGRlZmF1bHRWYWx1ZTtcbiAgICAgICAgY2FzZSBzZGtfMS5BbmNob3JTaWRlLkNlbnRlcjpcbiAgICAgICAgICAgIHJldHVybiBgY2FsYyg1MCUgKyAke3RvcCAqIDEwMH12dylgO1xuICAgICAgICBjYXNlIHNka18xLkFuY2hvclNpZGUuQm90dG9tOlxuICAgICAgICAgICAgcmV0dXJuIGBjYWxjKDEwMCUgKyAke3RvcCAqIDEwMH12dylgO1xuICAgIH1cbn1cbmV4cG9ydHMuZ2V0SXRlbVRvcFN0eWxlID0gZ2V0SXRlbVRvcFN0eWxlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getItemTopStyle.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getStyleFromItemStateAndParams.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getStyleFromItemStateAndParams.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getStyleFromItemStateAndParams = void 0;\nfunction getStyleFromItemStateAndParams(stateValue, paramsValue) {\n    return stateValue !== undefined\n        ? stateValue\n        : paramsValue;\n}\nexports.getStyleFromItemStateAndParams = getStyleFromItemStateAndParams;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvdXRpbHMvZ2V0U3R5bGVGcm9tSXRlbVN0YXRlQW5kUGFyYW1zLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi91dGlscy9nZXRTdHlsZUZyb21JdGVtU3RhdGVBbmRQYXJhbXMuanM/MzQ4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0U3R5bGVGcm9tSXRlbVN0YXRlQW5kUGFyYW1zID0gdm9pZCAwO1xuZnVuY3Rpb24gZ2V0U3R5bGVGcm9tSXRlbVN0YXRlQW5kUGFyYW1zKHN0YXRlVmFsdWUsIHBhcmFtc1ZhbHVlKSB7XG4gICAgcmV0dXJuIHN0YXRlVmFsdWUgIT09IHVuZGVmaW5lZFxuICAgICAgICA/IHN0YXRlVmFsdWVcbiAgICAgICAgOiBwYXJhbXNWYWx1ZTtcbn1cbmV4cG9ydHMuZ2V0U3R5bGVGcm9tSXRlbVN0YXRlQW5kUGFyYW1zID0gZ2V0U3R5bGVGcm9tSXRlbVN0YXRlQW5kUGFyYW1zO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getStyleFromItemStateAndParams.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getValidYoutubeUrl.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getValidYoutubeUrl.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getYoutubeId = void 0;\nvar Allowed;\n(function (Allowed) {\n    Allowed[\"Tiny\"] = \"youtu.be\";\n    Allowed[\"Full\"] = \"www.youtube.com\";\n})(Allowed || (Allowed = {}));\nfunction getYoutubeId({ hostname, pathname, search }) {\n    if (hostname !== Allowed.Full && hostname !== Allowed.Tiny) {\n        throw new Error(`Cannot get valid YouTube ID from \"${hostname}\" - address is not whitelisted`);\n    }\n    switch (hostname) {\n        case Allowed.Tiny:\n            return pathname.replace('/', '');\n        case Allowed.Full:\n            if (pathname.startsWith('/shorts/')) {\n                const shortsId = pathname.split('/shorts/')[1];\n                if (!shortsId) {\n                    throw new Error('Cannot get valid YouTube Shorts ID from the pathname.');\n                }\n                return shortsId;\n            }\n            else {\n                const searchParams = new URLSearchParams(search);\n                const id = searchParams.get('v');\n                if (!id) {\n                    throw new Error('Cannot get valid YouTube ID from search params.');\n                }\n                return id;\n            }\n    }\n}\nexports.getYoutubeId = getYoutubeId;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvdXRpbHMvZ2V0VmFsaWRZb3V0dWJlVXJsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMEJBQTBCO0FBQzNCLHdCQUF3Qiw0QkFBNEI7QUFDcEQ7QUFDQSw2REFBNkQsU0FBUztBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvdXRpbHMvZ2V0VmFsaWRZb3V0dWJlVXJsLmpzP2I2OWUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldFlvdXR1YmVJZCA9IHZvaWQgMDtcbnZhciBBbGxvd2VkO1xuKGZ1bmN0aW9uIChBbGxvd2VkKSB7XG4gICAgQWxsb3dlZFtcIlRpbnlcIl0gPSBcInlvdXR1LmJlXCI7XG4gICAgQWxsb3dlZFtcIkZ1bGxcIl0gPSBcInd3dy55b3V0dWJlLmNvbVwiO1xufSkoQWxsb3dlZCB8fCAoQWxsb3dlZCA9IHt9KSk7XG5mdW5jdGlvbiBnZXRZb3V0dWJlSWQoeyBob3N0bmFtZSwgcGF0aG5hbWUsIHNlYXJjaCB9KSB7XG4gICAgaWYgKGhvc3RuYW1lICE9PSBBbGxvd2VkLkZ1bGwgJiYgaG9zdG5hbWUgIT09IEFsbG93ZWQuVGlueSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCBnZXQgdmFsaWQgWW91VHViZSBJRCBmcm9tIFwiJHtob3N0bmFtZX1cIiAtIGFkZHJlc3MgaXMgbm90IHdoaXRlbGlzdGVkYCk7XG4gICAgfVxuICAgIHN3aXRjaCAoaG9zdG5hbWUpIHtcbiAgICAgICAgY2FzZSBBbGxvd2VkLlRpbnk6XG4gICAgICAgICAgICByZXR1cm4gcGF0aG5hbWUucmVwbGFjZSgnLycsICcnKTtcbiAgICAgICAgY2FzZSBBbGxvd2VkLkZ1bGw6XG4gICAgICAgICAgICBpZiAocGF0aG5hbWUuc3RhcnRzV2l0aCgnL3Nob3J0cy8nKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHNob3J0c0lkID0gcGF0aG5hbWUuc3BsaXQoJy9zaG9ydHMvJylbMV07XG4gICAgICAgICAgICAgICAgaWYgKCFzaG9ydHNJZCkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdCBnZXQgdmFsaWQgWW91VHViZSBTaG9ydHMgSUQgZnJvbSB0aGUgcGF0aG5hbWUuJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBzaG9ydHNJZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnN0IHNlYXJjaFBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoc2VhcmNoKTtcbiAgICAgICAgICAgICAgICBjb25zdCBpZCA9IHNlYXJjaFBhcmFtcy5nZXQoJ3YnKTtcbiAgICAgICAgICAgICAgICBpZiAoIWlkKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IGdldCB2YWxpZCBZb3VUdWJlIElEIGZyb20gc2VhcmNoIHBhcmFtcy4nKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlkO1xuICAgICAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuZ2V0WW91dHViZUlkID0gZ2V0WW91dHViZUlkO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/utils/getValidYoutubeUrl.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/utils/isItemType.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/utils/isItemType.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isItemType = void 0;\nfunction isItemType(item, itemType) {\n    return item.type === itemType;\n}\nexports.isItemType = isItemType;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvdXRpbHMvaXNJdGVtVHlwZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi91dGlscy9pc0l0ZW1UeXBlLmpzP2ZmYzAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzSXRlbVR5cGUgPSB2b2lkIDA7XG5mdW5jdGlvbiBpc0l0ZW1UeXBlKGl0ZW0sIGl0ZW1UeXBlKSB7XG4gICAgcmV0dXJuIGl0ZW0udHlwZSA9PT0gaXRlbVR5cGU7XG59XG5leHBvcnRzLmlzSXRlbVR5cGUgPSBpc0l0ZW1UeXBlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/utils/isItemType.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/utils/rangeMap.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/utils/rangeMap.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.rangeMap = void 0;\nfunction rangeMap(n, start1, stop1, start2, stop2, withinBounds = false) {\n    const mapped = (n - start1) / (stop1 - start1) * (stop2 - start2) + start2;\n    if (withinBounds && n < start1)\n        return start2;\n    if (withinBounds && n > stop1)\n        return stop2;\n    return mapped;\n}\nexports.rangeMap = rangeMap;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvdXRpbHMvcmFuZ2VNYXAuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbnRybC1zaXRlL3Nkay1uZXh0anMvbGliL3V0aWxzL3JhbmdlTWFwLmpzPzczOGIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnJhbmdlTWFwID0gdm9pZCAwO1xuZnVuY3Rpb24gcmFuZ2VNYXAobiwgc3RhcnQxLCBzdG9wMSwgc3RhcnQyLCBzdG9wMiwgd2l0aGluQm91bmRzID0gZmFsc2UpIHtcbiAgICBjb25zdCBtYXBwZWQgPSAobiAtIHN0YXJ0MSkgLyAoc3RvcDEgLSBzdGFydDEpICogKHN0b3AyIC0gc3RhcnQyKSArIHN0YXJ0MjtcbiAgICBpZiAod2l0aGluQm91bmRzICYmIG4gPCBzdGFydDEpXG4gICAgICAgIHJldHVybiBzdGFydDI7XG4gICAgaWYgKHdpdGhpbkJvdW5kcyAmJiBuID4gc3RvcDEpXG4gICAgICAgIHJldHVybiBzdG9wMjtcbiAgICByZXR1cm4gbWFwcGVkO1xufVxuZXhwb3J0cy5yYW5nZU1hcCA9IHJhbmdlTWFwO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/utils/rangeMap.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk-nextjs/lib/utils/useElementRect.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk-nextjs/lib/utils/useElementRect.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useElementRect = void 0;\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nfunction useElementRect(element) {\n    const [rect, setRect] = (0, react_1.useState)(() => element === null || element === void 0 ? void 0 : element.getBoundingClientRect());\n    (0, react_1.useEffect)(() => {\n        if (!element)\n            return;\n        const observer = new ResizeObserver(entries => {\n            const el = entries.find(entry => entry.target === element);\n            if (!el) {\n                throw new Error('Element is not found in observed entries');\n            }\n            setRect(el.target.getBoundingClientRect());\n        });\n        observer.observe(element);\n        return () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        };\n    }, [element]);\n    return rect;\n}\nexports.useElementRect = useElementRect;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrLW5leHRqcy9saWIvdXRpbHMvdXNlRWxlbWVudFJlY3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCLGdCQUFnQixtQkFBTyxDQUFDLDRDQUFPO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0Esc0JBQXNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY250cmwtc2l0ZS9zZGstbmV4dGpzL2xpYi91dGlscy91c2VFbGVtZW50UmVjdC5qcz8yMzU3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy51c2VFbGVtZW50UmVjdCA9IHZvaWQgMDtcbmNvbnN0IHJlYWN0XzEgPSByZXF1aXJlKFwicmVhY3RcIik7XG5mdW5jdGlvbiB1c2VFbGVtZW50UmVjdChlbGVtZW50KSB7XG4gICAgY29uc3QgW3JlY3QsIHNldFJlY3RdID0gKDAsIHJlYWN0XzEudXNlU3RhdGUpKCgpID0+IGVsZW1lbnQgPT09IG51bGwgfHwgZWxlbWVudCA9PT0gdm9pZCAwID8gdm9pZCAwIDogZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSk7XG4gICAgKDAsIHJlYWN0XzEudXNlRWZmZWN0KSgoKSA9PiB7XG4gICAgICAgIGlmICghZWxlbWVudClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3Qgb2JzZXJ2ZXIgPSBuZXcgUmVzaXplT2JzZXJ2ZXIoZW50cmllcyA9PiB7XG4gICAgICAgICAgICBjb25zdCBlbCA9IGVudHJpZXMuZmluZChlbnRyeSA9PiBlbnRyeS50YXJnZXQgPT09IGVsZW1lbnQpO1xuICAgICAgICAgICAgaWYgKCFlbCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRWxlbWVudCBpcyBub3QgZm91bmQgaW4gb2JzZXJ2ZWQgZW50cmllcycpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2V0UmVjdChlbC50YXJnZXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkpO1xuICAgICAgICB9KTtcbiAgICAgICAgb2JzZXJ2ZXIub2JzZXJ2ZShlbGVtZW50KTtcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIG9ic2VydmVyLnVub2JzZXJ2ZShlbGVtZW50KTtcbiAgICAgICAgICAgIG9ic2VydmVyLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgfTtcbiAgICB9LCBbZWxlbWVudF0pO1xuICAgIHJldHVybiByZWN0O1xufVxuZXhwb3J0cy51c2VFbGVtZW50UmVjdCA9IHVzZUVsZW1lbnRSZWN0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk-nextjs/lib/utils/useElementRect.js\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk/dist/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk/dist/index.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, Symbol.toStringTag, { value: \"Module\" });\nconst fetch$1 = __webpack_require__(/*! isomorphic-fetch */ \"./node_modules/isomorphic-fetch/fetch-npm-browserify.js\");\nconst url = __webpack_require__(/*! url */ \"./node_modules/next/dist/compiled/native-url/index.js\");\nconst zod = __webpack_require__(/*! zod */ \"./node_modules/zod/index.cjs\");\nconst UAParser = __webpack_require__(/*! ua-parser-js */ \"./node_modules/ua-parser-js/src/ua-parser.js\");\nconst MP4Box = __webpack_require__(/*! mp4box */ \"./node_modules/mp4box/dist/mp4box.all.js\");\nconst jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nconst react = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst reactSplide = __webpack_require__(/*! @splidejs/react-splide */ \"./node_modules/@splidejs/react-splide/dist/js/react-splide.cjs.js\");\nconst cn = __webpack_require__(/*! classnames */ \"./node_modules/classnames/index.js\");\nfunction _interopNamespaceDefault(e) {\n  const n = Object.create(null, { [Symbol.toStringTag]: { value: \"Module\" } });\n  if (e) {\n    for (const k in e) {\n      if (k !== \"default\") {\n        const d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: () => e[k]\n        });\n      }\n    }\n  }\n  n.default = e;\n  return Object.freeze(n);\n}\nconst MP4Box__namespace = /* @__PURE__ */ _interopNamespaceDefault(MP4Box);\nvar SectionHeightMode = /* @__PURE__ */ ((SectionHeightMode2) => {\n  SectionHeightMode2[\"ControlUnits\"] = \"control-units\";\n  SectionHeightMode2[\"ViewportHeightUnits\"] = \"viewport-height-units\";\n  return SectionHeightMode2;\n})(SectionHeightMode || {});\nconst TransitionSchema = zod.z.object({\n  timing: zod.z.string(),\n  duration: zod.z.number(),\n  delay: zod.z.number()\n});\nconst getStateParamsSchema = (schema) => {\n  return zod.z.object({\n    value: schema,\n    in: TransitionSchema,\n    out: TransitionSchema\n  }).optional();\n};\nconst ItemStateBaseSchema = zod.z.object({\n  width: getStateParamsSchema(zod.z.number()),\n  height: getStateParamsSchema(zod.z.number()),\n  angle: getStateParamsSchema(zod.z.number()),\n  top: getStateParamsSchema(zod.z.number()),\n  left: getStateParamsSchema(zod.z.number()),\n  scale: getStateParamsSchema(zod.z.number()),\n  blur: getStateParamsSchema(zod.z.number())\n});\nconst MediaStateParamsSchema = zod.z.object({\n  opacity: getStateParamsSchema(zod.z.number()),\n  radius: getStateParamsSchema(zod.z.number()),\n  strokeWidth: getStateParamsSchema(zod.z.number()),\n  strokeColor: getStateParamsSchema(zod.z.string())\n}).merge(ItemStateBaseSchema);\nconst RectangleStateParamsSchema = zod.z.object({\n  strokeWidth: getStateParamsSchema(zod.z.number()),\n  radius: getStateParamsSchema(zod.z.number()),\n  fillColor: getStateParamsSchema(zod.z.string()),\n  strokeColor: getStateParamsSchema(zod.z.string()),\n  backdropBlur: getStateParamsSchema(zod.z.number())\n}).merge(ItemStateBaseSchema);\nconst CustomItemStateParamsSchema = ItemStateBaseSchema;\nconst EmbedStateParamsSchema = zod.z.object({\n  radius: getStateParamsSchema(zod.z.number()),\n  opacity: getStateParamsSchema(zod.z.number().nonnegative())\n}).merge(ItemStateBaseSchema);\nconst RichTextStateParamsSchema = zod.z.object({\n  color: getStateParamsSchema(zod.z.string()),\n  letterSpacing: getStateParamsSchema(zod.z.number()),\n  wordSpacing: getStateParamsSchema(zod.z.number())\n}).merge(ItemStateBaseSchema);\nconst GroupStateParamsSchema = zod.z.object({\n  opacity: getStateParamsSchema(zod.z.number().nonnegative()),\n  blur: getStateParamsSchema(zod.z.number().nonnegative())\n}).merge(ItemStateBaseSchema);\nconst CompoundStateParamsSchema = zod.z.object({\n  opacity: getStateParamsSchema(zod.z.number().nonnegative())\n}).merge(ItemStateBaseSchema);\nconst CodeEmbedStateParamsSchema = zod.z.object({\n  opacity: getStateParamsSchema(zod.z.number().nonnegative())\n}).merge(ItemStateBaseSchema);\nconst ComponentStateParamsSchema = zod.z.object({\n  opacity: getStateParamsSchema(zod.z.number().nonnegative())\n}).merge(ItemStateBaseSchema);\nzod.z.union([\n  EmbedStateParamsSchema,\n  MediaStateParamsSchema,\n  RectangleStateParamsSchema,\n  RichTextStateParamsSchema,\n  CustomItemStateParamsSchema,\n  GroupStateParamsSchema,\n  CompoundStateParamsSchema,\n  CodeEmbedStateParamsSchema,\n  ComponentStateParamsSchema\n]);\nvar TextAlign = /* @__PURE__ */ ((TextAlign2) => {\n  TextAlign2[\"Left\"] = \"left\";\n  TextAlign2[\"Right\"] = \"right\";\n  TextAlign2[\"Center\"] = \"center\";\n  TextAlign2[\"Justify\"] = \"justify\";\n  return TextAlign2;\n})(TextAlign || {});\nvar TextTransform = /* @__PURE__ */ ((TextTransform2) => {\n  TextTransform2[\"None\"] = \"none\";\n  TextTransform2[\"Uppercase\"] = \"uppercase\";\n  TextTransform2[\"Lowercase\"] = \"lowercase\";\n  return TextTransform2;\n})(TextTransform || {});\nvar VerticalAlign = /* @__PURE__ */ ((VerticalAlign2) => {\n  VerticalAlign2[\"Super\"] = \"super\";\n  VerticalAlign2[\"Sub\"] = \"sub\";\n  VerticalAlign2[\"Unset\"] = \"unset\";\n  return VerticalAlign2;\n})(VerticalAlign || {});\nvar TextDecoration = /* @__PURE__ */ ((TextDecoration2) => {\n  TextDecoration2[\"Underline\"] = \"underline\";\n  TextDecoration2[\"None\"] = \"none\";\n  return TextDecoration2;\n})(TextDecoration || {});\nvar AnchorSide = /* @__PURE__ */ ((AnchorSide2) => {\n  AnchorSide2[\"Top\"] = \"top\";\n  AnchorSide2[\"Bottom\"] = \"bottom\";\n  AnchorSide2[\"Center\"] = \"center\";\n  return AnchorSide2;\n})(AnchorSide || {});\nvar PositionType = /* @__PURE__ */ ((PositionType2) => {\n  PositionType2[\"SectionBased\"] = \"section-based\";\n  PositionType2[\"ScreenBased\"] = \"screen-based\";\n  return PositionType2;\n})(PositionType || {});\nvar AreaAnchor = /* @__PURE__ */ ((AreaAnchor2) => {\n  AreaAnchor2[\"TopLeft\"] = \"top-left\";\n  AreaAnchor2[\"TopCenter\"] = \"top-center\";\n  AreaAnchor2[\"TopRight\"] = \"top-right\";\n  AreaAnchor2[\"MiddleLeft\"] = \"middle-left\";\n  AreaAnchor2[\"MiddleCenter\"] = \"middle-center\";\n  AreaAnchor2[\"MiddleRight\"] = \"middle-right\";\n  AreaAnchor2[\"BottomLeft\"] = \"bottom-left\";\n  AreaAnchor2[\"BottomCenter\"] = \"bottom-center\";\n  AreaAnchor2[\"BottomRight\"] = \"bottom-right\";\n  return AreaAnchor2;\n})(AreaAnchor || {});\nvar DimensionMode = /* @__PURE__ */ ((DimensionMode2) => {\n  DimensionMode2[\"ControlUnits\"] = \"control-units\";\n  DimensionMode2[\"Relative\"] = \"relative\";\n  return DimensionMode2;\n})(DimensionMode || {});\nconst ItemAreaSchema = zod.z.object({\n  top: zod.z.number(),\n  left: zod.z.number(),\n  width: zod.z.number(),\n  height: zod.z.number(),\n  zIndex: zod.z.number(),\n  angle: zod.z.number(),\n  anchorSide: zod.z.nativeEnum(AnchorSide).optional(),\n  scale: zod.z.number().nonnegative(),\n  positionType: zod.z.nativeEnum(PositionType),\n  scaleAnchor: zod.z.nativeEnum(AreaAnchor)\n});\nconst Link = zod.z.object({\n  url: zod.z.string().min(1),\n  target: zod.z.string().min(1)\n});\nconst CompoundSettingsSchema = zod.z.object({\n  positionAnchor: zod.z.nativeEnum(AreaAnchor),\n  widthMode: zod.z.nativeEnum(DimensionMode),\n  heightMode: zod.z.nativeEnum(DimensionMode)\n});\nconst ItemBaseSchema = zod.z.object({\n  id: zod.z.string().min(1),\n  area: zod.z.record(ItemAreaSchema),\n  hidden: zod.z.record(zod.z.boolean()),\n  link: Link.optional(),\n  compoundSettings: zod.z.record(CompoundSettingsSchema).optional(),\n  layoutParams: zod.z.record(zod.z.any()).optional()\n});\nvar ArticleItemType = /* @__PURE__ */ ((ArticleItemType2) => {\n  ArticleItemType2[\"Image\"] = \"image\";\n  ArticleItemType2[\"RichText\"] = \"richtext\";\n  ArticleItemType2[\"Video\"] = \"video\";\n  ArticleItemType2[\"Rectangle\"] = \"rectangle\";\n  ArticleItemType2[\"VimeoEmbed\"] = \"vimeo-embed\";\n  ArticleItemType2[\"YoutubeEmbed\"] = \"youtube-embed\";\n  ArticleItemType2[\"Custom\"] = \"custom\";\n  ArticleItemType2[\"Group\"] = \"group\";\n  ArticleItemType2[\"CodeEmbed\"] = \"code-embed\";\n  ArticleItemType2[\"Compound\"] = \"compound\";\n  ArticleItemType2[\"Component\"] = \"component\";\n  return ArticleItemType2;\n})(ArticleItemType || {});\nconst pointerEvents$1 = zod.z.enum([\"never\", \"when_visible\", \"always\"]).optional();\nconst RichTextEntitySchema = zod.z.object({\n  start: zod.z.number().nonnegative(),\n  end: zod.z.number().nonnegative(),\n  type: zod.z.string(),\n  data: zod.z.any().optional()\n});\nconst RichTextStyleSchema = zod.z.object({\n  start: zod.z.number().nonnegative(),\n  end: zod.z.number().nonnegative(),\n  style: zod.z.string().min(1),\n  value: zod.z.string().optional()\n});\nconst RichTextBlockSchema = zod.z.lazy(() => zod.z.object({\n  start: zod.z.number().nonnegative(),\n  end: zod.z.number().nonnegative(),\n  type: zod.z.string().min(1),\n  entities: zod.z.array(RichTextEntitySchema).optional(),\n  children: zod.z.array(RichTextBlockSchema).optional(),\n  data: zod.z.any().optional()\n}));\nconst RichTextItemSchema = ItemBaseSchema.extend({\n  type: zod.z.literal(ArticleItemType.RichText),\n  commonParams: zod.z.object({\n    text: zod.z.string(),\n    blocks: zod.z.array(RichTextBlockSchema).optional(),\n    pointerEvents: pointerEvents$1\n  }),\n  sticky: zod.z.record(\n    zod.z.object({\n      from: zod.z.number(),\n      to: zod.z.number().optional()\n    }).nullable()\n  ),\n  layoutParams: zod.z.record(\n    zod.z.object({\n      rangeStyles: zod.z.array(RichTextStyleSchema).optional(),\n      textAlign: zod.z.nativeEnum(TextAlign),\n      sizing: zod.z.string(),\n      blur: zod.z.number(),\n      fontSize: zod.z.number(),\n      lineHeight: zod.z.number(),\n      letterSpacing: zod.z.number(),\n      wordSpacing: zod.z.number(),\n      textTransform: zod.z.nativeEnum(TextTransform),\n      verticalAlign: zod.z.nativeEnum(VerticalAlign),\n      color: zod.z.string(),\n      typeFace: zod.z.string(),\n      fontStyle: zod.z.string(),\n      fontWeight: zod.z.number(),\n      fontVariant: zod.z.string(),\n      isDraggable: zod.z.boolean().optional()\n    })\n  ),\n  state: zod.z.record(RichTextStateParamsSchema)\n});\nconst pointerEvents = zod.z.enum([\"never\", \"when_visible\", \"always\"]).optional();\nconst FXControlSchema = zod.z.discriminatedUnion(\"type\", [\n  zod.z.object({\n    type: zod.z.literal(\"float\"),\n    shaderParam: zod.z.string(),\n    value: zod.z.number()\n  }),\n  zod.z.object({\n    type: zod.z.literal(\"int\"),\n    shaderParam: zod.z.string(),\n    value: zod.z.number()\n  }),\n  zod.z.object({\n    type: zod.z.literal(\"vec2\"),\n    shaderParam: zod.z.string(),\n    value: zod.z.tuple([zod.z.number(), zod.z.number()])\n  })\n]);\nconst FXParams = zod.z.object({\n  url: zod.z.string().min(1),\n  hasGLEffect: zod.z.boolean().optional(),\n  fragmentShader: zod.z.string().nullable(),\n  FXControls: zod.z.array(FXControlSchema).optional()\n});\nconst ImageItemSchema = ItemBaseSchema.extend({\n  type: zod.z.literal(ArticleItemType.Image),\n  commonParams: zod.z.object({\n    pointerEvents\n  }).merge(FXParams),\n  sticky: zod.z.record(\n    zod.z.object({\n      from: zod.z.number(),\n      to: zod.z.number().optional()\n    }).nullable()\n  ),\n  layoutParams: zod.z.record(\n    zod.z.object({\n      opacity: zod.z.number().nonnegative(),\n      radius: zod.z.number(),\n      strokeWidth: zod.z.number(),\n      strokeColor: zod.z.string(),\n      blur: zod.z.number(),\n      isDraggable: zod.z.boolean().optional()\n    })\n  ),\n  state: zod.z.record(MediaStateParamsSchema)\n});\nconst VideoItemSchema = ItemBaseSchema.extend({\n  type: zod.z.literal(ArticleItemType.Video),\n  commonParams: zod.z.object({\n    coverUrl: zod.z.string().nullable(),\n    pointerEvents\n  }).merge(FXParams),\n  sticky: zod.z.record(\n    zod.z.object({\n      from: zod.z.number(),\n      to: zod.z.number().optional()\n    }).nullable()\n  ),\n  layoutParams: zod.z.record(\n    zod.z.object({\n      autoplay: zod.z.boolean(),\n      scrollPlayback: zod.z.object({\n        from: zod.z.number(),\n        to: zod.z.number()\n      }).nullable(),\n      opacity: zod.z.number().nonnegative(),\n      radius: zod.z.number(),\n      strokeWidth: zod.z.number(),\n      strokeColor: zod.z.string(),\n      blur: zod.z.number(),\n      isDraggable: zod.z.boolean().optional()\n    })\n  ),\n  state: zod.z.record(MediaStateParamsSchema)\n});\nconst RectangleItemSchema = ItemBaseSchema.extend({\n  type: zod.z.literal(ArticleItemType.Rectangle),\n  commonParams: zod.z.object({\n    ratioLock: zod.z.boolean(),\n    pointerEvents\n  }),\n  sticky: zod.z.record(\n    zod.z.object({\n      from: zod.z.number(),\n      to: zod.z.number().optional()\n    }).nullable()\n  ),\n  layoutParams: zod.z.record(\n    zod.z.object({\n      radius: zod.z.number(),\n      strokeWidth: zod.z.number(),\n      fillColor: zod.z.string().min(1),\n      strokeColor: zod.z.string().min(1),\n      blur: zod.z.number(),\n      backdropBlur: zod.z.number(),\n      blurMode: zod.z.enum([\"default\", \"backdrop\"]),\n      isDraggable: zod.z.boolean().optional()\n    })\n  ),\n  state: zod.z.record(RectangleStateParamsSchema)\n});\nconst CustomItemSchema = ItemBaseSchema.extend({\n  type: zod.z.literal(ArticleItemType.Custom),\n  commonParams: zod.z.object({\n    name: zod.z.string(),\n    pointerEvents\n  }),\n  sticky: zod.z.record(\n    zod.z.object({\n      from: zod.z.number(),\n      to: zod.z.number().optional()\n    }).nullable()\n  ),\n  layoutParams: zod.z.record(zod.z.object({\n    isDraggable: zod.z.boolean().optional()\n  })),\n  state: zod.z.record(CustomItemStateParamsSchema)\n});\nconst VimeoEmbedItemSchema = ItemBaseSchema.extend({\n  type: zod.z.literal(ArticleItemType.VimeoEmbed),\n  commonParams: zod.z.object({\n    play: zod.z.union([zod.z.literal(\"on-hover\"), zod.z.literal(\"on-click\"), zod.z.literal(\"auto\")]),\n    controls: zod.z.boolean(),\n    loop: zod.z.boolean(),\n    muted: zod.z.boolean(),\n    pictureInPicture: zod.z.boolean(),\n    url: zod.z.string().min(1),\n    coverUrl: zod.z.string().nullable(),\n    ratioLock: zod.z.boolean(),\n    pointerEvents\n  }),\n  sticky: zod.z.record(\n    zod.z.object({\n      from: zod.z.number(),\n      to: zod.z.number().optional()\n    }).nullable()\n  ),\n  layoutParams: zod.z.record(\n    zod.z.object({\n      radius: zod.z.number(),\n      blur: zod.z.number(),\n      opacity: zod.z.number().nonnegative()\n    })\n  ),\n  state: zod.z.record(EmbedStateParamsSchema)\n});\nconst YoutubeEmbedItemSchema = ItemBaseSchema.extend({\n  type: zod.z.literal(ArticleItemType.YoutubeEmbed),\n  commonParams: zod.z.object({\n    play: zod.z.enum([\"on-hover\", \"on-click\", \"auto\"]),\n    controls: zod.z.boolean(),\n    loop: zod.z.boolean(),\n    url: zod.z.string().min(1),\n    coverUrl: zod.z.string().nullable(),\n    pointerEvents\n  }),\n  sticky: zod.z.record(\n    zod.z.object({\n      from: zod.z.number(),\n      to: zod.z.number().optional()\n    }).nullable()\n  ),\n  layoutParams: zod.z.record(\n    zod.z.object({\n      radius: zod.z.number(),\n      blur: zod.z.number(),\n      opacity: zod.z.number().nonnegative()\n    })\n  ),\n  state: zod.z.record(EmbedStateParamsSchema)\n});\nconst CodeEmbedItemSchema = ItemBaseSchema.extend({\n  type: zod.z.literal(ArticleItemType.CodeEmbed),\n  commonParams: zod.z.object({\n    html: zod.z.string(),\n    scale: zod.z.boolean(),\n    iframe: zod.z.boolean(),\n    pointerEvents\n  }),\n  sticky: zod.z.record(\n    zod.z.object({\n      from: zod.z.number(),\n      to: zod.z.number().optional()\n    }).nullable()\n  ),\n  layoutParams: zod.z.record(\n    zod.z.object({\n      areaAnchor: zod.z.nativeEnum(AreaAnchor),\n      opacity: zod.z.number().nonnegative(),\n      blur: zod.z.number(),\n      isDraggable: zod.z.boolean().optional()\n    })\n  ),\n  state: zod.z.record(CodeEmbedStateParamsSchema)\n});\nconst ComponentItemSchema = ItemBaseSchema.extend({\n  type: zod.z.literal(ArticleItemType.Component),\n  commonParams: zod.z.object({\n    componentId: zod.z.string(),\n    content: zod.z.any().optional()\n  }),\n  sticky: zod.z.record(\n    zod.z.object({\n      from: zod.z.number(),\n      to: zod.z.number().optional()\n    }).nullable()\n  ),\n  layoutParams: zod.z.record(zod.z.object({\n    parameters: zod.z.any().optional(),\n    opacity: zod.z.number().nonnegative(),\n    blur: zod.z.number()\n  })),\n  state: zod.z.record(ComponentStateParamsSchema)\n});\nconst ItemSchema = zod.z.lazy(() => zod.z.discriminatedUnion(\"type\", [\n  ImageItemSchema,\n  VideoItemSchema,\n  RectangleItemSchema,\n  CustomItemSchema,\n  RichTextItemSchema,\n  VimeoEmbedItemSchema,\n  YoutubeEmbedItemSchema,\n  CodeEmbedItemSchema,\n  ComponentItemSchema,\n  ItemBaseSchema.extend({\n    type: zod.z.literal(ArticleItemType.Group),\n    commonParams: zod.z.object({\n      pointerEvents\n    }),\n    items: zod.z.array(ItemSchema),\n    sticky: zod.z.record(\n      zod.z.object({\n        from: zod.z.number(),\n        to: zod.z.number().optional()\n      }).nullable()\n    ),\n    layoutParams: zod.z.record(\n      zod.z.object({\n        opacity: zod.z.number().nonnegative(),\n        blur: zod.z.number()\n      })\n    ),\n    state: zod.z.record(GroupStateParamsSchema)\n  }),\n  ItemBaseSchema.extend({\n    type: zod.z.literal(ArticleItemType.Compound),\n    commonParams: zod.z.object({\n      overflow: zod.z.enum([\"hidden\", \"visible\"]),\n      pointerEvents\n    }),\n    items: zod.z.array(ItemSchema),\n    sticky: zod.z.record(\n      zod.z.object({\n        from: zod.z.number(),\n        to: zod.z.number().optional()\n      }).nullable()\n    ),\n    layoutParams: zod.z.record(\n      zod.z.object({\n        opacity: zod.z.number().nonnegative()\n      })\n    ),\n    state: zod.z.record(CompoundStateParamsSchema)\n  })\n]));\nconst SectionHeightSchema = zod.z.object({\n  mode: zod.z.nativeEnum(SectionHeightMode),\n  units: zod.z.number().nonnegative(),\n  vhUnits: zod.z.number().nonnegative().optional()\n});\nconst SectionSchema = zod.z.object({\n  id: zod.z.string().min(1),\n  items: zod.z.array(ItemSchema),\n  name: zod.z.string().optional(),\n  height: zod.z.record(SectionHeightSchema),\n  position: zod.z.record(zod.z.number()),\n  hidden: zod.z.record(zod.z.boolean()),\n  color: zod.z.record(zod.z.nullable(zod.z.string())),\n  media: zod.z.record(zod.z.object({\n    url: zod.z.string(),\n    size: zod.z.string(),\n    position: zod.z.string(),\n    offsetX: zod.z.number().nullable()\n  })).optional()\n});\nconst TriggerSchema = zod.z.object({\n  itemId: zod.z.string(),\n  type: zod.z.enum([\"hover-in\", \"hover-out\", \"click\"]),\n  from: zod.z.string(),\n  to: zod.z.string()\n});\nconst VideoInteractionActionSchema = zod.z.object({\n  type: zod.z.enum([\"play\", \"pause\"]),\n  itemId: zod.z.string()\n});\nconst StateSchema = zod.z.object({\n  id: zod.z.string(),\n  actions: zod.z.array(VideoInteractionActionSchema).optional()\n});\nconst InteractionSchema = zod.z.object({\n  id: zod.z.string(),\n  triggers: zod.z.array(TriggerSchema),\n  states: zod.z.array(StateSchema),\n  startStateId: zod.z.string()\n});\nconst ArticleSchema = zod.z.object({\n  id: zod.z.string().min(1),\n  sections: zod.z.array(SectionSchema),\n  interactions: zod.z.record(zod.z.array(InteractionSchema))\n});\nconst LayoutSchema = zod.z.object({\n  id: zod.z.string(),\n  title: zod.z.string(),\n  startsWith: zod.z.number().nonnegative(),\n  exemplary: zod.z.number().positive()\n});\nvar FontFileTypes = /* @__PURE__ */ ((FontFileTypes2) => {\n  FontFileTypes2[\"OTF\"] = \"otf\";\n  FontFileTypes2[\"TTF\"] = \"ttf\";\n  FontFileTypes2[\"WOFF\"] = \"woff\";\n  FontFileTypes2[\"WOFF2\"] = \"woff2\";\n  FontFileTypes2[\"EOT\"] = \"eot\";\n  return FontFileTypes2;\n})(FontFileTypes || {});\nconst ProjectSchema = zod.z.object({\n  id: zod.z.string().min(1),\n  html: zod.z.object({\n    head: zod.z.string(),\n    afterBodyOpen: zod.z.string(),\n    beforeBodyClose: zod.z.string()\n  }),\n  meta: zod.z.object({\n    title: zod.z.string().optional(),\n    description: zod.z.string().optional(),\n    opengraphThumbnail: zod.z.string().optional(),\n    keywords: zod.z.string().optional(),\n    favicon: zod.z.string().optional()\n  }),\n  layouts: zod.z.array(LayoutSchema),\n  pages: zod.z.array(zod.z.object({\n    title: zod.z.string(),\n    articleId: zod.z.string().min(1),\n    slug: zod.z.string(),\n    meta: zod.z.object({\n      title: zod.z.string().optional(),\n      description: zod.z.string().optional(),\n      opengraphThumbnail: zod.z.string().optional(),\n      keywords: zod.z.string().optional(),\n      enabled: zod.z.boolean()\n    }).optional(),\n    id: zod.z.string().min(1)\n  })),\n  fonts: zod.z.object({\n    google: zod.z.string(),\n    adobe: zod.z.string(),\n    custom: zod.z.array(zod.z.object({\n      name: zod.z.string().min(1),\n      style: zod.z.string().min(1),\n      weight: zod.z.number(),\n      files: zod.z.array(\n        zod.z.object({\n          type: zod.z.nativeEnum(FontFileTypes),\n          url: zod.z.string().url()\n        })\n      )\n    }))\n  })\n});\nvar KeyframeType = /* @__PURE__ */ ((KeyframeType2) => {\n  KeyframeType2[\"Dimensions\"] = \"dimensions\";\n  KeyframeType2[\"Position\"] = \"position\";\n  KeyframeType2[\"Rotation\"] = \"rotation\";\n  KeyframeType2[\"BorderRadius\"] = \"border-radius\";\n  KeyframeType2[\"BorderWidth\"] = \"border-width\";\n  KeyframeType2[\"Color\"] = \"color\";\n  KeyframeType2[\"BorderColor\"] = \"border-color\";\n  KeyframeType2[\"Opacity\"] = \"opacity\";\n  KeyframeType2[\"Scale\"] = \"scale\";\n  KeyframeType2[\"TextColor\"] = \"text-color\";\n  KeyframeType2[\"LetterSpacing\"] = \"letter-spacing\";\n  KeyframeType2[\"WordSpacing\"] = \"word-spacing\";\n  KeyframeType2[\"Blur\"] = \"blur\";\n  KeyframeType2[\"BackdropBlur\"] = \"backdrop-blur\";\n  KeyframeType2[\"FXParams\"] = \"fx-params\";\n  return KeyframeType2;\n})(KeyframeType || {});\nconst KeyframesBaseSchema = zod.z.object({\n  id: zod.z.string().min(1),\n  layoutId: zod.z.string().min(1),\n  itemId: zod.z.string().min(1),\n  position: zod.z.number()\n});\nconst DimensionsKeyframeSchema = KeyframesBaseSchema.extend({\n  type: zod.z.literal(KeyframeType.Dimensions),\n  value: zod.z.object({\n    width: zod.z.number().nonnegative(),\n    height: zod.z.number().nonnegative()\n  })\n});\nconst PositionKeyframeSchema = KeyframesBaseSchema.extend({\n  type: zod.z.literal(KeyframeType.Position),\n  value: zod.z.object({\n    top: zod.z.number(),\n    left: zod.z.number()\n  })\n});\nconst RotationKeyframeSchema = KeyframesBaseSchema.extend({\n  type: zod.z.literal(KeyframeType.Rotation),\n  value: zod.z.object({\n    angle: zod.z.number()\n  })\n});\nconst BorderRadiusKeyframeSchema = KeyframesBaseSchema.extend({\n  type: zod.z.literal(KeyframeType.BorderRadius),\n  value: zod.z.object({\n    radius: zod.z.number().nonnegative()\n  })\n});\nconst BorderWidthKeyframeSchema = KeyframesBaseSchema.extend({\n  type: zod.z.literal(KeyframeType.BorderWidth),\n  value: zod.z.object({\n    borderWidth: zod.z.number().nonnegative()\n  })\n});\nconst ColorKeyframeSchema = KeyframesBaseSchema.extend({\n  type: zod.z.literal(KeyframeType.Color),\n  value: zod.z.object({\n    color: zod.z.string()\n  })\n});\nconst BorderColorKeyframeSchema = KeyframesBaseSchema.extend({\n  type: zod.z.literal(KeyframeType.BorderColor),\n  value: zod.z.object({\n    color: zod.z.string()\n  })\n});\nconst OpacityKeyframeSchema = KeyframesBaseSchema.extend({\n  type: zod.z.literal(KeyframeType.Opacity),\n  value: zod.z.object({\n    opacity: zod.z.number().nonnegative()\n  })\n});\nconst ScaleKeyframeSchema = KeyframesBaseSchema.extend({\n  type: zod.z.literal(KeyframeType.Scale),\n  value: zod.z.object({\n    scale: zod.z.number().nonnegative()\n  })\n});\nconst BlurKeyframeSchema = KeyframesBaseSchema.extend({\n  type: zod.z.literal(KeyframeType.Blur),\n  value: zod.z.object({\n    blur: zod.z.number()\n  })\n});\nconst BackdropBlurKeyframeSchema = KeyframesBaseSchema.extend({\n  type: zod.z.literal(KeyframeType.BackdropBlur),\n  value: zod.z.object({\n    backdropBlur: zod.z.number()\n  })\n});\nconst TextColorKeyframeSchema = KeyframesBaseSchema.extend({\n  type: zod.z.literal(KeyframeType.TextColor),\n  value: zod.z.object({\n    color: zod.z.string()\n  })\n});\nconst LetterSpacingKeyframeSchema = KeyframesBaseSchema.extend({\n  type: zod.z.literal(KeyframeType.LetterSpacing),\n  value: zod.z.object({\n    letterSpacing: zod.z.number()\n  })\n});\nconst WordSpacingKeyframeSchema = KeyframesBaseSchema.extend({\n  type: zod.z.literal(KeyframeType.WordSpacing),\n  value: zod.z.object({\n    wordSpacing: zod.z.number()\n  })\n});\nconst FXParamsKeyframeSchema = KeyframesBaseSchema.extend({\n  type: zod.z.literal(KeyframeType.FXParams),\n  value: zod.z.record(zod.z.string(), zod.z.number())\n});\nconst KeyframeSchema = zod.z.discriminatedUnion(\"type\", [\n  DimensionsKeyframeSchema,\n  PositionKeyframeSchema,\n  RotationKeyframeSchema,\n  BorderRadiusKeyframeSchema,\n  BorderWidthKeyframeSchema,\n  ColorKeyframeSchema,\n  BorderColorKeyframeSchema,\n  OpacityKeyframeSchema,\n  ScaleKeyframeSchema,\n  BlurKeyframeSchema,\n  BackdropBlurKeyframeSchema,\n  TextColorKeyframeSchema,\n  LetterSpacingKeyframeSchema,\n  WordSpacingKeyframeSchema,\n  FXParamsKeyframeSchema\n]);\nconst KeyframesSchema = zod.z.array(KeyframeSchema);\nclass Client {\n  constructor(APIUrl, fetchImpl = fetch$1) {\n    this.fetchImpl = fetchImpl;\n    this.url = new url.URL(APIUrl);\n    if (!this.url.username) {\n      throw new Error(\"Project ID is missing in the URL.\");\n    }\n    if (!this.url.password) {\n      throw new Error(\"API key is missing in the URL.\");\n    }\n  }\n  static getPageMeta(projectMeta, pageMeta) {\n    return pageMeta.enabled ? {\n      title: pageMeta.title ? pageMeta.title : projectMeta.title ?? \"\",\n      description: pageMeta.description ? pageMeta.description : projectMeta.description ?? \"\",\n      keywords: pageMeta.keywords ? pageMeta.keywords : projectMeta.keywords ?? \"\",\n      opengraphThumbnail: pageMeta.opengraphThumbnail ? pageMeta.opengraphThumbnail : projectMeta.opengraphThumbnail ?? \"\",\n      favicon: projectMeta.favicon ?? \"\"\n    } : projectMeta;\n  }\n  async getPageData(pageSlug) {\n    try {\n      const project = await this.fetchProject();\n      const articleId = this.findArticleIdByPageSlug(pageSlug, project.pages);\n      const { article, keyframes } = await this.fetchArticle(articleId);\n      const page = project.pages.find((page2) => page2.slug === pageSlug);\n      const meta = Client.getPageMeta(project.meta, page == null ? void 0 : page.meta);\n      return {\n        project,\n        article,\n        keyframes,\n        meta\n      };\n    } catch (e) {\n      throw e;\n    }\n  }\n  async getProjectPagesPaths() {\n    try {\n      const { pages } = await this.fetchProject();\n      return pages.map((p) => p.slug);\n    } catch (e) {\n      throw e;\n    }\n  }\n  async getLayouts() {\n    try {\n      const { layouts } = await this.fetchProject();\n      return layouts;\n    } catch (e) {\n      throw e;\n    }\n  }\n  async fetchProject() {\n    const { username: projectId, password: apiKey, origin } = this.url;\n    const url$1 = new url.URL(`/projects/${projectId}`, origin);\n    const response = await this.fetchImpl(url$1.href, {\n      headers: {\n        Authorization: `Bearer ${apiKey}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`Failed to fetch project with id #${projectId}: ${response.statusText}`);\n    }\n    const data = await response.json();\n    const project = ProjectSchema.parse(data);\n    return project;\n  }\n  async fetchArticle(articleId) {\n    const { username: projectId, password: apiKey, origin } = this.url;\n    const url$1 = new url.URL(`/projects/${projectId}/articles/${articleId}`, origin);\n    const response = await this.fetchImpl(url$1.href, {\n      headers: {\n        Authorization: `Bearer ${apiKey}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`Failed to fetch article with id #${articleId}: ${response.statusText}`);\n    }\n    const data = await response.json();\n    const article = ArticleSchema.parse(data.article);\n    const keyframes = KeyframesSchema.parse(data.keyframes);\n    return { article, keyframes };\n  }\n  findArticleIdByPageSlug(slug, pages) {\n    const { username: projectId } = this.url;\n    const page = pages.find((page2) => page2.slug === slug);\n    if (!page) {\n      throw new Error(`Page with a slug ${slug} was not found in project with id #${projectId}`);\n    }\n    return page.articleId;\n  }\n}\nconst FILE_TYPES_MAP = {\n  ttf: \"truetype\",\n  otf: \"opentype\"\n};\nclass FontFaceGenerator {\n  constructor(fonts) {\n    this.fonts = fonts;\n  }\n  generate() {\n    return this.fonts.map((font) => {\n      const eotFile = font.files.find((file) => file.type === \"eot\");\n      const otherFiles = font.files.filter((file) => file.type !== \"eot\").map((file) => `url('${file.url}') format('${FILE_TYPES_MAP[file.type] || file.type}')`);\n      return `\n@font-face {\n  font-family: \"${font.name}\";\n  font-weight: ${font.weight};\n  font-style: ${font.style};\n  ${eotFile ? `src: url('${eotFile.url}');\n  ` : \"\"}src: ${otherFiles.join(\", \")};\n}`;\n    }).join(\"\\n\");\n  }\n}\nfunction getLayoutStyles(layouts, layoutValues, mapToStyles) {\n  const mediaQueries = layouts.sort((a, b) => a.startsWith - b.startsWith).reduce(\n    (acc, layout) => {\n      const values = layoutValues.map((lv) => lv[layout.id]);\n      return `\n        ${acc}\n        ${layout.startsWith !== 0 ? `@media (min-width: ${layout.startsWith}px) {${mapToStyles(values, layout.exemplary)}}` : `${mapToStyles(values, layout.exemplary)}`}`;\n    },\n    \"\"\n  );\n  return mediaQueries;\n}\nfunction getLayoutMediaQuery(layoutId, layouts) {\n  const sorted = layouts.slice().sort((a, b) => a.startsWith - b.startsWith);\n  const layoutIndex = sorted.findIndex((l) => l.id === layoutId);\n  if (layoutIndex === -1) {\n    throw new Error(`No layout was found by the given id #${layoutId}`);\n  }\n  const current = sorted[layoutIndex];\n  const next = sorted[layoutIndex + 1];\n  if (!next) {\n    return `@media (min-width: ${current.startsWith}px)`;\n  }\n  return `@media (min-width: ${current.startsWith}px) and (max-width: ${next.startsWith - 1}px)`;\n}\nclass Writer {\n  constructor(size) {\n    this.data = new Uint8Array(size);\n    this.idx = 0;\n    this.size = size;\n  }\n  getData() {\n    if (this.idx !== this.size) throw new Error(\"Mismatch between size reserved and sized used\");\n    return this.data.slice(0, this.idx);\n  }\n  writeUint8(value) {\n    this.data.set([value], this.idx);\n    this.idx += 1;\n  }\n  writeUint16(value) {\n    const arr = new Uint16Array(1);\n    arr[0] = value;\n    const buffer = new Uint8Array(arr.buffer);\n    this.data.set([buffer[1], buffer[0]], this.idx);\n    this.idx += 2;\n  }\n  writeUint8Array(value) {\n    this.data.set(value, this.idx);\n    this.idx += value.length;\n  }\n}\nconst getExtradata = (avccBox) => {\n  let i;\n  let size = 7;\n  for (i = 0; i < avccBox.SPS.length; i += 1) {\n    size += 2 + avccBox.SPS[i].length;\n  }\n  for (i = 0; i < avccBox.PPS.length; i += 1) {\n    size += 2 + avccBox.PPS[i].length;\n  }\n  const writer = new Writer(size);\n  writer.writeUint8(avccBox.configurationVersion);\n  writer.writeUint8(avccBox.AVCProfileIndication);\n  writer.writeUint8(avccBox.profile_compatibility);\n  writer.writeUint8(avccBox.AVCLevelIndication);\n  writer.writeUint8(avccBox.lengthSizeMinusOne + (63 << 2));\n  writer.writeUint8(avccBox.nb_SPS_nalus + (7 << 5));\n  for (i = 0; i < avccBox.SPS.length; i += 1) {\n    writer.writeUint16(avccBox.SPS[i].length);\n    writer.writeUint8Array(avccBox.SPS[i].nalu);\n  }\n  writer.writeUint8(avccBox.nb_PPS_nalus);\n  for (i = 0; i < avccBox.PPS.length; i += 1) {\n    writer.writeUint16(avccBox.PPS[i].length);\n    writer.writeUint8Array(avccBox.PPS[i].nalu);\n  }\n  return writer.getData();\n};\nconst decodeVideo = (src, emitFrame, { VideoDecoder: VideoDecoder2, EncodedVideoChunk: EncodedVideoChunk2, debug }) => new Promise((resolve, reject) => {\n  if (debug) console.info(\"Decoding video from\", src);\n  try {\n    const mp4boxfile = MP4Box__namespace.createFile();\n    let codec;\n    const decoder = new VideoDecoder2({\n      output: (frame) => {\n        createImageBitmap(frame, { resizeQuality: \"low\" }).then((bitmap) => {\n          emitFrame(bitmap);\n          frame.close();\n          if (decoder.decodeQueueSize <= 0) {\n            setTimeout(() => {\n              if (decoder.state !== \"closed\") {\n                decoder.close();\n                resolve();\n              }\n            }, 500);\n          }\n        });\n      },\n      error: (e) => {\n        console.error(e);\n        reject(e);\n      }\n    });\n    mp4boxfile.onReady = (info) => {\n      if (info && info.videoTracks && info.videoTracks[0]) {\n        [{ codec }] = info.videoTracks;\n        if (debug) console.info(\"Video with codec:\", codec);\n        const avccBox = mp4boxfile.moov.traks[0].mdia.minf.stbl.stsd.entries[0].avcC;\n        const extradata = getExtradata(avccBox);\n        decoder.configure({ codec, description: extradata });\n        mp4boxfile.setExtractionOptions(info.videoTracks[0].id);\n        mp4boxfile.start();\n      } else reject(new Error(\"URL provided is not a valid mp4 video file.\"));\n    };\n    mp4boxfile.onSamples = (track_id, ref, samples) => {\n      for (let i = 0; i < samples.length; i += 1) {\n        const sample = samples[i];\n        const type = sample.is_sync ? \"key\" : \"delta\";\n        const chunk = new EncodedVideoChunk2({\n          type,\n          timestamp: sample.cts,\n          duration: sample.duration,\n          data: sample.data\n        });\n        decoder.decode(chunk);\n      }\n    };\n    fetch(src).then((res) => {\n      const reader = res.body.getReader();\n      let offset = 0;\n      function appendBuffers({ done, value }) {\n        if (done) {\n          mp4boxfile.flush();\n          return null;\n        }\n        const buf = value.buffer;\n        buf.fileStart = offset;\n        offset += buf.byteLength;\n        mp4boxfile.appendBuffer(buf);\n        return reader.read().then(appendBuffers);\n      }\n      return reader.read().then(appendBuffers);\n    });\n  } catch (e) {\n    reject(e);\n  }\n});\nconst videoDecoder = (src, emitFrame, debug) => {\n  if (typeof VideoDecoder === \"function\" && typeof EncodedVideoChunk === \"function\") {\n    if (debug)\n      console.info(\"WebCodecs is natively supported, using native version...\");\n    return decodeVideo(src, emitFrame, {\n      VideoDecoder,\n      EncodedVideoChunk,\n      debug\n    });\n  }\n  if (debug) console.info(\"WebCodecs is not available in this browser.\");\n  return Promise.resolve();\n};\nclass ScrollPlaybackVideoManager {\n  constructor(options) {\n    this.currentTime = 0;\n    this.targetTime = 0;\n    this.canvas = null;\n    this.context = null;\n    this.frames = [];\n    this.frameRate = 0;\n    this.transitioning = false;\n    this.debug = false;\n    this.frameThreshold = 0.1;\n    this.transitionSpeed = 10;\n    this.useWebCodecs = true;\n    this.resize = () => {\n      if (this.debug) console.info(\"ScrollVideo resizing...\");\n      if (this.canvas) {\n        this.setCoverStyle(this.canvas);\n      } else if (this.video) {\n        this.setCoverStyle(this.video);\n      }\n      this.paintCanvasFrame(Math.floor(this.currentTime * this.frameRate));\n    };\n    this.decodeVideo = () => {\n      if (!this.video) return;\n      if (this.useWebCodecs && this.video.src) {\n        videoDecoder(\n          this.video.src,\n          (frame) => {\n            this.frames.push(frame);\n          },\n          this.debug\n        ).then(() => {\n          if (!this.video || !this.container) return;\n          if (this.frames.length === 0) {\n            if (this.debug) console.error(\"No frames were received from webCodecs\");\n            return;\n          }\n          this.frameRate = this.frames.length / this.video.duration;\n          if (this.debug) console.info(\"Received\", this.frames.length, \"frames\");\n          this.canvas = document.createElement(\"canvas\");\n          this.context = this.canvas.getContext(\"2d\");\n          this.video.style.display = \"none\";\n          this.container.appendChild(this.canvas);\n          this.paintCanvasFrame(Math.floor(this.currentTime * this.frameRate));\n        }).catch(() => {\n          if (this.debug) console.error(\"Error encountered while decoding video\");\n          this.frames = [];\n          this.video.load();\n        });\n      }\n    };\n    this.resizeObserver = new ResizeObserver(() => {\n      this.resize();\n    });\n    const {\n      src,\n      videoContainer\n    } = options;\n    if (typeof document !== \"object\") {\n      console.error(\"ScrollVideo must be initiated in a DOM context\");\n      return;\n    }\n    if (!videoContainer) {\n      console.error(\"scrollVideoContainer must be a valid DOM object\");\n      return;\n    }\n    if (!src) {\n      console.error(\"Must provide valid video src to ScrollVideo\");\n      return;\n    }\n    this.container = typeof videoContainer === \"string\" ? document.getElementById(videoContainer) : videoContainer;\n    this.resizeObserver.observe(this.container);\n    this.video = document.createElement(\"video\");\n    this.video.src = src;\n    this.video.preload = \"auto\";\n    this.video.tabIndex = 0;\n    this.video.playsInline = true;\n    this.video.muted = true;\n    this.video.pause();\n    this.video.load();\n    this.container.appendChild(this.video);\n    const browserEngine = new UAParser().getEngine();\n    this.isSafari = browserEngine.name === \"WebKit\";\n    if (this.debug && this.isSafari) console.info(\"Safari browser detected\");\n    this.video.addEventListener(\"loadedmetadata\", () => this.setTargetTimePercent(0, true), { once: true });\n    this.video.addEventListener(\"progress\", this.resize);\n    this.decodeVideo();\n  }\n  setCoverStyle(el) {\n    if (el && this.container) {\n      el.style.position = \"absolute\";\n      el.style.top = \"50%\";\n      el.style.left = \"50%\";\n      el.style.transform = \"translate(-50%, -50%)\";\n      const { width: containerWidth, height: containerHeight } = this.container.getBoundingClientRect();\n      const width = el.videoWidth || el.width;\n      const height = el.videoHeight || el.height;\n      if (containerWidth / containerHeight > width / height) {\n        el.style.width = \"100%\";\n        el.style.height = \"auto\";\n      } else {\n        el.style.height = \"100%\";\n        el.style.width = \"auto\";\n      }\n    }\n  }\n  paintCanvasFrame(frameNum) {\n    if (this.canvas) {\n      const frameIdx = Math.min(frameNum, this.frames.length - 1);\n      const currFrame = this.frames[frameIdx];\n      if (currFrame && this.container) {\n        if (this.debug) console.info(\"Painting frame\", frameIdx);\n        this.canvas.width = currFrame.width;\n        this.canvas.height = currFrame.height;\n        const { width, height } = this.container.getBoundingClientRect();\n        this.resetCanvasDimensions(width, height, currFrame.width, currFrame.height);\n        this.context.drawImage(currFrame, 0, 0, currFrame.width, currFrame.height);\n      }\n    }\n  }\n  transitionToTargetTime(jump) {\n    if (!this.video) return;\n    if (this.debug) console.info(\"Transitioning targetTime:\", this.targetTime, \"currentTime:\", this.currentTime);\n    if (isNaN(this.targetTime) || Math.abs(this.currentTime - this.targetTime) < this.frameThreshold) {\n      this.video.pause();\n      this.transitioning = false;\n      return;\n    }\n    if (this.targetTime > this.video.duration) {\n      this.targetTime = this.video.duration;\n    }\n    if (this.targetTime < 0) {\n      this.targetTime = 0;\n    }\n    const transitionForward = this.targetTime - this.currentTime;\n    if (this.canvas) {\n      this.currentTime += transitionForward / (256 / this.transitionSpeed);\n      if (jump) {\n        this.currentTime = this.targetTime;\n      }\n      this.paintCanvasFrame(Math.floor(this.currentTime * this.frameRate));\n    } else if (jump || this.isSafari || this.targetTime - this.currentTime < 0) {\n      this.video.pause();\n      this.currentTime += transitionForward / (64 / this.transitionSpeed);\n      if (jump) {\n        this.currentTime = this.targetTime;\n      }\n      this.video.currentTime = this.currentTime;\n    } else {\n      const playbackRate = Math.max(Math.min(transitionForward * 4, this.transitionSpeed, 16), 1);\n      if (this.debug) console.info(\"ScrollVideo playbackRate:\", playbackRate);\n      if (!isNaN(playbackRate)) {\n        this.video.playbackRate = playbackRate;\n        this.video.play();\n      }\n      this.currentTime = this.video.currentTime;\n    }\n    if (typeof requestAnimationFrame === \"function\") {\n      requestAnimationFrame(() => this.transitionToTargetTime(jump));\n    }\n  }\n  resetCanvasDimensions(w, h, frameW, frameH) {\n    if (!this.canvas) return;\n    if (w / h > frameW / frameH) {\n      this.canvas.style.width = \"100%\";\n      this.canvas.style.height = \"auto\";\n    } else {\n      this.canvas.style.height = \"100%\";\n      this.canvas.style.width = \"auto\";\n    }\n  }\n  setTargetTimePercent(setPercentage, jump = true) {\n    if (!this.video) return;\n    this.targetTime = Math.max(Math.min(setPercentage, 1), 0) * (this.frames.length && this.frameRate ? this.frames.length / this.frameRate : this.video.duration);\n    if (!jump && Math.abs(this.currentTime - this.targetTime) < this.frameThreshold) return;\n    if (!jump && this.transitioning) return;\n    if (!this.canvas && !this.video.paused) this.video.play();\n    this.transitioning = true;\n    this.transitionToTargetTime(jump);\n  }\n  destroy() {\n    var _a;\n    this.resizeObserver.unobserve(this.container);\n    (_a = this.video) == null ? void 0 : _a.removeEventListener(\"progress\", this.resize);\n    if (this.debug) console.info(\"Destroying ScrollVideo\");\n    if (this.container) this.container.innerHTML = \"\";\n  }\n}\nconst wrapper = \"ControlSlider-module__wrapper___sHEkd\";\nconst sliderItem = \"ControlSlider-module__sliderItem___QQSkR\";\nconst sliderImage = \"ControlSlider-module__sliderImage___9hRl-\";\nconst arrow = \"ControlSlider-module__arrow___05ghY\";\nconst arrowVertical = \"ControlSlider-module__arrowVertical___tBfVN\";\nconst nextArrow = \"ControlSlider-module__nextArrow___-30Yc\";\nconst arrowInner = \"ControlSlider-module__arrowInner___aEra3\";\nconst arrowIcon = \"ControlSlider-module__arrowIcon___S4ztF\";\nconst arrowImg = \"ControlSlider-module__arrowImg___2dwJW\";\nconst mirror = \"ControlSlider-module__mirror___brd6U\";\nconst pagination = \"ControlSlider-module__pagination___bicLF\";\nconst paginationInner = \"ControlSlider-module__paginationInner___bT-P-\";\nconst paginationVertical = \"ControlSlider-module__paginationVertical___zYqKw\";\nconst paginationItem = \"ControlSlider-module__paginationItem___nTRbk\";\nconst dot = \"ControlSlider-module__dot___p1Qun\";\nconst activeDot = \"ControlSlider-module__activeDot___LHFaj\";\nconst paginationInsideBottom = \"ControlSlider-module__paginationInsideBottom___R3FWn\";\nconst paginationInsideTop = \"ControlSlider-module__paginationInsideTop___V-qb-\";\nconst paginationOutsideBottom = \"ControlSlider-module__paginationOutsideBottom___14w8D\";\nconst paginationOutsideTop = \"ControlSlider-module__paginationOutsideTop___SCLqB\";\nconst paginationInsideLeft = \"ControlSlider-module__paginationInsideLeft___yOBRZ\";\nconst paginationInsideRight = \"ControlSlider-module__paginationInsideRight___Rtt3o\";\nconst paginationOutsideLeft = \"ControlSlider-module__paginationOutsideLeft___lahaw\";\nconst paginationOutsideRight = \"ControlSlider-module__paginationOutsideRight___EtuQa\";\nconst imgWrapper = \"ControlSlider-module__imgWrapper___UjEgB\";\nconst captionBlock = \"ControlSlider-module__captionBlock___dJ6-j\";\nconst captionTextWrapper = \"ControlSlider-module__captionTextWrapper___HFlpf\";\nconst captionText = \"ControlSlider-module__captionText___uGBVc\";\nconst active = \"ControlSlider-module__active___WZK4G\";\nconst withPointerEvents = \"ControlSlider-module__withPointerEvents___t-18M\";\nconst topLeftAlignment = \"ControlSlider-module__topLeftAlignment___zjnGM\";\nconst topCenterAlignment = \"ControlSlider-module__topCenterAlignment___gD1xW\";\nconst topRightAlignment = \"ControlSlider-module__topRightAlignment___NMapS\";\nconst middleLeftAlignment = \"ControlSlider-module__middleLeftAlignment___OnUrY\";\nconst middleCenterAlignment = \"ControlSlider-module__middleCenterAlignment___Tdkl0\";\nconst middleRightAlignment = \"ControlSlider-module__middleRightAlignment___wEbfX\";\nconst bottomLeftAlignment = \"ControlSlider-module__bottomLeftAlignment___cTP2-\";\nconst bottomCenterAlignment = \"ControlSlider-module__bottomCenterAlignment___c54fB\";\nconst bottomRightAlignment = \"ControlSlider-module__bottomRightAlignment___kEwrz\";\nconst clickOverlay = \"ControlSlider-module__clickOverlay___DZA28\";\nconst contain = \"ControlSlider-module__contain___pLyq7\";\nconst cover = \"ControlSlider-module__cover___KdDat\";\nconst styles$2 = {\n  wrapper,\n  sliderItem,\n  sliderImage,\n  arrow,\n  arrowVertical,\n  nextArrow,\n  arrowInner,\n  arrowIcon,\n  arrowImg,\n  mirror,\n  pagination,\n  paginationInner,\n  paginationVertical,\n  paginationItem,\n  dot,\n  activeDot,\n  paginationInsideBottom,\n  paginationInsideTop,\n  paginationOutsideBottom,\n  paginationOutsideTop,\n  paginationInsideLeft,\n  paginationInsideRight,\n  paginationOutsideLeft,\n  paginationOutsideRight,\n  imgWrapper,\n  captionBlock,\n  captionTextWrapper,\n  captionText,\n  active,\n  withPointerEvents,\n  topLeftAlignment,\n  topCenterAlignment,\n  topRightAlignment,\n  middleLeftAlignment,\n  middleCenterAlignment,\n  middleRightAlignment,\n  bottomLeftAlignment,\n  bottomCenterAlignment,\n  bottomRightAlignment,\n  clickOverlay,\n  contain,\n  cover\n};\nconst link = \"RichTextRenderer-module__link___BWeZ2\";\nconst styles$1 = {\n  link\n};\nconst RichTextRenderer = ({ content }) => {\n  const getChildren = (children) => {\n    return children.map((child, i) => {\n      if (child.type === \"link\") {\n        return /* @__PURE__ */ jsxRuntime.jsx(\"a\", { className: styles$1.link, href: child.value, target: child.target, children: getChildren(child.children) }, i);\n      }\n      return /* @__PURE__ */ jsxRuntime.jsx(\"span\", { style: getLeafCss(child), children: child.text }, i);\n    });\n  };\n  return /* @__PURE__ */ jsxRuntime.jsx(jsxRuntime.Fragment, { children: content.map((block, i) => {\n    const children = block.children;\n    return /* @__PURE__ */ jsxRuntime.jsx(\"div\", { children: getChildren(children) }, i);\n  }) });\n};\nfunction getLeafCss(leaf) {\n  return {\n    ...leaf.fontWeight && { fontWeight: leaf.fontWeight },\n    ...leaf.fontStyle && { fontStyle: leaf.fontStyle },\n    ...leaf.textDecoration && { textDecoration: leaf.textDecoration },\n    ...leaf.textTransform && { textTransform: leaf.textTransform },\n    ...leaf.fontVariant && { fontVariant: leaf.fontVariant },\n    ...leaf.verticalAlign && {\n      verticalAlign: leaf.verticalAlign,\n      lineHeight: \"0px\"\n    }\n  };\n}\nfunction scalingValue(value, isEditor = false) {\n  return isEditor ? `calc(var(--cntrl-article-width) * ${value})` : `${value * 100}vw`;\n}\nconst svg = \"SvgImage-module__svg___q3xE-\";\nconst img = \"SvgImage-module__img___VsTm-\";\nconst styles = {\n  svg,\n  img\n};\nconst SvgImage = ({ url: url2, fill = \"#000000\", hoverFill = \"#CCCCCC\", className = \"\" }) => {\n  const [supportsMask, setSupportsMask] = react.useState(true);\n  react.useEffect(() => {\n    if (typeof window !== \"undefined\" && window.CSS) {\n      const supported = CSS.supports(\"mask-image\", 'url(\"\")') || CSS.supports(\"-webkit-mask-image\", 'url(\"\")');\n      setSupportsMask(supported);\n    }\n  }, []);\n  if (!url2.endsWith(\".svg\") || !supportsMask) {\n    return /* @__PURE__ */ jsxRuntime.jsx(\"img\", { src: url2, alt: \"\", className: cn(styles.img, className) });\n  }\n  return /* @__PURE__ */ jsxRuntime.jsx(\n    \"span\",\n    {\n      \"data-supports-mask\": supportsMask,\n      className: cn(styles.svg, className),\n      style: {\n        \"--svg\": `url(${url2})`,\n        \"--fill\": fill,\n        \"--hover-fill\": hoverFill\n      }\n    }\n  );\n};\nconst alignmentClassName = {\n  \"top-left\": styles$2.topLeftAlignment,\n  \"top-center\": styles$2.topCenterAlignment,\n  \"top-right\": styles$2.topRightAlignment,\n  \"middle-left\": styles$2.middleLeftAlignment,\n  \"middle-center\": styles$2.middleCenterAlignment,\n  \"middle-right\": styles$2.middleRightAlignment,\n  \"bottom-left\": styles$2.bottomLeftAlignment,\n  \"bottom-center\": styles$2.bottomCenterAlignment,\n  \"bottom-right\": styles$2.bottomRightAlignment\n};\nfunction ControlSlider({ settings, content, styles: sliderStyles, isEditor }) {\n  const [sliderRef, setSliderRef] = react.useState(null);\n  const { widthSettings, fontSettings, letterSpacing, textAlign, wordSpacing, fontSizeLineHeight, textAppearance, color } = sliderStyles.caption;\n  const [sliderDimensions, setSliderDimensions] = react.useState(void 0);\n  const [wrapperRef, setWrapperRef] = react.useState(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = react.useState(0);\n  const [key, setKey] = react.useState(0);\n  const { direction, transition, controls, pagination: pagination2, caption, triggers } = settings;\n  const prevSliderTypeRef = react.useRef(transition.type);\n  const { x: controlsOffsetX, y: controlsOffsetY } = settings.controls.offset;\n  const handleArrowClick = (dir) => {\n    if (sliderRef) {\n      sliderRef.go(dir);\n    }\n  };\n  react.useEffect(() => {\n    if (!wrapperRef) return;\n    const observer = new ResizeObserver((entries) => {\n      if (!sliderRef) return;\n      const [wrapper2] = entries;\n      setSliderDimensions({\n        width: Math.round(wrapper2.contentRect.width),\n        height: Math.round(wrapper2.contentRect.height)\n      });\n    });\n    observer.observe(wrapperRef);\n    return () => observer.unobserve(wrapperRef);\n  }, [wrapperRef]);\n  react.useEffect(() => {\n    if (!sliderRef || prevSliderTypeRef.current === transition.type) return;\n    setKey((prev) => prev + 1);\n    prevSliderTypeRef.current = transition.type;\n  }, [transition.type]);\n  return /* @__PURE__ */ jsxRuntime.jsx(\"div\", { className: cn(styles$2.wrapper, { [styles$2.editor]: isEditor }), ref: setWrapperRef, children: /* @__PURE__ */ jsxRuntime.jsxs(\"div\", { className: styles$2.sliderInner, style: {\n    width: sliderDimensions ? sliderDimensions.width : \"100%\",\n    height: sliderDimensions ? sliderDimensions.height : \"100%\"\n  }, children: [\n    settings.caption.isActive && /* @__PURE__ */ jsxRuntime.jsx(\n      \"div\",\n      {\n        className: cn(styles$2.captionBlock),\n        children: /* @__PURE__ */ jsxRuntime.jsx(\n          \"div\",\n          {\n            className: styles$2.captionTextWrapper,\n            children: content.map((item, index) => /* @__PURE__ */ jsxRuntime.jsx(\n              \"div\",\n              {\n                className: cn(styles$2.captionText, alignmentClassName[caption.alignment], {\n                  [styles$2.withPointerEvents]: index === currentSlideIndex && isEditor,\n                  [styles$2.active]: index === currentSlideIndex\n                }),\n                style: {\n                  fontFamily: fontSettings.fontFamily,\n                  fontWeight: fontSettings.fontWeight,\n                  fontStyle: fontSettings.fontStyle,\n                  width: widthSettings.sizing === \"auto\" ? \"max-content\" : scalingValue(widthSettings.width, isEditor),\n                  letterSpacing: scalingValue(letterSpacing, isEditor),\n                  wordSpacing: scalingValue(wordSpacing, isEditor),\n                  textAlign,\n                  fontSize: scalingValue(fontSizeLineHeight.fontSize, isEditor),\n                  lineHeight: scalingValue(fontSizeLineHeight.lineHeight, isEditor),\n                  textTransform: textAppearance.textTransform ?? \"none\",\n                  textDecoration: textAppearance.textDecoration ?? \"none\",\n                  fontVariant: textAppearance.fontVariant ?? \"normal\",\n                  color,\n                  transitionDuration: transition.duration ? `${Math.round(parseInt(transition.duration) / 2)}ms` : \"500ms\"\n                },\n                children: /* @__PURE__ */ jsxRuntime.jsx(\n                  \"div\",\n                  {\n                    \"data-styles\": \"caption\",\n                    className: styles$2.captionTextInner,\n                    style: {\n                      \"--link-hover-color\": caption.hover,\n                      position: \"relative\",\n                      top: scalingValue(caption.offset.y, isEditor),\n                      left: scalingValue(caption.offset.x, isEditor)\n                    },\n                    children: /* @__PURE__ */ jsxRuntime.jsx(RichTextRenderer, { content: item.imageCaption })\n                  }\n                )\n              },\n              index\n            ))\n          }\n        )\n      }\n    ),\n    /* @__PURE__ */ jsxRuntime.jsx(\n      reactSplide.Splide,\n      {\n        onMove: (e) => {\n          setCurrentSlideIndex(e.index);\n        },\n        ref: setSliderRef,\n        options: {\n          arrows: false,\n          speed: transition.duration ? parseInt(transition.duration) : 500,\n          autoplay: isEditor ? false : triggers.autoPlay !== null,\n          ...triggers.autoPlay !== null && {\n            interval: parseInt(triggers.autoPlay) * 1e3\n          },\n          direction: direction === \"horiz\" || transition.type === \"fade in\" ? \"ltr\" : \"ttb\",\n          pagination: false,\n          drag: triggers.triggersList.drag,\n          perPage: 1,\n          width: sliderDimensions ? sliderDimensions.width : \"100%\",\n          height: sliderDimensions ? sliderDimensions.height : \"100%\",\n          type: transition.type === \"fade in\" ? \"fade\" : \"loop\",\n          rewind: true\n        },\n        children: content.map((item, index) => /* @__PURE__ */ jsxRuntime.jsx(reactSplide.SplideSlide, { children: /* @__PURE__ */ jsxRuntime.jsx(\n          \"div\",\n          {\n            className: styles$2.sliderItem,\n            children: /* @__PURE__ */ jsxRuntime.jsx(\n              \"div\",\n              {\n                className: styles$2.imgWrapper,\n                children: /* @__PURE__ */ jsxRuntime.jsx(\n                  \"img\",\n                  {\n                    className: cn(styles$2.sliderImage, {\n                      [styles$2.contain]: item.image.objectFit === \"contain\",\n                      [styles$2.cover]: item.image.objectFit === \"cover\"\n                    }),\n                    src: item.image.url,\n                    alt: item.image.name ?? \"\"\n                  }\n                )\n              }\n            )\n          }\n        ) }, index))\n      },\n      key\n    ),\n    controls.isActive && /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, { children: [\n      /* @__PURE__ */ jsxRuntime.jsx(\n        \"div\",\n        {\n          className: cn(styles$2.arrow, {\n            [styles$2.arrowVertical]: direction === \"vert\"\n          }),\n          style: {\n            color: controls.color,\n            [\"--arrow-hover-color\"]: controls.hover\n          },\n          children: /* @__PURE__ */ jsxRuntime.jsxs(\n            \"button\",\n            {\n              onClick: () => {\n                handleArrowClick(\"-1\");\n              },\n              className: styles$2.arrowInner,\n              style: {\n                transform: `translate(${scalingValue(controlsOffsetX, isEditor)}, ${scalingValue(controlsOffsetY * (direction === \"horiz\" ? 1 : -1), isEditor)}) scale(${settings.controls.scale / 100}) rotate(${direction === \"horiz\" ? \"0deg\" : \"90deg\"})`\n              },\n              children: [\n                controls.arrowsImgUrl && /* @__PURE__ */ jsxRuntime.jsx(\n                  SvgImage,\n                  {\n                    url: controls.arrowsImgUrl,\n                    fill: controls.color,\n                    hoverFill: controls.hover,\n                    className: cn(styles$2.arrowImg, styles$2.mirror)\n                  }\n                ),\n                !controls.arrowsImgUrl && /* @__PURE__ */ jsxRuntime.jsx(ArrowIcon, { color: controls.color, className: cn(styles$2.arrowIcon, styles$2.arrowImg, styles$2.mirror) })\n              ]\n            }\n          )\n        }\n      ),\n      /* @__PURE__ */ jsxRuntime.jsx(\n        \"div\",\n        {\n          className: cn(styles$2.arrow, styles$2.nextArrow, {\n            [styles$2.arrowVertical]: direction === \"vert\"\n          }),\n          style: {\n            color: controls.color,\n            [\"--arrow-hover-color\"]: controls.hover\n          },\n          children: /* @__PURE__ */ jsxRuntime.jsxs(\n            \"button\",\n            {\n              className: styles$2.arrowInner,\n              onClick: () => handleArrowClick(\"+1\"),\n              style: {\n                transform: `translate(${scalingValue(controlsOffsetX * (direction === \"horiz\" ? -1 : 1), isEditor)}, ${scalingValue(controlsOffsetY, isEditor)}) scale(${settings.controls.scale / 100}) rotate(${direction === \"horiz\" ? \"0deg\" : \"90deg\"})`\n              },\n              children: [\n                controls.arrowsImgUrl && /* @__PURE__ */ jsxRuntime.jsx(\n                  SvgImage,\n                  {\n                    url: controls.arrowsImgUrl,\n                    fill: controls.color,\n                    hoverFill: controls.hover,\n                    className: styles$2.arrowImg\n                  }\n                ),\n                !controls.arrowsImgUrl && /* @__PURE__ */ jsxRuntime.jsx(ArrowIcon, { color: controls.color, className: cn(styles$2.arrowIcon, styles$2.arrowImg) })\n              ]\n            }\n          )\n        }\n      )\n    ] }),\n    triggers.triggersList.click && /* @__PURE__ */ jsxRuntime.jsx(\n      \"div\",\n      {\n        className: styles$2.clickOverlay,\n        onClick: () => {\n          if (sliderRef) {\n            sliderRef.go(\"+1\");\n          }\n        }\n      }\n    ),\n    pagination2.isActive && /* @__PURE__ */ jsxRuntime.jsx(\n      \"div\",\n      {\n        className: cn(styles$2.pagination, {\n          [styles$2.paginationInsideBottom]: pagination2.position === \"inside-1\" && direction === \"horiz\",\n          [styles$2.paginationInsideTop]: pagination2.position === \"inside-2\" && direction === \"horiz\",\n          [styles$2.paginationOutsideBottom]: pagination2.position === \"outside-1\" && direction === \"horiz\",\n          [styles$2.paginationOutsideTop]: pagination2.position === \"outside-2\" && direction === \"horiz\",\n          [styles$2.paginationInsideLeft]: pagination2.position === \"inside-1\" && direction === \"vert\",\n          [styles$2.paginationInsideRight]: pagination2.position === \"inside-2\" && direction === \"vert\",\n          [styles$2.paginationOutsideLeft]: pagination2.position === \"outside-1\" && direction === \"vert\",\n          [styles$2.paginationOutsideRight]: pagination2.position === \"outside-2\" && direction === \"vert\",\n          [styles$2.paginationVertical]: direction === \"vert\"\n        }),\n        children: /* @__PURE__ */ jsxRuntime.jsx(\n          \"div\",\n          {\n            className: styles$2.paginationInner,\n            style: {\n              backgroundColor: pagination2.colors[2],\n              transform: `scale(${pagination2.scale / 100}) translate(${scalingValue(pagination2.offset.x, isEditor)}, ${scalingValue(pagination2.offset.y, isEditor)}) rotate(${direction === \"horiz\" ? \"0deg\" : \"90deg\"})`\n            },\n            children: content.map((_, index) => /* @__PURE__ */ jsxRuntime.jsx(\n              \"button\",\n              {\n                onClick: () => {\n                  if (sliderRef) {\n                    sliderRef.go(index);\n                  }\n                },\n                className: cn(styles$2.paginationItem),\n                children: /* @__PURE__ */ jsxRuntime.jsx(\n                  \"div\",\n                  {\n                    className: cn(styles$2.dot, {\n                      [styles$2.activeDot]: index === currentSlideIndex\n                    }),\n                    style: {\n                      backgroundColor: index === currentSlideIndex ? pagination2.colors[0] : pagination2.colors[1],\n                      [\"--pagination-hover-color\"]: pagination2.hover\n                    }\n                  }\n                )\n              },\n              index\n            ))\n          }\n        )\n      }\n    )\n  ] }) });\n}\nfunction ArrowIcon({ color, className }) {\n  return /* @__PURE__ */ jsxRuntime.jsx(\"svg\", { viewBox: \"0 0 10 18\", className, children: /* @__PURE__ */ jsxRuntime.jsx(\"g\", { id: \"Symbols\", stroke: \"none\", strokeWidth: \"1\", fillRule: \"evenodd\", children: /* @__PURE__ */ jsxRuntime.jsx(\"path\", { d: \"M-3.70710678,4.29289322 C-3.34662282,3.93240926 -2.77939176,3.90467972 -2.38710056,4.20970461 L-2.29289322,4.29289322 L5,11.585 L12.2928932,4.29289322 C12.6533772,3.93240926 13.2206082,3.90467972 13.6128994,4.20970461 L13.7071068,4.29289322 C14.0675907,4.65337718 14.0953203,5.22060824 13.7902954,5.61289944 L13.7071068,5.70710678 L5.70710678,13.7071068 C5.34662282,14.0675907 4.77939176,14.0953203 4.38710056,13.7902954 L4.29289322,13.7071068 L-3.70710678,5.70710678 C-4.09763107,5.31658249 -4.09763107,4.68341751 -3.70710678,4.29289322 Z\", id: \"Shape-Copy\", fill: color, transform: \"translate(5, 9) rotate(-90) translate(-5, -9)\" }) }) });\n}\nconst ControlSliderComponent = {\n  element: ControlSlider,\n  id: \"control-slider\",\n  name: \"Slider\",\n  preview: {\n    type: \"video\",\n    url: \"https://cdn.cntrl.site/projects/01GJ2SMPPCQ7JSNGVXZ2DHWXWF/articles-assets/01JTFXX5M899RG2JA2GTJG1WNX.mp4\"\n  },\n  defaultSize: {\n    width: 400,\n    height: 400\n  },\n  schema: {\n    type: \"object\",\n    properties: {\n      settings: {\n        layoutBased: true,\n        type: \"object\",\n        properties: {\n          triggers: {\n            name: \"triggers\",\n            icon: \"target\",\n            tooltip: \"Triggers\",\n            type: \"object\",\n            properties: {\n              triggersList: {\n                type: \"object\",\n                display: {\n                  type: \"toggle-ratio-group\"\n                },\n                properties: {\n                  click: {\n                    type: \"boolean\"\n                  },\n                  drag: {\n                    type: \"boolean\"\n                  }\n                }\n              },\n              autoPlay: {\n                type: [\"string\", \"null\"],\n                label: \"Auto\",\n                display: {\n                  type: \"step-selector\"\n                },\n                enum: [null, \"1s\", \"2s\", \"3s\", \"4s\", \"5s\"]\n              }\n            }\n          },\n          direction: {\n            name: \"direction\",\n            icon: \"horizontal-resize\",\n            tooltip: \"Direction\",\n            type: \"string\",\n            display: {\n              type: \"ratio-group\"\n            },\n            enum: [\"horiz\", \"vert\"]\n          },\n          transition: {\n            name: \"transit\",\n            icon: \"transition\",\n            tooltip: \"Transition\",\n            type: \"object\",\n            properties: {\n              type: {\n                type: \"string\",\n                display: {\n                  type: \"ratio-group\"\n                },\n                enum: [\"slide\", \"fade in\"]\n              },\n              duration: {\n                type: \"string\",\n                label: \"hourglass-icon\",\n                display: {\n                  type: \"step-selector\"\n                },\n                enum: [\"100ms\", \"250ms\", \"500ms\", \"1000ms\"]\n              }\n            }\n          },\n          controls: {\n            name: \"controls\",\n            icon: \"controls\",\n            tooltip: \"Controls\",\n            type: \"object\",\n            properties: {\n              isActive: {\n                type: \"boolean\",\n                display: {\n                  type: \"setting-toggle\"\n                }\n              },\n              arrowsImgUrl: {\n                type: [\"string\", \"null\"],\n                display: {\n                  type: \"settings-image-input\"\n                }\n              },\n              offset: {\n                type: \"object\",\n                display: {\n                  type: \"offset-controls\"\n                },\n                properties: {\n                  x: {\n                    type: \"number\"\n                  },\n                  y: {\n                    type: \"number\"\n                  }\n                }\n              },\n              scale: {\n                type: \"number\",\n                name: \"scale\",\n                min: 50,\n                max: 600,\n                display: {\n                  type: \"range-control\"\n                }\n              },\n              color: {\n                name: \"color\",\n                type: \"string\",\n                display: {\n                  type: \"settings-color-picker\",\n                  format: \"single\"\n                }\n              },\n              hover: {\n                name: \"hover\",\n                type: \"string\",\n                display: {\n                  type: \"settings-color-picker\",\n                  format: \"single\"\n                }\n              }\n            }\n          },\n          pagination: {\n            name: \"nav\",\n            icon: \"pagination\",\n            tooltip: \"Navigation\",\n            type: \"object\",\n            properties: {\n              isActive: {\n                type: \"boolean\",\n                display: {\n                  type: \"setting-toggle\"\n                }\n              },\n              position: {\n                name: \"nav position\",\n                display: {\n                  type: \"socket\",\n                  direction: \"horizontal\"\n                },\n                type: \"string\",\n                enum: [\"outside-1\", \"outside-2\", \"inside-1\", \"inside-2\"]\n              },\n              offset: {\n                type: \"object\",\n                display: {\n                  type: \"offset-controls\"\n                },\n                properties: {\n                  x: {\n                    type: \"number\"\n                  },\n                  y: {\n                    type: \"number\"\n                  }\n                }\n              },\n              scale: {\n                type: \"number\",\n                name: \"scale\",\n                min: 10,\n                max: 400,\n                display: {\n                  type: \"range-control\"\n                }\n              },\n              colors: {\n                display: {\n                  type: \"settings-color-picker\",\n                  format: \"multiple\"\n                },\n                name: \"color\",\n                type: \"array\",\n                items: {\n                  type: \"string\"\n                }\n              },\n              hover: {\n                name: \"hover\",\n                type: \"string\",\n                display: {\n                  type: \"settings-color-picker\",\n                  format: \"single\"\n                }\n              }\n            }\n          },\n          caption: {\n            name: \"Caption\",\n            icon: \"text-icon\",\n            tooltip: \"Caption\",\n            type: \"object\",\n            properties: {\n              isActive: {\n                type: \"boolean\",\n                display: {\n                  type: \"setting-toggle\"\n                }\n              },\n              alignment: {\n                name: \"Alignment\",\n                type: \"string\",\n                display: {\n                  type: \"align-grid\"\n                },\n                enum: [\"top-left\", \"top-center\", \"top-right\", \"middle-left\", \"middle-center\", \"middle-right\", \"bottom-left\", \"bottom-center\", \"bottom-right\"]\n              },\n              offset: {\n                type: \"object\",\n                display: {\n                  type: \"offset-controls\"\n                },\n                properties: {\n                  x: {\n                    type: \"number\"\n                  },\n                  y: {\n                    type: \"number\"\n                  }\n                }\n              },\n              hover: {\n                name: \"hover\",\n                type: \"string\",\n                display: {\n                  type: \"settings-color-picker\",\n                  format: \"single\"\n                }\n              }\n            }\n          }\n        },\n        default: {\n          triggers: {\n            triggersList: {\n              click: false,\n              drag: true\n            },\n            autoPlay: null\n          },\n          controls: {\n            isActive: true,\n            arrowsImgUrl: null,\n            offset: {\n              x: 0,\n              y: 0\n            },\n            scale: 100,\n            color: \"#000000\",\n            hover: \"#cccccc\"\n          },\n          transition: {\n            type: \"slide\",\n            duration: \"500ms\"\n          },\n          pagination: {\n            isActive: true,\n            scale: 50,\n            position: \"outside-1\",\n            offset: {\n              x: 0,\n              y: 0\n            },\n            colors: [\"#cccccc\", \"#cccccc\", \"#000000\"],\n            hover: \"#cccccc\"\n          },\n          direction: \"horiz\",\n          caption: {\n            offset: {\n              x: 0,\n              y: 0\n            },\n            isActive: true,\n            alignment: \"middle-center\",\n            hover: \"#cccccc\"\n          }\n        },\n        displayRules: [\n          {\n            if: {\n              name: \"direction\",\n              value: \"vert\"\n            },\n            then: {\n              name: \"properties.pagination.properties.position.display.direction\",\n              value: \"vertical\"\n            }\n          }\n        ]\n      },\n      content: {\n        layoutBased: false,\n        type: \"array\",\n        items: {\n          type: \"object\",\n          properties: {\n            image: {\n              type: \"object\",\n              display: {\n                type: \"media-input\"\n              },\n              properties: {\n                url: {\n                  type: \"string\"\n                },\n                name: {\n                  type: \"string\"\n                },\n                objectFit: {\n                  type: \"string\",\n                  enum: [\"cover\", \"contain\"]\n                }\n              },\n              required: [\"url\", \"name\"]\n            },\n            imageCaption: {\n              display: {\n                type: \"rich-text\",\n                placeholder: \"Add Caption...\"\n              }\n            },\n            link: {\n              type: \"object\",\n              display: {\n                type: \"text-input\",\n                placeholder: \"Add Caption...\"\n              },\n              properties: {\n                text: {\n                  type: \"string\"\n                }\n              }\n            }\n          },\n          required: [\"image\"]\n        },\n        default: [\n          {\n            image: {\n              objectFit: \"cover\",\n              url: \"https://cdn.cntrl.site/projects/01GJ2SMPPCQ7JSNGVXZ2DHWXWF/articles-assets/01JRZ15T247392621FNTTRCW9D.jpeg\",\n              name: \"Slider-1.jpeg\"\n            },\n            imageCaption: [\n              {\n                type: \"paragraph\",\n                children: [{ text: \"\" }]\n              }\n            ]\n          },\n          {\n            image: {\n              objectFit: \"cover\",\n              url: \"https://cdn.cntrl.site/projects/01GJ2SMPPCQ7JSNGVXZ2DHWXWF/articles-assets/01JRZ17S8TS9T62P7NKTNNEB64.jpeg\",\n              name: \"Slider-2.jpeg\"\n            },\n            imageCaption: [\n              {\n                type: \"paragraph\",\n                children: [{ text: \"\" }]\n              }\n            ]\n          },\n          {\n            image: {\n              objectFit: \"cover\",\n              url: \"https://cdn.cntrl.site/projects/01GJ2SMPPCQ7JSNGVXZ2DHWXWF/articles-assets/01JRZ197S89RNT6RA7ZJSX3Z38.jpeg\",\n              name: \"Slider-3.jpeg\"\n            },\n            imageCaption: [\n              {\n                type: \"paragraph\",\n                children: [{ text: \"\" }]\n              }\n            ]\n          }\n        ]\n      },\n      styles: {\n        layoutBased: true,\n        type: \"object\",\n        properties: {\n          caption: {\n            dataName: \"caption\",\n            type: \"object\",\n            properties: {\n              fontSettings: {\n                type: \"object\",\n                display: {\n                  type: \"font-settings\"\n                },\n                properties: {\n                  fontFamily: {\n                    type: \"string\"\n                  },\n                  fontWeight: {\n                    type: \"number\"\n                  },\n                  fontStyle: {\n                    type: \"string\"\n                  }\n                }\n              },\n              widthSettings: {\n                display: {\n                  type: \"text-width-control\"\n                },\n                type: \"object\",\n                properties: {\n                  width: {\n                    type: \"number\"\n                  },\n                  sizing: {\n                    type: \"string\",\n                    enum: [\"auto\", \"manual\"]\n                  }\n                }\n              },\n              fontSizeLineHeight: {\n                type: \"object\",\n                display: {\n                  type: \"font-size-line-height\"\n                },\n                properties: {\n                  fontSize: {\n                    type: \"number\"\n                  },\n                  lineHeight: {\n                    type: \"number\"\n                  }\n                }\n              },\n              letterSpacing: {\n                display: {\n                  type: \"letter-spacing-input\"\n                },\n                type: \"number\"\n              },\n              wordSpacing: {\n                display: {\n                  type: \"word-spacing-input\"\n                },\n                type: \"number\"\n              },\n              textAlign: {\n                display: {\n                  type: \"text-align-control\"\n                },\n                type: \"string\",\n                enum: [\"left\", \"center\", \"right\", \"justify\"]\n              },\n              textAppearance: {\n                display: {\n                  type: \"text-appearance\"\n                },\n                properties: {\n                  textTransform: {\n                    type: \"string\",\n                    enum: [\"none\", \"uppercase\", \"lowercase\", \"capitalize\"]\n                  },\n                  textDecoration: {\n                    type: \"string\",\n                    enum: [\"none\", \"underline\"]\n                  },\n                  fontVariant: {\n                    type: \"string\",\n                    enum: [\"normal\", \"small-caps\"]\n                  }\n                }\n              },\n              color: {\n                display: {\n                  type: \"style-panel-color-picker\"\n                },\n                type: \"string\"\n              }\n            }\n          }\n        },\n        default: {\n          caption: {\n            widthSettings: {\n              width: 0.13,\n              sizing: \"auto\"\n            },\n            fontSettings: {\n              fontFamily: \"Arial\",\n              fontWeight: 400,\n              fontStyle: \"normal\"\n            },\n            fontSizeLineHeight: {\n              fontSize: 0.02,\n              lineHeight: 0.02\n            },\n            letterSpacing: 0,\n            wordSpacing: 0,\n            textAlign: \"left\",\n            textAppearance: {\n              textTransform: \"none\",\n              textDecoration: \"none\",\n              fontVariant: \"normal\"\n            },\n            color: \"#000000\"\n          }\n        }\n      }\n    },\n    required: [\"settings\", \"content\", \"styles\"]\n  }\n};\nconst components = [\n  ControlSliderComponent\n];\nexports.AnchorSide = AnchorSide;\nexports.AreaAnchor = AreaAnchor;\nexports.ArticleItemType = ArticleItemType;\nexports.CntrlClient = Client;\nexports.DimensionMode = DimensionMode;\nexports.FontFaceGenerator = FontFaceGenerator;\nexports.KeyframeType = KeyframeType;\nexports.PositionType = PositionType;\nexports.ScrollPlaybackVideoManager = ScrollPlaybackVideoManager;\nexports.SectionHeightMode = SectionHeightMode;\nexports.TextAlign = TextAlign;\nexports.TextDecoration = TextDecoration;\nexports.TextTransform = TextTransform;\nexports.VerticalAlign = VerticalAlign;\nexports.components = components;\nexports.getLayoutMediaQuery = getLayoutMediaQuery;\nexports.getLayoutStyles = getLayoutStyles;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixxREFBcUQsaUJBQWlCO0FBQ3RFLGdCQUFnQixtQkFBTyxDQUFDLGlGQUFrQjtBQUMxQyxZQUFZLG1CQUFPLENBQUMsa0VBQUs7QUFDekIsWUFBWSxtQkFBTyxDQUFDLHlDQUFLO0FBQ3pCLGlCQUFpQixtQkFBTyxDQUFDLGtFQUFjO0FBQ3ZDLGVBQWUsbUJBQU8sQ0FBQyx3REFBUTtBQUMvQixtQkFBbUIsbUJBQU8sQ0FBQyw4REFBbUI7QUFDOUMsY0FBYyxtQkFBTyxDQUFDLDRDQUFPO0FBQzdCLG9CQUFvQixtQkFBTyxDQUFDLGlHQUF3QjtBQUNwRCxXQUFXLG1CQUFPLENBQUMsc0RBQVk7QUFDL0I7QUFDQSxrQ0FBa0Msd0JBQXdCLG1CQUFtQjtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx5QkFBeUI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGlCQUFpQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxxQkFBcUI7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMscUJBQXFCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxzQkFBc0I7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsa0JBQWtCO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxvQkFBb0I7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsa0JBQWtCO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxxQkFBcUI7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHVCQUF1QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHFCQUFxQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0gsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLG9CQUFvQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMscUJBQXFCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsUUFBUTtBQUN0QjtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxVQUFVO0FBQ3hCO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxnREFBZ0Q7QUFDNUQsMkNBQTJDLFVBQVU7QUFDckQ7QUFDQTtBQUNBLGlDQUFpQyxPQUFPO0FBQ3hDO0FBQ0EsS0FBSztBQUNMO0FBQ0EsMERBQTBELFVBQVUsSUFBSSxvQkFBb0I7QUFDNUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxnREFBZ0Q7QUFDNUQsMkNBQTJDLFVBQVUsWUFBWSxVQUFVO0FBQzNFO0FBQ0E7QUFDQSxpQ0FBaUMsT0FBTztBQUN4QztBQUNBLEtBQUs7QUFDTDtBQUNBLDBEQUEwRCxVQUFVLElBQUksb0JBQW9CO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxZQUFZLHNCQUFzQjtBQUNsQztBQUNBO0FBQ0EsMENBQTBDLE1BQU0sb0NBQW9DLFVBQVU7QUFDOUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0dBQWdHLFNBQVMsYUFBYSx1Q0FBdUM7QUFDN0o7QUFDQTtBQUNBLGtCQUFrQixVQUFVO0FBQzVCLGlCQUFpQjtBQUNqQixnQkFBZ0I7QUFDaEIsSUFBSSx1QkFBdUIsWUFBWTtBQUN2QyxTQUFTLE9BQU87QUFDaEIsQ0FBQztBQUNELEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixVQUFVLGdEQUFnRCxrQkFBa0IsS0FBSyxFQUFFLHVDQUF1QyxPQUFPLHNDQUFzQyxFQUFFO0FBQ3pLLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTRELFNBQVM7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsbUJBQW1CO0FBQ3BEO0FBQ0EsK0JBQStCLG1CQUFtQixzQkFBc0Isb0JBQW9CO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsd0JBQXdCO0FBQ3RDO0FBQ0E7QUFDQSxjQUFjLHdCQUF3QjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHdCQUF3QjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsd0JBQXdCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsMkVBQTJFO0FBQ2xIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxzQkFBc0I7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsK0JBQStCO0FBQzNEO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLHNCQUFzQixvQkFBb0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLGFBQWE7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEZBQThGLFlBQVk7QUFDMUc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxpREFBaUQ7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixnQkFBZ0I7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsU0FBUztBQUNyQztBQUNBO0FBQ0E7QUFDQSxxREFBcUQsMEdBQTBHO0FBQy9KO0FBQ0Esc0RBQXNELGdEQUFnRDtBQUN0RyxLQUFLO0FBQ0w7QUFDQSwrREFBK0Q7QUFDL0Q7QUFDQSxtREFBbUQsaUNBQWlDO0FBQ3BGLEdBQUcsR0FBRztBQUNOO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qiw2QkFBNkI7QUFDekQsMkJBQTJCLDJCQUEyQjtBQUN0RCxnQ0FBZ0MscUNBQXFDO0FBQ3JFLCtCQUErQixtQ0FBbUM7QUFDbEUsNkJBQTZCLCtCQUErQjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCxNQUFNLFFBQVEsWUFBWTtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixvRUFBb0U7QUFDeEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsbURBQW1ELDBEQUEwRDtBQUM3RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixLQUFLO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsbURBQW1EO0FBQzVFO0FBQ0EsVUFBVSxnSEFBZ0g7QUFDMUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLDhFQUE4RTtBQUN4RjtBQUNBLFVBQVUseUNBQXlDO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILGlEQUFpRCxrQ0FBa0MsNkJBQTZCLDBFQUEwRTtBQUMxTDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtEQUErRCw4Q0FBOEM7QUFDN0csaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCLGlGQUFpRiw0QkFBNEI7QUFDN0c7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QseUdBQXlHO0FBQ3pHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYLE9BQU87QUFDUDtBQUNBO0FBQ0EsZ0ZBQWdGO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBLHdDQUF3Qyx3Q0FBd0MsSUFBSSwyRUFBMkUsVUFBVSw4QkFBOEIsV0FBVyx5Q0FBeUM7QUFDM1AsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0ZBQXNGLDhGQUE4RjtBQUNwTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLDJFQUEyRSxJQUFJLHdDQUF3QyxVQUFVLDhCQUE4QixXQUFXLHlDQUF5QztBQUMzUCxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzRkFBc0YsNkVBQTZFO0FBQ25LO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyx3QkFBd0IsY0FBYyw2Q0FBNkMsSUFBSSw2Q0FBNkMsV0FBVyx5Q0FBeUM7QUFDMU4sYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxHQUFHO0FBQ1I7QUFDQSxxQkFBcUIsa0JBQWtCO0FBQ3ZDLGlEQUFpRCxpRkFBaUYseUhBQXlILDZuQkFBNm5CLEdBQUcsR0FBRztBQUM5M0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixVQUFVO0FBQ3ZDO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsVUFBVTtBQUN2QztBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLFVBQVU7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCLGtCQUFrQjtBQUNsQix1QkFBdUI7QUFDdkIsbUJBQW1CO0FBQ25CLHFCQUFxQjtBQUNyQix5QkFBeUI7QUFDekIsb0JBQW9CO0FBQ3BCLG9CQUFvQjtBQUNwQixrQ0FBa0M7QUFDbEMseUJBQXlCO0FBQ3pCLGlCQUFpQjtBQUNqQixzQkFBc0I7QUFDdEIscUJBQXFCO0FBQ3JCLHFCQUFxQjtBQUNyQixrQkFBa0I7QUFDbEIsMkJBQTJCO0FBQzNCLHVCQUF1QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrL2Rpc3QvaW5kZXguanM/ODI4ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6IFwiTW9kdWxlXCIgfSk7XG5jb25zdCBmZXRjaCQxID0gcmVxdWlyZShcImlzb21vcnBoaWMtZmV0Y2hcIik7XG5jb25zdCB1cmwgPSByZXF1aXJlKFwidXJsXCIpO1xuY29uc3Qgem9kID0gcmVxdWlyZShcInpvZFwiKTtcbmNvbnN0IFVBUGFyc2VyID0gcmVxdWlyZShcInVhLXBhcnNlci1qc1wiKTtcbmNvbnN0IE1QNEJveCA9IHJlcXVpcmUoXCJtcDRib3hcIik7XG5jb25zdCBqc3hSdW50aW1lID0gcmVxdWlyZShcInJlYWN0L2pzeC1ydW50aW1lXCIpO1xuY29uc3QgcmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCByZWFjdFNwbGlkZSA9IHJlcXVpcmUoXCJAc3BsaWRlanMvcmVhY3Qtc3BsaWRlXCIpO1xuY29uc3QgY24gPSByZXF1aXJlKFwiY2xhc3NuYW1lc1wiKTtcbmZ1bmN0aW9uIF9pbnRlcm9wTmFtZXNwYWNlRGVmYXVsdChlKSB7XG4gIGNvbnN0IG4gPSBPYmplY3QuY3JlYXRlKG51bGwsIHsgW1N5bWJvbC50b1N0cmluZ1RhZ106IHsgdmFsdWU6IFwiTW9kdWxlXCIgfSB9KTtcbiAgaWYgKGUpIHtcbiAgICBmb3IgKGNvbnN0IGsgaW4gZSkge1xuICAgICAgaWYgKGsgIT09IFwiZGVmYXVsdFwiKSB7XG4gICAgICAgIGNvbnN0IGQgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsIGspO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobiwgaywgZC5nZXQgPyBkIDoge1xuICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgZ2V0OiAoKSA9PiBlW2tdXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBuLmRlZmF1bHQgPSBlO1xuICByZXR1cm4gT2JqZWN0LmZyZWV6ZShuKTtcbn1cbmNvbnN0IE1QNEJveF9fbmFtZXNwYWNlID0gLyogQF9fUFVSRV9fICovIF9pbnRlcm9wTmFtZXNwYWNlRGVmYXVsdChNUDRCb3gpO1xudmFyIFNlY3Rpb25IZWlnaHRNb2RlID0gLyogQF9fUFVSRV9fICovICgoU2VjdGlvbkhlaWdodE1vZGUyKSA9PiB7XG4gIFNlY3Rpb25IZWlnaHRNb2RlMltcIkNvbnRyb2xVbml0c1wiXSA9IFwiY29udHJvbC11bml0c1wiO1xuICBTZWN0aW9uSGVpZ2h0TW9kZTJbXCJWaWV3cG9ydEhlaWdodFVuaXRzXCJdID0gXCJ2aWV3cG9ydC1oZWlnaHQtdW5pdHNcIjtcbiAgcmV0dXJuIFNlY3Rpb25IZWlnaHRNb2RlMjtcbn0pKFNlY3Rpb25IZWlnaHRNb2RlIHx8IHt9KTtcbmNvbnN0IFRyYW5zaXRpb25TY2hlbWEgPSB6b2Quei5vYmplY3Qoe1xuICB0aW1pbmc6IHpvZC56LnN0cmluZygpLFxuICBkdXJhdGlvbjogem9kLnoubnVtYmVyKCksXG4gIGRlbGF5OiB6b2Quei5udW1iZXIoKVxufSk7XG5jb25zdCBnZXRTdGF0ZVBhcmFtc1NjaGVtYSA9IChzY2hlbWEpID0+IHtcbiAgcmV0dXJuIHpvZC56Lm9iamVjdCh7XG4gICAgdmFsdWU6IHNjaGVtYSxcbiAgICBpbjogVHJhbnNpdGlvblNjaGVtYSxcbiAgICBvdXQ6IFRyYW5zaXRpb25TY2hlbWFcbiAgfSkub3B0aW9uYWwoKTtcbn07XG5jb25zdCBJdGVtU3RhdGVCYXNlU2NoZW1hID0gem9kLnoub2JqZWN0KHtcbiAgd2lkdGg6IGdldFN0YXRlUGFyYW1zU2NoZW1hKHpvZC56Lm51bWJlcigpKSxcbiAgaGVpZ2h0OiBnZXRTdGF0ZVBhcmFtc1NjaGVtYSh6b2Quei5udW1iZXIoKSksXG4gIGFuZ2xlOiBnZXRTdGF0ZVBhcmFtc1NjaGVtYSh6b2Quei5udW1iZXIoKSksXG4gIHRvcDogZ2V0U3RhdGVQYXJhbXNTY2hlbWEoem9kLnoubnVtYmVyKCkpLFxuICBsZWZ0OiBnZXRTdGF0ZVBhcmFtc1NjaGVtYSh6b2Quei5udW1iZXIoKSksXG4gIHNjYWxlOiBnZXRTdGF0ZVBhcmFtc1NjaGVtYSh6b2Quei5udW1iZXIoKSksXG4gIGJsdXI6IGdldFN0YXRlUGFyYW1zU2NoZW1hKHpvZC56Lm51bWJlcigpKVxufSk7XG5jb25zdCBNZWRpYVN0YXRlUGFyYW1zU2NoZW1hID0gem9kLnoub2JqZWN0KHtcbiAgb3BhY2l0eTogZ2V0U3RhdGVQYXJhbXNTY2hlbWEoem9kLnoubnVtYmVyKCkpLFxuICByYWRpdXM6IGdldFN0YXRlUGFyYW1zU2NoZW1hKHpvZC56Lm51bWJlcigpKSxcbiAgc3Ryb2tlV2lkdGg6IGdldFN0YXRlUGFyYW1zU2NoZW1hKHpvZC56Lm51bWJlcigpKSxcbiAgc3Ryb2tlQ29sb3I6IGdldFN0YXRlUGFyYW1zU2NoZW1hKHpvZC56LnN0cmluZygpKVxufSkubWVyZ2UoSXRlbVN0YXRlQmFzZVNjaGVtYSk7XG5jb25zdCBSZWN0YW5nbGVTdGF0ZVBhcmFtc1NjaGVtYSA9IHpvZC56Lm9iamVjdCh7XG4gIHN0cm9rZVdpZHRoOiBnZXRTdGF0ZVBhcmFtc1NjaGVtYSh6b2Quei5udW1iZXIoKSksXG4gIHJhZGl1czogZ2V0U3RhdGVQYXJhbXNTY2hlbWEoem9kLnoubnVtYmVyKCkpLFxuICBmaWxsQ29sb3I6IGdldFN0YXRlUGFyYW1zU2NoZW1hKHpvZC56LnN0cmluZygpKSxcbiAgc3Ryb2tlQ29sb3I6IGdldFN0YXRlUGFyYW1zU2NoZW1hKHpvZC56LnN0cmluZygpKSxcbiAgYmFja2Ryb3BCbHVyOiBnZXRTdGF0ZVBhcmFtc1NjaGVtYSh6b2Quei5udW1iZXIoKSlcbn0pLm1lcmdlKEl0ZW1TdGF0ZUJhc2VTY2hlbWEpO1xuY29uc3QgQ3VzdG9tSXRlbVN0YXRlUGFyYW1zU2NoZW1hID0gSXRlbVN0YXRlQmFzZVNjaGVtYTtcbmNvbnN0IEVtYmVkU3RhdGVQYXJhbXNTY2hlbWEgPSB6b2Quei5vYmplY3Qoe1xuICByYWRpdXM6IGdldFN0YXRlUGFyYW1zU2NoZW1hKHpvZC56Lm51bWJlcigpKSxcbiAgb3BhY2l0eTogZ2V0U3RhdGVQYXJhbXNTY2hlbWEoem9kLnoubnVtYmVyKCkubm9ubmVnYXRpdmUoKSlcbn0pLm1lcmdlKEl0ZW1TdGF0ZUJhc2VTY2hlbWEpO1xuY29uc3QgUmljaFRleHRTdGF0ZVBhcmFtc1NjaGVtYSA9IHpvZC56Lm9iamVjdCh7XG4gIGNvbG9yOiBnZXRTdGF0ZVBhcmFtc1NjaGVtYSh6b2Quei5zdHJpbmcoKSksXG4gIGxldHRlclNwYWNpbmc6IGdldFN0YXRlUGFyYW1zU2NoZW1hKHpvZC56Lm51bWJlcigpKSxcbiAgd29yZFNwYWNpbmc6IGdldFN0YXRlUGFyYW1zU2NoZW1hKHpvZC56Lm51bWJlcigpKVxufSkubWVyZ2UoSXRlbVN0YXRlQmFzZVNjaGVtYSk7XG5jb25zdCBHcm91cFN0YXRlUGFyYW1zU2NoZW1hID0gem9kLnoub2JqZWN0KHtcbiAgb3BhY2l0eTogZ2V0U3RhdGVQYXJhbXNTY2hlbWEoem9kLnoubnVtYmVyKCkubm9ubmVnYXRpdmUoKSksXG4gIGJsdXI6IGdldFN0YXRlUGFyYW1zU2NoZW1hKHpvZC56Lm51bWJlcigpLm5vbm5lZ2F0aXZlKCkpXG59KS5tZXJnZShJdGVtU3RhdGVCYXNlU2NoZW1hKTtcbmNvbnN0IENvbXBvdW5kU3RhdGVQYXJhbXNTY2hlbWEgPSB6b2Quei5vYmplY3Qoe1xuICBvcGFjaXR5OiBnZXRTdGF0ZVBhcmFtc1NjaGVtYSh6b2Quei5udW1iZXIoKS5ub25uZWdhdGl2ZSgpKVxufSkubWVyZ2UoSXRlbVN0YXRlQmFzZVNjaGVtYSk7XG5jb25zdCBDb2RlRW1iZWRTdGF0ZVBhcmFtc1NjaGVtYSA9IHpvZC56Lm9iamVjdCh7XG4gIG9wYWNpdHk6IGdldFN0YXRlUGFyYW1zU2NoZW1hKHpvZC56Lm51bWJlcigpLm5vbm5lZ2F0aXZlKCkpXG59KS5tZXJnZShJdGVtU3RhdGVCYXNlU2NoZW1hKTtcbmNvbnN0IENvbXBvbmVudFN0YXRlUGFyYW1zU2NoZW1hID0gem9kLnoub2JqZWN0KHtcbiAgb3BhY2l0eTogZ2V0U3RhdGVQYXJhbXNTY2hlbWEoem9kLnoubnVtYmVyKCkubm9ubmVnYXRpdmUoKSlcbn0pLm1lcmdlKEl0ZW1TdGF0ZUJhc2VTY2hlbWEpO1xuem9kLnoudW5pb24oW1xuICBFbWJlZFN0YXRlUGFyYW1zU2NoZW1hLFxuICBNZWRpYVN0YXRlUGFyYW1zU2NoZW1hLFxuICBSZWN0YW5nbGVTdGF0ZVBhcmFtc1NjaGVtYSxcbiAgUmljaFRleHRTdGF0ZVBhcmFtc1NjaGVtYSxcbiAgQ3VzdG9tSXRlbVN0YXRlUGFyYW1zU2NoZW1hLFxuICBHcm91cFN0YXRlUGFyYW1zU2NoZW1hLFxuICBDb21wb3VuZFN0YXRlUGFyYW1zU2NoZW1hLFxuICBDb2RlRW1iZWRTdGF0ZVBhcmFtc1NjaGVtYSxcbiAgQ29tcG9uZW50U3RhdGVQYXJhbXNTY2hlbWFcbl0pO1xudmFyIFRleHRBbGlnbiA9IC8qIEBfX1BVUkVfXyAqLyAoKFRleHRBbGlnbjIpID0+IHtcbiAgVGV4dEFsaWduMltcIkxlZnRcIl0gPSBcImxlZnRcIjtcbiAgVGV4dEFsaWduMltcIlJpZ2h0XCJdID0gXCJyaWdodFwiO1xuICBUZXh0QWxpZ24yW1wiQ2VudGVyXCJdID0gXCJjZW50ZXJcIjtcbiAgVGV4dEFsaWduMltcIkp1c3RpZnlcIl0gPSBcImp1c3RpZnlcIjtcbiAgcmV0dXJuIFRleHRBbGlnbjI7XG59KShUZXh0QWxpZ24gfHwge30pO1xudmFyIFRleHRUcmFuc2Zvcm0gPSAvKiBAX19QVVJFX18gKi8gKChUZXh0VHJhbnNmb3JtMikgPT4ge1xuICBUZXh0VHJhbnNmb3JtMltcIk5vbmVcIl0gPSBcIm5vbmVcIjtcbiAgVGV4dFRyYW5zZm9ybTJbXCJVcHBlcmNhc2VcIl0gPSBcInVwcGVyY2FzZVwiO1xuICBUZXh0VHJhbnNmb3JtMltcIkxvd2VyY2FzZVwiXSA9IFwibG93ZXJjYXNlXCI7XG4gIHJldHVybiBUZXh0VHJhbnNmb3JtMjtcbn0pKFRleHRUcmFuc2Zvcm0gfHwge30pO1xudmFyIFZlcnRpY2FsQWxpZ24gPSAvKiBAX19QVVJFX18gKi8gKChWZXJ0aWNhbEFsaWduMikgPT4ge1xuICBWZXJ0aWNhbEFsaWduMltcIlN1cGVyXCJdID0gXCJzdXBlclwiO1xuICBWZXJ0aWNhbEFsaWduMltcIlN1YlwiXSA9IFwic3ViXCI7XG4gIFZlcnRpY2FsQWxpZ24yW1wiVW5zZXRcIl0gPSBcInVuc2V0XCI7XG4gIHJldHVybiBWZXJ0aWNhbEFsaWduMjtcbn0pKFZlcnRpY2FsQWxpZ24gfHwge30pO1xudmFyIFRleHREZWNvcmF0aW9uID0gLyogQF9fUFVSRV9fICovICgoVGV4dERlY29yYXRpb24yKSA9PiB7XG4gIFRleHREZWNvcmF0aW9uMltcIlVuZGVybGluZVwiXSA9IFwidW5kZXJsaW5lXCI7XG4gIFRleHREZWNvcmF0aW9uMltcIk5vbmVcIl0gPSBcIm5vbmVcIjtcbiAgcmV0dXJuIFRleHREZWNvcmF0aW9uMjtcbn0pKFRleHREZWNvcmF0aW9uIHx8IHt9KTtcbnZhciBBbmNob3JTaWRlID0gLyogQF9fUFVSRV9fICovICgoQW5jaG9yU2lkZTIpID0+IHtcbiAgQW5jaG9yU2lkZTJbXCJUb3BcIl0gPSBcInRvcFwiO1xuICBBbmNob3JTaWRlMltcIkJvdHRvbVwiXSA9IFwiYm90dG9tXCI7XG4gIEFuY2hvclNpZGUyW1wiQ2VudGVyXCJdID0gXCJjZW50ZXJcIjtcbiAgcmV0dXJuIEFuY2hvclNpZGUyO1xufSkoQW5jaG9yU2lkZSB8fCB7fSk7XG52YXIgUG9zaXRpb25UeXBlID0gLyogQF9fUFVSRV9fICovICgoUG9zaXRpb25UeXBlMikgPT4ge1xuICBQb3NpdGlvblR5cGUyW1wiU2VjdGlvbkJhc2VkXCJdID0gXCJzZWN0aW9uLWJhc2VkXCI7XG4gIFBvc2l0aW9uVHlwZTJbXCJTY3JlZW5CYXNlZFwiXSA9IFwic2NyZWVuLWJhc2VkXCI7XG4gIHJldHVybiBQb3NpdGlvblR5cGUyO1xufSkoUG9zaXRpb25UeXBlIHx8IHt9KTtcbnZhciBBcmVhQW5jaG9yID0gLyogQF9fUFVSRV9fICovICgoQXJlYUFuY2hvcjIpID0+IHtcbiAgQXJlYUFuY2hvcjJbXCJUb3BMZWZ0XCJdID0gXCJ0b3AtbGVmdFwiO1xuICBBcmVhQW5jaG9yMltcIlRvcENlbnRlclwiXSA9IFwidG9wLWNlbnRlclwiO1xuICBBcmVhQW5jaG9yMltcIlRvcFJpZ2h0XCJdID0gXCJ0b3AtcmlnaHRcIjtcbiAgQXJlYUFuY2hvcjJbXCJNaWRkbGVMZWZ0XCJdID0gXCJtaWRkbGUtbGVmdFwiO1xuICBBcmVhQW5jaG9yMltcIk1pZGRsZUNlbnRlclwiXSA9IFwibWlkZGxlLWNlbnRlclwiO1xuICBBcmVhQW5jaG9yMltcIk1pZGRsZVJpZ2h0XCJdID0gXCJtaWRkbGUtcmlnaHRcIjtcbiAgQXJlYUFuY2hvcjJbXCJCb3R0b21MZWZ0XCJdID0gXCJib3R0b20tbGVmdFwiO1xuICBBcmVhQW5jaG9yMltcIkJvdHRvbUNlbnRlclwiXSA9IFwiYm90dG9tLWNlbnRlclwiO1xuICBBcmVhQW5jaG9yMltcIkJvdHRvbVJpZ2h0XCJdID0gXCJib3R0b20tcmlnaHRcIjtcbiAgcmV0dXJuIEFyZWFBbmNob3IyO1xufSkoQXJlYUFuY2hvciB8fCB7fSk7XG52YXIgRGltZW5zaW9uTW9kZSA9IC8qIEBfX1BVUkVfXyAqLyAoKERpbWVuc2lvbk1vZGUyKSA9PiB7XG4gIERpbWVuc2lvbk1vZGUyW1wiQ29udHJvbFVuaXRzXCJdID0gXCJjb250cm9sLXVuaXRzXCI7XG4gIERpbWVuc2lvbk1vZGUyW1wiUmVsYXRpdmVcIl0gPSBcInJlbGF0aXZlXCI7XG4gIHJldHVybiBEaW1lbnNpb25Nb2RlMjtcbn0pKERpbWVuc2lvbk1vZGUgfHwge30pO1xuY29uc3QgSXRlbUFyZWFTY2hlbWEgPSB6b2Quei5vYmplY3Qoe1xuICB0b3A6IHpvZC56Lm51bWJlcigpLFxuICBsZWZ0OiB6b2Quei5udW1iZXIoKSxcbiAgd2lkdGg6IHpvZC56Lm51bWJlcigpLFxuICBoZWlnaHQ6IHpvZC56Lm51bWJlcigpLFxuICB6SW5kZXg6IHpvZC56Lm51bWJlcigpLFxuICBhbmdsZTogem9kLnoubnVtYmVyKCksXG4gIGFuY2hvclNpZGU6IHpvZC56Lm5hdGl2ZUVudW0oQW5jaG9yU2lkZSkub3B0aW9uYWwoKSxcbiAgc2NhbGU6IHpvZC56Lm51bWJlcigpLm5vbm5lZ2F0aXZlKCksXG4gIHBvc2l0aW9uVHlwZTogem9kLnoubmF0aXZlRW51bShQb3NpdGlvblR5cGUpLFxuICBzY2FsZUFuY2hvcjogem9kLnoubmF0aXZlRW51bShBcmVhQW5jaG9yKVxufSk7XG5jb25zdCBMaW5rID0gem9kLnoub2JqZWN0KHtcbiAgdXJsOiB6b2Quei5zdHJpbmcoKS5taW4oMSksXG4gIHRhcmdldDogem9kLnouc3RyaW5nKCkubWluKDEpXG59KTtcbmNvbnN0IENvbXBvdW5kU2V0dGluZ3NTY2hlbWEgPSB6b2Quei5vYmplY3Qoe1xuICBwb3NpdGlvbkFuY2hvcjogem9kLnoubmF0aXZlRW51bShBcmVhQW5jaG9yKSxcbiAgd2lkdGhNb2RlOiB6b2Quei5uYXRpdmVFbnVtKERpbWVuc2lvbk1vZGUpLFxuICBoZWlnaHRNb2RlOiB6b2Quei5uYXRpdmVFbnVtKERpbWVuc2lvbk1vZGUpXG59KTtcbmNvbnN0IEl0ZW1CYXNlU2NoZW1hID0gem9kLnoub2JqZWN0KHtcbiAgaWQ6IHpvZC56LnN0cmluZygpLm1pbigxKSxcbiAgYXJlYTogem9kLnoucmVjb3JkKEl0ZW1BcmVhU2NoZW1hKSxcbiAgaGlkZGVuOiB6b2Quei5yZWNvcmQoem9kLnouYm9vbGVhbigpKSxcbiAgbGluazogTGluay5vcHRpb25hbCgpLFxuICBjb21wb3VuZFNldHRpbmdzOiB6b2Quei5yZWNvcmQoQ29tcG91bmRTZXR0aW5nc1NjaGVtYSkub3B0aW9uYWwoKSxcbiAgbGF5b3V0UGFyYW1zOiB6b2Quei5yZWNvcmQoem9kLnouYW55KCkpLm9wdGlvbmFsKClcbn0pO1xudmFyIEFydGljbGVJdGVtVHlwZSA9IC8qIEBfX1BVUkVfXyAqLyAoKEFydGljbGVJdGVtVHlwZTIpID0+IHtcbiAgQXJ0aWNsZUl0ZW1UeXBlMltcIkltYWdlXCJdID0gXCJpbWFnZVwiO1xuICBBcnRpY2xlSXRlbVR5cGUyW1wiUmljaFRleHRcIl0gPSBcInJpY2h0ZXh0XCI7XG4gIEFydGljbGVJdGVtVHlwZTJbXCJWaWRlb1wiXSA9IFwidmlkZW9cIjtcbiAgQXJ0aWNsZUl0ZW1UeXBlMltcIlJlY3RhbmdsZVwiXSA9IFwicmVjdGFuZ2xlXCI7XG4gIEFydGljbGVJdGVtVHlwZTJbXCJWaW1lb0VtYmVkXCJdID0gXCJ2aW1lby1lbWJlZFwiO1xuICBBcnRpY2xlSXRlbVR5cGUyW1wiWW91dHViZUVtYmVkXCJdID0gXCJ5b3V0dWJlLWVtYmVkXCI7XG4gIEFydGljbGVJdGVtVHlwZTJbXCJDdXN0b21cIl0gPSBcImN1c3RvbVwiO1xuICBBcnRpY2xlSXRlbVR5cGUyW1wiR3JvdXBcIl0gPSBcImdyb3VwXCI7XG4gIEFydGljbGVJdGVtVHlwZTJbXCJDb2RlRW1iZWRcIl0gPSBcImNvZGUtZW1iZWRcIjtcbiAgQXJ0aWNsZUl0ZW1UeXBlMltcIkNvbXBvdW5kXCJdID0gXCJjb21wb3VuZFwiO1xuICBBcnRpY2xlSXRlbVR5cGUyW1wiQ29tcG9uZW50XCJdID0gXCJjb21wb25lbnRcIjtcbiAgcmV0dXJuIEFydGljbGVJdGVtVHlwZTI7XG59KShBcnRpY2xlSXRlbVR5cGUgfHwge30pO1xuY29uc3QgcG9pbnRlckV2ZW50cyQxID0gem9kLnouZW51bShbXCJuZXZlclwiLCBcIndoZW5fdmlzaWJsZVwiLCBcImFsd2F5c1wiXSkub3B0aW9uYWwoKTtcbmNvbnN0IFJpY2hUZXh0RW50aXR5U2NoZW1hID0gem9kLnoub2JqZWN0KHtcbiAgc3RhcnQ6IHpvZC56Lm51bWJlcigpLm5vbm5lZ2F0aXZlKCksXG4gIGVuZDogem9kLnoubnVtYmVyKCkubm9ubmVnYXRpdmUoKSxcbiAgdHlwZTogem9kLnouc3RyaW5nKCksXG4gIGRhdGE6IHpvZC56LmFueSgpLm9wdGlvbmFsKClcbn0pO1xuY29uc3QgUmljaFRleHRTdHlsZVNjaGVtYSA9IHpvZC56Lm9iamVjdCh7XG4gIHN0YXJ0OiB6b2Quei5udW1iZXIoKS5ub25uZWdhdGl2ZSgpLFxuICBlbmQ6IHpvZC56Lm51bWJlcigpLm5vbm5lZ2F0aXZlKCksXG4gIHN0eWxlOiB6b2Quei5zdHJpbmcoKS5taW4oMSksXG4gIHZhbHVlOiB6b2Quei5zdHJpbmcoKS5vcHRpb25hbCgpXG59KTtcbmNvbnN0IFJpY2hUZXh0QmxvY2tTY2hlbWEgPSB6b2Quei5sYXp5KCgpID0+IHpvZC56Lm9iamVjdCh7XG4gIHN0YXJ0OiB6b2Quei5udW1iZXIoKS5ub25uZWdhdGl2ZSgpLFxuICBlbmQ6IHpvZC56Lm51bWJlcigpLm5vbm5lZ2F0aXZlKCksXG4gIHR5cGU6IHpvZC56LnN0cmluZygpLm1pbigxKSxcbiAgZW50aXRpZXM6IHpvZC56LmFycmF5KFJpY2hUZXh0RW50aXR5U2NoZW1hKS5vcHRpb25hbCgpLFxuICBjaGlsZHJlbjogem9kLnouYXJyYXkoUmljaFRleHRCbG9ja1NjaGVtYSkub3B0aW9uYWwoKSxcbiAgZGF0YTogem9kLnouYW55KCkub3B0aW9uYWwoKVxufSkpO1xuY29uc3QgUmljaFRleHRJdGVtU2NoZW1hID0gSXRlbUJhc2VTY2hlbWEuZXh0ZW5kKHtcbiAgdHlwZTogem9kLnoubGl0ZXJhbChBcnRpY2xlSXRlbVR5cGUuUmljaFRleHQpLFxuICBjb21tb25QYXJhbXM6IHpvZC56Lm9iamVjdCh7XG4gICAgdGV4dDogem9kLnouc3RyaW5nKCksXG4gICAgYmxvY2tzOiB6b2Quei5hcnJheShSaWNoVGV4dEJsb2NrU2NoZW1hKS5vcHRpb25hbCgpLFxuICAgIHBvaW50ZXJFdmVudHM6IHBvaW50ZXJFdmVudHMkMVxuICB9KSxcbiAgc3RpY2t5OiB6b2Quei5yZWNvcmQoXG4gICAgem9kLnoub2JqZWN0KHtcbiAgICAgIGZyb206IHpvZC56Lm51bWJlcigpLFxuICAgICAgdG86IHpvZC56Lm51bWJlcigpLm9wdGlvbmFsKClcbiAgICB9KS5udWxsYWJsZSgpXG4gICksXG4gIGxheW91dFBhcmFtczogem9kLnoucmVjb3JkKFxuICAgIHpvZC56Lm9iamVjdCh7XG4gICAgICByYW5nZVN0eWxlczogem9kLnouYXJyYXkoUmljaFRleHRTdHlsZVNjaGVtYSkub3B0aW9uYWwoKSxcbiAgICAgIHRleHRBbGlnbjogem9kLnoubmF0aXZlRW51bShUZXh0QWxpZ24pLFxuICAgICAgc2l6aW5nOiB6b2Quei5zdHJpbmcoKSxcbiAgICAgIGJsdXI6IHpvZC56Lm51bWJlcigpLFxuICAgICAgZm9udFNpemU6IHpvZC56Lm51bWJlcigpLFxuICAgICAgbGluZUhlaWdodDogem9kLnoubnVtYmVyKCksXG4gICAgICBsZXR0ZXJTcGFjaW5nOiB6b2Quei5udW1iZXIoKSxcbiAgICAgIHdvcmRTcGFjaW5nOiB6b2Quei5udW1iZXIoKSxcbiAgICAgIHRleHRUcmFuc2Zvcm06IHpvZC56Lm5hdGl2ZUVudW0oVGV4dFRyYW5zZm9ybSksXG4gICAgICB2ZXJ0aWNhbEFsaWduOiB6b2Quei5uYXRpdmVFbnVtKFZlcnRpY2FsQWxpZ24pLFxuICAgICAgY29sb3I6IHpvZC56LnN0cmluZygpLFxuICAgICAgdHlwZUZhY2U6IHpvZC56LnN0cmluZygpLFxuICAgICAgZm9udFN0eWxlOiB6b2Quei5zdHJpbmcoKSxcbiAgICAgIGZvbnRXZWlnaHQ6IHpvZC56Lm51bWJlcigpLFxuICAgICAgZm9udFZhcmlhbnQ6IHpvZC56LnN0cmluZygpLFxuICAgICAgaXNEcmFnZ2FibGU6IHpvZC56LmJvb2xlYW4oKS5vcHRpb25hbCgpXG4gICAgfSlcbiAgKSxcbiAgc3RhdGU6IHpvZC56LnJlY29yZChSaWNoVGV4dFN0YXRlUGFyYW1zU2NoZW1hKVxufSk7XG5jb25zdCBwb2ludGVyRXZlbnRzID0gem9kLnouZW51bShbXCJuZXZlclwiLCBcIndoZW5fdmlzaWJsZVwiLCBcImFsd2F5c1wiXSkub3B0aW9uYWwoKTtcbmNvbnN0IEZYQ29udHJvbFNjaGVtYSA9IHpvZC56LmRpc2NyaW1pbmF0ZWRVbmlvbihcInR5cGVcIiwgW1xuICB6b2Quei5vYmplY3Qoe1xuICAgIHR5cGU6IHpvZC56LmxpdGVyYWwoXCJmbG9hdFwiKSxcbiAgICBzaGFkZXJQYXJhbTogem9kLnouc3RyaW5nKCksXG4gICAgdmFsdWU6IHpvZC56Lm51bWJlcigpXG4gIH0pLFxuICB6b2Quei5vYmplY3Qoe1xuICAgIHR5cGU6IHpvZC56LmxpdGVyYWwoXCJpbnRcIiksXG4gICAgc2hhZGVyUGFyYW06IHpvZC56LnN0cmluZygpLFxuICAgIHZhbHVlOiB6b2Quei5udW1iZXIoKVxuICB9KSxcbiAgem9kLnoub2JqZWN0KHtcbiAgICB0eXBlOiB6b2Quei5saXRlcmFsKFwidmVjMlwiKSxcbiAgICBzaGFkZXJQYXJhbTogem9kLnouc3RyaW5nKCksXG4gICAgdmFsdWU6IHpvZC56LnR1cGxlKFt6b2Quei5udW1iZXIoKSwgem9kLnoubnVtYmVyKCldKVxuICB9KVxuXSk7XG5jb25zdCBGWFBhcmFtcyA9IHpvZC56Lm9iamVjdCh7XG4gIHVybDogem9kLnouc3RyaW5nKCkubWluKDEpLFxuICBoYXNHTEVmZmVjdDogem9kLnouYm9vbGVhbigpLm9wdGlvbmFsKCksXG4gIGZyYWdtZW50U2hhZGVyOiB6b2Quei5zdHJpbmcoKS5udWxsYWJsZSgpLFxuICBGWENvbnRyb2xzOiB6b2Quei5hcnJheShGWENvbnRyb2xTY2hlbWEpLm9wdGlvbmFsKClcbn0pO1xuY29uc3QgSW1hZ2VJdGVtU2NoZW1hID0gSXRlbUJhc2VTY2hlbWEuZXh0ZW5kKHtcbiAgdHlwZTogem9kLnoubGl0ZXJhbChBcnRpY2xlSXRlbVR5cGUuSW1hZ2UpLFxuICBjb21tb25QYXJhbXM6IHpvZC56Lm9iamVjdCh7XG4gICAgcG9pbnRlckV2ZW50c1xuICB9KS5tZXJnZShGWFBhcmFtcyksXG4gIHN0aWNreTogem9kLnoucmVjb3JkKFxuICAgIHpvZC56Lm9iamVjdCh7XG4gICAgICBmcm9tOiB6b2Quei5udW1iZXIoKSxcbiAgICAgIHRvOiB6b2Quei5udW1iZXIoKS5vcHRpb25hbCgpXG4gICAgfSkubnVsbGFibGUoKVxuICApLFxuICBsYXlvdXRQYXJhbXM6IHpvZC56LnJlY29yZChcbiAgICB6b2Quei5vYmplY3Qoe1xuICAgICAgb3BhY2l0eTogem9kLnoubnVtYmVyKCkubm9ubmVnYXRpdmUoKSxcbiAgICAgIHJhZGl1czogem9kLnoubnVtYmVyKCksXG4gICAgICBzdHJva2VXaWR0aDogem9kLnoubnVtYmVyKCksXG4gICAgICBzdHJva2VDb2xvcjogem9kLnouc3RyaW5nKCksXG4gICAgICBibHVyOiB6b2Quei5udW1iZXIoKSxcbiAgICAgIGlzRHJhZ2dhYmxlOiB6b2Quei5ib29sZWFuKCkub3B0aW9uYWwoKVxuICAgIH0pXG4gICksXG4gIHN0YXRlOiB6b2Quei5yZWNvcmQoTWVkaWFTdGF0ZVBhcmFtc1NjaGVtYSlcbn0pO1xuY29uc3QgVmlkZW9JdGVtU2NoZW1hID0gSXRlbUJhc2VTY2hlbWEuZXh0ZW5kKHtcbiAgdHlwZTogem9kLnoubGl0ZXJhbChBcnRpY2xlSXRlbVR5cGUuVmlkZW8pLFxuICBjb21tb25QYXJhbXM6IHpvZC56Lm9iamVjdCh7XG4gICAgY292ZXJVcmw6IHpvZC56LnN0cmluZygpLm51bGxhYmxlKCksXG4gICAgcG9pbnRlckV2ZW50c1xuICB9KS5tZXJnZShGWFBhcmFtcyksXG4gIHN0aWNreTogem9kLnoucmVjb3JkKFxuICAgIHpvZC56Lm9iamVjdCh7XG4gICAgICBmcm9tOiB6b2Quei5udW1iZXIoKSxcbiAgICAgIHRvOiB6b2Quei5udW1iZXIoKS5vcHRpb25hbCgpXG4gICAgfSkubnVsbGFibGUoKVxuICApLFxuICBsYXlvdXRQYXJhbXM6IHpvZC56LnJlY29yZChcbiAgICB6b2Quei5vYmplY3Qoe1xuICAgICAgYXV0b3BsYXk6IHpvZC56LmJvb2xlYW4oKSxcbiAgICAgIHNjcm9sbFBsYXliYWNrOiB6b2Quei5vYmplY3Qoe1xuICAgICAgICBmcm9tOiB6b2Quei5udW1iZXIoKSxcbiAgICAgICAgdG86IHpvZC56Lm51bWJlcigpXG4gICAgICB9KS5udWxsYWJsZSgpLFxuICAgICAgb3BhY2l0eTogem9kLnoubnVtYmVyKCkubm9ubmVnYXRpdmUoKSxcbiAgICAgIHJhZGl1czogem9kLnoubnVtYmVyKCksXG4gICAgICBzdHJva2VXaWR0aDogem9kLnoubnVtYmVyKCksXG4gICAgICBzdHJva2VDb2xvcjogem9kLnouc3RyaW5nKCksXG4gICAgICBibHVyOiB6b2Quei5udW1iZXIoKSxcbiAgICAgIGlzRHJhZ2dhYmxlOiB6b2Quei5ib29sZWFuKCkub3B0aW9uYWwoKVxuICAgIH0pXG4gICksXG4gIHN0YXRlOiB6b2Quei5yZWNvcmQoTWVkaWFTdGF0ZVBhcmFtc1NjaGVtYSlcbn0pO1xuY29uc3QgUmVjdGFuZ2xlSXRlbVNjaGVtYSA9IEl0ZW1CYXNlU2NoZW1hLmV4dGVuZCh7XG4gIHR5cGU6IHpvZC56LmxpdGVyYWwoQXJ0aWNsZUl0ZW1UeXBlLlJlY3RhbmdsZSksXG4gIGNvbW1vblBhcmFtczogem9kLnoub2JqZWN0KHtcbiAgICByYXRpb0xvY2s6IHpvZC56LmJvb2xlYW4oKSxcbiAgICBwb2ludGVyRXZlbnRzXG4gIH0pLFxuICBzdGlja3k6IHpvZC56LnJlY29yZChcbiAgICB6b2Quei5vYmplY3Qoe1xuICAgICAgZnJvbTogem9kLnoubnVtYmVyKCksXG4gICAgICB0bzogem9kLnoubnVtYmVyKCkub3B0aW9uYWwoKVxuICAgIH0pLm51bGxhYmxlKClcbiAgKSxcbiAgbGF5b3V0UGFyYW1zOiB6b2Quei5yZWNvcmQoXG4gICAgem9kLnoub2JqZWN0KHtcbiAgICAgIHJhZGl1czogem9kLnoubnVtYmVyKCksXG4gICAgICBzdHJva2VXaWR0aDogem9kLnoubnVtYmVyKCksXG4gICAgICBmaWxsQ29sb3I6IHpvZC56LnN0cmluZygpLm1pbigxKSxcbiAgICAgIHN0cm9rZUNvbG9yOiB6b2Quei5zdHJpbmcoKS5taW4oMSksXG4gICAgICBibHVyOiB6b2Quei5udW1iZXIoKSxcbiAgICAgIGJhY2tkcm9wQmx1cjogem9kLnoubnVtYmVyKCksXG4gICAgICBibHVyTW9kZTogem9kLnouZW51bShbXCJkZWZhdWx0XCIsIFwiYmFja2Ryb3BcIl0pLFxuICAgICAgaXNEcmFnZ2FibGU6IHpvZC56LmJvb2xlYW4oKS5vcHRpb25hbCgpXG4gICAgfSlcbiAgKSxcbiAgc3RhdGU6IHpvZC56LnJlY29yZChSZWN0YW5nbGVTdGF0ZVBhcmFtc1NjaGVtYSlcbn0pO1xuY29uc3QgQ3VzdG9tSXRlbVNjaGVtYSA9IEl0ZW1CYXNlU2NoZW1hLmV4dGVuZCh7XG4gIHR5cGU6IHpvZC56LmxpdGVyYWwoQXJ0aWNsZUl0ZW1UeXBlLkN1c3RvbSksXG4gIGNvbW1vblBhcmFtczogem9kLnoub2JqZWN0KHtcbiAgICBuYW1lOiB6b2Quei5zdHJpbmcoKSxcbiAgICBwb2ludGVyRXZlbnRzXG4gIH0pLFxuICBzdGlja3k6IHpvZC56LnJlY29yZChcbiAgICB6b2Quei5vYmplY3Qoe1xuICAgICAgZnJvbTogem9kLnoubnVtYmVyKCksXG4gICAgICB0bzogem9kLnoubnVtYmVyKCkub3B0aW9uYWwoKVxuICAgIH0pLm51bGxhYmxlKClcbiAgKSxcbiAgbGF5b3V0UGFyYW1zOiB6b2Quei5yZWNvcmQoem9kLnoub2JqZWN0KHtcbiAgICBpc0RyYWdnYWJsZTogem9kLnouYm9vbGVhbigpLm9wdGlvbmFsKClcbiAgfSkpLFxuICBzdGF0ZTogem9kLnoucmVjb3JkKEN1c3RvbUl0ZW1TdGF0ZVBhcmFtc1NjaGVtYSlcbn0pO1xuY29uc3QgVmltZW9FbWJlZEl0ZW1TY2hlbWEgPSBJdGVtQmFzZVNjaGVtYS5leHRlbmQoe1xuICB0eXBlOiB6b2Quei5saXRlcmFsKEFydGljbGVJdGVtVHlwZS5WaW1lb0VtYmVkKSxcbiAgY29tbW9uUGFyYW1zOiB6b2Quei5vYmplY3Qoe1xuICAgIHBsYXk6IHpvZC56LnVuaW9uKFt6b2Quei5saXRlcmFsKFwib24taG92ZXJcIiksIHpvZC56LmxpdGVyYWwoXCJvbi1jbGlja1wiKSwgem9kLnoubGl0ZXJhbChcImF1dG9cIildKSxcbiAgICBjb250cm9sczogem9kLnouYm9vbGVhbigpLFxuICAgIGxvb3A6IHpvZC56LmJvb2xlYW4oKSxcbiAgICBtdXRlZDogem9kLnouYm9vbGVhbigpLFxuICAgIHBpY3R1cmVJblBpY3R1cmU6IHpvZC56LmJvb2xlYW4oKSxcbiAgICB1cmw6IHpvZC56LnN0cmluZygpLm1pbigxKSxcbiAgICBjb3ZlclVybDogem9kLnouc3RyaW5nKCkubnVsbGFibGUoKSxcbiAgICByYXRpb0xvY2s6IHpvZC56LmJvb2xlYW4oKSxcbiAgICBwb2ludGVyRXZlbnRzXG4gIH0pLFxuICBzdGlja3k6IHpvZC56LnJlY29yZChcbiAgICB6b2Quei5vYmplY3Qoe1xuICAgICAgZnJvbTogem9kLnoubnVtYmVyKCksXG4gICAgICB0bzogem9kLnoubnVtYmVyKCkub3B0aW9uYWwoKVxuICAgIH0pLm51bGxhYmxlKClcbiAgKSxcbiAgbGF5b3V0UGFyYW1zOiB6b2Quei5yZWNvcmQoXG4gICAgem9kLnoub2JqZWN0KHtcbiAgICAgIHJhZGl1czogem9kLnoubnVtYmVyKCksXG4gICAgICBibHVyOiB6b2Quei5udW1iZXIoKSxcbiAgICAgIG9wYWNpdHk6IHpvZC56Lm51bWJlcigpLm5vbm5lZ2F0aXZlKClcbiAgICB9KVxuICApLFxuICBzdGF0ZTogem9kLnoucmVjb3JkKEVtYmVkU3RhdGVQYXJhbXNTY2hlbWEpXG59KTtcbmNvbnN0IFlvdXR1YmVFbWJlZEl0ZW1TY2hlbWEgPSBJdGVtQmFzZVNjaGVtYS5leHRlbmQoe1xuICB0eXBlOiB6b2Quei5saXRlcmFsKEFydGljbGVJdGVtVHlwZS5Zb3V0dWJlRW1iZWQpLFxuICBjb21tb25QYXJhbXM6IHpvZC56Lm9iamVjdCh7XG4gICAgcGxheTogem9kLnouZW51bShbXCJvbi1ob3ZlclwiLCBcIm9uLWNsaWNrXCIsIFwiYXV0b1wiXSksXG4gICAgY29udHJvbHM6IHpvZC56LmJvb2xlYW4oKSxcbiAgICBsb29wOiB6b2Quei5ib29sZWFuKCksXG4gICAgdXJsOiB6b2Quei5zdHJpbmcoKS5taW4oMSksXG4gICAgY292ZXJVcmw6IHpvZC56LnN0cmluZygpLm51bGxhYmxlKCksXG4gICAgcG9pbnRlckV2ZW50c1xuICB9KSxcbiAgc3RpY2t5OiB6b2Quei5yZWNvcmQoXG4gICAgem9kLnoub2JqZWN0KHtcbiAgICAgIGZyb206IHpvZC56Lm51bWJlcigpLFxuICAgICAgdG86IHpvZC56Lm51bWJlcigpLm9wdGlvbmFsKClcbiAgICB9KS5udWxsYWJsZSgpXG4gICksXG4gIGxheW91dFBhcmFtczogem9kLnoucmVjb3JkKFxuICAgIHpvZC56Lm9iamVjdCh7XG4gICAgICByYWRpdXM6IHpvZC56Lm51bWJlcigpLFxuICAgICAgYmx1cjogem9kLnoubnVtYmVyKCksXG4gICAgICBvcGFjaXR5OiB6b2Quei5udW1iZXIoKS5ub25uZWdhdGl2ZSgpXG4gICAgfSlcbiAgKSxcbiAgc3RhdGU6IHpvZC56LnJlY29yZChFbWJlZFN0YXRlUGFyYW1zU2NoZW1hKVxufSk7XG5jb25zdCBDb2RlRW1iZWRJdGVtU2NoZW1hID0gSXRlbUJhc2VTY2hlbWEuZXh0ZW5kKHtcbiAgdHlwZTogem9kLnoubGl0ZXJhbChBcnRpY2xlSXRlbVR5cGUuQ29kZUVtYmVkKSxcbiAgY29tbW9uUGFyYW1zOiB6b2Quei5vYmplY3Qoe1xuICAgIGh0bWw6IHpvZC56LnN0cmluZygpLFxuICAgIHNjYWxlOiB6b2Quei5ib29sZWFuKCksXG4gICAgaWZyYW1lOiB6b2Quei5ib29sZWFuKCksXG4gICAgcG9pbnRlckV2ZW50c1xuICB9KSxcbiAgc3RpY2t5OiB6b2Quei5yZWNvcmQoXG4gICAgem9kLnoub2JqZWN0KHtcbiAgICAgIGZyb206IHpvZC56Lm51bWJlcigpLFxuICAgICAgdG86IHpvZC56Lm51bWJlcigpLm9wdGlvbmFsKClcbiAgICB9KS5udWxsYWJsZSgpXG4gICksXG4gIGxheW91dFBhcmFtczogem9kLnoucmVjb3JkKFxuICAgIHpvZC56Lm9iamVjdCh7XG4gICAgICBhcmVhQW5jaG9yOiB6b2Quei5uYXRpdmVFbnVtKEFyZWFBbmNob3IpLFxuICAgICAgb3BhY2l0eTogem9kLnoubnVtYmVyKCkubm9ubmVnYXRpdmUoKSxcbiAgICAgIGJsdXI6IHpvZC56Lm51bWJlcigpLFxuICAgICAgaXNEcmFnZ2FibGU6IHpvZC56LmJvb2xlYW4oKS5vcHRpb25hbCgpXG4gICAgfSlcbiAgKSxcbiAgc3RhdGU6IHpvZC56LnJlY29yZChDb2RlRW1iZWRTdGF0ZVBhcmFtc1NjaGVtYSlcbn0pO1xuY29uc3QgQ29tcG9uZW50SXRlbVNjaGVtYSA9IEl0ZW1CYXNlU2NoZW1hLmV4dGVuZCh7XG4gIHR5cGU6IHpvZC56LmxpdGVyYWwoQXJ0aWNsZUl0ZW1UeXBlLkNvbXBvbmVudCksXG4gIGNvbW1vblBhcmFtczogem9kLnoub2JqZWN0KHtcbiAgICBjb21wb25lbnRJZDogem9kLnouc3RyaW5nKCksXG4gICAgY29udGVudDogem9kLnouYW55KCkub3B0aW9uYWwoKVxuICB9KSxcbiAgc3RpY2t5OiB6b2Quei5yZWNvcmQoXG4gICAgem9kLnoub2JqZWN0KHtcbiAgICAgIGZyb206IHpvZC56Lm51bWJlcigpLFxuICAgICAgdG86IHpvZC56Lm51bWJlcigpLm9wdGlvbmFsKClcbiAgICB9KS5udWxsYWJsZSgpXG4gICksXG4gIGxheW91dFBhcmFtczogem9kLnoucmVjb3JkKHpvZC56Lm9iamVjdCh7XG4gICAgcGFyYW1ldGVyczogem9kLnouYW55KCkub3B0aW9uYWwoKSxcbiAgICBvcGFjaXR5OiB6b2Quei5udW1iZXIoKS5ub25uZWdhdGl2ZSgpLFxuICAgIGJsdXI6IHpvZC56Lm51bWJlcigpXG4gIH0pKSxcbiAgc3RhdGU6IHpvZC56LnJlY29yZChDb21wb25lbnRTdGF0ZVBhcmFtc1NjaGVtYSlcbn0pO1xuY29uc3QgSXRlbVNjaGVtYSA9IHpvZC56LmxhenkoKCkgPT4gem9kLnouZGlzY3JpbWluYXRlZFVuaW9uKFwidHlwZVwiLCBbXG4gIEltYWdlSXRlbVNjaGVtYSxcbiAgVmlkZW9JdGVtU2NoZW1hLFxuICBSZWN0YW5nbGVJdGVtU2NoZW1hLFxuICBDdXN0b21JdGVtU2NoZW1hLFxuICBSaWNoVGV4dEl0ZW1TY2hlbWEsXG4gIFZpbWVvRW1iZWRJdGVtU2NoZW1hLFxuICBZb3V0dWJlRW1iZWRJdGVtU2NoZW1hLFxuICBDb2RlRW1iZWRJdGVtU2NoZW1hLFxuICBDb21wb25lbnRJdGVtU2NoZW1hLFxuICBJdGVtQmFzZVNjaGVtYS5leHRlbmQoe1xuICAgIHR5cGU6IHpvZC56LmxpdGVyYWwoQXJ0aWNsZUl0ZW1UeXBlLkdyb3VwKSxcbiAgICBjb21tb25QYXJhbXM6IHpvZC56Lm9iamVjdCh7XG4gICAgICBwb2ludGVyRXZlbnRzXG4gICAgfSksXG4gICAgaXRlbXM6IHpvZC56LmFycmF5KEl0ZW1TY2hlbWEpLFxuICAgIHN0aWNreTogem9kLnoucmVjb3JkKFxuICAgICAgem9kLnoub2JqZWN0KHtcbiAgICAgICAgZnJvbTogem9kLnoubnVtYmVyKCksXG4gICAgICAgIHRvOiB6b2Quei5udW1iZXIoKS5vcHRpb25hbCgpXG4gICAgICB9KS5udWxsYWJsZSgpXG4gICAgKSxcbiAgICBsYXlvdXRQYXJhbXM6IHpvZC56LnJlY29yZChcbiAgICAgIHpvZC56Lm9iamVjdCh7XG4gICAgICAgIG9wYWNpdHk6IHpvZC56Lm51bWJlcigpLm5vbm5lZ2F0aXZlKCksXG4gICAgICAgIGJsdXI6IHpvZC56Lm51bWJlcigpXG4gICAgICB9KVxuICAgICksXG4gICAgc3RhdGU6IHpvZC56LnJlY29yZChHcm91cFN0YXRlUGFyYW1zU2NoZW1hKVxuICB9KSxcbiAgSXRlbUJhc2VTY2hlbWEuZXh0ZW5kKHtcbiAgICB0eXBlOiB6b2Quei5saXRlcmFsKEFydGljbGVJdGVtVHlwZS5Db21wb3VuZCksXG4gICAgY29tbW9uUGFyYW1zOiB6b2Quei5vYmplY3Qoe1xuICAgICAgb3ZlcmZsb3c6IHpvZC56LmVudW0oW1wiaGlkZGVuXCIsIFwidmlzaWJsZVwiXSksXG4gICAgICBwb2ludGVyRXZlbnRzXG4gICAgfSksXG4gICAgaXRlbXM6IHpvZC56LmFycmF5KEl0ZW1TY2hlbWEpLFxuICAgIHN0aWNreTogem9kLnoucmVjb3JkKFxuICAgICAgem9kLnoub2JqZWN0KHtcbiAgICAgICAgZnJvbTogem9kLnoubnVtYmVyKCksXG4gICAgICAgIHRvOiB6b2Quei5udW1iZXIoKS5vcHRpb25hbCgpXG4gICAgICB9KS5udWxsYWJsZSgpXG4gICAgKSxcbiAgICBsYXlvdXRQYXJhbXM6IHpvZC56LnJlY29yZChcbiAgICAgIHpvZC56Lm9iamVjdCh7XG4gICAgICAgIG9wYWNpdHk6IHpvZC56Lm51bWJlcigpLm5vbm5lZ2F0aXZlKClcbiAgICAgIH0pXG4gICAgKSxcbiAgICBzdGF0ZTogem9kLnoucmVjb3JkKENvbXBvdW5kU3RhdGVQYXJhbXNTY2hlbWEpXG4gIH0pXG5dKSk7XG5jb25zdCBTZWN0aW9uSGVpZ2h0U2NoZW1hID0gem9kLnoub2JqZWN0KHtcbiAgbW9kZTogem9kLnoubmF0aXZlRW51bShTZWN0aW9uSGVpZ2h0TW9kZSksXG4gIHVuaXRzOiB6b2Quei5udW1iZXIoKS5ub25uZWdhdGl2ZSgpLFxuICB2aFVuaXRzOiB6b2Quei5udW1iZXIoKS5ub25uZWdhdGl2ZSgpLm9wdGlvbmFsKClcbn0pO1xuY29uc3QgU2VjdGlvblNjaGVtYSA9IHpvZC56Lm9iamVjdCh7XG4gIGlkOiB6b2Quei5zdHJpbmcoKS5taW4oMSksXG4gIGl0ZW1zOiB6b2Quei5hcnJheShJdGVtU2NoZW1hKSxcbiAgbmFtZTogem9kLnouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgaGVpZ2h0OiB6b2Quei5yZWNvcmQoU2VjdGlvbkhlaWdodFNjaGVtYSksXG4gIHBvc2l0aW9uOiB6b2Quei5yZWNvcmQoem9kLnoubnVtYmVyKCkpLFxuICBoaWRkZW46IHpvZC56LnJlY29yZCh6b2Quei5ib29sZWFuKCkpLFxuICBjb2xvcjogem9kLnoucmVjb3JkKHpvZC56Lm51bGxhYmxlKHpvZC56LnN0cmluZygpKSksXG4gIG1lZGlhOiB6b2Quei5yZWNvcmQoem9kLnoub2JqZWN0KHtcbiAgICB1cmw6IHpvZC56LnN0cmluZygpLFxuICAgIHNpemU6IHpvZC56LnN0cmluZygpLFxuICAgIHBvc2l0aW9uOiB6b2Quei5zdHJpbmcoKSxcbiAgICBvZmZzZXRYOiB6b2Quei5udW1iZXIoKS5udWxsYWJsZSgpXG4gIH0pKS5vcHRpb25hbCgpXG59KTtcbmNvbnN0IFRyaWdnZXJTY2hlbWEgPSB6b2Quei5vYmplY3Qoe1xuICBpdGVtSWQ6IHpvZC56LnN0cmluZygpLFxuICB0eXBlOiB6b2Quei5lbnVtKFtcImhvdmVyLWluXCIsIFwiaG92ZXItb3V0XCIsIFwiY2xpY2tcIl0pLFxuICBmcm9tOiB6b2Quei5zdHJpbmcoKSxcbiAgdG86IHpvZC56LnN0cmluZygpXG59KTtcbmNvbnN0IFZpZGVvSW50ZXJhY3Rpb25BY3Rpb25TY2hlbWEgPSB6b2Quei5vYmplY3Qoe1xuICB0eXBlOiB6b2Quei5lbnVtKFtcInBsYXlcIiwgXCJwYXVzZVwiXSksXG4gIGl0ZW1JZDogem9kLnouc3RyaW5nKClcbn0pO1xuY29uc3QgU3RhdGVTY2hlbWEgPSB6b2Quei5vYmplY3Qoe1xuICBpZDogem9kLnouc3RyaW5nKCksXG4gIGFjdGlvbnM6IHpvZC56LmFycmF5KFZpZGVvSW50ZXJhY3Rpb25BY3Rpb25TY2hlbWEpLm9wdGlvbmFsKClcbn0pO1xuY29uc3QgSW50ZXJhY3Rpb25TY2hlbWEgPSB6b2Quei5vYmplY3Qoe1xuICBpZDogem9kLnouc3RyaW5nKCksXG4gIHRyaWdnZXJzOiB6b2Quei5hcnJheShUcmlnZ2VyU2NoZW1hKSxcbiAgc3RhdGVzOiB6b2Quei5hcnJheShTdGF0ZVNjaGVtYSksXG4gIHN0YXJ0U3RhdGVJZDogem9kLnouc3RyaW5nKClcbn0pO1xuY29uc3QgQXJ0aWNsZVNjaGVtYSA9IHpvZC56Lm9iamVjdCh7XG4gIGlkOiB6b2Quei5zdHJpbmcoKS5taW4oMSksXG4gIHNlY3Rpb25zOiB6b2Quei5hcnJheShTZWN0aW9uU2NoZW1hKSxcbiAgaW50ZXJhY3Rpb25zOiB6b2Quei5yZWNvcmQoem9kLnouYXJyYXkoSW50ZXJhY3Rpb25TY2hlbWEpKVxufSk7XG5jb25zdCBMYXlvdXRTY2hlbWEgPSB6b2Quei5vYmplY3Qoe1xuICBpZDogem9kLnouc3RyaW5nKCksXG4gIHRpdGxlOiB6b2Quei5zdHJpbmcoKSxcbiAgc3RhcnRzV2l0aDogem9kLnoubnVtYmVyKCkubm9ubmVnYXRpdmUoKSxcbiAgZXhlbXBsYXJ5OiB6b2Quei5udW1iZXIoKS5wb3NpdGl2ZSgpXG59KTtcbnZhciBGb250RmlsZVR5cGVzID0gLyogQF9fUFVSRV9fICovICgoRm9udEZpbGVUeXBlczIpID0+IHtcbiAgRm9udEZpbGVUeXBlczJbXCJPVEZcIl0gPSBcIm90ZlwiO1xuICBGb250RmlsZVR5cGVzMltcIlRURlwiXSA9IFwidHRmXCI7XG4gIEZvbnRGaWxlVHlwZXMyW1wiV09GRlwiXSA9IFwid29mZlwiO1xuICBGb250RmlsZVR5cGVzMltcIldPRkYyXCJdID0gXCJ3b2ZmMlwiO1xuICBGb250RmlsZVR5cGVzMltcIkVPVFwiXSA9IFwiZW90XCI7XG4gIHJldHVybiBGb250RmlsZVR5cGVzMjtcbn0pKEZvbnRGaWxlVHlwZXMgfHwge30pO1xuY29uc3QgUHJvamVjdFNjaGVtYSA9IHpvZC56Lm9iamVjdCh7XG4gIGlkOiB6b2Quei5zdHJpbmcoKS5taW4oMSksXG4gIGh0bWw6IHpvZC56Lm9iamVjdCh7XG4gICAgaGVhZDogem9kLnouc3RyaW5nKCksXG4gICAgYWZ0ZXJCb2R5T3Blbjogem9kLnouc3RyaW5nKCksXG4gICAgYmVmb3JlQm9keUNsb3NlOiB6b2Quei5zdHJpbmcoKVxuICB9KSxcbiAgbWV0YTogem9kLnoub2JqZWN0KHtcbiAgICB0aXRsZTogem9kLnouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgICBkZXNjcmlwdGlvbjogem9kLnouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgICBvcGVuZ3JhcGhUaHVtYm5haWw6IHpvZC56LnN0cmluZygpLm9wdGlvbmFsKCksXG4gICAga2V5d29yZHM6IHpvZC56LnN0cmluZygpLm9wdGlvbmFsKCksXG4gICAgZmF2aWNvbjogem9kLnouc3RyaW5nKCkub3B0aW9uYWwoKVxuICB9KSxcbiAgbGF5b3V0czogem9kLnouYXJyYXkoTGF5b3V0U2NoZW1hKSxcbiAgcGFnZXM6IHpvZC56LmFycmF5KHpvZC56Lm9iamVjdCh7XG4gICAgdGl0bGU6IHpvZC56LnN0cmluZygpLFxuICAgIGFydGljbGVJZDogem9kLnouc3RyaW5nKCkubWluKDEpLFxuICAgIHNsdWc6IHpvZC56LnN0cmluZygpLFxuICAgIG1ldGE6IHpvZC56Lm9iamVjdCh7XG4gICAgICB0aXRsZTogem9kLnouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgICAgIGRlc2NyaXB0aW9uOiB6b2Quei5zdHJpbmcoKS5vcHRpb25hbCgpLFxuICAgICAgb3BlbmdyYXBoVGh1bWJuYWlsOiB6b2Quei5zdHJpbmcoKS5vcHRpb25hbCgpLFxuICAgICAga2V5d29yZHM6IHpvZC56LnN0cmluZygpLm9wdGlvbmFsKCksXG4gICAgICBlbmFibGVkOiB6b2Quei5ib29sZWFuKClcbiAgICB9KS5vcHRpb25hbCgpLFxuICAgIGlkOiB6b2Quei5zdHJpbmcoKS5taW4oMSlcbiAgfSkpLFxuICBmb250czogem9kLnoub2JqZWN0KHtcbiAgICBnb29nbGU6IHpvZC56LnN0cmluZygpLFxuICAgIGFkb2JlOiB6b2Quei5zdHJpbmcoKSxcbiAgICBjdXN0b206IHpvZC56LmFycmF5KHpvZC56Lm9iamVjdCh7XG4gICAgICBuYW1lOiB6b2Quei5zdHJpbmcoKS5taW4oMSksXG4gICAgICBzdHlsZTogem9kLnouc3RyaW5nKCkubWluKDEpLFxuICAgICAgd2VpZ2h0OiB6b2Quei5udW1iZXIoKSxcbiAgICAgIGZpbGVzOiB6b2Quei5hcnJheShcbiAgICAgICAgem9kLnoub2JqZWN0KHtcbiAgICAgICAgICB0eXBlOiB6b2Quei5uYXRpdmVFbnVtKEZvbnRGaWxlVHlwZXMpLFxuICAgICAgICAgIHVybDogem9kLnouc3RyaW5nKCkudXJsKClcbiAgICAgICAgfSlcbiAgICAgIClcbiAgICB9KSlcbiAgfSlcbn0pO1xudmFyIEtleWZyYW1lVHlwZSA9IC8qIEBfX1BVUkVfXyAqLyAoKEtleWZyYW1lVHlwZTIpID0+IHtcbiAgS2V5ZnJhbWVUeXBlMltcIkRpbWVuc2lvbnNcIl0gPSBcImRpbWVuc2lvbnNcIjtcbiAgS2V5ZnJhbWVUeXBlMltcIlBvc2l0aW9uXCJdID0gXCJwb3NpdGlvblwiO1xuICBLZXlmcmFtZVR5cGUyW1wiUm90YXRpb25cIl0gPSBcInJvdGF0aW9uXCI7XG4gIEtleWZyYW1lVHlwZTJbXCJCb3JkZXJSYWRpdXNcIl0gPSBcImJvcmRlci1yYWRpdXNcIjtcbiAgS2V5ZnJhbWVUeXBlMltcIkJvcmRlcldpZHRoXCJdID0gXCJib3JkZXItd2lkdGhcIjtcbiAgS2V5ZnJhbWVUeXBlMltcIkNvbG9yXCJdID0gXCJjb2xvclwiO1xuICBLZXlmcmFtZVR5cGUyW1wiQm9yZGVyQ29sb3JcIl0gPSBcImJvcmRlci1jb2xvclwiO1xuICBLZXlmcmFtZVR5cGUyW1wiT3BhY2l0eVwiXSA9IFwib3BhY2l0eVwiO1xuICBLZXlmcmFtZVR5cGUyW1wiU2NhbGVcIl0gPSBcInNjYWxlXCI7XG4gIEtleWZyYW1lVHlwZTJbXCJUZXh0Q29sb3JcIl0gPSBcInRleHQtY29sb3JcIjtcbiAgS2V5ZnJhbWVUeXBlMltcIkxldHRlclNwYWNpbmdcIl0gPSBcImxldHRlci1zcGFjaW5nXCI7XG4gIEtleWZyYW1lVHlwZTJbXCJXb3JkU3BhY2luZ1wiXSA9IFwid29yZC1zcGFjaW5nXCI7XG4gIEtleWZyYW1lVHlwZTJbXCJCbHVyXCJdID0gXCJibHVyXCI7XG4gIEtleWZyYW1lVHlwZTJbXCJCYWNrZHJvcEJsdXJcIl0gPSBcImJhY2tkcm9wLWJsdXJcIjtcbiAgS2V5ZnJhbWVUeXBlMltcIkZYUGFyYW1zXCJdID0gXCJmeC1wYXJhbXNcIjtcbiAgcmV0dXJuIEtleWZyYW1lVHlwZTI7XG59KShLZXlmcmFtZVR5cGUgfHwge30pO1xuY29uc3QgS2V5ZnJhbWVzQmFzZVNjaGVtYSA9IHpvZC56Lm9iamVjdCh7XG4gIGlkOiB6b2Quei5zdHJpbmcoKS5taW4oMSksXG4gIGxheW91dElkOiB6b2Quei5zdHJpbmcoKS5taW4oMSksXG4gIGl0ZW1JZDogem9kLnouc3RyaW5nKCkubWluKDEpLFxuICBwb3NpdGlvbjogem9kLnoubnVtYmVyKClcbn0pO1xuY29uc3QgRGltZW5zaW9uc0tleWZyYW1lU2NoZW1hID0gS2V5ZnJhbWVzQmFzZVNjaGVtYS5leHRlbmQoe1xuICB0eXBlOiB6b2Quei5saXRlcmFsKEtleWZyYW1lVHlwZS5EaW1lbnNpb25zKSxcbiAgdmFsdWU6IHpvZC56Lm9iamVjdCh7XG4gICAgd2lkdGg6IHpvZC56Lm51bWJlcigpLm5vbm5lZ2F0aXZlKCksXG4gICAgaGVpZ2h0OiB6b2Quei5udW1iZXIoKS5ub25uZWdhdGl2ZSgpXG4gIH0pXG59KTtcbmNvbnN0IFBvc2l0aW9uS2V5ZnJhbWVTY2hlbWEgPSBLZXlmcmFtZXNCYXNlU2NoZW1hLmV4dGVuZCh7XG4gIHR5cGU6IHpvZC56LmxpdGVyYWwoS2V5ZnJhbWVUeXBlLlBvc2l0aW9uKSxcbiAgdmFsdWU6IHpvZC56Lm9iamVjdCh7XG4gICAgdG9wOiB6b2Quei5udW1iZXIoKSxcbiAgICBsZWZ0OiB6b2Quei5udW1iZXIoKVxuICB9KVxufSk7XG5jb25zdCBSb3RhdGlvbktleWZyYW1lU2NoZW1hID0gS2V5ZnJhbWVzQmFzZVNjaGVtYS5leHRlbmQoe1xuICB0eXBlOiB6b2Quei5saXRlcmFsKEtleWZyYW1lVHlwZS5Sb3RhdGlvbiksXG4gIHZhbHVlOiB6b2Quei5vYmplY3Qoe1xuICAgIGFuZ2xlOiB6b2Quei5udW1iZXIoKVxuICB9KVxufSk7XG5jb25zdCBCb3JkZXJSYWRpdXNLZXlmcmFtZVNjaGVtYSA9IEtleWZyYW1lc0Jhc2VTY2hlbWEuZXh0ZW5kKHtcbiAgdHlwZTogem9kLnoubGl0ZXJhbChLZXlmcmFtZVR5cGUuQm9yZGVyUmFkaXVzKSxcbiAgdmFsdWU6IHpvZC56Lm9iamVjdCh7XG4gICAgcmFkaXVzOiB6b2Quei5udW1iZXIoKS5ub25uZWdhdGl2ZSgpXG4gIH0pXG59KTtcbmNvbnN0IEJvcmRlcldpZHRoS2V5ZnJhbWVTY2hlbWEgPSBLZXlmcmFtZXNCYXNlU2NoZW1hLmV4dGVuZCh7XG4gIHR5cGU6IHpvZC56LmxpdGVyYWwoS2V5ZnJhbWVUeXBlLkJvcmRlcldpZHRoKSxcbiAgdmFsdWU6IHpvZC56Lm9iamVjdCh7XG4gICAgYm9yZGVyV2lkdGg6IHpvZC56Lm51bWJlcigpLm5vbm5lZ2F0aXZlKClcbiAgfSlcbn0pO1xuY29uc3QgQ29sb3JLZXlmcmFtZVNjaGVtYSA9IEtleWZyYW1lc0Jhc2VTY2hlbWEuZXh0ZW5kKHtcbiAgdHlwZTogem9kLnoubGl0ZXJhbChLZXlmcmFtZVR5cGUuQ29sb3IpLFxuICB2YWx1ZTogem9kLnoub2JqZWN0KHtcbiAgICBjb2xvcjogem9kLnouc3RyaW5nKClcbiAgfSlcbn0pO1xuY29uc3QgQm9yZGVyQ29sb3JLZXlmcmFtZVNjaGVtYSA9IEtleWZyYW1lc0Jhc2VTY2hlbWEuZXh0ZW5kKHtcbiAgdHlwZTogem9kLnoubGl0ZXJhbChLZXlmcmFtZVR5cGUuQm9yZGVyQ29sb3IpLFxuICB2YWx1ZTogem9kLnoub2JqZWN0KHtcbiAgICBjb2xvcjogem9kLnouc3RyaW5nKClcbiAgfSlcbn0pO1xuY29uc3QgT3BhY2l0eUtleWZyYW1lU2NoZW1hID0gS2V5ZnJhbWVzQmFzZVNjaGVtYS5leHRlbmQoe1xuICB0eXBlOiB6b2Quei5saXRlcmFsKEtleWZyYW1lVHlwZS5PcGFjaXR5KSxcbiAgdmFsdWU6IHpvZC56Lm9iamVjdCh7XG4gICAgb3BhY2l0eTogem9kLnoubnVtYmVyKCkubm9ubmVnYXRpdmUoKVxuICB9KVxufSk7XG5jb25zdCBTY2FsZUtleWZyYW1lU2NoZW1hID0gS2V5ZnJhbWVzQmFzZVNjaGVtYS5leHRlbmQoe1xuICB0eXBlOiB6b2Quei5saXRlcmFsKEtleWZyYW1lVHlwZS5TY2FsZSksXG4gIHZhbHVlOiB6b2Quei5vYmplY3Qoe1xuICAgIHNjYWxlOiB6b2Quei5udW1iZXIoKS5ub25uZWdhdGl2ZSgpXG4gIH0pXG59KTtcbmNvbnN0IEJsdXJLZXlmcmFtZVNjaGVtYSA9IEtleWZyYW1lc0Jhc2VTY2hlbWEuZXh0ZW5kKHtcbiAgdHlwZTogem9kLnoubGl0ZXJhbChLZXlmcmFtZVR5cGUuQmx1ciksXG4gIHZhbHVlOiB6b2Quei5vYmplY3Qoe1xuICAgIGJsdXI6IHpvZC56Lm51bWJlcigpXG4gIH0pXG59KTtcbmNvbnN0IEJhY2tkcm9wQmx1cktleWZyYW1lU2NoZW1hID0gS2V5ZnJhbWVzQmFzZVNjaGVtYS5leHRlbmQoe1xuICB0eXBlOiB6b2Quei5saXRlcmFsKEtleWZyYW1lVHlwZS5CYWNrZHJvcEJsdXIpLFxuICB2YWx1ZTogem9kLnoub2JqZWN0KHtcbiAgICBiYWNrZHJvcEJsdXI6IHpvZC56Lm51bWJlcigpXG4gIH0pXG59KTtcbmNvbnN0IFRleHRDb2xvcktleWZyYW1lU2NoZW1hID0gS2V5ZnJhbWVzQmFzZVNjaGVtYS5leHRlbmQoe1xuICB0eXBlOiB6b2Quei5saXRlcmFsKEtleWZyYW1lVHlwZS5UZXh0Q29sb3IpLFxuICB2YWx1ZTogem9kLnoub2JqZWN0KHtcbiAgICBjb2xvcjogem9kLnouc3RyaW5nKClcbiAgfSlcbn0pO1xuY29uc3QgTGV0dGVyU3BhY2luZ0tleWZyYW1lU2NoZW1hID0gS2V5ZnJhbWVzQmFzZVNjaGVtYS5leHRlbmQoe1xuICB0eXBlOiB6b2Quei5saXRlcmFsKEtleWZyYW1lVHlwZS5MZXR0ZXJTcGFjaW5nKSxcbiAgdmFsdWU6IHpvZC56Lm9iamVjdCh7XG4gICAgbGV0dGVyU3BhY2luZzogem9kLnoubnVtYmVyKClcbiAgfSlcbn0pO1xuY29uc3QgV29yZFNwYWNpbmdLZXlmcmFtZVNjaGVtYSA9IEtleWZyYW1lc0Jhc2VTY2hlbWEuZXh0ZW5kKHtcbiAgdHlwZTogem9kLnoubGl0ZXJhbChLZXlmcmFtZVR5cGUuV29yZFNwYWNpbmcpLFxuICB2YWx1ZTogem9kLnoub2JqZWN0KHtcbiAgICB3b3JkU3BhY2luZzogem9kLnoubnVtYmVyKClcbiAgfSlcbn0pO1xuY29uc3QgRlhQYXJhbXNLZXlmcmFtZVNjaGVtYSA9IEtleWZyYW1lc0Jhc2VTY2hlbWEuZXh0ZW5kKHtcbiAgdHlwZTogem9kLnoubGl0ZXJhbChLZXlmcmFtZVR5cGUuRlhQYXJhbXMpLFxuICB2YWx1ZTogem9kLnoucmVjb3JkKHpvZC56LnN0cmluZygpLCB6b2Quei5udW1iZXIoKSlcbn0pO1xuY29uc3QgS2V5ZnJhbWVTY2hlbWEgPSB6b2Quei5kaXNjcmltaW5hdGVkVW5pb24oXCJ0eXBlXCIsIFtcbiAgRGltZW5zaW9uc0tleWZyYW1lU2NoZW1hLFxuICBQb3NpdGlvbktleWZyYW1lU2NoZW1hLFxuICBSb3RhdGlvbktleWZyYW1lU2NoZW1hLFxuICBCb3JkZXJSYWRpdXNLZXlmcmFtZVNjaGVtYSxcbiAgQm9yZGVyV2lkdGhLZXlmcmFtZVNjaGVtYSxcbiAgQ29sb3JLZXlmcmFtZVNjaGVtYSxcbiAgQm9yZGVyQ29sb3JLZXlmcmFtZVNjaGVtYSxcbiAgT3BhY2l0eUtleWZyYW1lU2NoZW1hLFxuICBTY2FsZUtleWZyYW1lU2NoZW1hLFxuICBCbHVyS2V5ZnJhbWVTY2hlbWEsXG4gIEJhY2tkcm9wQmx1cktleWZyYW1lU2NoZW1hLFxuICBUZXh0Q29sb3JLZXlmcmFtZVNjaGVtYSxcbiAgTGV0dGVyU3BhY2luZ0tleWZyYW1lU2NoZW1hLFxuICBXb3JkU3BhY2luZ0tleWZyYW1lU2NoZW1hLFxuICBGWFBhcmFtc0tleWZyYW1lU2NoZW1hXG5dKTtcbmNvbnN0IEtleWZyYW1lc1NjaGVtYSA9IHpvZC56LmFycmF5KEtleWZyYW1lU2NoZW1hKTtcbmNsYXNzIENsaWVudCB7XG4gIGNvbnN0cnVjdG9yKEFQSVVybCwgZmV0Y2hJbXBsID0gZmV0Y2gkMSkge1xuICAgIHRoaXMuZmV0Y2hJbXBsID0gZmV0Y2hJbXBsO1xuICAgIHRoaXMudXJsID0gbmV3IHVybC5VUkwoQVBJVXJsKTtcbiAgICBpZiAoIXRoaXMudXJsLnVzZXJuYW1lKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJQcm9qZWN0IElEIGlzIG1pc3NpbmcgaW4gdGhlIFVSTC5cIik7XG4gICAgfVxuICAgIGlmICghdGhpcy51cmwucGFzc3dvcmQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkFQSSBrZXkgaXMgbWlzc2luZyBpbiB0aGUgVVJMLlwiKTtcbiAgICB9XG4gIH1cbiAgc3RhdGljIGdldFBhZ2VNZXRhKHByb2plY3RNZXRhLCBwYWdlTWV0YSkge1xuICAgIHJldHVybiBwYWdlTWV0YS5lbmFibGVkID8ge1xuICAgICAgdGl0bGU6IHBhZ2VNZXRhLnRpdGxlID8gcGFnZU1ldGEudGl0bGUgOiBwcm9qZWN0TWV0YS50aXRsZSA/PyBcIlwiLFxuICAgICAgZGVzY3JpcHRpb246IHBhZ2VNZXRhLmRlc2NyaXB0aW9uID8gcGFnZU1ldGEuZGVzY3JpcHRpb24gOiBwcm9qZWN0TWV0YS5kZXNjcmlwdGlvbiA/PyBcIlwiLFxuICAgICAga2V5d29yZHM6IHBhZ2VNZXRhLmtleXdvcmRzID8gcGFnZU1ldGEua2V5d29yZHMgOiBwcm9qZWN0TWV0YS5rZXl3b3JkcyA/PyBcIlwiLFxuICAgICAgb3BlbmdyYXBoVGh1bWJuYWlsOiBwYWdlTWV0YS5vcGVuZ3JhcGhUaHVtYm5haWwgPyBwYWdlTWV0YS5vcGVuZ3JhcGhUaHVtYm5haWwgOiBwcm9qZWN0TWV0YS5vcGVuZ3JhcGhUaHVtYm5haWwgPz8gXCJcIixcbiAgICAgIGZhdmljb246IHByb2plY3RNZXRhLmZhdmljb24gPz8gXCJcIlxuICAgIH0gOiBwcm9qZWN0TWV0YTtcbiAgfVxuICBhc3luYyBnZXRQYWdlRGF0YShwYWdlU2x1Zykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBwcm9qZWN0ID0gYXdhaXQgdGhpcy5mZXRjaFByb2plY3QoKTtcbiAgICAgIGNvbnN0IGFydGljbGVJZCA9IHRoaXMuZmluZEFydGljbGVJZEJ5UGFnZVNsdWcocGFnZVNsdWcsIHByb2plY3QucGFnZXMpO1xuICAgICAgY29uc3QgeyBhcnRpY2xlLCBrZXlmcmFtZXMgfSA9IGF3YWl0IHRoaXMuZmV0Y2hBcnRpY2xlKGFydGljbGVJZCk7XG4gICAgICBjb25zdCBwYWdlID0gcHJvamVjdC5wYWdlcy5maW5kKChwYWdlMikgPT4gcGFnZTIuc2x1ZyA9PT0gcGFnZVNsdWcpO1xuICAgICAgY29uc3QgbWV0YSA9IENsaWVudC5nZXRQYWdlTWV0YShwcm9qZWN0Lm1ldGEsIHBhZ2UgPT0gbnVsbCA/IHZvaWQgMCA6IHBhZ2UubWV0YSk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBwcm9qZWN0LFxuICAgICAgICBhcnRpY2xlLFxuICAgICAgICBrZXlmcmFtZXMsXG4gICAgICAgIG1ldGFcbiAgICAgIH07XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgdGhyb3cgZTtcbiAgICB9XG4gIH1cbiAgYXN5bmMgZ2V0UHJvamVjdFBhZ2VzUGF0aHMoKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHsgcGFnZXMgfSA9IGF3YWl0IHRoaXMuZmV0Y2hQcm9qZWN0KCk7XG4gICAgICByZXR1cm4gcGFnZXMubWFwKChwKSA9PiBwLnNsdWcpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHRocm93IGU7XG4gICAgfVxuICB9XG4gIGFzeW5jIGdldExheW91dHMoKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHsgbGF5b3V0cyB9ID0gYXdhaXQgdGhpcy5mZXRjaFByb2plY3QoKTtcbiAgICAgIHJldHVybiBsYXlvdXRzO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHRocm93IGU7XG4gICAgfVxuICB9XG4gIGFzeW5jIGZldGNoUHJvamVjdCgpIHtcbiAgICBjb25zdCB7IHVzZXJuYW1lOiBwcm9qZWN0SWQsIHBhc3N3b3JkOiBhcGlLZXksIG9yaWdpbiB9ID0gdGhpcy51cmw7XG4gICAgY29uc3QgdXJsJDEgPSBuZXcgdXJsLlVSTChgL3Byb2plY3RzLyR7cHJvamVjdElkfWAsIG9yaWdpbik7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmZldGNoSW1wbCh1cmwkMS5ocmVmLCB7XG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHthcGlLZXl9YFxuICAgICAgfVxuICAgIH0pO1xuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIGZldGNoIHByb2plY3Qgd2l0aCBpZCAjJHtwcm9qZWN0SWR9OiAke3Jlc3BvbnNlLnN0YXR1c1RleHR9YCk7XG4gICAgfVxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgY29uc3QgcHJvamVjdCA9IFByb2plY3RTY2hlbWEucGFyc2UoZGF0YSk7XG4gICAgcmV0dXJuIHByb2plY3Q7XG4gIH1cbiAgYXN5bmMgZmV0Y2hBcnRpY2xlKGFydGljbGVJZCkge1xuICAgIGNvbnN0IHsgdXNlcm5hbWU6IHByb2plY3RJZCwgcGFzc3dvcmQ6IGFwaUtleSwgb3JpZ2luIH0gPSB0aGlzLnVybDtcbiAgICBjb25zdCB1cmwkMSA9IG5ldyB1cmwuVVJMKGAvcHJvamVjdHMvJHtwcm9qZWN0SWR9L2FydGljbGVzLyR7YXJ0aWNsZUlkfWAsIG9yaWdpbik7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmZldGNoSW1wbCh1cmwkMS5ocmVmLCB7XG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHthcGlLZXl9YFxuICAgICAgfVxuICAgIH0pO1xuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIGZldGNoIGFydGljbGUgd2l0aCBpZCAjJHthcnRpY2xlSWR9OiAke3Jlc3BvbnNlLnN0YXR1c1RleHR9YCk7XG4gICAgfVxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgY29uc3QgYXJ0aWNsZSA9IEFydGljbGVTY2hlbWEucGFyc2UoZGF0YS5hcnRpY2xlKTtcbiAgICBjb25zdCBrZXlmcmFtZXMgPSBLZXlmcmFtZXNTY2hlbWEucGFyc2UoZGF0YS5rZXlmcmFtZXMpO1xuICAgIHJldHVybiB7IGFydGljbGUsIGtleWZyYW1lcyB9O1xuICB9XG4gIGZpbmRBcnRpY2xlSWRCeVBhZ2VTbHVnKHNsdWcsIHBhZ2VzKSB7XG4gICAgY29uc3QgeyB1c2VybmFtZTogcHJvamVjdElkIH0gPSB0aGlzLnVybDtcbiAgICBjb25zdCBwYWdlID0gcGFnZXMuZmluZCgocGFnZTIpID0+IHBhZ2UyLnNsdWcgPT09IHNsdWcpO1xuICAgIGlmICghcGFnZSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBQYWdlIHdpdGggYSBzbHVnICR7c2x1Z30gd2FzIG5vdCBmb3VuZCBpbiBwcm9qZWN0IHdpdGggaWQgIyR7cHJvamVjdElkfWApO1xuICAgIH1cbiAgICByZXR1cm4gcGFnZS5hcnRpY2xlSWQ7XG4gIH1cbn1cbmNvbnN0IEZJTEVfVFlQRVNfTUFQID0ge1xuICB0dGY6IFwidHJ1ZXR5cGVcIixcbiAgb3RmOiBcIm9wZW50eXBlXCJcbn07XG5jbGFzcyBGb250RmFjZUdlbmVyYXRvciB7XG4gIGNvbnN0cnVjdG9yKGZvbnRzKSB7XG4gICAgdGhpcy5mb250cyA9IGZvbnRzO1xuICB9XG4gIGdlbmVyYXRlKCkge1xuICAgIHJldHVybiB0aGlzLmZvbnRzLm1hcCgoZm9udCkgPT4ge1xuICAgICAgY29uc3QgZW90RmlsZSA9IGZvbnQuZmlsZXMuZmluZCgoZmlsZSkgPT4gZmlsZS50eXBlID09PSBcImVvdFwiKTtcbiAgICAgIGNvbnN0IG90aGVyRmlsZXMgPSBmb250LmZpbGVzLmZpbHRlcigoZmlsZSkgPT4gZmlsZS50eXBlICE9PSBcImVvdFwiKS5tYXAoKGZpbGUpID0+IGB1cmwoJyR7ZmlsZS51cmx9JykgZm9ybWF0KCcke0ZJTEVfVFlQRVNfTUFQW2ZpbGUudHlwZV0gfHwgZmlsZS50eXBlfScpYCk7XG4gICAgICByZXR1cm4gYFxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIiR7Zm9udC5uYW1lfVwiO1xuICBmb250LXdlaWdodDogJHtmb250LndlaWdodH07XG4gIGZvbnQtc3R5bGU6ICR7Zm9udC5zdHlsZX07XG4gICR7ZW90RmlsZSA/IGBzcmM6IHVybCgnJHtlb3RGaWxlLnVybH0nKTtcbiAgYCA6IFwiXCJ9c3JjOiAke290aGVyRmlsZXMuam9pbihcIiwgXCIpfTtcbn1gO1xuICAgIH0pLmpvaW4oXCJcXG5cIik7XG4gIH1cbn1cbmZ1bmN0aW9uIGdldExheW91dFN0eWxlcyhsYXlvdXRzLCBsYXlvdXRWYWx1ZXMsIG1hcFRvU3R5bGVzKSB7XG4gIGNvbnN0IG1lZGlhUXVlcmllcyA9IGxheW91dHMuc29ydCgoYSwgYikgPT4gYS5zdGFydHNXaXRoIC0gYi5zdGFydHNXaXRoKS5yZWR1Y2UoXG4gICAgKGFjYywgbGF5b3V0KSA9PiB7XG4gICAgICBjb25zdCB2YWx1ZXMgPSBsYXlvdXRWYWx1ZXMubWFwKChsdikgPT4gbHZbbGF5b3V0LmlkXSk7XG4gICAgICByZXR1cm4gYFxuICAgICAgICAke2FjY31cbiAgICAgICAgJHtsYXlvdXQuc3RhcnRzV2l0aCAhPT0gMCA/IGBAbWVkaWEgKG1pbi13aWR0aDogJHtsYXlvdXQuc3RhcnRzV2l0aH1weCkgeyR7bWFwVG9TdHlsZXModmFsdWVzLCBsYXlvdXQuZXhlbXBsYXJ5KX19YCA6IGAke21hcFRvU3R5bGVzKHZhbHVlcywgbGF5b3V0LmV4ZW1wbGFyeSl9YH1gO1xuICAgIH0sXG4gICAgXCJcIlxuICApO1xuICByZXR1cm4gbWVkaWFRdWVyaWVzO1xufVxuZnVuY3Rpb24gZ2V0TGF5b3V0TWVkaWFRdWVyeShsYXlvdXRJZCwgbGF5b3V0cykge1xuICBjb25zdCBzb3J0ZWQgPSBsYXlvdXRzLnNsaWNlKCkuc29ydCgoYSwgYikgPT4gYS5zdGFydHNXaXRoIC0gYi5zdGFydHNXaXRoKTtcbiAgY29uc3QgbGF5b3V0SW5kZXggPSBzb3J0ZWQuZmluZEluZGV4KChsKSA9PiBsLmlkID09PSBsYXlvdXRJZCk7XG4gIGlmIChsYXlvdXRJbmRleCA9PT0gLTEpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYE5vIGxheW91dCB3YXMgZm91bmQgYnkgdGhlIGdpdmVuIGlkICMke2xheW91dElkfWApO1xuICB9XG4gIGNvbnN0IGN1cnJlbnQgPSBzb3J0ZWRbbGF5b3V0SW5kZXhdO1xuICBjb25zdCBuZXh0ID0gc29ydGVkW2xheW91dEluZGV4ICsgMV07XG4gIGlmICghbmV4dCkge1xuICAgIHJldHVybiBgQG1lZGlhIChtaW4td2lkdGg6ICR7Y3VycmVudC5zdGFydHNXaXRofXB4KWA7XG4gIH1cbiAgcmV0dXJuIGBAbWVkaWEgKG1pbi13aWR0aDogJHtjdXJyZW50LnN0YXJ0c1dpdGh9cHgpIGFuZCAobWF4LXdpZHRoOiAke25leHQuc3RhcnRzV2l0aCAtIDF9cHgpYDtcbn1cbmNsYXNzIFdyaXRlciB7XG4gIGNvbnN0cnVjdG9yKHNpemUpIHtcbiAgICB0aGlzLmRhdGEgPSBuZXcgVWludDhBcnJheShzaXplKTtcbiAgICB0aGlzLmlkeCA9IDA7XG4gICAgdGhpcy5zaXplID0gc2l6ZTtcbiAgfVxuICBnZXREYXRhKCkge1xuICAgIGlmICh0aGlzLmlkeCAhPT0gdGhpcy5zaXplKSB0aHJvdyBuZXcgRXJyb3IoXCJNaXNtYXRjaCBiZXR3ZWVuIHNpemUgcmVzZXJ2ZWQgYW5kIHNpemVkIHVzZWRcIik7XG4gICAgcmV0dXJuIHRoaXMuZGF0YS5zbGljZSgwLCB0aGlzLmlkeCk7XG4gIH1cbiAgd3JpdGVVaW50OCh2YWx1ZSkge1xuICAgIHRoaXMuZGF0YS5zZXQoW3ZhbHVlXSwgdGhpcy5pZHgpO1xuICAgIHRoaXMuaWR4ICs9IDE7XG4gIH1cbiAgd3JpdGVVaW50MTYodmFsdWUpIHtcbiAgICBjb25zdCBhcnIgPSBuZXcgVWludDE2QXJyYXkoMSk7XG4gICAgYXJyWzBdID0gdmFsdWU7XG4gICAgY29uc3QgYnVmZmVyID0gbmV3IFVpbnQ4QXJyYXkoYXJyLmJ1ZmZlcik7XG4gICAgdGhpcy5kYXRhLnNldChbYnVmZmVyWzFdLCBidWZmZXJbMF1dLCB0aGlzLmlkeCk7XG4gICAgdGhpcy5pZHggKz0gMjtcbiAgfVxuICB3cml0ZVVpbnQ4QXJyYXkodmFsdWUpIHtcbiAgICB0aGlzLmRhdGEuc2V0KHZhbHVlLCB0aGlzLmlkeCk7XG4gICAgdGhpcy5pZHggKz0gdmFsdWUubGVuZ3RoO1xuICB9XG59XG5jb25zdCBnZXRFeHRyYWRhdGEgPSAoYXZjY0JveCkgPT4ge1xuICBsZXQgaTtcbiAgbGV0IHNpemUgPSA3O1xuICBmb3IgKGkgPSAwOyBpIDwgYXZjY0JveC5TUFMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICBzaXplICs9IDIgKyBhdmNjQm94LlNQU1tpXS5sZW5ndGg7XG4gIH1cbiAgZm9yIChpID0gMDsgaSA8IGF2Y2NCb3guUFBTLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgc2l6ZSArPSAyICsgYXZjY0JveC5QUFNbaV0ubGVuZ3RoO1xuICB9XG4gIGNvbnN0IHdyaXRlciA9IG5ldyBXcml0ZXIoc2l6ZSk7XG4gIHdyaXRlci53cml0ZVVpbnQ4KGF2Y2NCb3guY29uZmlndXJhdGlvblZlcnNpb24pO1xuICB3cml0ZXIud3JpdGVVaW50OChhdmNjQm94LkFWQ1Byb2ZpbGVJbmRpY2F0aW9uKTtcbiAgd3JpdGVyLndyaXRlVWludDgoYXZjY0JveC5wcm9maWxlX2NvbXBhdGliaWxpdHkpO1xuICB3cml0ZXIud3JpdGVVaW50OChhdmNjQm94LkFWQ0xldmVsSW5kaWNhdGlvbik7XG4gIHdyaXRlci53cml0ZVVpbnQ4KGF2Y2NCb3gubGVuZ3RoU2l6ZU1pbnVzT25lICsgKDYzIDw8IDIpKTtcbiAgd3JpdGVyLndyaXRlVWludDgoYXZjY0JveC5uYl9TUFNfbmFsdXMgKyAoNyA8PCA1KSk7XG4gIGZvciAoaSA9IDA7IGkgPCBhdmNjQm94LlNQUy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIHdyaXRlci53cml0ZVVpbnQxNihhdmNjQm94LlNQU1tpXS5sZW5ndGgpO1xuICAgIHdyaXRlci53cml0ZVVpbnQ4QXJyYXkoYXZjY0JveC5TUFNbaV0ubmFsdSk7XG4gIH1cbiAgd3JpdGVyLndyaXRlVWludDgoYXZjY0JveC5uYl9QUFNfbmFsdXMpO1xuICBmb3IgKGkgPSAwOyBpIDwgYXZjY0JveC5QUFMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICB3cml0ZXIud3JpdGVVaW50MTYoYXZjY0JveC5QUFNbaV0ubGVuZ3RoKTtcbiAgICB3cml0ZXIud3JpdGVVaW50OEFycmF5KGF2Y2NCb3guUFBTW2ldLm5hbHUpO1xuICB9XG4gIHJldHVybiB3cml0ZXIuZ2V0RGF0YSgpO1xufTtcbmNvbnN0IGRlY29kZVZpZGVvID0gKHNyYywgZW1pdEZyYW1lLCB7IFZpZGVvRGVjb2RlcjogVmlkZW9EZWNvZGVyMiwgRW5jb2RlZFZpZGVvQ2h1bms6IEVuY29kZWRWaWRlb0NodW5rMiwgZGVidWcgfSkgPT4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICBpZiAoZGVidWcpIGNvbnNvbGUuaW5mbyhcIkRlY29kaW5nIHZpZGVvIGZyb21cIiwgc3JjKTtcbiAgdHJ5IHtcbiAgICBjb25zdCBtcDRib3hmaWxlID0gTVA0Qm94X19uYW1lc3BhY2UuY3JlYXRlRmlsZSgpO1xuICAgIGxldCBjb2RlYztcbiAgICBjb25zdCBkZWNvZGVyID0gbmV3IFZpZGVvRGVjb2RlcjIoe1xuICAgICAgb3V0cHV0OiAoZnJhbWUpID0+IHtcbiAgICAgICAgY3JlYXRlSW1hZ2VCaXRtYXAoZnJhbWUsIHsgcmVzaXplUXVhbGl0eTogXCJsb3dcIiB9KS50aGVuKChiaXRtYXApID0+IHtcbiAgICAgICAgICBlbWl0RnJhbWUoYml0bWFwKTtcbiAgICAgICAgICBmcmFtZS5jbG9zZSgpO1xuICAgICAgICAgIGlmIChkZWNvZGVyLmRlY29kZVF1ZXVlU2l6ZSA8PSAwKSB7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgaWYgKGRlY29kZXIuc3RhdGUgIT09IFwiY2xvc2VkXCIpIHtcbiAgICAgICAgICAgICAgICBkZWNvZGVyLmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCA1MDApO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgZXJyb3I6IChlKSA9PiB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZSk7XG4gICAgICAgIHJlamVjdChlKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBtcDRib3hmaWxlLm9uUmVhZHkgPSAoaW5mbykgPT4ge1xuICAgICAgaWYgKGluZm8gJiYgaW5mby52aWRlb1RyYWNrcyAmJiBpbmZvLnZpZGVvVHJhY2tzWzBdKSB7XG4gICAgICAgIFt7IGNvZGVjIH1dID0gaW5mby52aWRlb1RyYWNrcztcbiAgICAgICAgaWYgKGRlYnVnKSBjb25zb2xlLmluZm8oXCJWaWRlbyB3aXRoIGNvZGVjOlwiLCBjb2RlYyk7XG4gICAgICAgIGNvbnN0IGF2Y2NCb3ggPSBtcDRib3hmaWxlLm1vb3YudHJha3NbMF0ubWRpYS5taW5mLnN0Ymwuc3RzZC5lbnRyaWVzWzBdLmF2Y0M7XG4gICAgICAgIGNvbnN0IGV4dHJhZGF0YSA9IGdldEV4dHJhZGF0YShhdmNjQm94KTtcbiAgICAgICAgZGVjb2Rlci5jb25maWd1cmUoeyBjb2RlYywgZGVzY3JpcHRpb246IGV4dHJhZGF0YSB9KTtcbiAgICAgICAgbXA0Ym94ZmlsZS5zZXRFeHRyYWN0aW9uT3B0aW9ucyhpbmZvLnZpZGVvVHJhY2tzWzBdLmlkKTtcbiAgICAgICAgbXA0Ym94ZmlsZS5zdGFydCgpO1xuICAgICAgfSBlbHNlIHJlamVjdChuZXcgRXJyb3IoXCJVUkwgcHJvdmlkZWQgaXMgbm90IGEgdmFsaWQgbXA0IHZpZGVvIGZpbGUuXCIpKTtcbiAgICB9O1xuICAgIG1wNGJveGZpbGUub25TYW1wbGVzID0gKHRyYWNrX2lkLCByZWYsIHNhbXBsZXMpID0+IHtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2FtcGxlcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBjb25zdCBzYW1wbGUgPSBzYW1wbGVzW2ldO1xuICAgICAgICBjb25zdCB0eXBlID0gc2FtcGxlLmlzX3N5bmMgPyBcImtleVwiIDogXCJkZWx0YVwiO1xuICAgICAgICBjb25zdCBjaHVuayA9IG5ldyBFbmNvZGVkVmlkZW9DaHVuazIoe1xuICAgICAgICAgIHR5cGUsXG4gICAgICAgICAgdGltZXN0YW1wOiBzYW1wbGUuY3RzLFxuICAgICAgICAgIGR1cmF0aW9uOiBzYW1wbGUuZHVyYXRpb24sXG4gICAgICAgICAgZGF0YTogc2FtcGxlLmRhdGFcbiAgICAgICAgfSk7XG4gICAgICAgIGRlY29kZXIuZGVjb2RlKGNodW5rKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIGZldGNoKHNyYykudGhlbigocmVzKSA9PiB7XG4gICAgICBjb25zdCByZWFkZXIgPSByZXMuYm9keS5nZXRSZWFkZXIoKTtcbiAgICAgIGxldCBvZmZzZXQgPSAwO1xuICAgICAgZnVuY3Rpb24gYXBwZW5kQnVmZmVycyh7IGRvbmUsIHZhbHVlIH0pIHtcbiAgICAgICAgaWYgKGRvbmUpIHtcbiAgICAgICAgICBtcDRib3hmaWxlLmZsdXNoKCk7XG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYnVmID0gdmFsdWUuYnVmZmVyO1xuICAgICAgICBidWYuZmlsZVN0YXJ0ID0gb2Zmc2V0O1xuICAgICAgICBvZmZzZXQgKz0gYnVmLmJ5dGVMZW5ndGg7XG4gICAgICAgIG1wNGJveGZpbGUuYXBwZW5kQnVmZmVyKGJ1Zik7XG4gICAgICAgIHJldHVybiByZWFkZXIucmVhZCgpLnRoZW4oYXBwZW5kQnVmZmVycyk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVhZGVyLnJlYWQoKS50aGVuKGFwcGVuZEJ1ZmZlcnMpO1xuICAgIH0pO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmVqZWN0KGUpO1xuICB9XG59KTtcbmNvbnN0IHZpZGVvRGVjb2RlciA9IChzcmMsIGVtaXRGcmFtZSwgZGVidWcpID0+IHtcbiAgaWYgKHR5cGVvZiBWaWRlb0RlY29kZXIgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgRW5jb2RlZFZpZGVvQ2h1bmsgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIGlmIChkZWJ1ZylcbiAgICAgIGNvbnNvbGUuaW5mbyhcIldlYkNvZGVjcyBpcyBuYXRpdmVseSBzdXBwb3J0ZWQsIHVzaW5nIG5hdGl2ZSB2ZXJzaW9uLi4uXCIpO1xuICAgIHJldHVybiBkZWNvZGVWaWRlbyhzcmMsIGVtaXRGcmFtZSwge1xuICAgICAgVmlkZW9EZWNvZGVyLFxuICAgICAgRW5jb2RlZFZpZGVvQ2h1bmssXG4gICAgICBkZWJ1Z1xuICAgIH0pO1xuICB9XG4gIGlmIChkZWJ1ZykgY29uc29sZS5pbmZvKFwiV2ViQ29kZWNzIGlzIG5vdCBhdmFpbGFibGUgaW4gdGhpcyBicm93c2VyLlwiKTtcbiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xufTtcbmNsYXNzIFNjcm9sbFBsYXliYWNrVmlkZW9NYW5hZ2VyIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIHRoaXMuY3VycmVudFRpbWUgPSAwO1xuICAgIHRoaXMudGFyZ2V0VGltZSA9IDA7XG4gICAgdGhpcy5jYW52YXMgPSBudWxsO1xuICAgIHRoaXMuY29udGV4dCA9IG51bGw7XG4gICAgdGhpcy5mcmFtZXMgPSBbXTtcbiAgICB0aGlzLmZyYW1lUmF0ZSA9IDA7XG4gICAgdGhpcy50cmFuc2l0aW9uaW5nID0gZmFsc2U7XG4gICAgdGhpcy5kZWJ1ZyA9IGZhbHNlO1xuICAgIHRoaXMuZnJhbWVUaHJlc2hvbGQgPSAwLjE7XG4gICAgdGhpcy50cmFuc2l0aW9uU3BlZWQgPSAxMDtcbiAgICB0aGlzLnVzZVdlYkNvZGVjcyA9IHRydWU7XG4gICAgdGhpcy5yZXNpemUgPSAoKSA9PiB7XG4gICAgICBpZiAodGhpcy5kZWJ1ZykgY29uc29sZS5pbmZvKFwiU2Nyb2xsVmlkZW8gcmVzaXppbmcuLi5cIik7XG4gICAgICBpZiAodGhpcy5jYW52YXMpIHtcbiAgICAgICAgdGhpcy5zZXRDb3ZlclN0eWxlKHRoaXMuY2FudmFzKTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy52aWRlbykge1xuICAgICAgICB0aGlzLnNldENvdmVyU3R5bGUodGhpcy52aWRlbyk7XG4gICAgICB9XG4gICAgICB0aGlzLnBhaW50Q2FudmFzRnJhbWUoTWF0aC5mbG9vcih0aGlzLmN1cnJlbnRUaW1lICogdGhpcy5mcmFtZVJhdGUpKTtcbiAgICB9O1xuICAgIHRoaXMuZGVjb2RlVmlkZW8gPSAoKSA9PiB7XG4gICAgICBpZiAoIXRoaXMudmlkZW8pIHJldHVybjtcbiAgICAgIGlmICh0aGlzLnVzZVdlYkNvZGVjcyAmJiB0aGlzLnZpZGVvLnNyYykge1xuICAgICAgICB2aWRlb0RlY29kZXIoXG4gICAgICAgICAgdGhpcy52aWRlby5zcmMsXG4gICAgICAgICAgKGZyYW1lKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmZyYW1lcy5wdXNoKGZyYW1lKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIHRoaXMuZGVidWdcbiAgICAgICAgKS50aGVuKCgpID0+IHtcbiAgICAgICAgICBpZiAoIXRoaXMudmlkZW8gfHwgIXRoaXMuY29udGFpbmVyKSByZXR1cm47XG4gICAgICAgICAgaWYgKHRoaXMuZnJhbWVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuZGVidWcpIGNvbnNvbGUuZXJyb3IoXCJObyBmcmFtZXMgd2VyZSByZWNlaXZlZCBmcm9tIHdlYkNvZGVjc1wiKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG4gICAgICAgICAgdGhpcy5mcmFtZVJhdGUgPSB0aGlzLmZyYW1lcy5sZW5ndGggLyB0aGlzLnZpZGVvLmR1cmF0aW9uO1xuICAgICAgICAgIGlmICh0aGlzLmRlYnVnKSBjb25zb2xlLmluZm8oXCJSZWNlaXZlZFwiLCB0aGlzLmZyYW1lcy5sZW5ndGgsIFwiZnJhbWVzXCIpO1xuICAgICAgICAgIHRoaXMuY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKTtcbiAgICAgICAgICB0aGlzLmNvbnRleHQgPSB0aGlzLmNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7XG4gICAgICAgICAgdGhpcy52aWRlby5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgICAgdGhpcy5jb250YWluZXIuYXBwZW5kQ2hpbGQodGhpcy5jYW52YXMpO1xuICAgICAgICAgIHRoaXMucGFpbnRDYW52YXNGcmFtZShNYXRoLmZsb29yKHRoaXMuY3VycmVudFRpbWUgKiB0aGlzLmZyYW1lUmF0ZSkpO1xuICAgICAgICB9KS5jYXRjaCgoKSA9PiB7XG4gICAgICAgICAgaWYgKHRoaXMuZGVidWcpIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBlbmNvdW50ZXJlZCB3aGlsZSBkZWNvZGluZyB2aWRlb1wiKTtcbiAgICAgICAgICB0aGlzLmZyYW1lcyA9IFtdO1xuICAgICAgICAgIHRoaXMudmlkZW8ubG9hZCgpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHRoaXMucmVzaXplT2JzZXJ2ZXIgPSBuZXcgUmVzaXplT2JzZXJ2ZXIoKCkgPT4ge1xuICAgICAgdGhpcy5yZXNpemUoKTtcbiAgICB9KTtcbiAgICBjb25zdCB7XG4gICAgICBzcmMsXG4gICAgICB2aWRlb0NvbnRhaW5lclxuICAgIH0gPSBvcHRpb25zO1xuICAgIGlmICh0eXBlb2YgZG9jdW1lbnQgIT09IFwib2JqZWN0XCIpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJTY3JvbGxWaWRlbyBtdXN0IGJlIGluaXRpYXRlZCBpbiBhIERPTSBjb250ZXh0XCIpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoIXZpZGVvQ29udGFpbmVyKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwic2Nyb2xsVmlkZW9Db250YWluZXIgbXVzdCBiZSBhIHZhbGlkIERPTSBvYmplY3RcIik7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICghc3JjKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiTXVzdCBwcm92aWRlIHZhbGlkIHZpZGVvIHNyYyB0byBTY3JvbGxWaWRlb1wiKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5jb250YWluZXIgPSB0eXBlb2YgdmlkZW9Db250YWluZXIgPT09IFwic3RyaW5nXCIgPyBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh2aWRlb0NvbnRhaW5lcikgOiB2aWRlb0NvbnRhaW5lcjtcbiAgICB0aGlzLnJlc2l6ZU9ic2VydmVyLm9ic2VydmUodGhpcy5jb250YWluZXIpO1xuICAgIHRoaXMudmlkZW8gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidmlkZW9cIik7XG4gICAgdGhpcy52aWRlby5zcmMgPSBzcmM7XG4gICAgdGhpcy52aWRlby5wcmVsb2FkID0gXCJhdXRvXCI7XG4gICAgdGhpcy52aWRlby50YWJJbmRleCA9IDA7XG4gICAgdGhpcy52aWRlby5wbGF5c0lubGluZSA9IHRydWU7XG4gICAgdGhpcy52aWRlby5tdXRlZCA9IHRydWU7XG4gICAgdGhpcy52aWRlby5wYXVzZSgpO1xuICAgIHRoaXMudmlkZW8ubG9hZCgpO1xuICAgIHRoaXMuY29udGFpbmVyLmFwcGVuZENoaWxkKHRoaXMudmlkZW8pO1xuICAgIGNvbnN0IGJyb3dzZXJFbmdpbmUgPSBuZXcgVUFQYXJzZXIoKS5nZXRFbmdpbmUoKTtcbiAgICB0aGlzLmlzU2FmYXJpID0gYnJvd3NlckVuZ2luZS5uYW1lID09PSBcIldlYktpdFwiO1xuICAgIGlmICh0aGlzLmRlYnVnICYmIHRoaXMuaXNTYWZhcmkpIGNvbnNvbGUuaW5mbyhcIlNhZmFyaSBicm93c2VyIGRldGVjdGVkXCIpO1xuICAgIHRoaXMudmlkZW8uYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRlZG1ldGFkYXRhXCIsICgpID0+IHRoaXMuc2V0VGFyZ2V0VGltZVBlcmNlbnQoMCwgdHJ1ZSksIHsgb25jZTogdHJ1ZSB9KTtcbiAgICB0aGlzLnZpZGVvLmFkZEV2ZW50TGlzdGVuZXIoXCJwcm9ncmVzc1wiLCB0aGlzLnJlc2l6ZSk7XG4gICAgdGhpcy5kZWNvZGVWaWRlbygpO1xuICB9XG4gIHNldENvdmVyU3R5bGUoZWwpIHtcbiAgICBpZiAoZWwgJiYgdGhpcy5jb250YWluZXIpIHtcbiAgICAgIGVsLnN0eWxlLnBvc2l0aW9uID0gXCJhYnNvbHV0ZVwiO1xuICAgICAgZWwuc3R5bGUudG9wID0gXCI1MCVcIjtcbiAgICAgIGVsLnN0eWxlLmxlZnQgPSBcIjUwJVwiO1xuICAgICAgZWwuc3R5bGUudHJhbnNmb3JtID0gXCJ0cmFuc2xhdGUoLTUwJSwgLTUwJSlcIjtcbiAgICAgIGNvbnN0IHsgd2lkdGg6IGNvbnRhaW5lcldpZHRoLCBoZWlnaHQ6IGNvbnRhaW5lckhlaWdodCB9ID0gdGhpcy5jb250YWluZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICBjb25zdCB3aWR0aCA9IGVsLnZpZGVvV2lkdGggfHwgZWwud2lkdGg7XG4gICAgICBjb25zdCBoZWlnaHQgPSBlbC52aWRlb0hlaWdodCB8fCBlbC5oZWlnaHQ7XG4gICAgICBpZiAoY29udGFpbmVyV2lkdGggLyBjb250YWluZXJIZWlnaHQgPiB3aWR0aCAvIGhlaWdodCkge1xuICAgICAgICBlbC5zdHlsZS53aWR0aCA9IFwiMTAwJVwiO1xuICAgICAgICBlbC5zdHlsZS5oZWlnaHQgPSBcImF1dG9cIjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGVsLnN0eWxlLmhlaWdodCA9IFwiMTAwJVwiO1xuICAgICAgICBlbC5zdHlsZS53aWR0aCA9IFwiYXV0b1wiO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBwYWludENhbnZhc0ZyYW1lKGZyYW1lTnVtKSB7XG4gICAgaWYgKHRoaXMuY2FudmFzKSB7XG4gICAgICBjb25zdCBmcmFtZUlkeCA9IE1hdGgubWluKGZyYW1lTnVtLCB0aGlzLmZyYW1lcy5sZW5ndGggLSAxKTtcbiAgICAgIGNvbnN0IGN1cnJGcmFtZSA9IHRoaXMuZnJhbWVzW2ZyYW1lSWR4XTtcbiAgICAgIGlmIChjdXJyRnJhbWUgJiYgdGhpcy5jb250YWluZXIpIHtcbiAgICAgICAgaWYgKHRoaXMuZGVidWcpIGNvbnNvbGUuaW5mbyhcIlBhaW50aW5nIGZyYW1lXCIsIGZyYW1lSWR4KTtcbiAgICAgICAgdGhpcy5jYW52YXMud2lkdGggPSBjdXJyRnJhbWUud2lkdGg7XG4gICAgICAgIHRoaXMuY2FudmFzLmhlaWdodCA9IGN1cnJGcmFtZS5oZWlnaHQ7XG4gICAgICAgIGNvbnN0IHsgd2lkdGgsIGhlaWdodCB9ID0gdGhpcy5jb250YWluZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgIHRoaXMucmVzZXRDYW52YXNEaW1lbnNpb25zKHdpZHRoLCBoZWlnaHQsIGN1cnJGcmFtZS53aWR0aCwgY3VyckZyYW1lLmhlaWdodCk7XG4gICAgICAgIHRoaXMuY29udGV4dC5kcmF3SW1hZ2UoY3VyckZyYW1lLCAwLCAwLCBjdXJyRnJhbWUud2lkdGgsIGN1cnJGcmFtZS5oZWlnaHQpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICB0cmFuc2l0aW9uVG9UYXJnZXRUaW1lKGp1bXApIHtcbiAgICBpZiAoIXRoaXMudmlkZW8pIHJldHVybjtcbiAgICBpZiAodGhpcy5kZWJ1ZykgY29uc29sZS5pbmZvKFwiVHJhbnNpdGlvbmluZyB0YXJnZXRUaW1lOlwiLCB0aGlzLnRhcmdldFRpbWUsIFwiY3VycmVudFRpbWU6XCIsIHRoaXMuY3VycmVudFRpbWUpO1xuICAgIGlmIChpc05hTih0aGlzLnRhcmdldFRpbWUpIHx8IE1hdGguYWJzKHRoaXMuY3VycmVudFRpbWUgLSB0aGlzLnRhcmdldFRpbWUpIDwgdGhpcy5mcmFtZVRocmVzaG9sZCkge1xuICAgICAgdGhpcy52aWRlby5wYXVzZSgpO1xuICAgICAgdGhpcy50cmFuc2l0aW9uaW5nID0gZmFsc2U7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICh0aGlzLnRhcmdldFRpbWUgPiB0aGlzLnZpZGVvLmR1cmF0aW9uKSB7XG4gICAgICB0aGlzLnRhcmdldFRpbWUgPSB0aGlzLnZpZGVvLmR1cmF0aW9uO1xuICAgIH1cbiAgICBpZiAodGhpcy50YXJnZXRUaW1lIDwgMCkge1xuICAgICAgdGhpcy50YXJnZXRUaW1lID0gMDtcbiAgICB9XG4gICAgY29uc3QgdHJhbnNpdGlvbkZvcndhcmQgPSB0aGlzLnRhcmdldFRpbWUgLSB0aGlzLmN1cnJlbnRUaW1lO1xuICAgIGlmICh0aGlzLmNhbnZhcykge1xuICAgICAgdGhpcy5jdXJyZW50VGltZSArPSB0cmFuc2l0aW9uRm9yd2FyZCAvICgyNTYgLyB0aGlzLnRyYW5zaXRpb25TcGVlZCk7XG4gICAgICBpZiAoanVtcCkge1xuICAgICAgICB0aGlzLmN1cnJlbnRUaW1lID0gdGhpcy50YXJnZXRUaW1lO1xuICAgICAgfVxuICAgICAgdGhpcy5wYWludENhbnZhc0ZyYW1lKE1hdGguZmxvb3IodGhpcy5jdXJyZW50VGltZSAqIHRoaXMuZnJhbWVSYXRlKSk7XG4gICAgfSBlbHNlIGlmIChqdW1wIHx8IHRoaXMuaXNTYWZhcmkgfHwgdGhpcy50YXJnZXRUaW1lIC0gdGhpcy5jdXJyZW50VGltZSA8IDApIHtcbiAgICAgIHRoaXMudmlkZW8ucGF1c2UoKTtcbiAgICAgIHRoaXMuY3VycmVudFRpbWUgKz0gdHJhbnNpdGlvbkZvcndhcmQgLyAoNjQgLyB0aGlzLnRyYW5zaXRpb25TcGVlZCk7XG4gICAgICBpZiAoanVtcCkge1xuICAgICAgICB0aGlzLmN1cnJlbnRUaW1lID0gdGhpcy50YXJnZXRUaW1lO1xuICAgICAgfVxuICAgICAgdGhpcy52aWRlby5jdXJyZW50VGltZSA9IHRoaXMuY3VycmVudFRpbWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IHBsYXliYWNrUmF0ZSA9IE1hdGgubWF4KE1hdGgubWluKHRyYW5zaXRpb25Gb3J3YXJkICogNCwgdGhpcy50cmFuc2l0aW9uU3BlZWQsIDE2KSwgMSk7XG4gICAgICBpZiAodGhpcy5kZWJ1ZykgY29uc29sZS5pbmZvKFwiU2Nyb2xsVmlkZW8gcGxheWJhY2tSYXRlOlwiLCBwbGF5YmFja1JhdGUpO1xuICAgICAgaWYgKCFpc05hTihwbGF5YmFja1JhdGUpKSB7XG4gICAgICAgIHRoaXMudmlkZW8ucGxheWJhY2tSYXRlID0gcGxheWJhY2tSYXRlO1xuICAgICAgICB0aGlzLnZpZGVvLnBsYXkoKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuY3VycmVudFRpbWUgPSB0aGlzLnZpZGVvLmN1cnJlbnRUaW1lO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHJlcXVlc3RBbmltYXRpb25GcmFtZSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4gdGhpcy50cmFuc2l0aW9uVG9UYXJnZXRUaW1lKGp1bXApKTtcbiAgICB9XG4gIH1cbiAgcmVzZXRDYW52YXNEaW1lbnNpb25zKHcsIGgsIGZyYW1lVywgZnJhbWVIKSB7XG4gICAgaWYgKCF0aGlzLmNhbnZhcykgcmV0dXJuO1xuICAgIGlmICh3IC8gaCA+IGZyYW1lVyAvIGZyYW1lSCkge1xuICAgICAgdGhpcy5jYW52YXMuc3R5bGUud2lkdGggPSBcIjEwMCVcIjtcbiAgICAgIHRoaXMuY2FudmFzLnN0eWxlLmhlaWdodCA9IFwiYXV0b1wiO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmNhbnZhcy5zdHlsZS5oZWlnaHQgPSBcIjEwMCVcIjtcbiAgICAgIHRoaXMuY2FudmFzLnN0eWxlLndpZHRoID0gXCJhdXRvXCI7XG4gICAgfVxuICB9XG4gIHNldFRhcmdldFRpbWVQZXJjZW50KHNldFBlcmNlbnRhZ2UsIGp1bXAgPSB0cnVlKSB7XG4gICAgaWYgKCF0aGlzLnZpZGVvKSByZXR1cm47XG4gICAgdGhpcy50YXJnZXRUaW1lID0gTWF0aC5tYXgoTWF0aC5taW4oc2V0UGVyY2VudGFnZSwgMSksIDApICogKHRoaXMuZnJhbWVzLmxlbmd0aCAmJiB0aGlzLmZyYW1lUmF0ZSA/IHRoaXMuZnJhbWVzLmxlbmd0aCAvIHRoaXMuZnJhbWVSYXRlIDogdGhpcy52aWRlby5kdXJhdGlvbik7XG4gICAgaWYgKCFqdW1wICYmIE1hdGguYWJzKHRoaXMuY3VycmVudFRpbWUgLSB0aGlzLnRhcmdldFRpbWUpIDwgdGhpcy5mcmFtZVRocmVzaG9sZCkgcmV0dXJuO1xuICAgIGlmICghanVtcCAmJiB0aGlzLnRyYW5zaXRpb25pbmcpIHJldHVybjtcbiAgICBpZiAoIXRoaXMuY2FudmFzICYmICF0aGlzLnZpZGVvLnBhdXNlZCkgdGhpcy52aWRlby5wbGF5KCk7XG4gICAgdGhpcy50cmFuc2l0aW9uaW5nID0gdHJ1ZTtcbiAgICB0aGlzLnRyYW5zaXRpb25Ub1RhcmdldFRpbWUoanVtcCk7XG4gIH1cbiAgZGVzdHJveSgpIHtcbiAgICB2YXIgX2E7XG4gICAgdGhpcy5yZXNpemVPYnNlcnZlci51bm9ic2VydmUodGhpcy5jb250YWluZXIpO1xuICAgIChfYSA9IHRoaXMudmlkZW8pID09IG51bGwgPyB2b2lkIDAgOiBfYS5yZW1vdmVFdmVudExpc3RlbmVyKFwicHJvZ3Jlc3NcIiwgdGhpcy5yZXNpemUpO1xuICAgIGlmICh0aGlzLmRlYnVnKSBjb25zb2xlLmluZm8oXCJEZXN0cm95aW5nIFNjcm9sbFZpZGVvXCIpO1xuICAgIGlmICh0aGlzLmNvbnRhaW5lcikgdGhpcy5jb250YWluZXIuaW5uZXJIVE1MID0gXCJcIjtcbiAgfVxufVxuY29uc3Qgd3JhcHBlciA9IFwiQ29udHJvbFNsaWRlci1tb2R1bGVfX3dyYXBwZXJfX19zSEVrZFwiO1xuY29uc3Qgc2xpZGVySXRlbSA9IFwiQ29udHJvbFNsaWRlci1tb2R1bGVfX3NsaWRlckl0ZW1fX19RUVNrUlwiO1xuY29uc3Qgc2xpZGVySW1hZ2UgPSBcIkNvbnRyb2xTbGlkZXItbW9kdWxlX19zbGlkZXJJbWFnZV9fXzloUmwtXCI7XG5jb25zdCBhcnJvdyA9IFwiQ29udHJvbFNsaWRlci1tb2R1bGVfX2Fycm93X19fMDVnaFlcIjtcbmNvbnN0IGFycm93VmVydGljYWwgPSBcIkNvbnRyb2xTbGlkZXItbW9kdWxlX19hcnJvd1ZlcnRpY2FsX19fdEJmVk5cIjtcbmNvbnN0IG5leHRBcnJvdyA9IFwiQ29udHJvbFNsaWRlci1tb2R1bGVfX25leHRBcnJvd19fXy0zMFljXCI7XG5jb25zdCBhcnJvd0lubmVyID0gXCJDb250cm9sU2xpZGVyLW1vZHVsZV9fYXJyb3dJbm5lcl9fX2FFcmEzXCI7XG5jb25zdCBhcnJvd0ljb24gPSBcIkNvbnRyb2xTbGlkZXItbW9kdWxlX19hcnJvd0ljb25fX19TNHp0RlwiO1xuY29uc3QgYXJyb3dJbWcgPSBcIkNvbnRyb2xTbGlkZXItbW9kdWxlX19hcnJvd0ltZ19fXzJkd0pXXCI7XG5jb25zdCBtaXJyb3IgPSBcIkNvbnRyb2xTbGlkZXItbW9kdWxlX19taXJyb3JfX19icmQ2VVwiO1xuY29uc3QgcGFnaW5hdGlvbiA9IFwiQ29udHJvbFNsaWRlci1tb2R1bGVfX3BhZ2luYXRpb25fX19iaWNMRlwiO1xuY29uc3QgcGFnaW5hdGlvbklubmVyID0gXCJDb250cm9sU2xpZGVyLW1vZHVsZV9fcGFnaW5hdGlvbklubmVyX19fYlQtUC1cIjtcbmNvbnN0IHBhZ2luYXRpb25WZXJ0aWNhbCA9IFwiQ29udHJvbFNsaWRlci1tb2R1bGVfX3BhZ2luYXRpb25WZXJ0aWNhbF9fX3pZcUt3XCI7XG5jb25zdCBwYWdpbmF0aW9uSXRlbSA9IFwiQ29udHJvbFNsaWRlci1tb2R1bGVfX3BhZ2luYXRpb25JdGVtX19fblRSYmtcIjtcbmNvbnN0IGRvdCA9IFwiQ29udHJvbFNsaWRlci1tb2R1bGVfX2RvdF9fX3AxUXVuXCI7XG5jb25zdCBhY3RpdmVEb3QgPSBcIkNvbnRyb2xTbGlkZXItbW9kdWxlX19hY3RpdmVEb3RfX19MSEZhalwiO1xuY29uc3QgcGFnaW5hdGlvbkluc2lkZUJvdHRvbSA9IFwiQ29udHJvbFNsaWRlci1tb2R1bGVfX3BhZ2luYXRpb25JbnNpZGVCb3R0b21fX19SM0ZXblwiO1xuY29uc3QgcGFnaW5hdGlvbkluc2lkZVRvcCA9IFwiQ29udHJvbFNsaWRlci1tb2R1bGVfX3BhZ2luYXRpb25JbnNpZGVUb3BfX19WLXFiLVwiO1xuY29uc3QgcGFnaW5hdGlvbk91dHNpZGVCb3R0b20gPSBcIkNvbnRyb2xTbGlkZXItbW9kdWxlX19wYWdpbmF0aW9uT3V0c2lkZUJvdHRvbV9fXzE0dzhEXCI7XG5jb25zdCBwYWdpbmF0aW9uT3V0c2lkZVRvcCA9IFwiQ29udHJvbFNsaWRlci1tb2R1bGVfX3BhZ2luYXRpb25PdXRzaWRlVG9wX19fU0NMcUJcIjtcbmNvbnN0IHBhZ2luYXRpb25JbnNpZGVMZWZ0ID0gXCJDb250cm9sU2xpZGVyLW1vZHVsZV9fcGFnaW5hdGlvbkluc2lkZUxlZnRfX195T0JSWlwiO1xuY29uc3QgcGFnaW5hdGlvbkluc2lkZVJpZ2h0ID0gXCJDb250cm9sU2xpZGVyLW1vZHVsZV9fcGFnaW5hdGlvbkluc2lkZVJpZ2h0X19fUnR0M29cIjtcbmNvbnN0IHBhZ2luYXRpb25PdXRzaWRlTGVmdCA9IFwiQ29udHJvbFNsaWRlci1tb2R1bGVfX3BhZ2luYXRpb25PdXRzaWRlTGVmdF9fX2xhaGF3XCI7XG5jb25zdCBwYWdpbmF0aW9uT3V0c2lkZVJpZ2h0ID0gXCJDb250cm9sU2xpZGVyLW1vZHVsZV9fcGFnaW5hdGlvbk91dHNpZGVSaWdodF9fX0V0dVFhXCI7XG5jb25zdCBpbWdXcmFwcGVyID0gXCJDb250cm9sU2xpZGVyLW1vZHVsZV9faW1nV3JhcHBlcl9fX1VqRWdCXCI7XG5jb25zdCBjYXB0aW9uQmxvY2sgPSBcIkNvbnRyb2xTbGlkZXItbW9kdWxlX19jYXB0aW9uQmxvY2tfX19kSjYtalwiO1xuY29uc3QgY2FwdGlvblRleHRXcmFwcGVyID0gXCJDb250cm9sU2xpZGVyLW1vZHVsZV9fY2FwdGlvblRleHRXcmFwcGVyX19fSEZscGZcIjtcbmNvbnN0IGNhcHRpb25UZXh0ID0gXCJDb250cm9sU2xpZGVyLW1vZHVsZV9fY2FwdGlvblRleHRfX191R0JWY1wiO1xuY29uc3QgYWN0aXZlID0gXCJDb250cm9sU2xpZGVyLW1vZHVsZV9fYWN0aXZlX19fV1pLNEdcIjtcbmNvbnN0IHdpdGhQb2ludGVyRXZlbnRzID0gXCJDb250cm9sU2xpZGVyLW1vZHVsZV9fd2l0aFBvaW50ZXJFdmVudHNfX190LTE4TVwiO1xuY29uc3QgdG9wTGVmdEFsaWdubWVudCA9IFwiQ29udHJvbFNsaWRlci1tb2R1bGVfX3RvcExlZnRBbGlnbm1lbnRfX196am5HTVwiO1xuY29uc3QgdG9wQ2VudGVyQWxpZ25tZW50ID0gXCJDb250cm9sU2xpZGVyLW1vZHVsZV9fdG9wQ2VudGVyQWxpZ25tZW50X19fZ0QxeFdcIjtcbmNvbnN0IHRvcFJpZ2h0QWxpZ25tZW50ID0gXCJDb250cm9sU2xpZGVyLW1vZHVsZV9fdG9wUmlnaHRBbGlnbm1lbnRfX19OTWFwU1wiO1xuY29uc3QgbWlkZGxlTGVmdEFsaWdubWVudCA9IFwiQ29udHJvbFNsaWRlci1tb2R1bGVfX21pZGRsZUxlZnRBbGlnbm1lbnRfX19PblVyWVwiO1xuY29uc3QgbWlkZGxlQ2VudGVyQWxpZ25tZW50ID0gXCJDb250cm9sU2xpZGVyLW1vZHVsZV9fbWlkZGxlQ2VudGVyQWxpZ25tZW50X19fVGRrbDBcIjtcbmNvbnN0IG1pZGRsZVJpZ2h0QWxpZ25tZW50ID0gXCJDb250cm9sU2xpZGVyLW1vZHVsZV9fbWlkZGxlUmlnaHRBbGlnbm1lbnRfX193RWJmWFwiO1xuY29uc3QgYm90dG9tTGVmdEFsaWdubWVudCA9IFwiQ29udHJvbFNsaWRlci1tb2R1bGVfX2JvdHRvbUxlZnRBbGlnbm1lbnRfX19jVFAyLVwiO1xuY29uc3QgYm90dG9tQ2VudGVyQWxpZ25tZW50ID0gXCJDb250cm9sU2xpZGVyLW1vZHVsZV9fYm90dG9tQ2VudGVyQWxpZ25tZW50X19fYzU0ZkJcIjtcbmNvbnN0IGJvdHRvbVJpZ2h0QWxpZ25tZW50ID0gXCJDb250cm9sU2xpZGVyLW1vZHVsZV9fYm90dG9tUmlnaHRBbGlnbm1lbnRfX19rRXdyelwiO1xuY29uc3QgY2xpY2tPdmVybGF5ID0gXCJDb250cm9sU2xpZGVyLW1vZHVsZV9fY2xpY2tPdmVybGF5X19fRFpBMjhcIjtcbmNvbnN0IGNvbnRhaW4gPSBcIkNvbnRyb2xTbGlkZXItbW9kdWxlX19jb250YWluX19fcEx5cTdcIjtcbmNvbnN0IGNvdmVyID0gXCJDb250cm9sU2xpZGVyLW1vZHVsZV9fY292ZXJfX19LZERhdFwiO1xuY29uc3Qgc3R5bGVzJDIgPSB7XG4gIHdyYXBwZXIsXG4gIHNsaWRlckl0ZW0sXG4gIHNsaWRlckltYWdlLFxuICBhcnJvdyxcbiAgYXJyb3dWZXJ0aWNhbCxcbiAgbmV4dEFycm93LFxuICBhcnJvd0lubmVyLFxuICBhcnJvd0ljb24sXG4gIGFycm93SW1nLFxuICBtaXJyb3IsXG4gIHBhZ2luYXRpb24sXG4gIHBhZ2luYXRpb25Jbm5lcixcbiAgcGFnaW5hdGlvblZlcnRpY2FsLFxuICBwYWdpbmF0aW9uSXRlbSxcbiAgZG90LFxuICBhY3RpdmVEb3QsXG4gIHBhZ2luYXRpb25JbnNpZGVCb3R0b20sXG4gIHBhZ2luYXRpb25JbnNpZGVUb3AsXG4gIHBhZ2luYXRpb25PdXRzaWRlQm90dG9tLFxuICBwYWdpbmF0aW9uT3V0c2lkZVRvcCxcbiAgcGFnaW5hdGlvbkluc2lkZUxlZnQsXG4gIHBhZ2luYXRpb25JbnNpZGVSaWdodCxcbiAgcGFnaW5hdGlvbk91dHNpZGVMZWZ0LFxuICBwYWdpbmF0aW9uT3V0c2lkZVJpZ2h0LFxuICBpbWdXcmFwcGVyLFxuICBjYXB0aW9uQmxvY2ssXG4gIGNhcHRpb25UZXh0V3JhcHBlcixcbiAgY2FwdGlvblRleHQsXG4gIGFjdGl2ZSxcbiAgd2l0aFBvaW50ZXJFdmVudHMsXG4gIHRvcExlZnRBbGlnbm1lbnQsXG4gIHRvcENlbnRlckFsaWdubWVudCxcbiAgdG9wUmlnaHRBbGlnbm1lbnQsXG4gIG1pZGRsZUxlZnRBbGlnbm1lbnQsXG4gIG1pZGRsZUNlbnRlckFsaWdubWVudCxcbiAgbWlkZGxlUmlnaHRBbGlnbm1lbnQsXG4gIGJvdHRvbUxlZnRBbGlnbm1lbnQsXG4gIGJvdHRvbUNlbnRlckFsaWdubWVudCxcbiAgYm90dG9tUmlnaHRBbGlnbm1lbnQsXG4gIGNsaWNrT3ZlcmxheSxcbiAgY29udGFpbixcbiAgY292ZXJcbn07XG5jb25zdCBsaW5rID0gXCJSaWNoVGV4dFJlbmRlcmVyLW1vZHVsZV9fbGlua19fX0JXZVoyXCI7XG5jb25zdCBzdHlsZXMkMSA9IHtcbiAgbGlua1xufTtcbmNvbnN0IFJpY2hUZXh0UmVuZGVyZXIgPSAoeyBjb250ZW50IH0pID0+IHtcbiAgY29uc3QgZ2V0Q2hpbGRyZW4gPSAoY2hpbGRyZW4pID0+IHtcbiAgICByZXR1cm4gY2hpbGRyZW4ubWFwKChjaGlsZCwgaSkgPT4ge1xuICAgICAgaWYgKGNoaWxkLnR5cGUgPT09IFwibGlua1wiKSB7XG4gICAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goXCJhXCIsIHsgY2xhc3NOYW1lOiBzdHlsZXMkMS5saW5rLCBocmVmOiBjaGlsZC52YWx1ZSwgdGFyZ2V0OiBjaGlsZC50YXJnZXQsIGNoaWxkcmVuOiBnZXRDaGlsZHJlbihjaGlsZC5jaGlsZHJlbikgfSwgaSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwic3BhblwiLCB7IHN0eWxlOiBnZXRMZWFmQ3NzKGNoaWxkKSwgY2hpbGRyZW46IGNoaWxkLnRleHQgfSwgaSk7XG4gICAgfSk7XG4gIH07XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goanN4UnVudGltZS5GcmFnbWVudCwgeyBjaGlsZHJlbjogY29udGVudC5tYXAoKGJsb2NrLCBpKSA9PiB7XG4gICAgY29uc3QgY2hpbGRyZW4gPSBibG9jay5jaGlsZHJlbjtcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwiZGl2XCIsIHsgY2hpbGRyZW46IGdldENoaWxkcmVuKGNoaWxkcmVuKSB9LCBpKTtcbiAgfSkgfSk7XG59O1xuZnVuY3Rpb24gZ2V0TGVhZkNzcyhsZWFmKSB7XG4gIHJldHVybiB7XG4gICAgLi4ubGVhZi5mb250V2VpZ2h0ICYmIHsgZm9udFdlaWdodDogbGVhZi5mb250V2VpZ2h0IH0sXG4gICAgLi4ubGVhZi5mb250U3R5bGUgJiYgeyBmb250U3R5bGU6IGxlYWYuZm9udFN0eWxlIH0sXG4gICAgLi4ubGVhZi50ZXh0RGVjb3JhdGlvbiAmJiB7IHRleHREZWNvcmF0aW9uOiBsZWFmLnRleHREZWNvcmF0aW9uIH0sXG4gICAgLi4ubGVhZi50ZXh0VHJhbnNmb3JtICYmIHsgdGV4dFRyYW5zZm9ybTogbGVhZi50ZXh0VHJhbnNmb3JtIH0sXG4gICAgLi4ubGVhZi5mb250VmFyaWFudCAmJiB7IGZvbnRWYXJpYW50OiBsZWFmLmZvbnRWYXJpYW50IH0sXG4gICAgLi4ubGVhZi52ZXJ0aWNhbEFsaWduICYmIHtcbiAgICAgIHZlcnRpY2FsQWxpZ246IGxlYWYudmVydGljYWxBbGlnbixcbiAgICAgIGxpbmVIZWlnaHQ6IFwiMHB4XCJcbiAgICB9XG4gIH07XG59XG5mdW5jdGlvbiBzY2FsaW5nVmFsdWUodmFsdWUsIGlzRWRpdG9yID0gZmFsc2UpIHtcbiAgcmV0dXJuIGlzRWRpdG9yID8gYGNhbGModmFyKC0tY250cmwtYXJ0aWNsZS13aWR0aCkgKiAke3ZhbHVlfSlgIDogYCR7dmFsdWUgKiAxMDB9dndgO1xufVxuY29uc3Qgc3ZnID0gXCJTdmdJbWFnZS1tb2R1bGVfX3N2Z19fX3EzeEUtXCI7XG5jb25zdCBpbWcgPSBcIlN2Z0ltYWdlLW1vZHVsZV9faW1nX19fVnNUbS1cIjtcbmNvbnN0IHN0eWxlcyA9IHtcbiAgc3ZnLFxuICBpbWdcbn07XG5jb25zdCBTdmdJbWFnZSA9ICh7IHVybDogdXJsMiwgZmlsbCA9IFwiIzAwMDAwMFwiLCBob3ZlckZpbGwgPSBcIiNDQ0NDQ0NcIiwgY2xhc3NOYW1lID0gXCJcIiB9KSA9PiB7XG4gIGNvbnN0IFtzdXBwb3J0c01hc2ssIHNldFN1cHBvcnRzTWFza10gPSByZWFjdC51c2VTdGF0ZSh0cnVlKTtcbiAgcmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB3aW5kb3cuQ1NTKSB7XG4gICAgICBjb25zdCBzdXBwb3J0ZWQgPSBDU1Muc3VwcG9ydHMoXCJtYXNrLWltYWdlXCIsICd1cmwoXCJcIiknKSB8fCBDU1Muc3VwcG9ydHMoXCItd2Via2l0LW1hc2staW1hZ2VcIiwgJ3VybChcIlwiKScpO1xuICAgICAgc2V0U3VwcG9ydHNNYXNrKHN1cHBvcnRlZCk7XG4gICAgfVxuICB9LCBbXSk7XG4gIGlmICghdXJsMi5lbmRzV2l0aChcIi5zdmdcIikgfHwgIXN1cHBvcnRzTWFzaykge1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goXCJpbWdcIiwgeyBzcmM6IHVybDIsIGFsdDogXCJcIiwgY2xhc3NOYW1lOiBjbihzdHlsZXMuaW1nLCBjbGFzc05hbWUpIH0pO1xuICB9XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goXG4gICAgXCJzcGFuXCIsXG4gICAge1xuICAgICAgXCJkYXRhLXN1cHBvcnRzLW1hc2tcIjogc3VwcG9ydHNNYXNrLFxuICAgICAgY2xhc3NOYW1lOiBjbihzdHlsZXMuc3ZnLCBjbGFzc05hbWUpLFxuICAgICAgc3R5bGU6IHtcbiAgICAgICAgXCItLXN2Z1wiOiBgdXJsKCR7dXJsMn0pYCxcbiAgICAgICAgXCItLWZpbGxcIjogZmlsbCxcbiAgICAgICAgXCItLWhvdmVyLWZpbGxcIjogaG92ZXJGaWxsXG4gICAgICB9XG4gICAgfVxuICApO1xufTtcbmNvbnN0IGFsaWdubWVudENsYXNzTmFtZSA9IHtcbiAgXCJ0b3AtbGVmdFwiOiBzdHlsZXMkMi50b3BMZWZ0QWxpZ25tZW50LFxuICBcInRvcC1jZW50ZXJcIjogc3R5bGVzJDIudG9wQ2VudGVyQWxpZ25tZW50LFxuICBcInRvcC1yaWdodFwiOiBzdHlsZXMkMi50b3BSaWdodEFsaWdubWVudCxcbiAgXCJtaWRkbGUtbGVmdFwiOiBzdHlsZXMkMi5taWRkbGVMZWZ0QWxpZ25tZW50LFxuICBcIm1pZGRsZS1jZW50ZXJcIjogc3R5bGVzJDIubWlkZGxlQ2VudGVyQWxpZ25tZW50LFxuICBcIm1pZGRsZS1yaWdodFwiOiBzdHlsZXMkMi5taWRkbGVSaWdodEFsaWdubWVudCxcbiAgXCJib3R0b20tbGVmdFwiOiBzdHlsZXMkMi5ib3R0b21MZWZ0QWxpZ25tZW50LFxuICBcImJvdHRvbS1jZW50ZXJcIjogc3R5bGVzJDIuYm90dG9tQ2VudGVyQWxpZ25tZW50LFxuICBcImJvdHRvbS1yaWdodFwiOiBzdHlsZXMkMi5ib3R0b21SaWdodEFsaWdubWVudFxufTtcbmZ1bmN0aW9uIENvbnRyb2xTbGlkZXIoeyBzZXR0aW5ncywgY29udGVudCwgc3R5bGVzOiBzbGlkZXJTdHlsZXMsIGlzRWRpdG9yIH0pIHtcbiAgY29uc3QgW3NsaWRlclJlZiwgc2V0U2xpZGVyUmVmXSA9IHJlYWN0LnVzZVN0YXRlKG51bGwpO1xuICBjb25zdCB7IHdpZHRoU2V0dGluZ3MsIGZvbnRTZXR0aW5ncywgbGV0dGVyU3BhY2luZywgdGV4dEFsaWduLCB3b3JkU3BhY2luZywgZm9udFNpemVMaW5lSGVpZ2h0LCB0ZXh0QXBwZWFyYW5jZSwgY29sb3IgfSA9IHNsaWRlclN0eWxlcy5jYXB0aW9uO1xuICBjb25zdCBbc2xpZGVyRGltZW5zaW9ucywgc2V0U2xpZGVyRGltZW5zaW9uc10gPSByZWFjdC51c2VTdGF0ZSh2b2lkIDApO1xuICBjb25zdCBbd3JhcHBlclJlZiwgc2V0V3JhcHBlclJlZl0gPSByZWFjdC51c2VTdGF0ZShudWxsKTtcbiAgY29uc3QgW2N1cnJlbnRTbGlkZUluZGV4LCBzZXRDdXJyZW50U2xpZGVJbmRleF0gPSByZWFjdC51c2VTdGF0ZSgwKTtcbiAgY29uc3QgW2tleSwgc2V0S2V5XSA9IHJlYWN0LnVzZVN0YXRlKDApO1xuICBjb25zdCB7IGRpcmVjdGlvbiwgdHJhbnNpdGlvbiwgY29udHJvbHMsIHBhZ2luYXRpb246IHBhZ2luYXRpb24yLCBjYXB0aW9uLCB0cmlnZ2VycyB9ID0gc2V0dGluZ3M7XG4gIGNvbnN0IHByZXZTbGlkZXJUeXBlUmVmID0gcmVhY3QudXNlUmVmKHRyYW5zaXRpb24udHlwZSk7XG4gIGNvbnN0IHsgeDogY29udHJvbHNPZmZzZXRYLCB5OiBjb250cm9sc09mZnNldFkgfSA9IHNldHRpbmdzLmNvbnRyb2xzLm9mZnNldDtcbiAgY29uc3QgaGFuZGxlQXJyb3dDbGljayA9IChkaXIpID0+IHtcbiAgICBpZiAoc2xpZGVyUmVmKSB7XG4gICAgICBzbGlkZXJSZWYuZ28oZGlyKTtcbiAgICB9XG4gIH07XG4gIHJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCF3cmFwcGVyUmVmKSByZXR1cm47XG4gICAgY29uc3Qgb2JzZXJ2ZXIgPSBuZXcgUmVzaXplT2JzZXJ2ZXIoKGVudHJpZXMpID0+IHtcbiAgICAgIGlmICghc2xpZGVyUmVmKSByZXR1cm47XG4gICAgICBjb25zdCBbd3JhcHBlcjJdID0gZW50cmllcztcbiAgICAgIHNldFNsaWRlckRpbWVuc2lvbnMoe1xuICAgICAgICB3aWR0aDogTWF0aC5yb3VuZCh3cmFwcGVyMi5jb250ZW50UmVjdC53aWR0aCksXG4gICAgICAgIGhlaWdodDogTWF0aC5yb3VuZCh3cmFwcGVyMi5jb250ZW50UmVjdC5oZWlnaHQpXG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBvYnNlcnZlci5vYnNlcnZlKHdyYXBwZXJSZWYpO1xuICAgIHJldHVybiAoKSA9PiBvYnNlcnZlci51bm9ic2VydmUod3JhcHBlclJlZik7XG4gIH0sIFt3cmFwcGVyUmVmXSk7XG4gIHJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFzbGlkZXJSZWYgfHwgcHJldlNsaWRlclR5cGVSZWYuY3VycmVudCA9PT0gdHJhbnNpdGlvbi50eXBlKSByZXR1cm47XG4gICAgc2V0S2V5KChwcmV2KSA9PiBwcmV2ICsgMSk7XG4gICAgcHJldlNsaWRlclR5cGVSZWYuY3VycmVudCA9IHRyYW5zaXRpb24udHlwZTtcbiAgfSwgW3RyYW5zaXRpb24udHlwZV0pO1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBjbihzdHlsZXMkMi53cmFwcGVyLCB7IFtzdHlsZXMkMi5lZGl0b3JdOiBpc0VkaXRvciB9KSwgcmVmOiBzZXRXcmFwcGVyUmVmLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4cyhcImRpdlwiLCB7IGNsYXNzTmFtZTogc3R5bGVzJDIuc2xpZGVySW5uZXIsIHN0eWxlOiB7XG4gICAgd2lkdGg6IHNsaWRlckRpbWVuc2lvbnMgPyBzbGlkZXJEaW1lbnNpb25zLndpZHRoIDogXCIxMDAlXCIsXG4gICAgaGVpZ2h0OiBzbGlkZXJEaW1lbnNpb25zID8gc2xpZGVyRGltZW5zaW9ucy5oZWlnaHQgOiBcIjEwMCVcIlxuICB9LCBjaGlsZHJlbjogW1xuICAgIHNldHRpbmdzLmNhcHRpb24uaXNBY3RpdmUgJiYgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFxuICAgICAgXCJkaXZcIixcbiAgICAgIHtcbiAgICAgICAgY2xhc3NOYW1lOiBjbihzdHlsZXMkMi5jYXB0aW9uQmxvY2spLFxuICAgICAgICBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFxuICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAge1xuICAgICAgICAgICAgY2xhc3NOYW1lOiBzdHlsZXMkMi5jYXB0aW9uVGV4dFdyYXBwZXIsXG4gICAgICAgICAgICBjaGlsZHJlbjogY29udGVudC5tYXAoKGl0ZW0sIGluZGV4KSA9PiAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goXG4gICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU6IGNuKHN0eWxlcyQyLmNhcHRpb25UZXh0LCBhbGlnbm1lbnRDbGFzc05hbWVbY2FwdGlvbi5hbGlnbm1lbnRdLCB7XG4gICAgICAgICAgICAgICAgICBbc3R5bGVzJDIud2l0aFBvaW50ZXJFdmVudHNdOiBpbmRleCA9PT0gY3VycmVudFNsaWRlSW5kZXggJiYgaXNFZGl0b3IsXG4gICAgICAgICAgICAgICAgICBbc3R5bGVzJDIuYWN0aXZlXTogaW5kZXggPT09IGN1cnJlbnRTbGlkZUluZGV4XG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgICAgICAgIGZvbnRGYW1pbHk6IGZvbnRTZXR0aW5ncy5mb250RmFtaWx5LFxuICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogZm9udFNldHRpbmdzLmZvbnRXZWlnaHQsXG4gICAgICAgICAgICAgICAgICBmb250U3R5bGU6IGZvbnRTZXR0aW5ncy5mb250U3R5bGUsXG4gICAgICAgICAgICAgICAgICB3aWR0aDogd2lkdGhTZXR0aW5ncy5zaXppbmcgPT09IFwiYXV0b1wiID8gXCJtYXgtY29udGVudFwiIDogc2NhbGluZ1ZhbHVlKHdpZHRoU2V0dGluZ3Mud2lkdGgsIGlzRWRpdG9yKSxcbiAgICAgICAgICAgICAgICAgIGxldHRlclNwYWNpbmc6IHNjYWxpbmdWYWx1ZShsZXR0ZXJTcGFjaW5nLCBpc0VkaXRvciksXG4gICAgICAgICAgICAgICAgICB3b3JkU3BhY2luZzogc2NhbGluZ1ZhbHVlKHdvcmRTcGFjaW5nLCBpc0VkaXRvciksXG4gICAgICAgICAgICAgICAgICB0ZXh0QWxpZ24sXG4gICAgICAgICAgICAgICAgICBmb250U2l6ZTogc2NhbGluZ1ZhbHVlKGZvbnRTaXplTGluZUhlaWdodC5mb250U2l6ZSwgaXNFZGl0b3IpLFxuICAgICAgICAgICAgICAgICAgbGluZUhlaWdodDogc2NhbGluZ1ZhbHVlKGZvbnRTaXplTGluZUhlaWdodC5saW5lSGVpZ2h0LCBpc0VkaXRvciksXG4gICAgICAgICAgICAgICAgICB0ZXh0VHJhbnNmb3JtOiB0ZXh0QXBwZWFyYW5jZS50ZXh0VHJhbnNmb3JtID8/IFwibm9uZVwiLFxuICAgICAgICAgICAgICAgICAgdGV4dERlY29yYXRpb246IHRleHRBcHBlYXJhbmNlLnRleHREZWNvcmF0aW9uID8/IFwibm9uZVwiLFxuICAgICAgICAgICAgICAgICAgZm9udFZhcmlhbnQ6IHRleHRBcHBlYXJhbmNlLmZvbnRWYXJpYW50ID8/IFwibm9ybWFsXCIsXG4gICAgICAgICAgICAgICAgICBjb2xvcixcbiAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb25EdXJhdGlvbjogdHJhbnNpdGlvbi5kdXJhdGlvbiA/IGAke01hdGgucm91bmQocGFyc2VJbnQodHJhbnNpdGlvbi5kdXJhdGlvbikgLyAyKX1tc2AgOiBcIjUwMG1zXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goXG4gICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBcImRhdGEtc3R5bGVzXCI6IFwiY2FwdGlvblwiLFxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IHN0eWxlcyQyLmNhcHRpb25UZXh0SW5uZXIsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgXCItLWxpbmstaG92ZXItY29sb3JcIjogY2FwdGlvbi5ob3ZlcixcbiAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogXCJyZWxhdGl2ZVwiLFxuICAgICAgICAgICAgICAgICAgICAgIHRvcDogc2NhbGluZ1ZhbHVlKGNhcHRpb24ub2Zmc2V0LnksIGlzRWRpdG9yKSxcbiAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiBzY2FsaW5nVmFsdWUoY2FwdGlvbi5vZmZzZXQueCwgaXNFZGl0b3IpXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goUmljaFRleHRSZW5kZXJlciwgeyBjb250ZW50OiBpdGVtLmltYWdlQ2FwdGlvbiB9KVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgaW5kZXhcbiAgICAgICAgICAgICkpXG4gICAgICAgICAgfVxuICAgICAgICApXG4gICAgICB9XG4gICAgKSxcbiAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goXG4gICAgICByZWFjdFNwbGlkZS5TcGxpZGUsXG4gICAgICB7XG4gICAgICAgIG9uTW92ZTogKGUpID0+IHtcbiAgICAgICAgICBzZXRDdXJyZW50U2xpZGVJbmRleChlLmluZGV4KTtcbiAgICAgICAgfSxcbiAgICAgICAgcmVmOiBzZXRTbGlkZXJSZWYsXG4gICAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgICBhcnJvd3M6IGZhbHNlLFxuICAgICAgICAgIHNwZWVkOiB0cmFuc2l0aW9uLmR1cmF0aW9uID8gcGFyc2VJbnQodHJhbnNpdGlvbi5kdXJhdGlvbikgOiA1MDAsXG4gICAgICAgICAgYXV0b3BsYXk6IGlzRWRpdG9yID8gZmFsc2UgOiB0cmlnZ2Vycy5hdXRvUGxheSAhPT0gbnVsbCxcbiAgICAgICAgICAuLi50cmlnZ2Vycy5hdXRvUGxheSAhPT0gbnVsbCAmJiB7XG4gICAgICAgICAgICBpbnRlcnZhbDogcGFyc2VJbnQodHJpZ2dlcnMuYXV0b1BsYXkpICogMWUzXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkaXJlY3Rpb246IGRpcmVjdGlvbiA9PT0gXCJob3JpelwiIHx8IHRyYW5zaXRpb24udHlwZSA9PT0gXCJmYWRlIGluXCIgPyBcImx0clwiIDogXCJ0dGJcIixcbiAgICAgICAgICBwYWdpbmF0aW9uOiBmYWxzZSxcbiAgICAgICAgICBkcmFnOiB0cmlnZ2Vycy50cmlnZ2Vyc0xpc3QuZHJhZyxcbiAgICAgICAgICBwZXJQYWdlOiAxLFxuICAgICAgICAgIHdpZHRoOiBzbGlkZXJEaW1lbnNpb25zID8gc2xpZGVyRGltZW5zaW9ucy53aWR0aCA6IFwiMTAwJVwiLFxuICAgICAgICAgIGhlaWdodDogc2xpZGVyRGltZW5zaW9ucyA/IHNsaWRlckRpbWVuc2lvbnMuaGVpZ2h0IDogXCIxMDAlXCIsXG4gICAgICAgICAgdHlwZTogdHJhbnNpdGlvbi50eXBlID09PSBcImZhZGUgaW5cIiA/IFwiZmFkZVwiIDogXCJsb29wXCIsXG4gICAgICAgICAgcmV3aW5kOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIGNoaWxkcmVuOiBjb250ZW50Lm1hcCgoaXRlbSwgaW5kZXgpID0+IC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeChyZWFjdFNwbGlkZS5TcGxpZGVTbGlkZSwgeyBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFxuICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAge1xuICAgICAgICAgICAgY2xhc3NOYW1lOiBzdHlsZXMkMi5zbGlkZXJJdGVtLFxuICAgICAgICAgICAgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeChcbiAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogc3R5bGVzJDIuaW1nV3JhcHBlcixcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFxuICAgICAgICAgICAgICAgICAgXCJpbWdcIixcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBjbihzdHlsZXMkMi5zbGlkZXJJbWFnZSwge1xuICAgICAgICAgICAgICAgICAgICAgIFtzdHlsZXMkMi5jb250YWluXTogaXRlbS5pbWFnZS5vYmplY3RGaXQgPT09IFwiY29udGFpblwiLFxuICAgICAgICAgICAgICAgICAgICAgIFtzdHlsZXMkMi5jb3Zlcl06IGl0ZW0uaW1hZ2Uub2JqZWN0Rml0ID09PSBcImNvdmVyXCJcbiAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgIHNyYzogaXRlbS5pbWFnZS51cmwsXG4gICAgICAgICAgICAgICAgICAgIGFsdDogaXRlbS5pbWFnZS5uYW1lID8/IFwiXCJcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIClcbiAgICAgICAgICB9XG4gICAgICAgICkgfSwgaW5kZXgpKVxuICAgICAgfSxcbiAgICAgIGtleVxuICAgICksXG4gICAgY29udHJvbHMuaXNBY3RpdmUgJiYgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4cyhqc3hSdW50aW1lLkZyYWdtZW50LCB7IGNoaWxkcmVuOiBbXG4gICAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goXG4gICAgICAgIFwiZGl2XCIsXG4gICAgICAgIHtcbiAgICAgICAgICBjbGFzc05hbWU6IGNuKHN0eWxlcyQyLmFycm93LCB7XG4gICAgICAgICAgICBbc3R5bGVzJDIuYXJyb3dWZXJ0aWNhbF06IGRpcmVjdGlvbiA9PT0gXCJ2ZXJ0XCJcbiAgICAgICAgICB9KSxcbiAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgY29sb3I6IGNvbnRyb2xzLmNvbG9yLFxuICAgICAgICAgICAgW1wiLS1hcnJvdy1ob3Zlci1jb2xvclwiXTogY29udHJvbHMuaG92ZXJcbiAgICAgICAgICB9LFxuICAgICAgICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3hzKFxuICAgICAgICAgICAgXCJidXR0b25cIixcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgb25DbGljazogKCkgPT4ge1xuICAgICAgICAgICAgICAgIGhhbmRsZUFycm93Q2xpY2soXCItMVwiKTtcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgY2xhc3NOYW1lOiBzdHlsZXMkMi5hcnJvd0lubmVyLFxuICAgICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogYHRyYW5zbGF0ZSgke3NjYWxpbmdWYWx1ZShjb250cm9sc09mZnNldFgsIGlzRWRpdG9yKX0sICR7c2NhbGluZ1ZhbHVlKGNvbnRyb2xzT2Zmc2V0WSAqIChkaXJlY3Rpb24gPT09IFwiaG9yaXpcIiA/IDEgOiAtMSksIGlzRWRpdG9yKX0pIHNjYWxlKCR7c2V0dGluZ3MuY29udHJvbHMuc2NhbGUgLyAxMDB9KSByb3RhdGUoJHtkaXJlY3Rpb24gPT09IFwiaG9yaXpcIiA/IFwiMGRlZ1wiIDogXCI5MGRlZ1wifSlgXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgY29udHJvbHMuYXJyb3dzSW1nVXJsICYmIC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeChcbiAgICAgICAgICAgICAgICAgIFN2Z0ltYWdlLFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB1cmw6IGNvbnRyb2xzLmFycm93c0ltZ1VybCxcbiAgICAgICAgICAgICAgICAgICAgZmlsbDogY29udHJvbHMuY29sb3IsXG4gICAgICAgICAgICAgICAgICAgIGhvdmVyRmlsbDogY29udHJvbHMuaG92ZXIsXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogY24oc3R5bGVzJDIuYXJyb3dJbWcsIHN0eWxlcyQyLm1pcnJvcilcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICFjb250cm9scy5hcnJvd3NJbWdVcmwgJiYgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KEFycm93SWNvbiwgeyBjb2xvcjogY29udHJvbHMuY29sb3IsIGNsYXNzTmFtZTogY24oc3R5bGVzJDIuYXJyb3dJY29uLCBzdHlsZXMkMi5hcnJvd0ltZywgc3R5bGVzJDIubWlycm9yKSB9KVxuICAgICAgICAgICAgICBdXG4gICAgICAgICAgICB9XG4gICAgICAgICAgKVxuICAgICAgICB9XG4gICAgICApLFxuICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFxuICAgICAgICBcImRpdlwiLFxuICAgICAgICB7XG4gICAgICAgICAgY2xhc3NOYW1lOiBjbihzdHlsZXMkMi5hcnJvdywgc3R5bGVzJDIubmV4dEFycm93LCB7XG4gICAgICAgICAgICBbc3R5bGVzJDIuYXJyb3dWZXJ0aWNhbF06IGRpcmVjdGlvbiA9PT0gXCJ2ZXJ0XCJcbiAgICAgICAgICB9KSxcbiAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgY29sb3I6IGNvbnRyb2xzLmNvbG9yLFxuICAgICAgICAgICAgW1wiLS1hcnJvdy1ob3Zlci1jb2xvclwiXTogY29udHJvbHMuaG92ZXJcbiAgICAgICAgICB9LFxuICAgICAgICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3hzKFxuICAgICAgICAgICAgXCJidXR0b25cIixcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgY2xhc3NOYW1lOiBzdHlsZXMkMi5hcnJvd0lubmVyLFxuICAgICAgICAgICAgICBvbkNsaWNrOiAoKSA9PiBoYW5kbGVBcnJvd0NsaWNrKFwiKzFcIiksXG4gICAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBgdHJhbnNsYXRlKCR7c2NhbGluZ1ZhbHVlKGNvbnRyb2xzT2Zmc2V0WCAqIChkaXJlY3Rpb24gPT09IFwiaG9yaXpcIiA/IC0xIDogMSksIGlzRWRpdG9yKX0sICR7c2NhbGluZ1ZhbHVlKGNvbnRyb2xzT2Zmc2V0WSwgaXNFZGl0b3IpfSkgc2NhbGUoJHtzZXR0aW5ncy5jb250cm9scy5zY2FsZSAvIDEwMH0pIHJvdGF0ZSgke2RpcmVjdGlvbiA9PT0gXCJob3JpelwiID8gXCIwZGVnXCIgOiBcIjkwZGVnXCJ9KWBcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICBjb250cm9scy5hcnJvd3NJbWdVcmwgJiYgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFxuICAgICAgICAgICAgICAgICAgU3ZnSW1hZ2UsXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHVybDogY29udHJvbHMuYXJyb3dzSW1nVXJsLFxuICAgICAgICAgICAgICAgICAgICBmaWxsOiBjb250cm9scy5jb2xvcixcbiAgICAgICAgICAgICAgICAgICAgaG92ZXJGaWxsOiBjb250cm9scy5ob3ZlcixcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBzdHlsZXMkMi5hcnJvd0ltZ1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgIWNvbnRyb2xzLmFycm93c0ltZ1VybCAmJiAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goQXJyb3dJY29uLCB7IGNvbG9yOiBjb250cm9scy5jb2xvciwgY2xhc3NOYW1lOiBjbihzdHlsZXMkMi5hcnJvd0ljb24sIHN0eWxlcyQyLmFycm93SW1nKSB9KVxuICAgICAgICAgICAgICBdXG4gICAgICAgICAgICB9XG4gICAgICAgICAgKVxuICAgICAgICB9XG4gICAgICApXG4gICAgXSB9KSxcbiAgICB0cmlnZ2Vycy50cmlnZ2Vyc0xpc3QuY2xpY2sgJiYgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFxuICAgICAgXCJkaXZcIixcbiAgICAgIHtcbiAgICAgICAgY2xhc3NOYW1lOiBzdHlsZXMkMi5jbGlja092ZXJsYXksXG4gICAgICAgIG9uQ2xpY2s6ICgpID0+IHtcbiAgICAgICAgICBpZiAoc2xpZGVyUmVmKSB7XG4gICAgICAgICAgICBzbGlkZXJSZWYuZ28oXCIrMVwiKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICApLFxuICAgIHBhZ2luYXRpb24yLmlzQWN0aXZlICYmIC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeChcbiAgICAgIFwiZGl2XCIsXG4gICAgICB7XG4gICAgICAgIGNsYXNzTmFtZTogY24oc3R5bGVzJDIucGFnaW5hdGlvbiwge1xuICAgICAgICAgIFtzdHlsZXMkMi5wYWdpbmF0aW9uSW5zaWRlQm90dG9tXTogcGFnaW5hdGlvbjIucG9zaXRpb24gPT09IFwiaW5zaWRlLTFcIiAmJiBkaXJlY3Rpb24gPT09IFwiaG9yaXpcIixcbiAgICAgICAgICBbc3R5bGVzJDIucGFnaW5hdGlvbkluc2lkZVRvcF06IHBhZ2luYXRpb24yLnBvc2l0aW9uID09PSBcImluc2lkZS0yXCIgJiYgZGlyZWN0aW9uID09PSBcImhvcml6XCIsXG4gICAgICAgICAgW3N0eWxlcyQyLnBhZ2luYXRpb25PdXRzaWRlQm90dG9tXTogcGFnaW5hdGlvbjIucG9zaXRpb24gPT09IFwib3V0c2lkZS0xXCIgJiYgZGlyZWN0aW9uID09PSBcImhvcml6XCIsXG4gICAgICAgICAgW3N0eWxlcyQyLnBhZ2luYXRpb25PdXRzaWRlVG9wXTogcGFnaW5hdGlvbjIucG9zaXRpb24gPT09IFwib3V0c2lkZS0yXCIgJiYgZGlyZWN0aW9uID09PSBcImhvcml6XCIsXG4gICAgICAgICAgW3N0eWxlcyQyLnBhZ2luYXRpb25JbnNpZGVMZWZ0XTogcGFnaW5hdGlvbjIucG9zaXRpb24gPT09IFwiaW5zaWRlLTFcIiAmJiBkaXJlY3Rpb24gPT09IFwidmVydFwiLFxuICAgICAgICAgIFtzdHlsZXMkMi5wYWdpbmF0aW9uSW5zaWRlUmlnaHRdOiBwYWdpbmF0aW9uMi5wb3NpdGlvbiA9PT0gXCJpbnNpZGUtMlwiICYmIGRpcmVjdGlvbiA9PT0gXCJ2ZXJ0XCIsXG4gICAgICAgICAgW3N0eWxlcyQyLnBhZ2luYXRpb25PdXRzaWRlTGVmdF06IHBhZ2luYXRpb24yLnBvc2l0aW9uID09PSBcIm91dHNpZGUtMVwiICYmIGRpcmVjdGlvbiA9PT0gXCJ2ZXJ0XCIsXG4gICAgICAgICAgW3N0eWxlcyQyLnBhZ2luYXRpb25PdXRzaWRlUmlnaHRdOiBwYWdpbmF0aW9uMi5wb3NpdGlvbiA9PT0gXCJvdXRzaWRlLTJcIiAmJiBkaXJlY3Rpb24gPT09IFwidmVydFwiLFxuICAgICAgICAgIFtzdHlsZXMkMi5wYWdpbmF0aW9uVmVydGljYWxdOiBkaXJlY3Rpb24gPT09IFwidmVydFwiXG4gICAgICAgIH0pLFxuICAgICAgICBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFxuICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAge1xuICAgICAgICAgICAgY2xhc3NOYW1lOiBzdHlsZXMkMi5wYWdpbmF0aW9uSW5uZXIsXG4gICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IHBhZ2luYXRpb24yLmNvbG9yc1syXSxcbiAgICAgICAgICAgICAgdHJhbnNmb3JtOiBgc2NhbGUoJHtwYWdpbmF0aW9uMi5zY2FsZSAvIDEwMH0pIHRyYW5zbGF0ZSgke3NjYWxpbmdWYWx1ZShwYWdpbmF0aW9uMi5vZmZzZXQueCwgaXNFZGl0b3IpfSwgJHtzY2FsaW5nVmFsdWUocGFnaW5hdGlvbjIub2Zmc2V0LnksIGlzRWRpdG9yKX0pIHJvdGF0ZSgke2RpcmVjdGlvbiA9PT0gXCJob3JpelwiID8gXCIwZGVnXCIgOiBcIjkwZGVnXCJ9KWBcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGlsZHJlbjogY29udGVudC5tYXAoKF8sIGluZGV4KSA9PiAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goXG4gICAgICAgICAgICAgIFwiYnV0dG9uXCIsXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBvbkNsaWNrOiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICBpZiAoc2xpZGVyUmVmKSB7XG4gICAgICAgICAgICAgICAgICAgIHNsaWRlclJlZi5nbyhpbmRleCk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU6IGNuKHN0eWxlcyQyLnBhZ2luYXRpb25JdGVtKSxcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFxuICAgICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBjbihzdHlsZXMkMi5kb3QsIHtcbiAgICAgICAgICAgICAgICAgICAgICBbc3R5bGVzJDIuYWN0aXZlRG90XTogaW5kZXggPT09IGN1cnJlbnRTbGlkZUluZGV4XG4gICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogaW5kZXggPT09IGN1cnJlbnRTbGlkZUluZGV4ID8gcGFnaW5hdGlvbjIuY29sb3JzWzBdIDogcGFnaW5hdGlvbjIuY29sb3JzWzFdLFxuICAgICAgICAgICAgICAgICAgICAgIFtcIi0tcGFnaW5hdGlvbi1ob3Zlci1jb2xvclwiXTogcGFnaW5hdGlvbjIuaG92ZXJcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgaW5kZXhcbiAgICAgICAgICAgICkpXG4gICAgICAgICAgfVxuICAgICAgICApXG4gICAgICB9XG4gICAgKVxuICBdIH0pIH0pO1xufVxuZnVuY3Rpb24gQXJyb3dJY29uKHsgY29sb3IsIGNsYXNzTmFtZSB9KSB7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goXCJzdmdcIiwgeyB2aWV3Qm94OiBcIjAgMCAxMCAxOFwiLCBjbGFzc05hbWUsIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goXCJnXCIsIHsgaWQ6IFwiU3ltYm9sc1wiLCBzdHJva2U6IFwibm9uZVwiLCBzdHJva2VXaWR0aDogXCIxXCIsIGZpbGxSdWxlOiBcImV2ZW5vZGRcIiwgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeChcInBhdGhcIiwgeyBkOiBcIk0tMy43MDcxMDY3OCw0LjI5Mjg5MzIyIEMtMy4zNDY2MjI4MiwzLjkzMjQwOTI2IC0yLjc3OTM5MTc2LDMuOTA0Njc5NzIgLTIuMzg3MTAwNTYsNC4yMDk3MDQ2MSBMLTIuMjkyODkzMjIsNC4yOTI4OTMyMiBMNSwxMS41ODUgTDEyLjI5Mjg5MzIsNC4yOTI4OTMyMiBDMTIuNjUzMzc3MiwzLjkzMjQwOTI2IDEzLjIyMDYwODIsMy45MDQ2Nzk3MiAxMy42MTI4OTk0LDQuMjA5NzA0NjEgTDEzLjcwNzEwNjgsNC4yOTI4OTMyMiBDMTQuMDY3NTkwNyw0LjY1MzM3NzE4IDE0LjA5NTMyMDMsNS4yMjA2MDgyNCAxMy43OTAyOTU0LDUuNjEyODk5NDQgTDEzLjcwNzEwNjgsNS43MDcxMDY3OCBMNS43MDcxMDY3OCwxMy43MDcxMDY4IEM1LjM0NjYyMjgyLDE0LjA2NzU5MDcgNC43NzkzOTE3NiwxNC4wOTUzMjAzIDQuMzg3MTAwNTYsMTMuNzkwMjk1NCBMNC4yOTI4OTMyMiwxMy43MDcxMDY4IEwtMy43MDcxMDY3OCw1LjcwNzEwNjc4IEMtNC4wOTc2MzEwNyw1LjMxNjU4MjQ5IC00LjA5NzYzMTA3LDQuNjgzNDE3NTEgLTMuNzA3MTA2NzgsNC4yOTI4OTMyMiBaXCIsIGlkOiBcIlNoYXBlLUNvcHlcIiwgZmlsbDogY29sb3IsIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGUoNSwgOSkgcm90YXRlKC05MCkgdHJhbnNsYXRlKC01LCAtOSlcIiB9KSB9KSB9KTtcbn1cbmNvbnN0IENvbnRyb2xTbGlkZXJDb21wb25lbnQgPSB7XG4gIGVsZW1lbnQ6IENvbnRyb2xTbGlkZXIsXG4gIGlkOiBcImNvbnRyb2wtc2xpZGVyXCIsXG4gIG5hbWU6IFwiU2xpZGVyXCIsXG4gIHByZXZpZXc6IHtcbiAgICB0eXBlOiBcInZpZGVvXCIsXG4gICAgdXJsOiBcImh0dHBzOi8vY2RuLmNudHJsLnNpdGUvcHJvamVjdHMvMDFHSjJTTVBQQ1E3SlNOR1ZYWjJESFdYV0YvYXJ0aWNsZXMtYXNzZXRzLzAxSlRGWFg1TTg5OVJHMkpBMkdUSkcxV05YLm1wNFwiXG4gIH0sXG4gIGRlZmF1bHRTaXplOiB7XG4gICAgd2lkdGg6IDQwMCxcbiAgICBoZWlnaHQ6IDQwMFxuICB9LFxuICBzY2hlbWE6IHtcbiAgICB0eXBlOiBcIm9iamVjdFwiLFxuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIHNldHRpbmdzOiB7XG4gICAgICAgIGxheW91dEJhc2VkOiB0cnVlLFxuICAgICAgICB0eXBlOiBcIm9iamVjdFwiLFxuICAgICAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICAgICAgdHJpZ2dlcnM6IHtcbiAgICAgICAgICAgIG5hbWU6IFwidHJpZ2dlcnNcIixcbiAgICAgICAgICAgIGljb246IFwidGFyZ2V0XCIsXG4gICAgICAgICAgICB0b29sdGlwOiBcIlRyaWdnZXJzXCIsXG4gICAgICAgICAgICB0eXBlOiBcIm9iamVjdFwiLFxuICAgICAgICAgICAgcHJvcGVydGllczoge1xuICAgICAgICAgICAgICB0cmlnZ2Vyc0xpc3Q6IHtcbiAgICAgICAgICAgICAgICB0eXBlOiBcIm9iamVjdFwiLFxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IHtcbiAgICAgICAgICAgICAgICAgIHR5cGU6IFwidG9nZ2xlLXJhdGlvLWdyb3VwXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHByb3BlcnRpZXM6IHtcbiAgICAgICAgICAgICAgICAgIGNsaWNrOiB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiYm9vbGVhblwiXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgZHJhZzoge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImJvb2xlYW5cIlxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgYXV0b1BsYXk6IHtcbiAgICAgICAgICAgICAgICB0eXBlOiBbXCJzdHJpbmdcIiwgXCJudWxsXCJdLFxuICAgICAgICAgICAgICAgIGxhYmVsOiBcIkF1dG9cIixcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiB7XG4gICAgICAgICAgICAgICAgICB0eXBlOiBcInN0ZXAtc2VsZWN0b3JcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZW51bTogW251bGwsIFwiMXNcIiwgXCIyc1wiLCBcIjNzXCIsIFwiNHNcIiwgXCI1c1wiXVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBkaXJlY3Rpb246IHtcbiAgICAgICAgICAgIG5hbWU6IFwiZGlyZWN0aW9uXCIsXG4gICAgICAgICAgICBpY29uOiBcImhvcml6b250YWwtcmVzaXplXCIsXG4gICAgICAgICAgICB0b29sdGlwOiBcIkRpcmVjdGlvblwiLFxuICAgICAgICAgICAgdHlwZTogXCJzdHJpbmdcIixcbiAgICAgICAgICAgIGRpc3BsYXk6IHtcbiAgICAgICAgICAgICAgdHlwZTogXCJyYXRpby1ncm91cFwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZW51bTogW1wiaG9yaXpcIiwgXCJ2ZXJ0XCJdXG4gICAgICAgICAgfSxcbiAgICAgICAgICB0cmFuc2l0aW9uOiB7XG4gICAgICAgICAgICBuYW1lOiBcInRyYW5zaXRcIixcbiAgICAgICAgICAgIGljb246IFwidHJhbnNpdGlvblwiLFxuICAgICAgICAgICAgdG9vbHRpcDogXCJUcmFuc2l0aW9uXCIsXG4gICAgICAgICAgICB0eXBlOiBcIm9iamVjdFwiLFxuICAgICAgICAgICAgcHJvcGVydGllczoge1xuICAgICAgICAgICAgICB0eXBlOiB7XG4gICAgICAgICAgICAgICAgdHlwZTogXCJzdHJpbmdcIixcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiB7XG4gICAgICAgICAgICAgICAgICB0eXBlOiBcInJhdGlvLWdyb3VwXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGVudW06IFtcInNsaWRlXCIsIFwiZmFkZSBpblwiXVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBkdXJhdGlvbjoge1xuICAgICAgICAgICAgICAgIHR5cGU6IFwic3RyaW5nXCIsXG4gICAgICAgICAgICAgICAgbGFiZWw6IFwiaG91cmdsYXNzLWljb25cIixcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiB7XG4gICAgICAgICAgICAgICAgICB0eXBlOiBcInN0ZXAtc2VsZWN0b3JcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZW51bTogW1wiMTAwbXNcIiwgXCIyNTBtc1wiLCBcIjUwMG1zXCIsIFwiMTAwMG1zXCJdXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGNvbnRyb2xzOiB7XG4gICAgICAgICAgICBuYW1lOiBcImNvbnRyb2xzXCIsXG4gICAgICAgICAgICBpY29uOiBcImNvbnRyb2xzXCIsXG4gICAgICAgICAgICB0b29sdGlwOiBcIkNvbnRyb2xzXCIsXG4gICAgICAgICAgICB0eXBlOiBcIm9iamVjdFwiLFxuICAgICAgICAgICAgcHJvcGVydGllczoge1xuICAgICAgICAgICAgICBpc0FjdGl2ZToge1xuICAgICAgICAgICAgICAgIHR5cGU6IFwiYm9vbGVhblwiLFxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IHtcbiAgICAgICAgICAgICAgICAgIHR5cGU6IFwic2V0dGluZy10b2dnbGVcIlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgYXJyb3dzSW1nVXJsOiB7XG4gICAgICAgICAgICAgICAgdHlwZTogW1wic3RyaW5nXCIsIFwibnVsbFwiXSxcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiB7XG4gICAgICAgICAgICAgICAgICB0eXBlOiBcInNldHRpbmdzLWltYWdlLWlucHV0XCJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIG9mZnNldDoge1xuICAgICAgICAgICAgICAgIHR5cGU6IFwib2JqZWN0XCIsXG4gICAgICAgICAgICAgICAgZGlzcGxheToge1xuICAgICAgICAgICAgICAgICAgdHlwZTogXCJvZmZzZXQtY29udHJvbHNcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgcHJvcGVydGllczoge1xuICAgICAgICAgICAgICAgICAgeDoge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm51bWJlclwiXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgeToge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm51bWJlclwiXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBzY2FsZToge1xuICAgICAgICAgICAgICAgIHR5cGU6IFwibnVtYmVyXCIsXG4gICAgICAgICAgICAgICAgbmFtZTogXCJzY2FsZVwiLFxuICAgICAgICAgICAgICAgIG1pbjogNTAsXG4gICAgICAgICAgICAgICAgbWF4OiA2MDAsXG4gICAgICAgICAgICAgICAgZGlzcGxheToge1xuICAgICAgICAgICAgICAgICAgdHlwZTogXCJyYW5nZS1jb250cm9sXCJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGNvbG9yOiB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJjb2xvclwiLFxuICAgICAgICAgICAgICAgIHR5cGU6IFwic3RyaW5nXCIsXG4gICAgICAgICAgICAgICAgZGlzcGxheToge1xuICAgICAgICAgICAgICAgICAgdHlwZTogXCJzZXR0aW5ncy1jb2xvci1waWNrZXJcIixcbiAgICAgICAgICAgICAgICAgIGZvcm1hdDogXCJzaW5nbGVcIlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgaG92ZXI6IHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcImhvdmVyXCIsXG4gICAgICAgICAgICAgICAgdHlwZTogXCJzdHJpbmdcIixcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiB7XG4gICAgICAgICAgICAgICAgICB0eXBlOiBcInNldHRpbmdzLWNvbG9yLXBpY2tlclwiLFxuICAgICAgICAgICAgICAgICAgZm9ybWF0OiBcInNpbmdsZVwiXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBwYWdpbmF0aW9uOiB7XG4gICAgICAgICAgICBuYW1lOiBcIm5hdlwiLFxuICAgICAgICAgICAgaWNvbjogXCJwYWdpbmF0aW9uXCIsXG4gICAgICAgICAgICB0b29sdGlwOiBcIk5hdmlnYXRpb25cIixcbiAgICAgICAgICAgIHR5cGU6IFwib2JqZWN0XCIsXG4gICAgICAgICAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICAgICAgICAgIGlzQWN0aXZlOiB7XG4gICAgICAgICAgICAgICAgdHlwZTogXCJib29sZWFuXCIsXG4gICAgICAgICAgICAgICAgZGlzcGxheToge1xuICAgICAgICAgICAgICAgICAgdHlwZTogXCJzZXR0aW5nLXRvZ2dsZVwiXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBwb3NpdGlvbjoge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwibmF2IHBvc2l0aW9uXCIsXG4gICAgICAgICAgICAgICAgZGlzcGxheToge1xuICAgICAgICAgICAgICAgICAgdHlwZTogXCJzb2NrZXRcIixcbiAgICAgICAgICAgICAgICAgIGRpcmVjdGlvbjogXCJob3Jpem9udGFsXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHR5cGU6IFwic3RyaW5nXCIsXG4gICAgICAgICAgICAgICAgZW51bTogW1wib3V0c2lkZS0xXCIsIFwib3V0c2lkZS0yXCIsIFwiaW5zaWRlLTFcIiwgXCJpbnNpZGUtMlwiXVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBvZmZzZXQ6IHtcbiAgICAgICAgICAgICAgICB0eXBlOiBcIm9iamVjdFwiLFxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IHtcbiAgICAgICAgICAgICAgICAgIHR5cGU6IFwib2Zmc2V0LWNvbnRyb2xzXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHByb3BlcnRpZXM6IHtcbiAgICAgICAgICAgICAgICAgIHg6IHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJudW1iZXJcIlxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIHk6IHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJudW1iZXJcIlxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgc2NhbGU6IHtcbiAgICAgICAgICAgICAgICB0eXBlOiBcIm51bWJlclwiLFxuICAgICAgICAgICAgICAgIG5hbWU6IFwic2NhbGVcIixcbiAgICAgICAgICAgICAgICBtaW46IDEwLFxuICAgICAgICAgICAgICAgIG1heDogNDAwLFxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IHtcbiAgICAgICAgICAgICAgICAgIHR5cGU6IFwicmFuZ2UtY29udHJvbFwiXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBjb2xvcnM6IHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiB7XG4gICAgICAgICAgICAgICAgICB0eXBlOiBcInNldHRpbmdzLWNvbG9yLXBpY2tlclwiLFxuICAgICAgICAgICAgICAgICAgZm9ybWF0OiBcIm11bHRpcGxlXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG5hbWU6IFwiY29sb3JcIixcbiAgICAgICAgICAgICAgICB0eXBlOiBcImFycmF5XCIsXG4gICAgICAgICAgICAgICAgaXRlbXM6IHtcbiAgICAgICAgICAgICAgICAgIHR5cGU6IFwic3RyaW5nXCJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGhvdmVyOiB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJob3ZlclwiLFxuICAgICAgICAgICAgICAgIHR5cGU6IFwic3RyaW5nXCIsXG4gICAgICAgICAgICAgICAgZGlzcGxheToge1xuICAgICAgICAgICAgICAgICAgdHlwZTogXCJzZXR0aW5ncy1jb2xvci1waWNrZXJcIixcbiAgICAgICAgICAgICAgICAgIGZvcm1hdDogXCJzaW5nbGVcIlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2FwdGlvbjoge1xuICAgICAgICAgICAgbmFtZTogXCJDYXB0aW9uXCIsXG4gICAgICAgICAgICBpY29uOiBcInRleHQtaWNvblwiLFxuICAgICAgICAgICAgdG9vbHRpcDogXCJDYXB0aW9uXCIsXG4gICAgICAgICAgICB0eXBlOiBcIm9iamVjdFwiLFxuICAgICAgICAgICAgcHJvcGVydGllczoge1xuICAgICAgICAgICAgICBpc0FjdGl2ZToge1xuICAgICAgICAgICAgICAgIHR5cGU6IFwiYm9vbGVhblwiLFxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IHtcbiAgICAgICAgICAgICAgICAgIHR5cGU6IFwic2V0dGluZy10b2dnbGVcIlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgYWxpZ25tZW50OiB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJBbGlnbm1lbnRcIixcbiAgICAgICAgICAgICAgICB0eXBlOiBcInN0cmluZ1wiLFxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IHtcbiAgICAgICAgICAgICAgICAgIHR5cGU6IFwiYWxpZ24tZ3JpZFwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBlbnVtOiBbXCJ0b3AtbGVmdFwiLCBcInRvcC1jZW50ZXJcIiwgXCJ0b3AtcmlnaHRcIiwgXCJtaWRkbGUtbGVmdFwiLCBcIm1pZGRsZS1jZW50ZXJcIiwgXCJtaWRkbGUtcmlnaHRcIiwgXCJib3R0b20tbGVmdFwiLCBcImJvdHRvbS1jZW50ZXJcIiwgXCJib3R0b20tcmlnaHRcIl1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgb2Zmc2V0OiB7XG4gICAgICAgICAgICAgICAgdHlwZTogXCJvYmplY3RcIixcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiB7XG4gICAgICAgICAgICAgICAgICB0eXBlOiBcIm9mZnNldC1jb250cm9sc1wiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICAgICAgICAgICAgICB4OiB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibnVtYmVyXCJcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICB5OiB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibnVtYmVyXCJcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGhvdmVyOiB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJob3ZlclwiLFxuICAgICAgICAgICAgICAgIHR5cGU6IFwic3RyaW5nXCIsXG4gICAgICAgICAgICAgICAgZGlzcGxheToge1xuICAgICAgICAgICAgICAgICAgdHlwZTogXCJzZXR0aW5ncy1jb2xvci1waWNrZXJcIixcbiAgICAgICAgICAgICAgICAgIGZvcm1hdDogXCJzaW5nbGVcIlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgZGVmYXVsdDoge1xuICAgICAgICAgIHRyaWdnZXJzOiB7XG4gICAgICAgICAgICB0cmlnZ2Vyc0xpc3Q6IHtcbiAgICAgICAgICAgICAgY2xpY2s6IGZhbHNlLFxuICAgICAgICAgICAgICBkcmFnOiB0cnVlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYXV0b1BsYXk6IG51bGxcbiAgICAgICAgICB9LFxuICAgICAgICAgIGNvbnRyb2xzOiB7XG4gICAgICAgICAgICBpc0FjdGl2ZTogdHJ1ZSxcbiAgICAgICAgICAgIGFycm93c0ltZ1VybDogbnVsbCxcbiAgICAgICAgICAgIG9mZnNldDoge1xuICAgICAgICAgICAgICB4OiAwLFxuICAgICAgICAgICAgICB5OiAwXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2NhbGU6IDEwMCxcbiAgICAgICAgICAgIGNvbG9yOiBcIiMwMDAwMDBcIixcbiAgICAgICAgICAgIGhvdmVyOiBcIiNjY2NjY2NcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAgdHJhbnNpdGlvbjoge1xuICAgICAgICAgICAgdHlwZTogXCJzbGlkZVwiLFxuICAgICAgICAgICAgZHVyYXRpb246IFwiNTAwbXNcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAgcGFnaW5hdGlvbjoge1xuICAgICAgICAgICAgaXNBY3RpdmU6IHRydWUsXG4gICAgICAgICAgICBzY2FsZTogNTAsXG4gICAgICAgICAgICBwb3NpdGlvbjogXCJvdXRzaWRlLTFcIixcbiAgICAgICAgICAgIG9mZnNldDoge1xuICAgICAgICAgICAgICB4OiAwLFxuICAgICAgICAgICAgICB5OiAwXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY29sb3JzOiBbXCIjY2NjY2NjXCIsIFwiI2NjY2NjY1wiLCBcIiMwMDAwMDBcIl0sXG4gICAgICAgICAgICBob3ZlcjogXCIjY2NjY2NjXCJcbiAgICAgICAgICB9LFxuICAgICAgICAgIGRpcmVjdGlvbjogXCJob3JpelwiLFxuICAgICAgICAgIGNhcHRpb246IHtcbiAgICAgICAgICAgIG9mZnNldDoge1xuICAgICAgICAgICAgICB4OiAwLFxuICAgICAgICAgICAgICB5OiAwXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaXNBY3RpdmU6IHRydWUsXG4gICAgICAgICAgICBhbGlnbm1lbnQ6IFwibWlkZGxlLWNlbnRlclwiLFxuICAgICAgICAgICAgaG92ZXI6IFwiI2NjY2NjY1wiXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBkaXNwbGF5UnVsZXM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBpZjoge1xuICAgICAgICAgICAgICBuYW1lOiBcImRpcmVjdGlvblwiLFxuICAgICAgICAgICAgICB2YWx1ZTogXCJ2ZXJ0XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB0aGVuOiB7XG4gICAgICAgICAgICAgIG5hbWU6IFwicHJvcGVydGllcy5wYWdpbmF0aW9uLnByb3BlcnRpZXMucG9zaXRpb24uZGlzcGxheS5kaXJlY3Rpb25cIixcbiAgICAgICAgICAgICAgdmFsdWU6IFwidmVydGljYWxcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgICAgfSxcbiAgICAgIGNvbnRlbnQ6IHtcbiAgICAgICAgbGF5b3V0QmFzZWQ6IGZhbHNlLFxuICAgICAgICB0eXBlOiBcImFycmF5XCIsXG4gICAgICAgIGl0ZW1zOiB7XG4gICAgICAgICAgdHlwZTogXCJvYmplY3RcIixcbiAgICAgICAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICAgICAgICBpbWFnZToge1xuICAgICAgICAgICAgICB0eXBlOiBcIm9iamVjdFwiLFxuICAgICAgICAgICAgICBkaXNwbGF5OiB7XG4gICAgICAgICAgICAgICAgdHlwZTogXCJtZWRpYS1pbnB1dFwiXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHByb3BlcnRpZXM6IHtcbiAgICAgICAgICAgICAgICB1cmw6IHtcbiAgICAgICAgICAgICAgICAgIHR5cGU6IFwic3RyaW5nXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgICAgICAgIHR5cGU6IFwic3RyaW5nXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG9iamVjdEZpdDoge1xuICAgICAgICAgICAgICAgICAgdHlwZTogXCJzdHJpbmdcIixcbiAgICAgICAgICAgICAgICAgIGVudW06IFtcImNvdmVyXCIsIFwiY29udGFpblwiXVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgcmVxdWlyZWQ6IFtcInVybFwiLCBcIm5hbWVcIl1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpbWFnZUNhcHRpb246IHtcbiAgICAgICAgICAgICAgZGlzcGxheToge1xuICAgICAgICAgICAgICAgIHR5cGU6IFwicmljaC10ZXh0XCIsXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwiQWRkIENhcHRpb24uLi5cIlxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbGluazoge1xuICAgICAgICAgICAgICB0eXBlOiBcIm9iamVjdFwiLFxuICAgICAgICAgICAgICBkaXNwbGF5OiB7XG4gICAgICAgICAgICAgICAgdHlwZTogXCJ0ZXh0LWlucHV0XCIsXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwiQWRkIENhcHRpb24uLi5cIlxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICAgICAgICAgICAgdGV4dDoge1xuICAgICAgICAgICAgICAgICAgdHlwZTogXCJzdHJpbmdcIlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgcmVxdWlyZWQ6IFtcImltYWdlXCJdXG4gICAgICAgIH0sXG4gICAgICAgIGRlZmF1bHQ6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBpbWFnZToge1xuICAgICAgICAgICAgICBvYmplY3RGaXQ6IFwiY292ZXJcIixcbiAgICAgICAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLmNudHJsLnNpdGUvcHJvamVjdHMvMDFHSjJTTVBQQ1E3SlNOR1ZYWjJESFdYV0YvYXJ0aWNsZXMtYXNzZXRzLzAxSlJaMTVUMjQ3MzkyNjIxRk5UVFJDVzlELmpwZWdcIixcbiAgICAgICAgICAgICAgbmFtZTogXCJTbGlkZXItMS5qcGVnXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpbWFnZUNhcHRpb246IFtcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHR5cGU6IFwicGFyYWdyYXBoXCIsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFt7IHRleHQ6IFwiXCIgfV1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgaW1hZ2U6IHtcbiAgICAgICAgICAgICAgb2JqZWN0Rml0OiBcImNvdmVyXCIsXG4gICAgICAgICAgICAgIHVybDogXCJodHRwczovL2Nkbi5jbnRybC5zaXRlL3Byb2plY3RzLzAxR0oyU01QUENRN0pTTkdWWFoyREhXWFdGL2FydGljbGVzLWFzc2V0cy8wMUpSWjE3UzhUUzlUNjJQN05LVE5ORUI2NC5qcGVnXCIsXG4gICAgICAgICAgICAgIG5hbWU6IFwiU2xpZGVyLTIuanBlZ1wiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaW1hZ2VDYXB0aW9uOiBbXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0eXBlOiBcInBhcmFncmFwaFwiLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbeyB0ZXh0OiBcIlwiIH1dXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGltYWdlOiB7XG4gICAgICAgICAgICAgIG9iamVjdEZpdDogXCJjb3ZlclwiLFxuICAgICAgICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4uY250cmwuc2l0ZS9wcm9qZWN0cy8wMUdKMlNNUFBDUTdKU05HVlhaMkRIV1hXRi9hcnRpY2xlcy1hc3NldHMvMDFKUloxOTdTODlSTlQ2UkE3WkpTWDNaMzguanBlZ1wiLFxuICAgICAgICAgICAgICBuYW1lOiBcIlNsaWRlci0zLmpwZWdcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGltYWdlQ2FwdGlvbjogW1xuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdHlwZTogXCJwYXJhZ3JhcGhcIixcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogW3sgdGV4dDogXCJcIiB9XVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdXG4gICAgICAgICAgfVxuICAgICAgICBdXG4gICAgICB9LFxuICAgICAgc3R5bGVzOiB7XG4gICAgICAgIGxheW91dEJhc2VkOiB0cnVlLFxuICAgICAgICB0eXBlOiBcIm9iamVjdFwiLFxuICAgICAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICAgICAgY2FwdGlvbjoge1xuICAgICAgICAgICAgZGF0YU5hbWU6IFwiY2FwdGlvblwiLFxuICAgICAgICAgICAgdHlwZTogXCJvYmplY3RcIixcbiAgICAgICAgICAgIHByb3BlcnRpZXM6IHtcbiAgICAgICAgICAgICAgZm9udFNldHRpbmdzOiB7XG4gICAgICAgICAgICAgICAgdHlwZTogXCJvYmplY3RcIixcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiB7XG4gICAgICAgICAgICAgICAgICB0eXBlOiBcImZvbnQtc2V0dGluZ3NcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgcHJvcGVydGllczoge1xuICAgICAgICAgICAgICAgICAgZm9udEZhbWlseToge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcInN0cmluZ1wiXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDoge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm51bWJlclwiXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgZm9udFN0eWxlOiB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwic3RyaW5nXCJcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHdpZHRoU2V0dGluZ3M6IHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiB7XG4gICAgICAgICAgICAgICAgICB0eXBlOiBcInRleHQtd2lkdGgtY29udHJvbFwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB0eXBlOiBcIm9iamVjdFwiLFxuICAgICAgICAgICAgICAgIHByb3BlcnRpZXM6IHtcbiAgICAgICAgICAgICAgICAgIHdpZHRoOiB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibnVtYmVyXCJcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBzaXppbmc6IHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJzdHJpbmdcIixcbiAgICAgICAgICAgICAgICAgICAgZW51bTogW1wiYXV0b1wiLCBcIm1hbnVhbFwiXVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgZm9udFNpemVMaW5lSGVpZ2h0OiB7XG4gICAgICAgICAgICAgICAgdHlwZTogXCJvYmplY3RcIixcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiB7XG4gICAgICAgICAgICAgICAgICB0eXBlOiBcImZvbnQtc2l6ZS1saW5lLWhlaWdodFwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICAgICAgICAgICAgICBmb250U2l6ZToge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm51bWJlclwiXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgbGluZUhlaWdodDoge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm51bWJlclwiXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBsZXR0ZXJTcGFjaW5nOiB7XG4gICAgICAgICAgICAgICAgZGlzcGxheToge1xuICAgICAgICAgICAgICAgICAgdHlwZTogXCJsZXR0ZXItc3BhY2luZy1pbnB1dFwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB0eXBlOiBcIm51bWJlclwiXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHdvcmRTcGFjaW5nOiB7XG4gICAgICAgICAgICAgICAgZGlzcGxheToge1xuICAgICAgICAgICAgICAgICAgdHlwZTogXCJ3b3JkLXNwYWNpbmctaW5wdXRcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgdHlwZTogXCJudW1iZXJcIlxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB0ZXh0QWxpZ246IHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiB7XG4gICAgICAgICAgICAgICAgICB0eXBlOiBcInRleHQtYWxpZ24tY29udHJvbFwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB0eXBlOiBcInN0cmluZ1wiLFxuICAgICAgICAgICAgICAgIGVudW06IFtcImxlZnRcIiwgXCJjZW50ZXJcIiwgXCJyaWdodFwiLCBcImp1c3RpZnlcIl1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgdGV4dEFwcGVhcmFuY2U6IHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiB7XG4gICAgICAgICAgICAgICAgICB0eXBlOiBcInRleHQtYXBwZWFyYW5jZVwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICAgICAgICAgICAgICB0ZXh0VHJhbnNmb3JtOiB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwic3RyaW5nXCIsXG4gICAgICAgICAgICAgICAgICAgIGVudW06IFtcIm5vbmVcIiwgXCJ1cHBlcmNhc2VcIiwgXCJsb3dlcmNhc2VcIiwgXCJjYXBpdGFsaXplXCJdXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgdGV4dERlY29yYXRpb246IHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJzdHJpbmdcIixcbiAgICAgICAgICAgICAgICAgICAgZW51bTogW1wibm9uZVwiLCBcInVuZGVybGluZVwiXVxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIGZvbnRWYXJpYW50OiB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwic3RyaW5nXCIsXG4gICAgICAgICAgICAgICAgICAgIGVudW06IFtcIm5vcm1hbFwiLCBcInNtYWxsLWNhcHNcIl1cbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGNvbG9yOiB7XG4gICAgICAgICAgICAgICAgZGlzcGxheToge1xuICAgICAgICAgICAgICAgICAgdHlwZTogXCJzdHlsZS1wYW5lbC1jb2xvci1waWNrZXJcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgdHlwZTogXCJzdHJpbmdcIlxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBkZWZhdWx0OiB7XG4gICAgICAgICAgY2FwdGlvbjoge1xuICAgICAgICAgICAgd2lkdGhTZXR0aW5nczoge1xuICAgICAgICAgICAgICB3aWR0aDogMC4xMyxcbiAgICAgICAgICAgICAgc2l6aW5nOiBcImF1dG9cIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZvbnRTZXR0aW5nczoge1xuICAgICAgICAgICAgICBmb250RmFtaWx5OiBcIkFyaWFsXCIsXG4gICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IDQwMCxcbiAgICAgICAgICAgICAgZm9udFN0eWxlOiBcIm5vcm1hbFwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZm9udFNpemVMaW5lSGVpZ2h0OiB7XG4gICAgICAgICAgICAgIGZvbnRTaXplOiAwLjAyLFxuICAgICAgICAgICAgICBsaW5lSGVpZ2h0OiAwLjAyXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbGV0dGVyU3BhY2luZzogMCxcbiAgICAgICAgICAgIHdvcmRTcGFjaW5nOiAwLFxuICAgICAgICAgICAgdGV4dEFsaWduOiBcImxlZnRcIixcbiAgICAgICAgICAgIHRleHRBcHBlYXJhbmNlOiB7XG4gICAgICAgICAgICAgIHRleHRUcmFuc2Zvcm06IFwibm9uZVwiLFxuICAgICAgICAgICAgICB0ZXh0RGVjb3JhdGlvbjogXCJub25lXCIsXG4gICAgICAgICAgICAgIGZvbnRWYXJpYW50OiBcIm5vcm1hbFwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY29sb3I6IFwiIzAwMDAwMFwiXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICByZXF1aXJlZDogW1wic2V0dGluZ3NcIiwgXCJjb250ZW50XCIsIFwic3R5bGVzXCJdXG4gIH1cbn07XG5jb25zdCBjb21wb25lbnRzID0gW1xuICBDb250cm9sU2xpZGVyQ29tcG9uZW50XG5dO1xuZXhwb3J0cy5BbmNob3JTaWRlID0gQW5jaG9yU2lkZTtcbmV4cG9ydHMuQXJlYUFuY2hvciA9IEFyZWFBbmNob3I7XG5leHBvcnRzLkFydGljbGVJdGVtVHlwZSA9IEFydGljbGVJdGVtVHlwZTtcbmV4cG9ydHMuQ250cmxDbGllbnQgPSBDbGllbnQ7XG5leHBvcnRzLkRpbWVuc2lvbk1vZGUgPSBEaW1lbnNpb25Nb2RlO1xuZXhwb3J0cy5Gb250RmFjZUdlbmVyYXRvciA9IEZvbnRGYWNlR2VuZXJhdG9yO1xuZXhwb3J0cy5LZXlmcmFtZVR5cGUgPSBLZXlmcmFtZVR5cGU7XG5leHBvcnRzLlBvc2l0aW9uVHlwZSA9IFBvc2l0aW9uVHlwZTtcbmV4cG9ydHMuU2Nyb2xsUGxheWJhY2tWaWRlb01hbmFnZXIgPSBTY3JvbGxQbGF5YmFja1ZpZGVvTWFuYWdlcjtcbmV4cG9ydHMuU2VjdGlvbkhlaWdodE1vZGUgPSBTZWN0aW9uSGVpZ2h0TW9kZTtcbmV4cG9ydHMuVGV4dEFsaWduID0gVGV4dEFsaWduO1xuZXhwb3J0cy5UZXh0RGVjb3JhdGlvbiA9IFRleHREZWNvcmF0aW9uO1xuZXhwb3J0cy5UZXh0VHJhbnNmb3JtID0gVGV4dFRyYW5zZm9ybTtcbmV4cG9ydHMuVmVydGljYWxBbGlnbiA9IFZlcnRpY2FsQWxpZ247XG5leHBvcnRzLmNvbXBvbmVudHMgPSBjb21wb25lbnRzO1xuZXhwb3J0cy5nZXRMYXlvdXRNZWRpYVF1ZXJ5ID0gZ2V0TGF5b3V0TWVkaWFRdWVyeTtcbmV4cG9ydHMuZ2V0TGF5b3V0U3R5bGVzID0gZ2V0TGF5b3V0U3R5bGVzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk/dist/index.js\n"));

/***/ }),

/***/ "./node_modules/@splidejs/react-splide/dist/js/react-splide.cjs.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@splidejs/react-splide/dist/js/react-splide.cjs.js ***!
  \*************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/js/index.ts\nvar js_exports = {};\n__export(js_exports, {\n  Splide: () => Splide2,\n  SplideSlide: () => SplideSlide,\n  SplideTrack: () => SplideTrack\n});\nmodule.exports = __toCommonJS(js_exports);\n\n// node_modules/@splidejs/splide/dist/js/splide.esm.js\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor)\n      descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps)\n    _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps)\n    _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", { writable: false });\n  return Constructor;\n}\nvar MEDIA_PREFERS_REDUCED_MOTION = \"(prefers-reduced-motion: reduce)\";\nvar CREATED = 1;\nvar MOUNTED = 2;\nvar IDLE = 3;\nvar MOVING = 4;\nvar SCROLLING = 5;\nvar DRAGGING = 6;\nvar DESTROYED = 7;\nvar STATES = {\n  CREATED,\n  MOUNTED,\n  IDLE,\n  MOVING,\n  SCROLLING,\n  DRAGGING,\n  DESTROYED\n};\nfunction empty(array) {\n  array.length = 0;\n}\nfunction slice(arrayLike, start, end) {\n  return Array.prototype.slice.call(arrayLike, start, end);\n}\nfunction apply(func) {\n  return func.bind.apply(func, [null].concat(slice(arguments, 1)));\n}\nvar nextTick = setTimeout;\nvar noop = function noop2() {\n};\nfunction raf(func) {\n  return requestAnimationFrame(func);\n}\nfunction typeOf(type, subject) {\n  return typeof subject === type;\n}\nfunction isObject(subject) {\n  return !isNull(subject) && typeOf(\"object\", subject);\n}\nvar isArray = Array.isArray;\nvar isFunction = apply(typeOf, \"function\");\nvar isString = apply(typeOf, \"string\");\nvar isUndefined = apply(typeOf, \"undefined\");\nfunction isNull(subject) {\n  return subject === null;\n}\nfunction isHTMLElement(subject) {\n  try {\n    return subject instanceof (subject.ownerDocument.defaultView || window).HTMLElement;\n  } catch (e) {\n    return false;\n  }\n}\nfunction toArray(value) {\n  return isArray(value) ? value : [value];\n}\nfunction forEach(values, iteratee) {\n  toArray(values).forEach(iteratee);\n}\nfunction includes(array, value) {\n  return array.indexOf(value) > -1;\n}\nfunction push(array, items) {\n  array.push.apply(array, toArray(items));\n  return array;\n}\nfunction toggleClass(elm, classes, add) {\n  if (elm) {\n    forEach(classes, function(name) {\n      if (name) {\n        elm.classList[add ? \"add\" : \"remove\"](name);\n      }\n    });\n  }\n}\nfunction addClass(elm, classes) {\n  toggleClass(elm, isString(classes) ? classes.split(\" \") : classes, true);\n}\nfunction append(parent, children2) {\n  forEach(children2, parent.appendChild.bind(parent));\n}\nfunction before(nodes, ref) {\n  forEach(nodes, function(node) {\n    var parent = (ref || node).parentNode;\n    if (parent) {\n      parent.insertBefore(node, ref);\n    }\n  });\n}\nfunction matches(elm, selector) {\n  return isHTMLElement(elm) && (elm[\"msMatchesSelector\"] || elm.matches).call(elm, selector);\n}\nfunction children(parent, selector) {\n  var children2 = parent ? slice(parent.children) : [];\n  return selector ? children2.filter(function(child2) {\n    return matches(child2, selector);\n  }) : children2;\n}\nfunction child(parent, selector) {\n  return selector ? children(parent, selector)[0] : parent.firstElementChild;\n}\nvar ownKeys = Object.keys;\nfunction forOwn(object, iteratee, right) {\n  if (object) {\n    (right ? ownKeys(object).reverse() : ownKeys(object)).forEach(function(key) {\n      key !== \"__proto__\" && iteratee(object[key], key);\n    });\n  }\n  return object;\n}\nfunction assign(object) {\n  slice(arguments, 1).forEach(function(source) {\n    forOwn(source, function(value, key) {\n      object[key] = source[key];\n    });\n  });\n  return object;\n}\nfunction merge(object) {\n  slice(arguments, 1).forEach(function(source) {\n    forOwn(source, function(value, key) {\n      if (isArray(value)) {\n        object[key] = value.slice();\n      } else if (isObject(value)) {\n        object[key] = merge({}, isObject(object[key]) ? object[key] : {}, value);\n      } else {\n        object[key] = value;\n      }\n    });\n  });\n  return object;\n}\nfunction omit(object, keys) {\n  forEach(keys || ownKeys(object), function(key) {\n    delete object[key];\n  });\n}\nfunction removeAttribute(elms, attrs) {\n  forEach(elms, function(elm) {\n    forEach(attrs, function(attr) {\n      elm && elm.removeAttribute(attr);\n    });\n  });\n}\nfunction setAttribute(elms, attrs, value) {\n  if (isObject(attrs)) {\n    forOwn(attrs, function(value2, name) {\n      setAttribute(elms, name, value2);\n    });\n  } else {\n    forEach(elms, function(elm) {\n      isNull(value) || value === \"\" ? removeAttribute(elm, attrs) : elm.setAttribute(attrs, String(value));\n    });\n  }\n}\nfunction create(tag, attrs, parent) {\n  var elm = document.createElement(tag);\n  if (attrs) {\n    isString(attrs) ? addClass(elm, attrs) : setAttribute(elm, attrs);\n  }\n  parent && append(parent, elm);\n  return elm;\n}\nfunction style(elm, prop, value) {\n  if (isUndefined(value)) {\n    return getComputedStyle(elm)[prop];\n  }\n  if (!isNull(value)) {\n    elm.style[prop] = \"\" + value;\n  }\n}\nfunction display(elm, display2) {\n  style(elm, \"display\", display2);\n}\nfunction focus(elm) {\n  elm[\"setActive\"] && elm[\"setActive\"]() || elm.focus({\n    preventScroll: true\n  });\n}\nfunction getAttribute(elm, attr) {\n  return elm.getAttribute(attr);\n}\nfunction hasClass(elm, className) {\n  return elm && elm.classList.contains(className);\n}\nfunction rect(target) {\n  return target.getBoundingClientRect();\n}\nfunction remove(nodes) {\n  forEach(nodes, function(node) {\n    if (node && node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n  });\n}\nfunction parseHtml(html) {\n  return child(new DOMParser().parseFromString(html, \"text/html\").body);\n}\nfunction prevent(e, stopPropagation) {\n  e.preventDefault();\n  if (stopPropagation) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n  }\n}\nfunction query(parent, selector) {\n  return parent && parent.querySelector(selector);\n}\nfunction queryAll(parent, selector) {\n  return selector ? slice(parent.querySelectorAll(selector)) : [];\n}\nfunction removeClass(elm, classes) {\n  toggleClass(elm, classes, false);\n}\nfunction timeOf(e) {\n  return e.timeStamp;\n}\nfunction unit(value) {\n  return isString(value) ? value : value ? value + \"px\" : \"\";\n}\nvar PROJECT_CODE = \"splide\";\nvar DATA_ATTRIBUTE = \"data-\" + PROJECT_CODE;\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(\"[\" + PROJECT_CODE + \"] \" + (message || \"\"));\n  }\n}\nvar min = Math.min;\nvar max = Math.max;\nvar floor = Math.floor;\nvar ceil = Math.ceil;\nvar abs = Math.abs;\nfunction approximatelyEqual(x, y, epsilon) {\n  return abs(x - y) < epsilon;\n}\nfunction between(number, x, y, exclusive) {\n  var minimum = min(x, y);\n  var maximum = max(x, y);\n  return exclusive ? minimum < number && number < maximum : minimum <= number && number <= maximum;\n}\nfunction clamp(number, x, y) {\n  var minimum = min(x, y);\n  var maximum = max(x, y);\n  return min(max(minimum, number), maximum);\n}\nfunction sign(x) {\n  return +(x > 0) - +(x < 0);\n}\nfunction format(string, replacements) {\n  forEach(replacements, function(replacement) {\n    string = string.replace(\"%s\", \"\" + replacement);\n  });\n  return string;\n}\nfunction pad(number) {\n  return number < 10 ? \"0\" + number : \"\" + number;\n}\nvar ids = {};\nfunction uniqueId(prefix) {\n  return \"\" + prefix + pad(ids[prefix] = (ids[prefix] || 0) + 1);\n}\nfunction EventBinder() {\n  var listeners = [];\n  function bind(targets, events, callback, options) {\n    forEachEvent(targets, events, function(target, event, namespace) {\n      var isEventTarget = \"addEventListener\" in target;\n      var remover = isEventTarget ? target.removeEventListener.bind(target, event, callback, options) : target[\"removeListener\"].bind(target, callback);\n      isEventTarget ? target.addEventListener(event, callback, options) : target[\"addListener\"](callback);\n      listeners.push([target, event, namespace, callback, remover]);\n    });\n  }\n  function unbind(targets, events, callback) {\n    forEachEvent(targets, events, function(target, event, namespace) {\n      listeners = listeners.filter(function(listener) {\n        if (listener[0] === target && listener[1] === event && listener[2] === namespace && (!callback || listener[3] === callback)) {\n          listener[4]();\n          return false;\n        }\n        return true;\n      });\n    });\n  }\n  function dispatch(target, type, detail) {\n    var e;\n    var bubbles = true;\n    if (typeof CustomEvent === \"function\") {\n      e = new CustomEvent(type, {\n        bubbles,\n        detail\n      });\n    } else {\n      e = document.createEvent(\"CustomEvent\");\n      e.initCustomEvent(type, bubbles, false, detail);\n    }\n    target.dispatchEvent(e);\n    return e;\n  }\n  function forEachEvent(targets, events, iteratee) {\n    forEach(targets, function(target) {\n      target && forEach(events, function(events2) {\n        events2.split(\" \").forEach(function(eventNS) {\n          var fragment = eventNS.split(\".\");\n          iteratee(target, fragment[0], fragment[1]);\n        });\n      });\n    });\n  }\n  function destroy() {\n    listeners.forEach(function(data) {\n      data[4]();\n    });\n    empty(listeners);\n  }\n  return {\n    bind,\n    unbind,\n    dispatch,\n    destroy\n  };\n}\nvar EVENT_MOUNTED = \"mounted\";\nvar EVENT_READY = \"ready\";\nvar EVENT_MOVE = \"move\";\nvar EVENT_MOVED = \"moved\";\nvar EVENT_CLICK = \"click\";\nvar EVENT_ACTIVE = \"active\";\nvar EVENT_INACTIVE = \"inactive\";\nvar EVENT_VISIBLE = \"visible\";\nvar EVENT_HIDDEN = \"hidden\";\nvar EVENT_REFRESH = \"refresh\";\nvar EVENT_UPDATED = \"updated\";\nvar EVENT_RESIZE = \"resize\";\nvar EVENT_RESIZED = \"resized\";\nvar EVENT_DRAG = \"drag\";\nvar EVENT_DRAGGING = \"dragging\";\nvar EVENT_DRAGGED = \"dragged\";\nvar EVENT_SCROLL = \"scroll\";\nvar EVENT_SCROLLED = \"scrolled\";\nvar EVENT_OVERFLOW = \"overflow\";\nvar EVENT_DESTROY = \"destroy\";\nvar EVENT_ARROWS_MOUNTED = \"arrows:mounted\";\nvar EVENT_ARROWS_UPDATED = \"arrows:updated\";\nvar EVENT_PAGINATION_MOUNTED = \"pagination:mounted\";\nvar EVENT_PAGINATION_UPDATED = \"pagination:updated\";\nvar EVENT_NAVIGATION_MOUNTED = \"navigation:mounted\";\nvar EVENT_AUTOPLAY_PLAY = \"autoplay:play\";\nvar EVENT_AUTOPLAY_PLAYING = \"autoplay:playing\";\nvar EVENT_AUTOPLAY_PAUSE = \"autoplay:pause\";\nvar EVENT_LAZYLOAD_LOADED = \"lazyload:loaded\";\nvar EVENT_SLIDE_KEYDOWN = \"sk\";\nvar EVENT_SHIFTED = \"sh\";\nvar EVENT_END_INDEX_CHANGED = \"ei\";\nfunction EventInterface(Splide22) {\n  var bus = Splide22 ? Splide22.event.bus : document.createDocumentFragment();\n  var binder = EventBinder();\n  function on(events, callback) {\n    binder.bind(bus, toArray(events).join(\" \"), function(e) {\n      callback.apply(callback, isArray(e.detail) ? e.detail : []);\n    });\n  }\n  function emit(event) {\n    binder.dispatch(bus, event, slice(arguments, 1));\n  }\n  if (Splide22) {\n    Splide22.event.on(EVENT_DESTROY, binder.destroy);\n  }\n  return assign(binder, {\n    bus,\n    on,\n    off: apply(binder.unbind, bus),\n    emit\n  });\n}\nfunction RequestInterval(interval, onInterval, onUpdate, limit) {\n  var now = Date.now;\n  var startTime;\n  var rate = 0;\n  var id;\n  var paused = true;\n  var count = 0;\n  function update() {\n    if (!paused) {\n      rate = interval ? min((now() - startTime) / interval, 1) : 1;\n      onUpdate && onUpdate(rate);\n      if (rate >= 1) {\n        onInterval();\n        startTime = now();\n        if (limit && ++count >= limit) {\n          return pause();\n        }\n      }\n      id = raf(update);\n    }\n  }\n  function start(resume) {\n    resume || cancel();\n    startTime = now() - (resume ? rate * interval : 0);\n    paused = false;\n    id = raf(update);\n  }\n  function pause() {\n    paused = true;\n  }\n  function rewind() {\n    startTime = now();\n    rate = 0;\n    if (onUpdate) {\n      onUpdate(rate);\n    }\n  }\n  function cancel() {\n    id && cancelAnimationFrame(id);\n    rate = 0;\n    id = 0;\n    paused = true;\n  }\n  function set(time) {\n    interval = time;\n  }\n  function isPaused() {\n    return paused;\n  }\n  return {\n    start,\n    rewind,\n    pause,\n    cancel,\n    set,\n    isPaused\n  };\n}\nfunction State(initialState) {\n  var state = initialState;\n  function set(value) {\n    state = value;\n  }\n  function is(states) {\n    return includes(toArray(states), state);\n  }\n  return {\n    set,\n    is\n  };\n}\nfunction Throttle(func, duration) {\n  var interval = RequestInterval(duration || 0, func, null, 1);\n  return function() {\n    interval.isPaused() && interval.start();\n  };\n}\nfunction Media(Splide22, Components2, options) {\n  var state = Splide22.state;\n  var breakpoints = options.breakpoints || {};\n  var reducedMotion = options.reducedMotion || {};\n  var binder = EventBinder();\n  var queries = [];\n  function setup() {\n    var isMin = options.mediaQuery === \"min\";\n    ownKeys(breakpoints).sort(function(n, m) {\n      return isMin ? +n - +m : +m - +n;\n    }).forEach(function(key) {\n      register(breakpoints[key], \"(\" + (isMin ? \"min\" : \"max\") + \"-width:\" + key + \"px)\");\n    });\n    register(reducedMotion, MEDIA_PREFERS_REDUCED_MOTION);\n    update();\n  }\n  function destroy(completely) {\n    if (completely) {\n      binder.destroy();\n    }\n  }\n  function register(options2, query2) {\n    var queryList = matchMedia(query2);\n    binder.bind(queryList, \"change\", update);\n    queries.push([options2, queryList]);\n  }\n  function update() {\n    var destroyed = state.is(DESTROYED);\n    var direction = options.direction;\n    var merged = queries.reduce(function(merged2, entry) {\n      return merge(merged2, entry[1].matches ? entry[0] : {});\n    }, {});\n    omit(options);\n    set(merged);\n    if (options.destroy) {\n      Splide22.destroy(options.destroy === \"completely\");\n    } else if (destroyed) {\n      destroy(true);\n      Splide22.mount();\n    } else {\n      direction !== options.direction && Splide22.refresh();\n    }\n  }\n  function reduce(enable) {\n    if (matchMedia(MEDIA_PREFERS_REDUCED_MOTION).matches) {\n      enable ? merge(options, reducedMotion) : omit(options, ownKeys(reducedMotion));\n    }\n  }\n  function set(opts, base, notify) {\n    merge(options, opts);\n    base && merge(Object.getPrototypeOf(options), opts);\n    if (notify || !state.is(CREATED)) {\n      Splide22.emit(EVENT_UPDATED, options);\n    }\n  }\n  return {\n    setup,\n    destroy,\n    reduce,\n    set\n  };\n}\nvar ARROW = \"Arrow\";\nvar ARROW_LEFT = ARROW + \"Left\";\nvar ARROW_RIGHT = ARROW + \"Right\";\nvar ARROW_UP = ARROW + \"Up\";\nvar ARROW_DOWN = ARROW + \"Down\";\nvar RTL = \"rtl\";\nvar TTB = \"ttb\";\nvar ORIENTATION_MAP = {\n  width: [\"height\"],\n  left: [\"top\", \"right\"],\n  right: [\"bottom\", \"left\"],\n  x: [\"y\"],\n  X: [\"Y\"],\n  Y: [\"X\"],\n  ArrowLeft: [ARROW_UP, ARROW_RIGHT],\n  ArrowRight: [ARROW_DOWN, ARROW_LEFT]\n};\nfunction Direction(Splide22, Components2, options) {\n  function resolve(prop, axisOnly, direction) {\n    direction = direction || options.direction;\n    var index = direction === RTL && !axisOnly ? 1 : direction === TTB ? 0 : -1;\n    return ORIENTATION_MAP[prop] && ORIENTATION_MAP[prop][index] || prop.replace(/width|left|right/i, function(match, offset) {\n      var replacement = ORIENTATION_MAP[match.toLowerCase()][index] || match;\n      return offset > 0 ? replacement.charAt(0).toUpperCase() + replacement.slice(1) : replacement;\n    });\n  }\n  function orient(value) {\n    return value * (options.direction === RTL ? 1 : -1);\n  }\n  return {\n    resolve,\n    orient\n  };\n}\nvar ROLE = \"role\";\nvar TAB_INDEX = \"tabindex\";\nvar DISABLED = \"disabled\";\nvar ARIA_PREFIX = \"aria-\";\nvar ARIA_CONTROLS = ARIA_PREFIX + \"controls\";\nvar ARIA_CURRENT = ARIA_PREFIX + \"current\";\nvar ARIA_SELECTED = ARIA_PREFIX + \"selected\";\nvar ARIA_LABEL = ARIA_PREFIX + \"label\";\nvar ARIA_LABELLEDBY = ARIA_PREFIX + \"labelledby\";\nvar ARIA_HIDDEN = ARIA_PREFIX + \"hidden\";\nvar ARIA_ORIENTATION = ARIA_PREFIX + \"orientation\";\nvar ARIA_ROLEDESCRIPTION = ARIA_PREFIX + \"roledescription\";\nvar ARIA_LIVE = ARIA_PREFIX + \"live\";\nvar ARIA_BUSY = ARIA_PREFIX + \"busy\";\nvar ARIA_ATOMIC = ARIA_PREFIX + \"atomic\";\nvar ALL_ATTRIBUTES = [ROLE, TAB_INDEX, DISABLED, ARIA_CONTROLS, ARIA_CURRENT, ARIA_LABEL, ARIA_LABELLEDBY, ARIA_HIDDEN, ARIA_ORIENTATION, ARIA_ROLEDESCRIPTION];\nvar CLASS_PREFIX = PROJECT_CODE + \"__\";\nvar STATUS_CLASS_PREFIX = \"is-\";\nvar CLASS_ROOT = PROJECT_CODE;\nvar CLASS_TRACK = CLASS_PREFIX + \"track\";\nvar CLASS_LIST = CLASS_PREFIX + \"list\";\nvar CLASS_SLIDE = CLASS_PREFIX + \"slide\";\nvar CLASS_CLONE = CLASS_SLIDE + \"--clone\";\nvar CLASS_CONTAINER = CLASS_SLIDE + \"__container\";\nvar CLASS_ARROWS = CLASS_PREFIX + \"arrows\";\nvar CLASS_ARROW = CLASS_PREFIX + \"arrow\";\nvar CLASS_ARROW_PREV = CLASS_ARROW + \"--prev\";\nvar CLASS_ARROW_NEXT = CLASS_ARROW + \"--next\";\nvar CLASS_PAGINATION = CLASS_PREFIX + \"pagination\";\nvar CLASS_PAGINATION_PAGE = CLASS_PAGINATION + \"__page\";\nvar CLASS_PROGRESS = CLASS_PREFIX + \"progress\";\nvar CLASS_PROGRESS_BAR = CLASS_PROGRESS + \"__bar\";\nvar CLASS_TOGGLE = CLASS_PREFIX + \"toggle\";\nvar CLASS_TOGGLE_PLAY = CLASS_TOGGLE + \"__play\";\nvar CLASS_TOGGLE_PAUSE = CLASS_TOGGLE + \"__pause\";\nvar CLASS_SPINNER = CLASS_PREFIX + \"spinner\";\nvar CLASS_SR = CLASS_PREFIX + \"sr\";\nvar CLASS_INITIALIZED = STATUS_CLASS_PREFIX + \"initialized\";\nvar CLASS_ACTIVE = STATUS_CLASS_PREFIX + \"active\";\nvar CLASS_PREV = STATUS_CLASS_PREFIX + \"prev\";\nvar CLASS_NEXT = STATUS_CLASS_PREFIX + \"next\";\nvar CLASS_VISIBLE = STATUS_CLASS_PREFIX + \"visible\";\nvar CLASS_LOADING = STATUS_CLASS_PREFIX + \"loading\";\nvar CLASS_FOCUS_IN = STATUS_CLASS_PREFIX + \"focus-in\";\nvar CLASS_OVERFLOW = STATUS_CLASS_PREFIX + \"overflow\";\nvar STATUS_CLASSES = [CLASS_ACTIVE, CLASS_VISIBLE, CLASS_PREV, CLASS_NEXT, CLASS_LOADING, CLASS_FOCUS_IN, CLASS_OVERFLOW];\nvar CLASSES = {\n  slide: CLASS_SLIDE,\n  clone: CLASS_CLONE,\n  arrows: CLASS_ARROWS,\n  arrow: CLASS_ARROW,\n  prev: CLASS_ARROW_PREV,\n  next: CLASS_ARROW_NEXT,\n  pagination: CLASS_PAGINATION,\n  page: CLASS_PAGINATION_PAGE,\n  spinner: CLASS_SPINNER\n};\nfunction closest(from, selector) {\n  if (isFunction(from.closest)) {\n    return from.closest(selector);\n  }\n  var elm = from;\n  while (elm && elm.nodeType === 1) {\n    if (matches(elm, selector)) {\n      break;\n    }\n    elm = elm.parentElement;\n  }\n  return elm;\n}\nvar FRICTION = 5;\nvar LOG_INTERVAL = 200;\nvar POINTER_DOWN_EVENTS = \"touchstart mousedown\";\nvar POINTER_MOVE_EVENTS = \"touchmove mousemove\";\nvar POINTER_UP_EVENTS = \"touchend touchcancel mouseup click\";\nfunction Elements(Splide22, Components2, options) {\n  var _EventInterface = EventInterface(Splide22), on = _EventInterface.on, bind = _EventInterface.bind;\n  var root = Splide22.root;\n  var i18n = options.i18n;\n  var elements = {};\n  var slides = [];\n  var rootClasses = [];\n  var trackClasses = [];\n  var track;\n  var list;\n  var isUsingKey;\n  function setup() {\n    collect();\n    init();\n    update();\n  }\n  function mount() {\n    on(EVENT_REFRESH, destroy);\n    on(EVENT_REFRESH, setup);\n    on(EVENT_UPDATED, update);\n    bind(document, POINTER_DOWN_EVENTS + \" keydown\", function(e) {\n      isUsingKey = e.type === \"keydown\";\n    }, {\n      capture: true\n    });\n    bind(root, \"focusin\", function() {\n      toggleClass(root, CLASS_FOCUS_IN, !!isUsingKey);\n    });\n  }\n  function destroy(completely) {\n    var attrs = ALL_ATTRIBUTES.concat(\"style\");\n    empty(slides);\n    removeClass(root, rootClasses);\n    removeClass(track, trackClasses);\n    removeAttribute([track, list], attrs);\n    removeAttribute(root, completely ? attrs : [\"style\", ARIA_ROLEDESCRIPTION]);\n  }\n  function update() {\n    removeClass(root, rootClasses);\n    removeClass(track, trackClasses);\n    rootClasses = getClasses(CLASS_ROOT);\n    trackClasses = getClasses(CLASS_TRACK);\n    addClass(root, rootClasses);\n    addClass(track, trackClasses);\n    setAttribute(root, ARIA_LABEL, options.label);\n    setAttribute(root, ARIA_LABELLEDBY, options.labelledby);\n  }\n  function collect() {\n    track = find(\".\" + CLASS_TRACK);\n    list = child(track, \".\" + CLASS_LIST);\n    assert(track && list, \"A track/list element is missing.\");\n    push(slides, children(list, \".\" + CLASS_SLIDE + \":not(.\" + CLASS_CLONE + \")\"));\n    forOwn({\n      arrows: CLASS_ARROWS,\n      pagination: CLASS_PAGINATION,\n      prev: CLASS_ARROW_PREV,\n      next: CLASS_ARROW_NEXT,\n      bar: CLASS_PROGRESS_BAR,\n      toggle: CLASS_TOGGLE\n    }, function(className, key) {\n      elements[key] = find(\".\" + className);\n    });\n    assign(elements, {\n      root,\n      track,\n      list,\n      slides\n    });\n  }\n  function init() {\n    var id = root.id || uniqueId(PROJECT_CODE);\n    var role = options.role;\n    root.id = id;\n    track.id = track.id || id + \"-track\";\n    list.id = list.id || id + \"-list\";\n    if (!getAttribute(root, ROLE) && root.tagName !== \"SECTION\" && role) {\n      setAttribute(root, ROLE, role);\n    }\n    setAttribute(root, ARIA_ROLEDESCRIPTION, i18n.carousel);\n    setAttribute(list, ROLE, \"presentation\");\n  }\n  function find(selector) {\n    var elm = query(root, selector);\n    return elm && closest(elm, \".\" + CLASS_ROOT) === root ? elm : void 0;\n  }\n  function getClasses(base) {\n    return [base + \"--\" + options.type, base + \"--\" + options.direction, options.drag && base + \"--draggable\", options.isNavigation && base + \"--nav\", base === CLASS_ROOT && CLASS_ACTIVE];\n  }\n  return assign(elements, {\n    setup,\n    mount,\n    destroy\n  });\n}\nvar SLIDE = \"slide\";\nvar LOOP = \"loop\";\nvar FADE = \"fade\";\nfunction Slide$1(Splide22, index, slideIndex, slide) {\n  var event = EventInterface(Splide22);\n  var on = event.on, emit = event.emit, bind = event.bind;\n  var Components = Splide22.Components, root = Splide22.root, options = Splide22.options;\n  var isNavigation = options.isNavigation, updateOnMove = options.updateOnMove, i18n = options.i18n, pagination = options.pagination, slideFocus = options.slideFocus;\n  var resolve = Components.Direction.resolve;\n  var styles = getAttribute(slide, \"style\");\n  var label = getAttribute(slide, ARIA_LABEL);\n  var isClone = slideIndex > -1;\n  var container = child(slide, \".\" + CLASS_CONTAINER);\n  var destroyed;\n  function mount() {\n    if (!isClone) {\n      slide.id = root.id + \"-slide\" + pad(index + 1);\n      setAttribute(slide, ROLE, pagination ? \"tabpanel\" : \"group\");\n      setAttribute(slide, ARIA_ROLEDESCRIPTION, i18n.slide);\n      setAttribute(slide, ARIA_LABEL, label || format(i18n.slideLabel, [index + 1, Splide22.length]));\n    }\n    listen();\n  }\n  function listen() {\n    bind(slide, \"click\", apply(emit, EVENT_CLICK, self));\n    bind(slide, \"keydown\", apply(emit, EVENT_SLIDE_KEYDOWN, self));\n    on([EVENT_MOVED, EVENT_SHIFTED, EVENT_SCROLLED], update);\n    on(EVENT_NAVIGATION_MOUNTED, initNavigation);\n    if (updateOnMove) {\n      on(EVENT_MOVE, onMove);\n    }\n  }\n  function destroy() {\n    destroyed = true;\n    event.destroy();\n    removeClass(slide, STATUS_CLASSES);\n    removeAttribute(slide, ALL_ATTRIBUTES);\n    setAttribute(slide, \"style\", styles);\n    setAttribute(slide, ARIA_LABEL, label || \"\");\n  }\n  function initNavigation() {\n    var controls = Splide22.splides.map(function(target) {\n      var Slide2 = target.splide.Components.Slides.getAt(index);\n      return Slide2 ? Slide2.slide.id : \"\";\n    }).join(\" \");\n    setAttribute(slide, ARIA_LABEL, format(i18n.slideX, (isClone ? slideIndex : index) + 1));\n    setAttribute(slide, ARIA_CONTROLS, controls);\n    setAttribute(slide, ROLE, slideFocus ? \"button\" : \"\");\n    slideFocus && removeAttribute(slide, ARIA_ROLEDESCRIPTION);\n  }\n  function onMove() {\n    if (!destroyed) {\n      update();\n    }\n  }\n  function update() {\n    if (!destroyed) {\n      var curr = Splide22.index;\n      updateActivity();\n      updateVisibility();\n      toggleClass(slide, CLASS_PREV, index === curr - 1);\n      toggleClass(slide, CLASS_NEXT, index === curr + 1);\n    }\n  }\n  function updateActivity() {\n    var active = isActive();\n    if (active !== hasClass(slide, CLASS_ACTIVE)) {\n      toggleClass(slide, CLASS_ACTIVE, active);\n      setAttribute(slide, ARIA_CURRENT, isNavigation && active || \"\");\n      emit(active ? EVENT_ACTIVE : EVENT_INACTIVE, self);\n    }\n  }\n  function updateVisibility() {\n    var visible = isVisible();\n    var hidden = !visible && (!isActive() || isClone);\n    if (!Splide22.state.is([MOVING, SCROLLING])) {\n      setAttribute(slide, ARIA_HIDDEN, hidden || \"\");\n    }\n    setAttribute(queryAll(slide, options.focusableNodes || \"\"), TAB_INDEX, hidden ? -1 : \"\");\n    if (slideFocus) {\n      setAttribute(slide, TAB_INDEX, hidden ? -1 : 0);\n    }\n    if (visible !== hasClass(slide, CLASS_VISIBLE)) {\n      toggleClass(slide, CLASS_VISIBLE, visible);\n      emit(visible ? EVENT_VISIBLE : EVENT_HIDDEN, self);\n    }\n    if (!visible && document.activeElement === slide) {\n      var Slide2 = Components.Slides.getAt(Splide22.index);\n      Slide2 && focus(Slide2.slide);\n    }\n  }\n  function style$1(prop, value, useContainer) {\n    style(useContainer && container || slide, prop, value);\n  }\n  function isActive() {\n    var curr = Splide22.index;\n    return curr === index || options.cloneStatus && curr === slideIndex;\n  }\n  function isVisible() {\n    if (Splide22.is(FADE)) {\n      return isActive();\n    }\n    var trackRect = rect(Components.Elements.track);\n    var slideRect = rect(slide);\n    var left = resolve(\"left\", true);\n    var right = resolve(\"right\", true);\n    return floor(trackRect[left]) <= ceil(slideRect[left]) && floor(slideRect[right]) <= ceil(trackRect[right]);\n  }\n  function isWithin(from, distance) {\n    var diff = abs(from - index);\n    if (!isClone && (options.rewind || Splide22.is(LOOP))) {\n      diff = min(diff, Splide22.length - diff);\n    }\n    return diff <= distance;\n  }\n  var self = {\n    index,\n    slideIndex,\n    slide,\n    container,\n    isClone,\n    mount,\n    destroy,\n    update,\n    style: style$1,\n    isWithin\n  };\n  return self;\n}\nfunction Slides(Splide22, Components2, options) {\n  var _EventInterface2 = EventInterface(Splide22), on = _EventInterface2.on, emit = _EventInterface2.emit, bind = _EventInterface2.bind;\n  var _Components2$Elements = Components2.Elements, slides = _Components2$Elements.slides, list = _Components2$Elements.list;\n  var Slides2 = [];\n  function mount() {\n    init();\n    on(EVENT_REFRESH, destroy);\n    on(EVENT_REFRESH, init);\n  }\n  function init() {\n    slides.forEach(function(slide, index) {\n      register(slide, index, -1);\n    });\n  }\n  function destroy() {\n    forEach$1(function(Slide2) {\n      Slide2.destroy();\n    });\n    empty(Slides2);\n  }\n  function update() {\n    forEach$1(function(Slide2) {\n      Slide2.update();\n    });\n  }\n  function register(slide, index, slideIndex) {\n    var object = Slide$1(Splide22, index, slideIndex, slide);\n    object.mount();\n    Slides2.push(object);\n    Slides2.sort(function(Slide1, Slide2) {\n      return Slide1.index - Slide2.index;\n    });\n  }\n  function get(excludeClones) {\n    return excludeClones ? filter(function(Slide2) {\n      return !Slide2.isClone;\n    }) : Slides2;\n  }\n  function getIn(page) {\n    var Controller2 = Components2.Controller;\n    var index = Controller2.toIndex(page);\n    var max2 = Controller2.hasFocus() ? 1 : options.perPage;\n    return filter(function(Slide2) {\n      return between(Slide2.index, index, index + max2 - 1);\n    });\n  }\n  function getAt(index) {\n    return filter(index)[0];\n  }\n  function add(items, index) {\n    forEach(items, function(slide) {\n      if (isString(slide)) {\n        slide = parseHtml(slide);\n      }\n      if (isHTMLElement(slide)) {\n        var ref = slides[index];\n        ref ? before(slide, ref) : append(list, slide);\n        addClass(slide, options.classes.slide);\n        observeImages(slide, apply(emit, EVENT_RESIZE));\n      }\n    });\n    emit(EVENT_REFRESH);\n  }\n  function remove$1(matcher) {\n    remove(filter(matcher).map(function(Slide2) {\n      return Slide2.slide;\n    }));\n    emit(EVENT_REFRESH);\n  }\n  function forEach$1(iteratee, excludeClones) {\n    get(excludeClones).forEach(iteratee);\n  }\n  function filter(matcher) {\n    return Slides2.filter(isFunction(matcher) ? matcher : function(Slide2) {\n      return isString(matcher) ? matches(Slide2.slide, matcher) : includes(toArray(matcher), Slide2.index);\n    });\n  }\n  function style2(prop, value, useContainer) {\n    forEach$1(function(Slide2) {\n      Slide2.style(prop, value, useContainer);\n    });\n  }\n  function observeImages(elm, callback) {\n    var images = queryAll(elm, \"img\");\n    var length = images.length;\n    if (length) {\n      images.forEach(function(img) {\n        bind(img, \"load error\", function() {\n          if (!--length) {\n            callback();\n          }\n        });\n      });\n    } else {\n      callback();\n    }\n  }\n  function getLength(excludeClones) {\n    return excludeClones ? slides.length : Slides2.length;\n  }\n  function isEnough() {\n    return Slides2.length > options.perPage;\n  }\n  return {\n    mount,\n    destroy,\n    update,\n    register,\n    get,\n    getIn,\n    getAt,\n    add,\n    remove: remove$1,\n    forEach: forEach$1,\n    filter,\n    style: style2,\n    getLength,\n    isEnough\n  };\n}\nfunction Layout(Splide22, Components2, options) {\n  var _EventInterface3 = EventInterface(Splide22), on = _EventInterface3.on, bind = _EventInterface3.bind, emit = _EventInterface3.emit;\n  var Slides2 = Components2.Slides;\n  var resolve = Components2.Direction.resolve;\n  var _Components2$Elements2 = Components2.Elements, root = _Components2$Elements2.root, track = _Components2$Elements2.track, list = _Components2$Elements2.list;\n  var getAt = Slides2.getAt, styleSlides = Slides2.style;\n  var vertical;\n  var rootRect;\n  var overflow;\n  function mount() {\n    init();\n    bind(window, \"resize load\", Throttle(apply(emit, EVENT_RESIZE)));\n    on([EVENT_UPDATED, EVENT_REFRESH], init);\n    on(EVENT_RESIZE, resize);\n  }\n  function init() {\n    vertical = options.direction === TTB;\n    style(root, \"maxWidth\", unit(options.width));\n    style(track, resolve(\"paddingLeft\"), cssPadding(false));\n    style(track, resolve(\"paddingRight\"), cssPadding(true));\n    resize(true);\n  }\n  function resize(force) {\n    var newRect = rect(root);\n    if (force || rootRect.width !== newRect.width || rootRect.height !== newRect.height) {\n      style(track, \"height\", cssTrackHeight());\n      styleSlides(resolve(\"marginRight\"), unit(options.gap));\n      styleSlides(\"width\", cssSlideWidth());\n      styleSlides(\"height\", cssSlideHeight(), true);\n      rootRect = newRect;\n      emit(EVENT_RESIZED);\n      if (overflow !== (overflow = isOverflow())) {\n        toggleClass(root, CLASS_OVERFLOW, overflow);\n        emit(EVENT_OVERFLOW, overflow);\n      }\n    }\n  }\n  function cssPadding(right) {\n    var padding = options.padding;\n    var prop = resolve(right ? \"right\" : \"left\");\n    return padding && unit(padding[prop] || (isObject(padding) ? 0 : padding)) || \"0px\";\n  }\n  function cssTrackHeight() {\n    var height = \"\";\n    if (vertical) {\n      height = cssHeight();\n      assert(height, \"height or heightRatio is missing.\");\n      height = \"calc(\" + height + \" - \" + cssPadding(false) + \" - \" + cssPadding(true) + \")\";\n    }\n    return height;\n  }\n  function cssHeight() {\n    return unit(options.height || rect(list).width * options.heightRatio);\n  }\n  function cssSlideWidth() {\n    return options.autoWidth ? null : unit(options.fixedWidth) || (vertical ? \"\" : cssSlideSize());\n  }\n  function cssSlideHeight() {\n    return unit(options.fixedHeight) || (vertical ? options.autoHeight ? null : cssSlideSize() : cssHeight());\n  }\n  function cssSlideSize() {\n    var gap = unit(options.gap);\n    return \"calc((100%\" + (gap && \" + \" + gap) + \")/\" + (options.perPage || 1) + (gap && \" - \" + gap) + \")\";\n  }\n  function listSize() {\n    return rect(list)[resolve(\"width\")];\n  }\n  function slideSize(index, withoutGap) {\n    var Slide2 = getAt(index || 0);\n    return Slide2 ? rect(Slide2.slide)[resolve(\"width\")] + (withoutGap ? 0 : getGap()) : 0;\n  }\n  function totalSize(index, withoutGap) {\n    var Slide2 = getAt(index);\n    if (Slide2) {\n      var right = rect(Slide2.slide)[resolve(\"right\")];\n      var left = rect(list)[resolve(\"left\")];\n      return abs(right - left) + (withoutGap ? 0 : getGap());\n    }\n    return 0;\n  }\n  function sliderSize(withoutGap) {\n    return totalSize(Splide22.length - 1) - totalSize(0) + slideSize(0, withoutGap);\n  }\n  function getGap() {\n    var Slide2 = getAt(0);\n    return Slide2 && parseFloat(style(Slide2.slide, resolve(\"marginRight\"))) || 0;\n  }\n  function getPadding(right) {\n    return parseFloat(style(track, resolve(\"padding\" + (right ? \"Right\" : \"Left\")))) || 0;\n  }\n  function isOverflow() {\n    return Splide22.is(FADE) || sliderSize(true) > listSize();\n  }\n  return {\n    mount,\n    resize,\n    listSize,\n    slideSize,\n    sliderSize,\n    totalSize,\n    getPadding,\n    isOverflow\n  };\n}\nvar MULTIPLIER = 2;\nfunction Clones(Splide22, Components2, options) {\n  var event = EventInterface(Splide22);\n  var on = event.on;\n  var Elements2 = Components2.Elements, Slides2 = Components2.Slides;\n  var resolve = Components2.Direction.resolve;\n  var clones = [];\n  var cloneCount;\n  function mount() {\n    on(EVENT_REFRESH, remount);\n    on([EVENT_UPDATED, EVENT_RESIZE], observe);\n    if (cloneCount = computeCloneCount()) {\n      generate(cloneCount);\n      Components2.Layout.resize(true);\n    }\n  }\n  function remount() {\n    destroy();\n    mount();\n  }\n  function destroy() {\n    remove(clones);\n    empty(clones);\n    event.destroy();\n  }\n  function observe() {\n    var count = computeCloneCount();\n    if (cloneCount !== count) {\n      if (cloneCount < count || !count) {\n        event.emit(EVENT_REFRESH);\n      }\n    }\n  }\n  function generate(count) {\n    var slides = Slides2.get().slice();\n    var length = slides.length;\n    if (length) {\n      while (slides.length < count) {\n        push(slides, slides);\n      }\n      push(slides.slice(-count), slides.slice(0, count)).forEach(function(Slide2, index) {\n        var isHead = index < count;\n        var clone = cloneDeep(Slide2.slide, index);\n        isHead ? before(clone, slides[0].slide) : append(Elements2.list, clone);\n        push(clones, clone);\n        Slides2.register(clone, index - count + (isHead ? 0 : length), Slide2.index);\n      });\n    }\n  }\n  function cloneDeep(elm, index) {\n    var clone = elm.cloneNode(true);\n    addClass(clone, options.classes.clone);\n    clone.id = Splide22.root.id + \"-clone\" + pad(index + 1);\n    return clone;\n  }\n  function computeCloneCount() {\n    var clones2 = options.clones;\n    if (!Splide22.is(LOOP)) {\n      clones2 = 0;\n    } else if (isUndefined(clones2)) {\n      var fixedSize = options[resolve(\"fixedWidth\")] && Components2.Layout.slideSize(0);\n      var fixedCount = fixedSize && ceil(rect(Elements2.track)[resolve(\"width\")] / fixedSize);\n      clones2 = fixedCount || options[resolve(\"autoWidth\")] && Splide22.length || options.perPage * MULTIPLIER;\n    }\n    return clones2;\n  }\n  return {\n    mount,\n    destroy\n  };\n}\nfunction Move(Splide22, Components2, options) {\n  var _EventInterface4 = EventInterface(Splide22), on = _EventInterface4.on, emit = _EventInterface4.emit;\n  var set = Splide22.state.set;\n  var _Components2$Layout = Components2.Layout, slideSize = _Components2$Layout.slideSize, getPadding = _Components2$Layout.getPadding, totalSize = _Components2$Layout.totalSize, listSize = _Components2$Layout.listSize, sliderSize = _Components2$Layout.sliderSize;\n  var _Components2$Directio = Components2.Direction, resolve = _Components2$Directio.resolve, orient = _Components2$Directio.orient;\n  var _Components2$Elements3 = Components2.Elements, list = _Components2$Elements3.list, track = _Components2$Elements3.track;\n  var Transition;\n  function mount() {\n    Transition = Components2.Transition;\n    on([EVENT_MOUNTED, EVENT_RESIZED, EVENT_UPDATED, EVENT_REFRESH], reposition);\n  }\n  function reposition() {\n    if (!Components2.Controller.isBusy()) {\n      Components2.Scroll.cancel();\n      jump(Splide22.index);\n      Components2.Slides.update();\n    }\n  }\n  function move(dest, index, prev, callback) {\n    if (dest !== index && canShift(dest > prev)) {\n      cancel();\n      translate(shift(getPosition(), dest > prev), true);\n    }\n    set(MOVING);\n    emit(EVENT_MOVE, index, prev, dest);\n    Transition.start(index, function() {\n      set(IDLE);\n      emit(EVENT_MOVED, index, prev, dest);\n      callback && callback();\n    });\n  }\n  function jump(index) {\n    translate(toPosition(index, true));\n  }\n  function translate(position, preventLoop) {\n    if (!Splide22.is(FADE)) {\n      var destination = preventLoop ? position : loop(position);\n      style(list, \"transform\", \"translate\" + resolve(\"X\") + \"(\" + destination + \"px)\");\n      position !== destination && emit(EVENT_SHIFTED);\n    }\n  }\n  function loop(position) {\n    if (Splide22.is(LOOP)) {\n      var index = toIndex(position);\n      var exceededMax = index > Components2.Controller.getEnd();\n      var exceededMin = index < 0;\n      if (exceededMin || exceededMax) {\n        position = shift(position, exceededMax);\n      }\n    }\n    return position;\n  }\n  function shift(position, backwards) {\n    var excess = position - getLimit(backwards);\n    var size = sliderSize();\n    position -= orient(size * (ceil(abs(excess) / size) || 1)) * (backwards ? 1 : -1);\n    return position;\n  }\n  function cancel() {\n    translate(getPosition(), true);\n    Transition.cancel();\n  }\n  function toIndex(position) {\n    var Slides2 = Components2.Slides.get();\n    var index = 0;\n    var minDistance = Infinity;\n    for (var i = 0; i < Slides2.length; i++) {\n      var slideIndex = Slides2[i].index;\n      var distance = abs(toPosition(slideIndex, true) - position);\n      if (distance <= minDistance) {\n        minDistance = distance;\n        index = slideIndex;\n      } else {\n        break;\n      }\n    }\n    return index;\n  }\n  function toPosition(index, trimming) {\n    var position = orient(totalSize(index - 1) - offset(index));\n    return trimming ? trim(position) : position;\n  }\n  function getPosition() {\n    var left = resolve(\"left\");\n    return rect(list)[left] - rect(track)[left] + orient(getPadding(false));\n  }\n  function trim(position) {\n    if (options.trimSpace && Splide22.is(SLIDE)) {\n      position = clamp(position, 0, orient(sliderSize(true) - listSize()));\n    }\n    return position;\n  }\n  function offset(index) {\n    var focus2 = options.focus;\n    return focus2 === \"center\" ? (listSize() - slideSize(index, true)) / 2 : +focus2 * slideSize(index) || 0;\n  }\n  function getLimit(max2) {\n    return toPosition(max2 ? Components2.Controller.getEnd() : 0, !!options.trimSpace);\n  }\n  function canShift(backwards) {\n    var shifted = orient(shift(getPosition(), backwards));\n    return backwards ? shifted >= 0 : shifted <= list[resolve(\"scrollWidth\")] - rect(track)[resolve(\"width\")];\n  }\n  function exceededLimit(max2, position) {\n    position = isUndefined(position) ? getPosition() : position;\n    var exceededMin = max2 !== true && orient(position) < orient(getLimit(false));\n    var exceededMax = max2 !== false && orient(position) > orient(getLimit(true));\n    return exceededMin || exceededMax;\n  }\n  return {\n    mount,\n    move,\n    jump,\n    translate,\n    shift,\n    cancel,\n    toIndex,\n    toPosition,\n    getPosition,\n    getLimit,\n    exceededLimit,\n    reposition\n  };\n}\nfunction Controller(Splide22, Components2, options) {\n  var _EventInterface5 = EventInterface(Splide22), on = _EventInterface5.on, emit = _EventInterface5.emit;\n  var Move2 = Components2.Move;\n  var getPosition = Move2.getPosition, getLimit = Move2.getLimit, toPosition = Move2.toPosition;\n  var _Components2$Slides = Components2.Slides, isEnough = _Components2$Slides.isEnough, getLength = _Components2$Slides.getLength;\n  var omitEnd = options.omitEnd;\n  var isLoop = Splide22.is(LOOP);\n  var isSlide = Splide22.is(SLIDE);\n  var getNext = apply(getAdjacent, false);\n  var getPrev = apply(getAdjacent, true);\n  var currIndex = options.start || 0;\n  var endIndex;\n  var prevIndex = currIndex;\n  var slideCount;\n  var perMove;\n  var perPage;\n  function mount() {\n    init();\n    on([EVENT_UPDATED, EVENT_REFRESH, EVENT_END_INDEX_CHANGED], init);\n    on(EVENT_RESIZED, onResized);\n  }\n  function init() {\n    slideCount = getLength(true);\n    perMove = options.perMove;\n    perPage = options.perPage;\n    endIndex = getEnd();\n    var index = clamp(currIndex, 0, omitEnd ? endIndex : slideCount - 1);\n    if (index !== currIndex) {\n      currIndex = index;\n      Move2.reposition();\n    }\n  }\n  function onResized() {\n    if (endIndex !== getEnd()) {\n      emit(EVENT_END_INDEX_CHANGED);\n    }\n  }\n  function go(control, allowSameIndex, callback) {\n    if (!isBusy()) {\n      var dest = parse(control);\n      var index = loop(dest);\n      if (index > -1 && (allowSameIndex || index !== currIndex)) {\n        setIndex(index);\n        Move2.move(dest, index, prevIndex, callback);\n      }\n    }\n  }\n  function scroll(destination, duration, snap, callback) {\n    Components2.Scroll.scroll(destination, duration, snap, function() {\n      var index = loop(Move2.toIndex(getPosition()));\n      setIndex(omitEnd ? min(index, endIndex) : index);\n      callback && callback();\n    });\n  }\n  function parse(control) {\n    var index = currIndex;\n    if (isString(control)) {\n      var _ref = control.match(/([+\\-<>])(\\d+)?/) || [], indicator = _ref[1], number = _ref[2];\n      if (indicator === \"+\" || indicator === \"-\") {\n        index = computeDestIndex(currIndex + +(\"\" + indicator + (+number || 1)), currIndex);\n      } else if (indicator === \">\") {\n        index = number ? toIndex(+number) : getNext(true);\n      } else if (indicator === \"<\") {\n        index = getPrev(true);\n      }\n    } else {\n      index = isLoop ? control : clamp(control, 0, endIndex);\n    }\n    return index;\n  }\n  function getAdjacent(prev, destination) {\n    var number = perMove || (hasFocus() ? 1 : perPage);\n    var dest = computeDestIndex(currIndex + number * (prev ? -1 : 1), currIndex, !(perMove || hasFocus()));\n    if (dest === -1 && isSlide) {\n      if (!approximatelyEqual(getPosition(), getLimit(!prev), 1)) {\n        return prev ? 0 : endIndex;\n      }\n    }\n    return destination ? dest : loop(dest);\n  }\n  function computeDestIndex(dest, from, snapPage) {\n    if (isEnough() || hasFocus()) {\n      var index = computeMovableDestIndex(dest);\n      if (index !== dest) {\n        from = dest;\n        dest = index;\n        snapPage = false;\n      }\n      if (dest < 0 || dest > endIndex) {\n        if (!perMove && (between(0, dest, from, true) || between(endIndex, from, dest, true))) {\n          dest = toIndex(toPage(dest));\n        } else {\n          if (isLoop) {\n            dest = snapPage ? dest < 0 ? -(slideCount % perPage || perPage) : slideCount : dest;\n          } else if (options.rewind) {\n            dest = dest < 0 ? endIndex : 0;\n          } else {\n            dest = -1;\n          }\n        }\n      } else {\n        if (snapPage && dest !== from) {\n          dest = toIndex(toPage(from) + (dest < from ? -1 : 1));\n        }\n      }\n    } else {\n      dest = -1;\n    }\n    return dest;\n  }\n  function computeMovableDestIndex(dest) {\n    if (isSlide && options.trimSpace === \"move\" && dest !== currIndex) {\n      var position = getPosition();\n      while (position === toPosition(dest, true) && between(dest, 0, Splide22.length - 1, !options.rewind)) {\n        dest < currIndex ? --dest : ++dest;\n      }\n    }\n    return dest;\n  }\n  function loop(index) {\n    return isLoop ? (index + slideCount) % slideCount || 0 : index;\n  }\n  function getEnd() {\n    var end = slideCount - (hasFocus() || isLoop && perMove ? 1 : perPage);\n    while (omitEnd && end-- > 0) {\n      if (toPosition(slideCount - 1, true) !== toPosition(end, true)) {\n        end++;\n        break;\n      }\n    }\n    return clamp(end, 0, slideCount - 1);\n  }\n  function toIndex(page) {\n    return clamp(hasFocus() ? page : perPage * page, 0, endIndex);\n  }\n  function toPage(index) {\n    return hasFocus() ? min(index, endIndex) : floor((index >= endIndex ? slideCount - 1 : index) / perPage);\n  }\n  function toDest(destination) {\n    var closest2 = Move2.toIndex(destination);\n    return isSlide ? clamp(closest2, 0, endIndex) : closest2;\n  }\n  function setIndex(index) {\n    if (index !== currIndex) {\n      prevIndex = currIndex;\n      currIndex = index;\n    }\n  }\n  function getIndex(prev) {\n    return prev ? prevIndex : currIndex;\n  }\n  function hasFocus() {\n    return !isUndefined(options.focus) || options.isNavigation;\n  }\n  function isBusy() {\n    return Splide22.state.is([MOVING, SCROLLING]) && !!options.waitForTransition;\n  }\n  return {\n    mount,\n    go,\n    scroll,\n    getNext,\n    getPrev,\n    getAdjacent,\n    getEnd,\n    setIndex,\n    getIndex,\n    toIndex,\n    toPage,\n    toDest,\n    hasFocus,\n    isBusy\n  };\n}\nvar XML_NAME_SPACE = \"http://www.w3.org/2000/svg\";\nvar PATH = \"m15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z\";\nvar SIZE = 40;\nfunction Arrows(Splide22, Components2, options) {\n  var event = EventInterface(Splide22);\n  var on = event.on, bind = event.bind, emit = event.emit;\n  var classes = options.classes, i18n = options.i18n;\n  var Elements2 = Components2.Elements, Controller2 = Components2.Controller;\n  var placeholder = Elements2.arrows, track = Elements2.track;\n  var wrapper = placeholder;\n  var prev = Elements2.prev;\n  var next = Elements2.next;\n  var created;\n  var wrapperClasses;\n  var arrows = {};\n  function mount() {\n    init();\n    on(EVENT_UPDATED, remount);\n  }\n  function remount() {\n    destroy();\n    mount();\n  }\n  function init() {\n    var enabled = options.arrows;\n    if (enabled && !(prev && next)) {\n      createArrows();\n    }\n    if (prev && next) {\n      assign(arrows, {\n        prev,\n        next\n      });\n      display(wrapper, enabled ? \"\" : \"none\");\n      addClass(wrapper, wrapperClasses = CLASS_ARROWS + \"--\" + options.direction);\n      if (enabled) {\n        listen();\n        update();\n        setAttribute([prev, next], ARIA_CONTROLS, track.id);\n        emit(EVENT_ARROWS_MOUNTED, prev, next);\n      }\n    }\n  }\n  function destroy() {\n    event.destroy();\n    removeClass(wrapper, wrapperClasses);\n    if (created) {\n      remove(placeholder ? [prev, next] : wrapper);\n      prev = next = null;\n    } else {\n      removeAttribute([prev, next], ALL_ATTRIBUTES);\n    }\n  }\n  function listen() {\n    on([EVENT_MOUNTED, EVENT_MOVED, EVENT_REFRESH, EVENT_SCROLLED, EVENT_END_INDEX_CHANGED], update);\n    bind(next, \"click\", apply(go, \">\"));\n    bind(prev, \"click\", apply(go, \"<\"));\n  }\n  function go(control) {\n    Controller2.go(control, true);\n  }\n  function createArrows() {\n    wrapper = placeholder || create(\"div\", classes.arrows);\n    prev = createArrow(true);\n    next = createArrow(false);\n    created = true;\n    append(wrapper, [prev, next]);\n    !placeholder && before(wrapper, track);\n  }\n  function createArrow(prev2) {\n    var arrow = '<button class=\"' + classes.arrow + \" \" + (prev2 ? classes.prev : classes.next) + '\" type=\"button\"><svg xmlns=\"' + XML_NAME_SPACE + '\" viewBox=\"0 0 ' + SIZE + \" \" + SIZE + '\" width=\"' + SIZE + '\" height=\"' + SIZE + '\" focusable=\"false\"><path d=\"' + (options.arrowPath || PATH) + '\" />';\n    return parseHtml(arrow);\n  }\n  function update() {\n    if (prev && next) {\n      var index = Splide22.index;\n      var prevIndex = Controller2.getPrev();\n      var nextIndex = Controller2.getNext();\n      var prevLabel = prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\n      var nextLabel = nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\n      prev.disabled = prevIndex < 0;\n      next.disabled = nextIndex < 0;\n      setAttribute(prev, ARIA_LABEL, prevLabel);\n      setAttribute(next, ARIA_LABEL, nextLabel);\n      emit(EVENT_ARROWS_UPDATED, prev, next, prevIndex, nextIndex);\n    }\n  }\n  return {\n    arrows,\n    mount,\n    destroy,\n    update\n  };\n}\nvar INTERVAL_DATA_ATTRIBUTE = DATA_ATTRIBUTE + \"-interval\";\nfunction Autoplay(Splide22, Components2, options) {\n  var _EventInterface6 = EventInterface(Splide22), on = _EventInterface6.on, bind = _EventInterface6.bind, emit = _EventInterface6.emit;\n  var interval = RequestInterval(options.interval, Splide22.go.bind(Splide22, \">\"), onAnimationFrame);\n  var isPaused = interval.isPaused;\n  var Elements2 = Components2.Elements, _Components2$Elements4 = Components2.Elements, root = _Components2$Elements4.root, toggle = _Components2$Elements4.toggle;\n  var autoplay = options.autoplay;\n  var hovered;\n  var focused;\n  var stopped = autoplay === \"pause\";\n  function mount() {\n    if (autoplay) {\n      listen();\n      toggle && setAttribute(toggle, ARIA_CONTROLS, Elements2.track.id);\n      stopped || play();\n      update();\n    }\n  }\n  function listen() {\n    if (options.pauseOnHover) {\n      bind(root, \"mouseenter mouseleave\", function(e) {\n        hovered = e.type === \"mouseenter\";\n        autoToggle();\n      });\n    }\n    if (options.pauseOnFocus) {\n      bind(root, \"focusin focusout\", function(e) {\n        focused = e.type === \"focusin\";\n        autoToggle();\n      });\n    }\n    if (toggle) {\n      bind(toggle, \"click\", function() {\n        stopped ? play() : pause(true);\n      });\n    }\n    on([EVENT_MOVE, EVENT_SCROLL, EVENT_REFRESH], interval.rewind);\n    on(EVENT_MOVE, onMove);\n  }\n  function play() {\n    if (isPaused() && Components2.Slides.isEnough()) {\n      interval.start(!options.resetProgress);\n      focused = hovered = stopped = false;\n      update();\n      emit(EVENT_AUTOPLAY_PLAY);\n    }\n  }\n  function pause(stop) {\n    if (stop === void 0) {\n      stop = true;\n    }\n    stopped = !!stop;\n    update();\n    if (!isPaused()) {\n      interval.pause();\n      emit(EVENT_AUTOPLAY_PAUSE);\n    }\n  }\n  function autoToggle() {\n    if (!stopped) {\n      hovered || focused ? pause(false) : play();\n    }\n  }\n  function update() {\n    if (toggle) {\n      toggleClass(toggle, CLASS_ACTIVE, !stopped);\n      setAttribute(toggle, ARIA_LABEL, options.i18n[stopped ? \"play\" : \"pause\"]);\n    }\n  }\n  function onAnimationFrame(rate) {\n    var bar = Elements2.bar;\n    bar && style(bar, \"width\", rate * 100 + \"%\");\n    emit(EVENT_AUTOPLAY_PLAYING, rate);\n  }\n  function onMove(index) {\n    var Slide2 = Components2.Slides.getAt(index);\n    interval.set(Slide2 && +getAttribute(Slide2.slide, INTERVAL_DATA_ATTRIBUTE) || options.interval);\n  }\n  return {\n    mount,\n    destroy: interval.cancel,\n    play,\n    pause,\n    isPaused\n  };\n}\nfunction Cover(Splide22, Components2, options) {\n  var _EventInterface7 = EventInterface(Splide22), on = _EventInterface7.on;\n  function mount() {\n    if (options.cover) {\n      on(EVENT_LAZYLOAD_LOADED, apply(toggle, true));\n      on([EVENT_MOUNTED, EVENT_UPDATED, EVENT_REFRESH], apply(cover, true));\n    }\n  }\n  function cover(cover2) {\n    Components2.Slides.forEach(function(Slide2) {\n      var img = child(Slide2.container || Slide2.slide, \"img\");\n      if (img && img.src) {\n        toggle(cover2, img, Slide2);\n      }\n    });\n  }\n  function toggle(cover2, img, Slide2) {\n    Slide2.style(\"background\", cover2 ? 'center/cover no-repeat url(\"' + img.src + '\")' : \"\", true);\n    display(img, cover2 ? \"none\" : \"\");\n  }\n  return {\n    mount,\n    destroy: apply(cover, false)\n  };\n}\nvar BOUNCE_DIFF_THRESHOLD = 10;\nvar BOUNCE_DURATION = 600;\nvar FRICTION_FACTOR = 0.6;\nvar BASE_VELOCITY = 1.5;\nvar MIN_DURATION = 800;\nfunction Scroll(Splide22, Components2, options) {\n  var _EventInterface8 = EventInterface(Splide22), on = _EventInterface8.on, emit = _EventInterface8.emit;\n  var set = Splide22.state.set;\n  var Move2 = Components2.Move;\n  var getPosition = Move2.getPosition, getLimit = Move2.getLimit, exceededLimit = Move2.exceededLimit, translate = Move2.translate;\n  var isSlide = Splide22.is(SLIDE);\n  var interval;\n  var callback;\n  var friction = 1;\n  function mount() {\n    on(EVENT_MOVE, clear);\n    on([EVENT_UPDATED, EVENT_REFRESH], cancel);\n  }\n  function scroll(destination, duration, snap, onScrolled, noConstrain) {\n    var from = getPosition();\n    clear();\n    if (snap && (!isSlide || !exceededLimit())) {\n      var size = Components2.Layout.sliderSize();\n      var offset = sign(destination) * size * floor(abs(destination) / size) || 0;\n      destination = Move2.toPosition(Components2.Controller.toDest(destination % size)) + offset;\n    }\n    var noDistance = approximatelyEqual(from, destination, 1);\n    friction = 1;\n    duration = noDistance ? 0 : duration || max(abs(destination - from) / BASE_VELOCITY, MIN_DURATION);\n    callback = onScrolled;\n    interval = RequestInterval(duration, onEnd, apply(update, from, destination, noConstrain), 1);\n    set(SCROLLING);\n    emit(EVENT_SCROLL);\n    interval.start();\n  }\n  function onEnd() {\n    set(IDLE);\n    callback && callback();\n    emit(EVENT_SCROLLED);\n  }\n  function update(from, to, noConstrain, rate) {\n    var position = getPosition();\n    var target = from + (to - from) * easing(rate);\n    var diff = (target - position) * friction;\n    translate(position + diff);\n    if (isSlide && !noConstrain && exceededLimit()) {\n      friction *= FRICTION_FACTOR;\n      if (abs(diff) < BOUNCE_DIFF_THRESHOLD) {\n        scroll(getLimit(exceededLimit(true)), BOUNCE_DURATION, false, callback, true);\n      }\n    }\n  }\n  function clear() {\n    if (interval) {\n      interval.cancel();\n    }\n  }\n  function cancel() {\n    if (interval && !interval.isPaused()) {\n      clear();\n      onEnd();\n    }\n  }\n  function easing(t) {\n    var easingFunc = options.easingFunc;\n    return easingFunc ? easingFunc(t) : 1 - Math.pow(1 - t, 4);\n  }\n  return {\n    mount,\n    destroy: clear,\n    scroll,\n    cancel\n  };\n}\nvar SCROLL_LISTENER_OPTIONS = {\n  passive: false,\n  capture: true\n};\nfunction Drag(Splide22, Components2, options) {\n  var _EventInterface9 = EventInterface(Splide22), on = _EventInterface9.on, emit = _EventInterface9.emit, bind = _EventInterface9.bind, unbind = _EventInterface9.unbind;\n  var state = Splide22.state;\n  var Move2 = Components2.Move, Scroll2 = Components2.Scroll, Controller2 = Components2.Controller, track = Components2.Elements.track, reduce = Components2.Media.reduce;\n  var _Components2$Directio2 = Components2.Direction, resolve = _Components2$Directio2.resolve, orient = _Components2$Directio2.orient;\n  var getPosition = Move2.getPosition, exceededLimit = Move2.exceededLimit;\n  var basePosition;\n  var baseEvent;\n  var prevBaseEvent;\n  var isFree;\n  var dragging;\n  var exceeded = false;\n  var clickPrevented;\n  var disabled;\n  var target;\n  function mount() {\n    bind(track, POINTER_MOVE_EVENTS, noop, SCROLL_LISTENER_OPTIONS);\n    bind(track, POINTER_UP_EVENTS, noop, SCROLL_LISTENER_OPTIONS);\n    bind(track, POINTER_DOWN_EVENTS, onPointerDown, SCROLL_LISTENER_OPTIONS);\n    bind(track, \"click\", onClick, {\n      capture: true\n    });\n    bind(track, \"dragstart\", prevent);\n    on([EVENT_MOUNTED, EVENT_UPDATED], init);\n  }\n  function init() {\n    var drag = options.drag;\n    disable(!drag);\n    isFree = drag === \"free\";\n  }\n  function onPointerDown(e) {\n    clickPrevented = false;\n    if (!disabled) {\n      var isTouch = isTouchEvent(e);\n      if (isDraggable(e.target) && (isTouch || !e.button)) {\n        if (!Controller2.isBusy()) {\n          target = isTouch ? track : window;\n          dragging = state.is([MOVING, SCROLLING]);\n          prevBaseEvent = null;\n          bind(target, POINTER_MOVE_EVENTS, onPointerMove, SCROLL_LISTENER_OPTIONS);\n          bind(target, POINTER_UP_EVENTS, onPointerUp, SCROLL_LISTENER_OPTIONS);\n          Move2.cancel();\n          Scroll2.cancel();\n          save(e);\n        } else {\n          prevent(e, true);\n        }\n      }\n    }\n  }\n  function onPointerMove(e) {\n    if (!state.is(DRAGGING)) {\n      state.set(DRAGGING);\n      emit(EVENT_DRAG);\n    }\n    if (e.cancelable) {\n      if (dragging) {\n        Move2.translate(basePosition + constrain(diffCoord(e)));\n        var expired = diffTime(e) > LOG_INTERVAL;\n        var hasExceeded = exceeded !== (exceeded = exceededLimit());\n        if (expired || hasExceeded) {\n          save(e);\n        }\n        clickPrevented = true;\n        emit(EVENT_DRAGGING);\n        prevent(e);\n      } else if (isSliderDirection(e)) {\n        dragging = shouldStart(e);\n        prevent(e);\n      }\n    }\n  }\n  function onPointerUp(e) {\n    if (state.is(DRAGGING)) {\n      state.set(IDLE);\n      emit(EVENT_DRAGGED);\n    }\n    if (dragging) {\n      move(e);\n      prevent(e);\n    }\n    unbind(target, POINTER_MOVE_EVENTS, onPointerMove);\n    unbind(target, POINTER_UP_EVENTS, onPointerUp);\n    dragging = false;\n  }\n  function onClick(e) {\n    if (!disabled && clickPrevented) {\n      prevent(e, true);\n    }\n  }\n  function save(e) {\n    prevBaseEvent = baseEvent;\n    baseEvent = e;\n    basePosition = getPosition();\n  }\n  function move(e) {\n    var velocity = computeVelocity(e);\n    var destination = computeDestination(velocity);\n    var rewind = options.rewind && options.rewindByDrag;\n    reduce(false);\n    if (isFree) {\n      Controller2.scroll(destination, 0, options.snap);\n    } else if (Splide22.is(FADE)) {\n      Controller2.go(orient(sign(velocity)) < 0 ? rewind ? \"<\" : \"-\" : rewind ? \">\" : \"+\");\n    } else if (Splide22.is(SLIDE) && exceeded && rewind) {\n      Controller2.go(exceededLimit(true) ? \">\" : \"<\");\n    } else {\n      Controller2.go(Controller2.toDest(destination), true);\n    }\n    reduce(true);\n  }\n  function shouldStart(e) {\n    var thresholds = options.dragMinThreshold;\n    var isObj = isObject(thresholds);\n    var mouse = isObj && thresholds.mouse || 0;\n    var touch = (isObj ? thresholds.touch : +thresholds) || 10;\n    return abs(diffCoord(e)) > (isTouchEvent(e) ? touch : mouse);\n  }\n  function isSliderDirection(e) {\n    return abs(diffCoord(e)) > abs(diffCoord(e, true));\n  }\n  function computeVelocity(e) {\n    if (Splide22.is(LOOP) || !exceeded) {\n      var time = diffTime(e);\n      if (time && time < LOG_INTERVAL) {\n        return diffCoord(e) / time;\n      }\n    }\n    return 0;\n  }\n  function computeDestination(velocity) {\n    return getPosition() + sign(velocity) * min(abs(velocity) * (options.flickPower || 600), isFree ? Infinity : Components2.Layout.listSize() * (options.flickMaxPages || 1));\n  }\n  function diffCoord(e, orthogonal) {\n    return coordOf(e, orthogonal) - coordOf(getBaseEvent(e), orthogonal);\n  }\n  function diffTime(e) {\n    return timeOf(e) - timeOf(getBaseEvent(e));\n  }\n  function getBaseEvent(e) {\n    return baseEvent === e && prevBaseEvent || baseEvent;\n  }\n  function coordOf(e, orthogonal) {\n    return (isTouchEvent(e) ? e.changedTouches[0] : e)[\"page\" + resolve(orthogonal ? \"Y\" : \"X\")];\n  }\n  function constrain(diff) {\n    return diff / (exceeded && Splide22.is(SLIDE) ? FRICTION : 1);\n  }\n  function isDraggable(target2) {\n    var noDrag = options.noDrag;\n    return !matches(target2, \".\" + CLASS_PAGINATION_PAGE + \", .\" + CLASS_ARROW) && (!noDrag || !matches(target2, noDrag));\n  }\n  function isTouchEvent(e) {\n    return typeof TouchEvent !== \"undefined\" && e instanceof TouchEvent;\n  }\n  function isDragging() {\n    return dragging;\n  }\n  function disable(value) {\n    disabled = value;\n  }\n  return {\n    mount,\n    disable,\n    isDragging\n  };\n}\nvar NORMALIZATION_MAP = {\n  Spacebar: \" \",\n  Right: ARROW_RIGHT,\n  Left: ARROW_LEFT,\n  Up: ARROW_UP,\n  Down: ARROW_DOWN\n};\nfunction normalizeKey(key) {\n  key = isString(key) ? key : key.key;\n  return NORMALIZATION_MAP[key] || key;\n}\nvar KEYBOARD_EVENT = \"keydown\";\nfunction Keyboard(Splide22, Components2, options) {\n  var _EventInterface10 = EventInterface(Splide22), on = _EventInterface10.on, bind = _EventInterface10.bind, unbind = _EventInterface10.unbind;\n  var root = Splide22.root;\n  var resolve = Components2.Direction.resolve;\n  var target;\n  var disabled;\n  function mount() {\n    init();\n    on(EVENT_UPDATED, destroy);\n    on(EVENT_UPDATED, init);\n    on(EVENT_MOVE, onMove);\n  }\n  function init() {\n    var keyboard = options.keyboard;\n    if (keyboard) {\n      target = keyboard === \"global\" ? window : root;\n      bind(target, KEYBOARD_EVENT, onKeydown);\n    }\n  }\n  function destroy() {\n    unbind(target, KEYBOARD_EVENT);\n  }\n  function disable(value) {\n    disabled = value;\n  }\n  function onMove() {\n    var _disabled = disabled;\n    disabled = true;\n    nextTick(function() {\n      disabled = _disabled;\n    });\n  }\n  function onKeydown(e) {\n    if (!disabled) {\n      var key = normalizeKey(e);\n      if (key === resolve(ARROW_LEFT)) {\n        Splide22.go(\"<\");\n      } else if (key === resolve(ARROW_RIGHT)) {\n        Splide22.go(\">\");\n      }\n    }\n  }\n  return {\n    mount,\n    destroy,\n    disable\n  };\n}\nvar SRC_DATA_ATTRIBUTE = DATA_ATTRIBUTE + \"-lazy\";\nvar SRCSET_DATA_ATTRIBUTE = SRC_DATA_ATTRIBUTE + \"-srcset\";\nvar IMAGE_SELECTOR = \"[\" + SRC_DATA_ATTRIBUTE + \"], [\" + SRCSET_DATA_ATTRIBUTE + \"]\";\nfunction LazyLoad(Splide22, Components2, options) {\n  var _EventInterface11 = EventInterface(Splide22), on = _EventInterface11.on, off = _EventInterface11.off, bind = _EventInterface11.bind, emit = _EventInterface11.emit;\n  var isSequential = options.lazyLoad === \"sequential\";\n  var events = [EVENT_MOVED, EVENT_SCROLLED];\n  var entries = [];\n  function mount() {\n    if (options.lazyLoad) {\n      init();\n      on(EVENT_REFRESH, init);\n    }\n  }\n  function init() {\n    empty(entries);\n    register();\n    if (isSequential) {\n      loadNext();\n    } else {\n      off(events);\n      on(events, check);\n      check();\n    }\n  }\n  function register() {\n    Components2.Slides.forEach(function(Slide2) {\n      queryAll(Slide2.slide, IMAGE_SELECTOR).forEach(function(img) {\n        var src = getAttribute(img, SRC_DATA_ATTRIBUTE);\n        var srcset = getAttribute(img, SRCSET_DATA_ATTRIBUTE);\n        if (src !== img.src || srcset !== img.srcset) {\n          var className = options.classes.spinner;\n          var parent = img.parentElement;\n          var spinner = child(parent, \".\" + className) || create(\"span\", className, parent);\n          entries.push([img, Slide2, spinner]);\n          img.src || display(img, \"none\");\n        }\n      });\n    });\n  }\n  function check() {\n    entries = entries.filter(function(data) {\n      var distance = options.perPage * ((options.preloadPages || 1) + 1) - 1;\n      return data[1].isWithin(Splide22.index, distance) ? load(data) : true;\n    });\n    entries.length || off(events);\n  }\n  function load(data) {\n    var img = data[0];\n    addClass(data[1].slide, CLASS_LOADING);\n    bind(img, \"load error\", apply(onLoad, data));\n    setAttribute(img, \"src\", getAttribute(img, SRC_DATA_ATTRIBUTE));\n    setAttribute(img, \"srcset\", getAttribute(img, SRCSET_DATA_ATTRIBUTE));\n    removeAttribute(img, SRC_DATA_ATTRIBUTE);\n    removeAttribute(img, SRCSET_DATA_ATTRIBUTE);\n  }\n  function onLoad(data, e) {\n    var img = data[0], Slide2 = data[1];\n    removeClass(Slide2.slide, CLASS_LOADING);\n    if (e.type !== \"error\") {\n      remove(data[2]);\n      display(img, \"\");\n      emit(EVENT_LAZYLOAD_LOADED, img, Slide2);\n      emit(EVENT_RESIZE);\n    }\n    isSequential && loadNext();\n  }\n  function loadNext() {\n    entries.length && load(entries.shift());\n  }\n  return {\n    mount,\n    destroy: apply(empty, entries),\n    check\n  };\n}\nfunction Pagination(Splide22, Components2, options) {\n  var event = EventInterface(Splide22);\n  var on = event.on, emit = event.emit, bind = event.bind;\n  var Slides2 = Components2.Slides, Elements2 = Components2.Elements, Controller2 = Components2.Controller;\n  var hasFocus = Controller2.hasFocus, getIndex = Controller2.getIndex, go = Controller2.go;\n  var resolve = Components2.Direction.resolve;\n  var placeholder = Elements2.pagination;\n  var items = [];\n  var list;\n  var paginationClasses;\n  function mount() {\n    destroy();\n    on([EVENT_UPDATED, EVENT_REFRESH, EVENT_END_INDEX_CHANGED], mount);\n    var enabled = options.pagination;\n    placeholder && display(placeholder, enabled ? \"\" : \"none\");\n    if (enabled) {\n      on([EVENT_MOVE, EVENT_SCROLL, EVENT_SCROLLED], update);\n      createPagination();\n      update();\n      emit(EVENT_PAGINATION_MOUNTED, {\n        list,\n        items\n      }, getAt(Splide22.index));\n    }\n  }\n  function destroy() {\n    if (list) {\n      remove(placeholder ? slice(list.children) : list);\n      removeClass(list, paginationClasses);\n      empty(items);\n      list = null;\n    }\n    event.destroy();\n  }\n  function createPagination() {\n    var length = Splide22.length;\n    var classes = options.classes, i18n = options.i18n, perPage = options.perPage;\n    var max2 = hasFocus() ? Controller2.getEnd() + 1 : ceil(length / perPage);\n    list = placeholder || create(\"ul\", classes.pagination, Elements2.track.parentElement);\n    addClass(list, paginationClasses = CLASS_PAGINATION + \"--\" + getDirection());\n    setAttribute(list, ROLE, \"tablist\");\n    setAttribute(list, ARIA_LABEL, i18n.select);\n    setAttribute(list, ARIA_ORIENTATION, getDirection() === TTB ? \"vertical\" : \"\");\n    for (var i = 0; i < max2; i++) {\n      var li = create(\"li\", null, list);\n      var button = create(\"button\", {\n        class: classes.page,\n        type: \"button\"\n      }, li);\n      var controls = Slides2.getIn(i).map(function(Slide2) {\n        return Slide2.slide.id;\n      });\n      var text = !hasFocus() && perPage > 1 ? i18n.pageX : i18n.slideX;\n      bind(button, \"click\", apply(onClick, i));\n      if (options.paginationKeyboard) {\n        bind(button, \"keydown\", apply(onKeydown, i));\n      }\n      setAttribute(li, ROLE, \"presentation\");\n      setAttribute(button, ROLE, \"tab\");\n      setAttribute(button, ARIA_CONTROLS, controls.join(\" \"));\n      setAttribute(button, ARIA_LABEL, format(text, i + 1));\n      setAttribute(button, TAB_INDEX, -1);\n      items.push({\n        li,\n        button,\n        page: i\n      });\n    }\n  }\n  function onClick(page) {\n    go(\">\" + page, true);\n  }\n  function onKeydown(page, e) {\n    var length = items.length;\n    var key = normalizeKey(e);\n    var dir = getDirection();\n    var nextPage = -1;\n    if (key === resolve(ARROW_RIGHT, false, dir)) {\n      nextPage = ++page % length;\n    } else if (key === resolve(ARROW_LEFT, false, dir)) {\n      nextPage = (--page + length) % length;\n    } else if (key === \"Home\") {\n      nextPage = 0;\n    } else if (key === \"End\") {\n      nextPage = length - 1;\n    }\n    var item = items[nextPage];\n    if (item) {\n      focus(item.button);\n      go(\">\" + nextPage);\n      prevent(e, true);\n    }\n  }\n  function getDirection() {\n    return options.paginationDirection || options.direction;\n  }\n  function getAt(index) {\n    return items[Controller2.toPage(index)];\n  }\n  function update() {\n    var prev = getAt(getIndex(true));\n    var curr = getAt(getIndex());\n    if (prev) {\n      var button = prev.button;\n      removeClass(button, CLASS_ACTIVE);\n      removeAttribute(button, ARIA_SELECTED);\n      setAttribute(button, TAB_INDEX, -1);\n    }\n    if (curr) {\n      var _button = curr.button;\n      addClass(_button, CLASS_ACTIVE);\n      setAttribute(_button, ARIA_SELECTED, true);\n      setAttribute(_button, TAB_INDEX, \"\");\n    }\n    emit(EVENT_PAGINATION_UPDATED, {\n      list,\n      items\n    }, prev, curr);\n  }\n  return {\n    items,\n    mount,\n    destroy,\n    getAt,\n    update\n  };\n}\nvar TRIGGER_KEYS = [\" \", \"Enter\"];\nfunction Sync(Splide22, Components2, options) {\n  var isNavigation = options.isNavigation, slideFocus = options.slideFocus;\n  var events = [];\n  function mount() {\n    Splide22.splides.forEach(function(target) {\n      if (!target.isParent) {\n        sync(Splide22, target.splide);\n        sync(target.splide, Splide22);\n      }\n    });\n    if (isNavigation) {\n      navigate();\n    }\n  }\n  function destroy() {\n    events.forEach(function(event) {\n      event.destroy();\n    });\n    empty(events);\n  }\n  function remount() {\n    destroy();\n    mount();\n  }\n  function sync(splide, target) {\n    var event = EventInterface(splide);\n    event.on(EVENT_MOVE, function(index, prev, dest) {\n      target.go(target.is(LOOP) ? dest : index);\n    });\n    events.push(event);\n  }\n  function navigate() {\n    var event = EventInterface(Splide22);\n    var on = event.on;\n    on(EVENT_CLICK, onClick);\n    on(EVENT_SLIDE_KEYDOWN, onKeydown);\n    on([EVENT_MOUNTED, EVENT_UPDATED], update);\n    events.push(event);\n    event.emit(EVENT_NAVIGATION_MOUNTED, Splide22.splides);\n  }\n  function update() {\n    setAttribute(Components2.Elements.list, ARIA_ORIENTATION, options.direction === TTB ? \"vertical\" : \"\");\n  }\n  function onClick(Slide2) {\n    Splide22.go(Slide2.index);\n  }\n  function onKeydown(Slide2, e) {\n    if (includes(TRIGGER_KEYS, normalizeKey(e))) {\n      onClick(Slide2);\n      prevent(e);\n    }\n  }\n  return {\n    setup: apply(Components2.Media.set, {\n      slideFocus: isUndefined(slideFocus) ? isNavigation : slideFocus\n    }, true),\n    mount,\n    destroy,\n    remount\n  };\n}\nfunction Wheel(Splide22, Components2, options) {\n  var _EventInterface12 = EventInterface(Splide22), bind = _EventInterface12.bind;\n  var lastTime = 0;\n  function mount() {\n    if (options.wheel) {\n      bind(Components2.Elements.track, \"wheel\", onWheel, SCROLL_LISTENER_OPTIONS);\n    }\n  }\n  function onWheel(e) {\n    if (e.cancelable) {\n      var deltaY = e.deltaY;\n      var backwards = deltaY < 0;\n      var timeStamp = timeOf(e);\n      var _min = options.wheelMinThreshold || 0;\n      var sleep = options.wheelSleep || 0;\n      if (abs(deltaY) > _min && timeStamp - lastTime > sleep) {\n        Splide22.go(backwards ? \"<\" : \">\");\n        lastTime = timeStamp;\n      }\n      shouldPrevent(backwards) && prevent(e);\n    }\n  }\n  function shouldPrevent(backwards) {\n    return !options.releaseWheel || Splide22.state.is(MOVING) || Components2.Controller.getAdjacent(backwards) !== -1;\n  }\n  return {\n    mount\n  };\n}\nvar SR_REMOVAL_DELAY = 90;\nfunction Live(Splide22, Components2, options) {\n  var _EventInterface13 = EventInterface(Splide22), on = _EventInterface13.on;\n  var track = Components2.Elements.track;\n  var enabled = options.live && !options.isNavigation;\n  var sr = create(\"span\", CLASS_SR);\n  var interval = RequestInterval(SR_REMOVAL_DELAY, apply(toggle, false));\n  function mount() {\n    if (enabled) {\n      disable(!Components2.Autoplay.isPaused());\n      setAttribute(track, ARIA_ATOMIC, true);\n      sr.textContent = \"\\u2026\";\n      on(EVENT_AUTOPLAY_PLAY, apply(disable, true));\n      on(EVENT_AUTOPLAY_PAUSE, apply(disable, false));\n      on([EVENT_MOVED, EVENT_SCROLLED], apply(toggle, true));\n    }\n  }\n  function toggle(active) {\n    setAttribute(track, ARIA_BUSY, active);\n    if (active) {\n      append(track, sr);\n      interval.start();\n    } else {\n      remove(sr);\n      interval.cancel();\n    }\n  }\n  function destroy() {\n    removeAttribute(track, [ARIA_LIVE, ARIA_ATOMIC, ARIA_BUSY]);\n    remove(sr);\n  }\n  function disable(disabled) {\n    if (enabled) {\n      setAttribute(track, ARIA_LIVE, disabled ? \"off\" : \"polite\");\n    }\n  }\n  return {\n    mount,\n    disable,\n    destroy\n  };\n}\nvar ComponentConstructors = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  Media,\n  Direction,\n  Elements,\n  Slides,\n  Layout,\n  Clones,\n  Move,\n  Controller,\n  Arrows,\n  Autoplay,\n  Cover,\n  Scroll,\n  Drag,\n  Keyboard,\n  LazyLoad,\n  Pagination,\n  Sync,\n  Wheel,\n  Live\n});\nvar I18N = {\n  prev: \"Previous slide\",\n  next: \"Next slide\",\n  first: \"Go to first slide\",\n  last: \"Go to last slide\",\n  slideX: \"Go to slide %s\",\n  pageX: \"Go to page %s\",\n  play: \"Start autoplay\",\n  pause: \"Pause autoplay\",\n  carousel: \"carousel\",\n  slide: \"slide\",\n  select: \"Select a slide to show\",\n  slideLabel: \"%s of %s\"\n};\nvar DEFAULTS = {\n  type: \"slide\",\n  role: \"region\",\n  speed: 400,\n  perPage: 1,\n  cloneStatus: true,\n  arrows: true,\n  pagination: true,\n  paginationKeyboard: true,\n  interval: 5e3,\n  pauseOnHover: true,\n  pauseOnFocus: true,\n  resetProgress: true,\n  easing: \"cubic-bezier(0.25, 1, 0.5, 1)\",\n  drag: true,\n  direction: \"ltr\",\n  trimSpace: true,\n  focusableNodes: \"a, button, textarea, input, select, iframe\",\n  live: true,\n  classes: CLASSES,\n  i18n: I18N,\n  reducedMotion: {\n    speed: 0,\n    rewindSpeed: 0,\n    autoplay: \"pause\"\n  }\n};\nfunction Fade(Splide22, Components2, options) {\n  var Slides2 = Components2.Slides;\n  function mount() {\n    EventInterface(Splide22).on([EVENT_MOUNTED, EVENT_REFRESH], init);\n  }\n  function init() {\n    Slides2.forEach(function(Slide2) {\n      Slide2.style(\"transform\", \"translateX(-\" + 100 * Slide2.index + \"%)\");\n    });\n  }\n  function start(index, done) {\n    Slides2.style(\"transition\", \"opacity \" + options.speed + \"ms \" + options.easing);\n    nextTick(done);\n  }\n  return {\n    mount,\n    start,\n    cancel: noop\n  };\n}\nfunction Slide(Splide22, Components2, options) {\n  var Move2 = Components2.Move, Controller2 = Components2.Controller, Scroll2 = Components2.Scroll;\n  var list = Components2.Elements.list;\n  var transition = apply(style, list, \"transition\");\n  var endCallback;\n  function mount() {\n    EventInterface(Splide22).bind(list, \"transitionend\", function(e) {\n      if (e.target === list && endCallback) {\n        cancel();\n        endCallback();\n      }\n    });\n  }\n  function start(index, done) {\n    var destination = Move2.toPosition(index, true);\n    var position = Move2.getPosition();\n    var speed = getSpeed(index);\n    if (abs(destination - position) >= 1 && speed >= 1) {\n      if (options.useScroll) {\n        Scroll2.scroll(destination, speed, false, done);\n      } else {\n        transition(\"transform \" + speed + \"ms \" + options.easing);\n        Move2.translate(destination, true);\n        endCallback = done;\n      }\n    } else {\n      Move2.jump(index);\n      done();\n    }\n  }\n  function cancel() {\n    transition(\"\");\n    Scroll2.cancel();\n  }\n  function getSpeed(index) {\n    var rewindSpeed = options.rewindSpeed;\n    if (Splide22.is(SLIDE) && rewindSpeed) {\n      var prev = Controller2.getIndex(true);\n      var end = Controller2.getEnd();\n      if (prev === 0 && index >= end || prev >= end && index === 0) {\n        return rewindSpeed;\n      }\n    }\n    return options.speed;\n  }\n  return {\n    mount,\n    start,\n    cancel\n  };\n}\nvar _Splide = /* @__PURE__ */ function() {\n  function _Splide2(target, options) {\n    this.event = EventInterface();\n    this.Components = {};\n    this.state = State(CREATED);\n    this.splides = [];\n    this._o = {};\n    this._E = {};\n    var root = isString(target) ? query(document, target) : target;\n    assert(root, root + \" is invalid.\");\n    this.root = root;\n    options = merge({\n      label: getAttribute(root, ARIA_LABEL) || \"\",\n      labelledby: getAttribute(root, ARIA_LABELLEDBY) || \"\"\n    }, DEFAULTS, _Splide2.defaults, options || {});\n    try {\n      merge(options, JSON.parse(getAttribute(root, DATA_ATTRIBUTE)));\n    } catch (e) {\n      assert(false, \"Invalid JSON\");\n    }\n    this._o = Object.create(merge({}, options));\n  }\n  var _proto = _Splide2.prototype;\n  _proto.mount = function mount(Extensions, Transition) {\n    var _this = this;\n    var state = this.state, Components2 = this.Components;\n    assert(state.is([CREATED, DESTROYED]), \"Already mounted!\");\n    state.set(CREATED);\n    this._C = Components2;\n    this._T = Transition || this._T || (this.is(FADE) ? Fade : Slide);\n    this._E = Extensions || this._E;\n    var Constructors = assign({}, ComponentConstructors, this._E, {\n      Transition: this._T\n    });\n    forOwn(Constructors, function(Component, key) {\n      var component = Component(_this, Components2, _this._o);\n      Components2[key] = component;\n      component.setup && component.setup();\n    });\n    forOwn(Components2, function(component) {\n      component.mount && component.mount();\n    });\n    this.emit(EVENT_MOUNTED);\n    addClass(this.root, CLASS_INITIALIZED);\n    state.set(IDLE);\n    this.emit(EVENT_READY);\n    return this;\n  };\n  _proto.sync = function sync(splide) {\n    this.splides.push({\n      splide\n    });\n    splide.splides.push({\n      splide: this,\n      isParent: true\n    });\n    if (this.state.is(IDLE)) {\n      this._C.Sync.remount();\n      splide.Components.Sync.remount();\n    }\n    return this;\n  };\n  _proto.go = function go(control) {\n    this._C.Controller.go(control);\n    return this;\n  };\n  _proto.on = function on(events, callback) {\n    this.event.on(events, callback);\n    return this;\n  };\n  _proto.off = function off(events) {\n    this.event.off(events);\n    return this;\n  };\n  _proto.emit = function emit(event) {\n    var _this$event;\n    (_this$event = this.event).emit.apply(_this$event, [event].concat(slice(arguments, 1)));\n    return this;\n  };\n  _proto.add = function add(slides, index) {\n    this._C.Slides.add(slides, index);\n    return this;\n  };\n  _proto.remove = function remove2(matcher) {\n    this._C.Slides.remove(matcher);\n    return this;\n  };\n  _proto.is = function is(type) {\n    return this._o.type === type;\n  };\n  _proto.refresh = function refresh() {\n    this.emit(EVENT_REFRESH);\n    return this;\n  };\n  _proto.destroy = function destroy(completely) {\n    if (completely === void 0) {\n      completely = true;\n    }\n    var event = this.event, state = this.state;\n    if (state.is(CREATED)) {\n      EventInterface(this).on(EVENT_READY, this.destroy.bind(this, completely));\n    } else {\n      forOwn(this._C, function(component) {\n        component.destroy && component.destroy(completely);\n      }, true);\n      event.emit(EVENT_DESTROY);\n      event.destroy();\n      completely && empty(this.splides);\n      state.set(DESTROYED);\n    }\n    return this;\n  };\n  _createClass(_Splide2, [{\n    key: \"options\",\n    get: function get() {\n      return this._o;\n    },\n    set: function set(options) {\n      this._C.Media.set(options, true, true);\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this._C.Slides.getLength(true);\n    }\n  }, {\n    key: \"index\",\n    get: function get() {\n      return this._C.Controller.getIndex();\n    }\n  }]);\n  return _Splide2;\n}();\nvar Splide = _Splide;\nSplide.defaults = {};\nSplide.STATES = STATES;\n\n// src/js/components/Splide/Splide.tsx\nvar import_react2 = __toESM(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\n// src/js/constants/events.ts\nvar EVENTS = [\n  [EVENT_MOUNTED, \"onMounted\"],\n  [EVENT_READY, \"onReady\"],\n  [EVENT_MOVE, \"onMove\"],\n  [EVENT_MOVED, \"onMoved\"],\n  [EVENT_CLICK, \"onClick\"],\n  [EVENT_ACTIVE, \"onActive\"],\n  [EVENT_INACTIVE, \"onInactive\"],\n  [EVENT_VISIBLE, \"onVisible\"],\n  [EVENT_HIDDEN, \"onHidden\"],\n  [EVENT_REFRESH, \"onRefresh\"],\n  [EVENT_UPDATED, \"onUpdated\"],\n  [EVENT_RESIZE, \"onResize\"],\n  [EVENT_RESIZED, \"onResized\"],\n  [EVENT_DRAG, \"onDrag\"],\n  [EVENT_DRAGGING, \"onDragging\"],\n  [EVENT_DRAGGED, \"onDragged\"],\n  [EVENT_SCROLL, \"onScroll\"],\n  [EVENT_SCROLLED, \"onScrolled\"],\n  [EVENT_DESTROY, \"onDestroy\"],\n  [EVENT_ARROWS_MOUNTED, \"onArrowsMounted\"],\n  [EVENT_ARROWS_UPDATED, \"onArrowsUpdated\"],\n  [EVENT_PAGINATION_MOUNTED, \"onPaginationMounted\"],\n  [EVENT_PAGINATION_UPDATED, \"onPaginationUpdated\"],\n  [EVENT_NAVIGATION_MOUNTED, \"onNavigationMounted\"],\n  [EVENT_AUTOPLAY_PLAY, \"onAutoplayPlay\"],\n  [EVENT_AUTOPLAY_PLAYING, \"onAutoplayPlaying\"],\n  [EVENT_AUTOPLAY_PAUSE, \"onAutoplayPause\"],\n  [EVENT_LAZYLOAD_LOADED, \"onLazyLoadLoaded\"]\n];\n\n// src/js/utils/classNames/classNames.ts\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(\" \");\n}\n\n// src/js/utils/isObject/isObject.ts\nfunction isObject2(subject) {\n  return subject !== null && typeof subject === \"object\";\n}\n\n// src/js/utils/isEqualDeep/isEqualDeep.ts\nfunction isEqualDeep(subject1, subject2) {\n  if (Array.isArray(subject1) && Array.isArray(subject2)) {\n    return subject1.length === subject2.length && !subject1.some((elm, index) => !isEqualDeep(elm, subject2[index]));\n  }\n  if (isObject2(subject1) && isObject2(subject2)) {\n    const keys1 = Object.keys(subject1);\n    const keys2 = Object.keys(subject2);\n    return keys1.length === keys2.length && !keys1.some((key) => {\n      return !Object.prototype.hasOwnProperty.call(subject2, key) || !isEqualDeep(subject1[key], subject2[key]);\n    });\n  }\n  return subject1 === subject2;\n}\n\n// src/js/utils/isEqualShallow/isEqualShallow.ts\nfunction isEqualShallow(array1, array2) {\n  return array1.length === array2.length && !array1.some((elm, index) => elm !== array2[index]);\n}\n\n// src/js/utils/forOwn/forOwn.ts\nfunction forOwn2(object, iteratee) {\n  if (object) {\n    const keys = Object.keys(object);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (key !== \"__proto__\") {\n        if (iteratee(object[key], key) === false) {\n          break;\n        }\n      }\n    }\n  }\n  return object;\n}\n\n// src/js/utils/merge/merge.ts\nfunction merge2(object, source) {\n  const merged = object;\n  forOwn2(source, (value, key) => {\n    if (Array.isArray(value)) {\n      merged[key] = value.slice();\n    } else if (isObject2(value)) {\n      merged[key] = merge2(isObject2(merged[key]) ? merged[key] : {}, value);\n    } else {\n      merged[key] = value;\n    }\n  });\n  return merged;\n}\n\n// src/js/components/SplideTrack/SplideTrack.tsx\nvar import_react = __toESM(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\nvar SplideTrack = ({ children: children2, className, ...props }) => {\n  return /* @__PURE__ */ import_react.default.createElement(\"div\", {\n    className: classNames(\"splide__track\", className),\n    ...props\n  }, /* @__PURE__ */ import_react.default.createElement(\"ul\", {\n    className: \"splide__list\"\n  }, children2));\n};\n\n// src/js/components/Splide/Splide.tsx\nvar Splide2 = class extends import_react2.default.Component {\n  constructor() {\n    super(...arguments);\n    this.splideRef = import_react2.default.createRef();\n    this.slides = [];\n  }\n  componentDidMount() {\n    const { options, extensions, transition } = this.props;\n    const { current } = this.splideRef;\n    if (current) {\n      this.splide = new Splide(current, options);\n      this.bind(this.splide);\n      this.splide.mount(extensions, transition);\n      this.options = merge2({}, options || {});\n      this.slides = this.getSlides();\n    }\n  }\n  componentWillUnmount() {\n    if (this.splide) {\n      this.splide.destroy();\n      this.splide = void 0;\n    }\n    this.options = void 0;\n    this.slides.length = 0;\n  }\n  componentDidUpdate() {\n    if (!this.splide) {\n      return;\n    }\n    const { options } = this.props;\n    if (options && !isEqualDeep(this.options, options)) {\n      this.splide.options = options;\n      this.options = merge2({}, options);\n    }\n    const newSlides = this.getSlides();\n    if (!isEqualShallow(this.slides, newSlides)) {\n      this.splide.refresh();\n      this.slides = newSlides;\n    }\n  }\n  sync(splide) {\n    var _a;\n    (_a = this.splide) == null ? void 0 : _a.sync(splide);\n  }\n  go(control) {\n    var _a;\n    (_a = this.splide) == null ? void 0 : _a.go(control);\n  }\n  getSlides() {\n    var _a;\n    if (this.splide) {\n      const children2 = (_a = this.splide.Components.Elements) == null ? void 0 : _a.list.children;\n      return children2 && Array.prototype.slice.call(children2) || [];\n    }\n    return [];\n  }\n  bind(splide) {\n    EVENTS.forEach(([event, name]) => {\n      const handler = this.props[name];\n      if (typeof handler === \"function\") {\n        splide.on(event, (...args) => {\n          handler(splide, ...args);\n        });\n      }\n    });\n  }\n  omit(props, keys) {\n    keys.forEach((key) => {\n      if (Object.prototype.hasOwnProperty.call(props, key)) {\n        delete props[key];\n      }\n    });\n    return props;\n  }\n  render() {\n    const { className, tag: Root = \"div\", hasTrack = true, children: children2, ...props } = this.props;\n    return /* @__PURE__ */ import_react2.default.createElement(Root, {\n      className: classNames(\"splide\", className),\n      ref: this.splideRef,\n      ...this.omit(props, [\"options\", ...EVENTS.map((event) => event[1])])\n    }, hasTrack ? /* @__PURE__ */ import_react2.default.createElement(SplideTrack, null, children2) : children2);\n  }\n};\n\n// src/js/components/SplideSlide/SplideSlide.tsx\nvar import_react3 = __toESM(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\nvar SplideSlide = ({ children: children2, className, ...props }) => {\n  return /* @__PURE__ */ import_react3.default.createElement(\"li\", {\n    className: classNames(\"splide__slide\", className),\n    ...props\n  }, children2);\n};\n/*!\n * Splide.js\n * Version  : 4.1.3\n * License  : MIT\n * Copyright: 2022 Naotoshi Fujita\n */\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@splidejs/react-splide/dist/js/react-splide.cjs.js\n"));

/***/ }),

/***/ "./node_modules/@vimeo/player/dist/player.es.js":
/*!******************************************************!*\
  !*** ./node_modules/@vimeo/player/dist/player.es.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/*! @vimeo/player v2.29.1 | (c) 2025 Vimeo | MIT License | https://github.com/vimeo/player.js */\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _regeneratorRuntime() {\n  _regeneratorRuntime = function () {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function (obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function (method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function (skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function () {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function (exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function (type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function (record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function (finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    catch: function (tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function (iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\n/**\n * @module lib/functions\n */\n\n/**\n * Check to see this is a Node environment.\n * @type {boolean}\n */\n/* global global */\nvar isNode = typeof __webpack_require__.g !== 'undefined' && {}.toString.call(__webpack_require__.g) === '[object global]';\n\n/**\n * Check to see if this is a Bun environment.\n * @see https://bun.sh/guides/util/detect-bun\n * @type {boolean}\n */\nvar isBun = typeof Bun !== 'undefined';\n\n/**\n * Check to see if this is a Deno environment.\n * @see https://docs.deno.com/api/deno/~/Deno\n * @type {boolean}\n */\nvar isDeno = typeof Deno !== 'undefined';\n\n/**\n * Check if this is a server runtime\n * @type {boolean}\n */\nvar isServerRuntime = isNode || isBun || isDeno;\n\n/**\n * Get the name of the method for a given getter or setter.\n *\n * @param {string} prop The name of the property.\n * @param {string} type Either “get” or “set”.\n * @return {string}\n */\nfunction getMethodName(prop, type) {\n  if (prop.indexOf(type.toLowerCase()) === 0) {\n    return prop;\n  }\n  return \"\".concat(type.toLowerCase()).concat(prop.substr(0, 1).toUpperCase()).concat(prop.substr(1));\n}\n\n/**\n * Check to see if the object is a DOM Element.\n *\n * @param {*} element The object to check.\n * @return {boolean}\n */\nfunction isDomElement(element) {\n  return Boolean(element && element.nodeType === 1 && 'nodeName' in element && element.ownerDocument && element.ownerDocument.defaultView);\n}\n\n/**\n * Check to see whether the value is a number.\n *\n * @see http://dl.dropboxusercontent.com/u/35146/js/tests/isNumber.html\n * @param {*} value The value to check.\n * @param {boolean} integer Check if the value is an integer.\n * @return {boolean}\n */\nfunction isInteger(value) {\n  // eslint-disable-next-line eqeqeq\n  return !isNaN(parseFloat(value)) && isFinite(value) && Math.floor(value) == value;\n}\n\n/**\n * Check to see if the URL is a Vimeo url.\n *\n * @param {string} url The url string.\n * @return {boolean}\n */\nfunction isVimeoUrl(url) {\n  return /^(https?:)?\\/\\/((((player|www)\\.)?vimeo\\.com)|((player\\.)?[a-zA-Z0-9-]+\\.(videoji\\.(hk|cn)|vimeo\\.work)))(?=$|\\/)/.test(url);\n}\n\n/**\n * Check to see if the URL is for a Vimeo embed.\n *\n * @param {string} url The url string.\n * @return {boolean}\n */\nfunction isVimeoEmbed(url) {\n  var expr = /^https:\\/\\/player\\.((vimeo\\.com)|([a-zA-Z0-9-]+\\.(videoji\\.(hk|cn)|vimeo\\.work)))\\/video\\/\\d+/;\n  return expr.test(url);\n}\nfunction getOembedDomain(url) {\n  var match = (url || '').match(/^(?:https?:)?(?:\\/\\/)?([^/?]+)/);\n  var domain = (match && match[1] || '').replace('player.', '');\n  var customDomains = ['.videoji.hk', '.vimeo.work', '.videoji.cn'];\n  for (var _i = 0, _customDomains = customDomains; _i < _customDomains.length; _i++) {\n    var customDomain = _customDomains[_i];\n    if (domain.endsWith(customDomain)) {\n      return domain;\n    }\n  }\n  return 'vimeo.com';\n}\n\n/**\n * Get the Vimeo URL from an element.\n * The element must have either a data-vimeo-id or data-vimeo-url attribute.\n *\n * @param {object} oEmbedParameters The oEmbed parameters.\n * @return {string}\n */\nfunction getVimeoUrl() {\n  var oEmbedParameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var id = oEmbedParameters.id;\n  var url = oEmbedParameters.url;\n  var idOrUrl = id || url;\n  if (!idOrUrl) {\n    throw new Error('An id or url must be passed, either in an options object or as a data-vimeo-id or data-vimeo-url attribute.');\n  }\n  if (isInteger(idOrUrl)) {\n    return \"https://vimeo.com/\".concat(idOrUrl);\n  }\n  if (isVimeoUrl(idOrUrl)) {\n    return idOrUrl.replace('http:', 'https:');\n  }\n  if (id) {\n    throw new TypeError(\"\\u201C\".concat(id, \"\\u201D is not a valid video id.\"));\n  }\n  throw new TypeError(\"\\u201C\".concat(idOrUrl, \"\\u201D is not a vimeo.com url.\"));\n}\n\n/* eslint-disable max-params */\n/**\n * A utility method for attaching and detaching event handlers\n *\n * @param {EventTarget} target\n * @param {string | string[]} eventName\n * @param {function} callback\n * @param {'addEventListener' | 'on'} onName\n * @param {'removeEventListener' | 'off'} offName\n * @return {{cancel: (function(): void)}}\n */\nvar subscribe = function subscribe(target, eventName, callback) {\n  var onName = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'addEventListener';\n  var offName = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'removeEventListener';\n  var eventNames = typeof eventName === 'string' ? [eventName] : eventName;\n  eventNames.forEach(function (evName) {\n    target[onName](evName, callback);\n  });\n  return {\n    cancel: function cancel() {\n      return eventNames.forEach(function (evName) {\n        return target[offName](evName, callback);\n      });\n    }\n  };\n};\nvar logSurveyLink = function logSurveyLink() {\n  console.log('\\n%cVimeo is looking for feedback!\\n%cComplete our survey about the Player SDK: https://t.maze.co/393567477', 'color:#00adef;font-size:1.2em;', 'color:#aaa;font-size:0.8em;');\n};\n\n/**\n * Find the iframe element that contains a specific source window\n *\n * @param {Window} sourceWindow The source window to find the iframe for\n * @param {Document} [doc=document] The document to search within\n * @return {HTMLIFrameElement|null} The iframe element if found, otherwise null\n */\nfunction findIframeBySourceWindow(sourceWindow) {\n  var doc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document;\n  if (!sourceWindow || !doc || typeof doc.querySelectorAll !== 'function') {\n    return null;\n  }\n  var iframes = doc.querySelectorAll('iframe');\n  for (var i = 0; i < iframes.length; i++) {\n    if (iframes[i] && iframes[i].contentWindow === sourceWindow) {\n      return iframes[i];\n    }\n  }\n  return null;\n}\n\nvar arrayIndexOfSupport = typeof Array.prototype.indexOf !== 'undefined';\nvar postMessageSupport = typeof window !== 'undefined' && typeof window.postMessage !== 'undefined';\nif (!isServerRuntime && (!arrayIndexOfSupport || !postMessageSupport)) {\n  throw new Error('Sorry, the Vimeo Player API is not available in this browser.');\n}\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\n/*!\n * weakmap-polyfill v2.0.4 - ECMAScript6 WeakMap polyfill\n * https://github.com/polygonplanet/weakmap-polyfill\n * Copyright (c) 2015-2021 polygonplanet <polygon.planet.aqua@gmail.com>\n * @license MIT\n */\n\n(function (self) {\n\n  if (self.WeakMap) {\n    return;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  var hasDefine = Object.defineProperty && function () {\n    try {\n      // Avoid IE8's broken Object.defineProperty\n      return Object.defineProperty({}, 'x', {\n        value: 1\n      }).x === 1;\n    } catch (e) {}\n  }();\n  var defineProperty = function (object, name, value) {\n    if (hasDefine) {\n      Object.defineProperty(object, name, {\n        configurable: true,\n        writable: true,\n        value: value\n      });\n    } else {\n      object[name] = value;\n    }\n  };\n  self.WeakMap = function () {\n    // ECMA-262 23.3 WeakMap Objects\n    function WeakMap() {\n      if (this === void 0) {\n        throw new TypeError(\"Constructor WeakMap requires 'new'\");\n      }\n      defineProperty(this, '_id', genId('_WeakMap'));\n\n      // ECMA-262 23.3.1.1 WeakMap([iterable])\n      if (arguments.length > 0) {\n        // Currently, WeakMap `iterable` argument is not supported\n        throw new TypeError('WeakMap iterable is not supported');\n      }\n    }\n\n    // ECMA-262 23.3.3.2 WeakMap.prototype.delete(key)\n    defineProperty(WeakMap.prototype, 'delete', function (key) {\n      checkInstance(this, 'delete');\n      if (!isObject(key)) {\n        return false;\n      }\n      var entry = key[this._id];\n      if (entry && entry[0] === key) {\n        delete key[this._id];\n        return true;\n      }\n      return false;\n    });\n\n    // ECMA-262 23.3.3.3 WeakMap.prototype.get(key)\n    defineProperty(WeakMap.prototype, 'get', function (key) {\n      checkInstance(this, 'get');\n      if (!isObject(key)) {\n        return void 0;\n      }\n      var entry = key[this._id];\n      if (entry && entry[0] === key) {\n        return entry[1];\n      }\n      return void 0;\n    });\n\n    // ECMA-262 23.3.3.4 WeakMap.prototype.has(key)\n    defineProperty(WeakMap.prototype, 'has', function (key) {\n      checkInstance(this, 'has');\n      if (!isObject(key)) {\n        return false;\n      }\n      var entry = key[this._id];\n      if (entry && entry[0] === key) {\n        return true;\n      }\n      return false;\n    });\n\n    // ECMA-262 23.3.3.5 WeakMap.prototype.set(key, value)\n    defineProperty(WeakMap.prototype, 'set', function (key, value) {\n      checkInstance(this, 'set');\n      if (!isObject(key)) {\n        throw new TypeError('Invalid value used as weak map key');\n      }\n      var entry = key[this._id];\n      if (entry && entry[0] === key) {\n        entry[1] = value;\n        return this;\n      }\n      defineProperty(key, this._id, [key, value]);\n      return this;\n    });\n    function checkInstance(x, methodName) {\n      if (!isObject(x) || !hasOwnProperty.call(x, '_id')) {\n        throw new TypeError(methodName + ' method called on incompatible receiver ' + typeof x);\n      }\n    }\n    function genId(prefix) {\n      return prefix + '_' + rand() + '.' + rand();\n    }\n    function rand() {\n      return Math.random().toString().substring(2);\n    }\n    defineProperty(WeakMap, '_polyfill', true);\n    return WeakMap;\n  }();\n  function isObject(x) {\n    return Object(x) === x;\n  }\n})(typeof globalThis !== 'undefined' ? globalThis : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof commonjsGlobal !== 'undefined' ? commonjsGlobal : commonjsGlobal);\n\nvar npo_src = createCommonjsModule(function (module) {\n/*! Native Promise Only\n    v0.8.1 (c) Kyle Simpson\n    MIT License: http://getify.mit-license.org\n*/\n\n(function UMD(name, context, definition) {\n  // special form of UMD for polyfilling across evironments\n  context[name] = context[name] || definition();\n  if (module.exports) {\n    module.exports = context[name];\n  }\n})(\"Promise\", typeof commonjsGlobal != \"undefined\" ? commonjsGlobal : commonjsGlobal, function DEF() {\n\n  var builtInProp,\n    cycle,\n    scheduling_queue,\n    ToString = Object.prototype.toString,\n    timer = typeof setImmediate != \"undefined\" ? function timer(fn) {\n      return setImmediate(fn);\n    } : setTimeout;\n\n  // dammit, IE8.\n  try {\n    Object.defineProperty({}, \"x\", {});\n    builtInProp = function builtInProp(obj, name, val, config) {\n      return Object.defineProperty(obj, name, {\n        value: val,\n        writable: true,\n        configurable: config !== false\n      });\n    };\n  } catch (err) {\n    builtInProp = function builtInProp(obj, name, val) {\n      obj[name] = val;\n      return obj;\n    };\n  }\n\n  // Note: using a queue instead of array for efficiency\n  scheduling_queue = function Queue() {\n    var first, last, item;\n    function Item(fn, self) {\n      this.fn = fn;\n      this.self = self;\n      this.next = void 0;\n    }\n    return {\n      add: function add(fn, self) {\n        item = new Item(fn, self);\n        if (last) {\n          last.next = item;\n        } else {\n          first = item;\n        }\n        last = item;\n        item = void 0;\n      },\n      drain: function drain() {\n        var f = first;\n        first = last = cycle = void 0;\n        while (f) {\n          f.fn.call(f.self);\n          f = f.next;\n        }\n      }\n    };\n  }();\n  function schedule(fn, self) {\n    scheduling_queue.add(fn, self);\n    if (!cycle) {\n      cycle = timer(scheduling_queue.drain);\n    }\n  }\n\n  // promise duck typing\n  function isThenable(o) {\n    var _then,\n      o_type = typeof o;\n    if (o != null && (o_type == \"object\" || o_type == \"function\")) {\n      _then = o.then;\n    }\n    return typeof _then == \"function\" ? _then : false;\n  }\n  function notify() {\n    for (var i = 0; i < this.chain.length; i++) {\n      notifyIsolated(this, this.state === 1 ? this.chain[i].success : this.chain[i].failure, this.chain[i]);\n    }\n    this.chain.length = 0;\n  }\n\n  // NOTE: This is a separate function to isolate\n  // the `try..catch` so that other code can be\n  // optimized better\n  function notifyIsolated(self, cb, chain) {\n    var ret, _then;\n    try {\n      if (cb === false) {\n        chain.reject(self.msg);\n      } else {\n        if (cb === true) {\n          ret = self.msg;\n        } else {\n          ret = cb.call(void 0, self.msg);\n        }\n        if (ret === chain.promise) {\n          chain.reject(TypeError(\"Promise-chain cycle\"));\n        } else if (_then = isThenable(ret)) {\n          _then.call(ret, chain.resolve, chain.reject);\n        } else {\n          chain.resolve(ret);\n        }\n      }\n    } catch (err) {\n      chain.reject(err);\n    }\n  }\n  function resolve(msg) {\n    var _then,\n      self = this;\n\n    // already triggered?\n    if (self.triggered) {\n      return;\n    }\n    self.triggered = true;\n\n    // unwrap\n    if (self.def) {\n      self = self.def;\n    }\n    try {\n      if (_then = isThenable(msg)) {\n        schedule(function () {\n          var def_wrapper = new MakeDefWrapper(self);\n          try {\n            _then.call(msg, function $resolve$() {\n              resolve.apply(def_wrapper, arguments);\n            }, function $reject$() {\n              reject.apply(def_wrapper, arguments);\n            });\n          } catch (err) {\n            reject.call(def_wrapper, err);\n          }\n        });\n      } else {\n        self.msg = msg;\n        self.state = 1;\n        if (self.chain.length > 0) {\n          schedule(notify, self);\n        }\n      }\n    } catch (err) {\n      reject.call(new MakeDefWrapper(self), err);\n    }\n  }\n  function reject(msg) {\n    var self = this;\n\n    // already triggered?\n    if (self.triggered) {\n      return;\n    }\n    self.triggered = true;\n\n    // unwrap\n    if (self.def) {\n      self = self.def;\n    }\n    self.msg = msg;\n    self.state = 2;\n    if (self.chain.length > 0) {\n      schedule(notify, self);\n    }\n  }\n  function iteratePromises(Constructor, arr, resolver, rejecter) {\n    for (var idx = 0; idx < arr.length; idx++) {\n      (function IIFE(idx) {\n        Constructor.resolve(arr[idx]).then(function $resolver$(msg) {\n          resolver(idx, msg);\n        }, rejecter);\n      })(idx);\n    }\n  }\n  function MakeDefWrapper(self) {\n    this.def = self;\n    this.triggered = false;\n  }\n  function MakeDef(self) {\n    this.promise = self;\n    this.state = 0;\n    this.triggered = false;\n    this.chain = [];\n    this.msg = void 0;\n  }\n  function Promise(executor) {\n    if (typeof executor != \"function\") {\n      throw TypeError(\"Not a function\");\n    }\n    if (this.__NPO__ !== 0) {\n      throw TypeError(\"Not a promise\");\n    }\n\n    // instance shadowing the inherited \"brand\"\n    // to signal an already \"initialized\" promise\n    this.__NPO__ = 1;\n    var def = new MakeDef(this);\n    this[\"then\"] = function then(success, failure) {\n      var o = {\n        success: typeof success == \"function\" ? success : true,\n        failure: typeof failure == \"function\" ? failure : false\n      };\n      // Note: `then(..)` itself can be borrowed to be used against\n      // a different promise constructor for making the chained promise,\n      // by substituting a different `this` binding.\n      o.promise = new this.constructor(function extractChain(resolve, reject) {\n        if (typeof resolve != \"function\" || typeof reject != \"function\") {\n          throw TypeError(\"Not a function\");\n        }\n        o.resolve = resolve;\n        o.reject = reject;\n      });\n      def.chain.push(o);\n      if (def.state !== 0) {\n        schedule(notify, def);\n      }\n      return o.promise;\n    };\n    this[\"catch\"] = function $catch$(failure) {\n      return this.then(void 0, failure);\n    };\n    try {\n      executor.call(void 0, function publicResolve(msg) {\n        resolve.call(def, msg);\n      }, function publicReject(msg) {\n        reject.call(def, msg);\n      });\n    } catch (err) {\n      reject.call(def, err);\n    }\n  }\n  var PromisePrototype = builtInProp({}, \"constructor\", Promise, /*configurable=*/false);\n\n  // Note: Android 4 cannot use `Object.defineProperty(..)` here\n  Promise.prototype = PromisePrototype;\n\n  // built-in \"brand\" to signal an \"uninitialized\" promise\n  builtInProp(PromisePrototype, \"__NPO__\", 0, /*configurable=*/false);\n  builtInProp(Promise, \"resolve\", function Promise$resolve(msg) {\n    var Constructor = this;\n\n    // spec mandated checks\n    // note: best \"isPromise\" check that's practical for now\n    if (msg && typeof msg == \"object\" && msg.__NPO__ === 1) {\n      return msg;\n    }\n    return new Constructor(function executor(resolve, reject) {\n      if (typeof resolve != \"function\" || typeof reject != \"function\") {\n        throw TypeError(\"Not a function\");\n      }\n      resolve(msg);\n    });\n  });\n  builtInProp(Promise, \"reject\", function Promise$reject(msg) {\n    return new this(function executor(resolve, reject) {\n      if (typeof resolve != \"function\" || typeof reject != \"function\") {\n        throw TypeError(\"Not a function\");\n      }\n      reject(msg);\n    });\n  });\n  builtInProp(Promise, \"all\", function Promise$all(arr) {\n    var Constructor = this;\n\n    // spec mandated checks\n    if (ToString.call(arr) != \"[object Array]\") {\n      return Constructor.reject(TypeError(\"Not an array\"));\n    }\n    if (arr.length === 0) {\n      return Constructor.resolve([]);\n    }\n    return new Constructor(function executor(resolve, reject) {\n      if (typeof resolve != \"function\" || typeof reject != \"function\") {\n        throw TypeError(\"Not a function\");\n      }\n      var len = arr.length,\n        msgs = Array(len),\n        count = 0;\n      iteratePromises(Constructor, arr, function resolver(idx, msg) {\n        msgs[idx] = msg;\n        if (++count === len) {\n          resolve(msgs);\n        }\n      }, reject);\n    });\n  });\n  builtInProp(Promise, \"race\", function Promise$race(arr) {\n    var Constructor = this;\n\n    // spec mandated checks\n    if (ToString.call(arr) != \"[object Array]\") {\n      return Constructor.reject(TypeError(\"Not an array\"));\n    }\n    return new Constructor(function executor(resolve, reject) {\n      if (typeof resolve != \"function\" || typeof reject != \"function\") {\n        throw TypeError(\"Not a function\");\n      }\n      iteratePromises(Constructor, arr, function resolver(idx, msg) {\n        resolve(msg);\n      }, reject);\n    });\n  });\n  return Promise;\n});\n});\n\n/**\n * @module lib/callbacks\n */\n\nvar callbackMap = new WeakMap();\n\n/**\n * Store a callback for a method or event for a player.\n *\n * @param {Player} player The player object.\n * @param {string} name The method or event name.\n * @param {(function(this:Player, *): void|{resolve: function, reject: function})} callback\n *        The callback to call or an object with resolve and reject functions for a promise.\n * @return {void}\n */\nfunction storeCallback(player, name, callback) {\n  var playerCallbacks = callbackMap.get(player.element) || {};\n  if (!(name in playerCallbacks)) {\n    playerCallbacks[name] = [];\n  }\n  playerCallbacks[name].push(callback);\n  callbackMap.set(player.element, playerCallbacks);\n}\n\n/**\n * Get the callbacks for a player and event or method.\n *\n * @param {Player} player The player object.\n * @param {string} name The method or event name\n * @return {function[]}\n */\nfunction getCallbacks(player, name) {\n  var playerCallbacks = callbackMap.get(player.element) || {};\n  return playerCallbacks[name] || [];\n}\n\n/**\n * Remove a stored callback for a method or event for a player.\n *\n * @param {Player} player The player object.\n * @param {string} name The method or event name\n * @param {function} [callback] The specific callback to remove.\n * @return {boolean} Was this the last callback?\n */\nfunction removeCallback(player, name, callback) {\n  var playerCallbacks = callbackMap.get(player.element) || {};\n  if (!playerCallbacks[name]) {\n    return true;\n  }\n\n  // If no callback is passed, remove all callbacks for the event\n  if (!callback) {\n    playerCallbacks[name] = [];\n    callbackMap.set(player.element, playerCallbacks);\n    return true;\n  }\n  var index = playerCallbacks[name].indexOf(callback);\n  if (index !== -1) {\n    playerCallbacks[name].splice(index, 1);\n  }\n  callbackMap.set(player.element, playerCallbacks);\n  return playerCallbacks[name] && playerCallbacks[name].length === 0;\n}\n\n/**\n * Return the first stored callback for a player and event or method.\n *\n * @param {Player} player The player object.\n * @param {string} name The method or event name.\n * @return {function} The callback, or false if there were none\n */\nfunction shiftCallbacks(player, name) {\n  var playerCallbacks = getCallbacks(player, name);\n  if (playerCallbacks.length < 1) {\n    return false;\n  }\n  var callback = playerCallbacks.shift();\n  removeCallback(player, name, callback);\n  return callback;\n}\n\n/**\n * Move callbacks associated with an element to another element.\n *\n * @param {HTMLElement} oldElement The old element.\n * @param {HTMLElement} newElement The new element.\n * @return {void}\n */\nfunction swapCallbacks(oldElement, newElement) {\n  var playerCallbacks = callbackMap.get(oldElement);\n  callbackMap.set(newElement, playerCallbacks);\n  callbackMap.delete(oldElement);\n}\n\n/**\n * @module lib/postmessage\n */\n\n/**\n * Parse a message received from postMessage.\n *\n * @param {*} data The data received from postMessage.\n * @return {object}\n */\nfunction parseMessageData(data) {\n  if (typeof data === 'string') {\n    try {\n      data = JSON.parse(data);\n    } catch (error) {\n      // If the message cannot be parsed, throw the error as a warning\n      console.warn(error);\n      return {};\n    }\n  }\n  return data;\n}\n\n/**\n * Post a message to the specified target.\n *\n * @param {Player} player The player object to use.\n * @param {string} method The API method to call.\n * @param {string|number|object|Array|undefined} params The parameters to send to the player.\n * @return {void}\n */\nfunction postMessage(player, method, params) {\n  if (!player.element.contentWindow || !player.element.contentWindow.postMessage) {\n    return;\n  }\n  var message = {\n    method: method\n  };\n  if (params !== undefined) {\n    message.value = params;\n  }\n\n  // IE 8 and 9 do not support passing messages, so stringify them\n  var ieVersion = parseFloat(navigator.userAgent.toLowerCase().replace(/^.*msie (\\d+).*$/, '$1'));\n  if (ieVersion >= 8 && ieVersion < 10) {\n    message = JSON.stringify(message);\n  }\n  player.element.contentWindow.postMessage(message, player.origin);\n}\n\n/**\n * Parse the data received from a message event.\n *\n * @param {Player} player The player that received the message.\n * @param {(Object|string)} data The message data. Strings will be parsed into JSON.\n * @return {void}\n */\nfunction processData(player, data) {\n  data = parseMessageData(data);\n  var callbacks = [];\n  var param;\n  if (data.event) {\n    if (data.event === 'error') {\n      var promises = getCallbacks(player, data.data.method);\n      promises.forEach(function (promise) {\n        var error = new Error(data.data.message);\n        error.name = data.data.name;\n        promise.reject(error);\n        removeCallback(player, data.data.method, promise);\n      });\n    }\n    callbacks = getCallbacks(player, \"event:\".concat(data.event));\n    param = data.data;\n  } else if (data.method) {\n    var callback = shiftCallbacks(player, data.method);\n    if (callback) {\n      callbacks.push(callback);\n      param = data.value;\n    }\n  }\n  callbacks.forEach(function (callback) {\n    try {\n      if (typeof callback === 'function') {\n        callback.call(player, param);\n        return;\n      }\n      callback.resolve(param);\n    } catch (e) {\n      // empty\n    }\n  });\n}\n\n/**\n * @module lib/embed\n */\nvar oEmbedParameters = ['airplay', 'audio_tracks', 'audiotrack', 'autopause', 'autoplay', 'background', 'byline', 'cc', 'chapter_id', 'chapters', 'chromecast', 'color', 'colors', 'controls', 'dnt', 'end_time', 'fullscreen', 'height', 'id', 'initial_quality', 'interactive_params', 'keyboard', 'loop', 'maxheight', 'max_quality', 'maxwidth', 'min_quality', 'muted', 'play_button_position', 'playsinline', 'portrait', 'preload', 'progress_bar', 'quality', 'quality_selector', 'responsive', 'skipping_forward', 'speed', 'start_time', 'texttrack', 'thumbnail_id', 'title', 'transcript', 'transparent', 'unmute_button', 'url', 'vimeo_logo', 'volume', 'watch_full_video', 'width'];\n\n/**\n * Get the 'data-vimeo'-prefixed attributes from an element as an object.\n *\n * @param {HTMLElement} element The element.\n * @param {Object} [defaults={}] The default values to use.\n * @return {Object<string, string>}\n */\nfunction getOEmbedParameters(element) {\n  var defaults = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return oEmbedParameters.reduce(function (params, param) {\n    var value = element.getAttribute(\"data-vimeo-\".concat(param));\n    if (value || value === '') {\n      params[param] = value === '' ? 1 : value;\n    }\n    return params;\n  }, defaults);\n}\n\n/**\n * Create an embed from oEmbed data inside an element.\n *\n * @param {object} data The oEmbed data.\n * @param {HTMLElement} element The element to put the iframe in.\n * @return {HTMLIFrameElement} The iframe embed.\n */\nfunction createEmbed(_ref, element) {\n  var html = _ref.html;\n  if (!element) {\n    throw new TypeError('An element must be provided');\n  }\n  if (element.getAttribute('data-vimeo-initialized') !== null) {\n    return element.querySelector('iframe');\n  }\n  var div = document.createElement('div');\n  div.innerHTML = html;\n  element.appendChild(div.firstChild);\n  element.setAttribute('data-vimeo-initialized', 'true');\n  return element.querySelector('iframe');\n}\n\n/**\n * Make an oEmbed call for the specified URL.\n *\n * @param {string} videoUrl The vimeo.com url for the video.\n * @param {Object} [params] Parameters to pass to oEmbed.\n * @param {HTMLElement} element The element.\n * @return {Promise}\n */\nfunction getOEmbedData(videoUrl) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var element = arguments.length > 2 ? arguments[2] : undefined;\n  return new Promise(function (resolve, reject) {\n    if (!isVimeoUrl(videoUrl)) {\n      throw new TypeError(\"\\u201C\".concat(videoUrl, \"\\u201D is not a vimeo.com url.\"));\n    }\n    var domain = getOembedDomain(videoUrl);\n    var url = \"https://\".concat(domain, \"/api/oembed.json?url=\").concat(encodeURIComponent(videoUrl));\n    for (var param in params) {\n      if (params.hasOwnProperty(param)) {\n        url += \"&\".concat(param, \"=\").concat(encodeURIComponent(params[param]));\n      }\n    }\n    var xhr = 'XDomainRequest' in window ? new XDomainRequest() : new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.onload = function () {\n      if (xhr.status === 404) {\n        reject(new Error(\"\\u201C\".concat(videoUrl, \"\\u201D was not found.\")));\n        return;\n      }\n      if (xhr.status === 403) {\n        reject(new Error(\"\\u201C\".concat(videoUrl, \"\\u201D is not embeddable.\")));\n        return;\n      }\n      try {\n        var json = JSON.parse(xhr.responseText);\n        // Check api response for 403 on oembed\n        if (json.domain_status_code === 403) {\n          // We still want to create the embed to give users visual feedback\n          createEmbed(json, element);\n          reject(new Error(\"\\u201C\".concat(videoUrl, \"\\u201D is not embeddable.\")));\n          return;\n        }\n        resolve(json);\n      } catch (error) {\n        reject(error);\n      }\n    };\n    xhr.onerror = function () {\n      var status = xhr.status ? \" (\".concat(xhr.status, \")\") : '';\n      reject(new Error(\"There was an error fetching the embed code from Vimeo\".concat(status, \".\")));\n    };\n    xhr.send();\n  });\n}\n\n/**\n * Initialize all embeds within a specific element\n *\n * @param {HTMLElement} [parent=document] The parent element.\n * @return {void}\n */\nfunction initializeEmbeds() {\n  var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n  var elements = [].slice.call(parent.querySelectorAll('[data-vimeo-id], [data-vimeo-url]'));\n  var handleError = function handleError(error) {\n    if ('console' in window && console.error) {\n      console.error(\"There was an error creating an embed: \".concat(error));\n    }\n  };\n  elements.forEach(function (element) {\n    try {\n      // Skip any that have data-vimeo-defer\n      if (element.getAttribute('data-vimeo-defer') !== null) {\n        return;\n      }\n      var params = getOEmbedParameters(element);\n      var url = getVimeoUrl(params);\n      getOEmbedData(url, params, element).then(function (data) {\n        return createEmbed(data, element);\n      }).catch(handleError);\n    } catch (error) {\n      handleError(error);\n    }\n  });\n}\n\n/**\n * Resize embeds when messaged by the player.\n *\n * @param {HTMLElement} [parent=document] The parent element.\n * @return {void}\n */\nfunction resizeEmbeds() {\n  var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n  // Prevent execution if users include the player.js script multiple times.\n  if (window.VimeoPlayerResizeEmbeds_) {\n    return;\n  }\n  window.VimeoPlayerResizeEmbeds_ = true;\n  var onMessage = function onMessage(event) {\n    if (!isVimeoUrl(event.origin)) {\n      return;\n    }\n\n    // 'spacechange' is fired only on embeds with cards\n    if (!event.data || event.data.event !== 'spacechange') {\n      return;\n    }\n    var senderIFrame = event.source ? findIframeBySourceWindow(event.source, parent) : null;\n    if (senderIFrame) {\n      // Change padding-bottom of the enclosing div to accommodate\n      // card carousel without distorting aspect ratio\n      var space = senderIFrame.parentElement;\n      space.style.paddingBottom = \"\".concat(event.data.data[0].bottom, \"px\");\n    }\n  };\n  window.addEventListener('message', onMessage);\n}\n\n/**\n * Add chapters to existing metadata for Google SEO\n *\n * @param {HTMLElement} [parent=document] The parent element.\n * @return {void}\n */\nfunction initAppendVideoMetadata() {\n  var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n  //  Prevent execution if users include the player.js script multiple times.\n  if (window.VimeoSeoMetadataAppended) {\n    return;\n  }\n  window.VimeoSeoMetadataAppended = true;\n  var onMessage = function onMessage(event) {\n    if (!isVimeoUrl(event.origin)) {\n      return;\n    }\n    var data = parseMessageData(event.data);\n    if (!data || data.event !== 'ready') {\n      return;\n    }\n    var senderIFrame = event.source ? findIframeBySourceWindow(event.source, parent) : null;\n\n    // Initiate appendVideoMetadata if iframe is a Vimeo embed\n    if (senderIFrame && isVimeoEmbed(senderIFrame.src)) {\n      var player = new Player(senderIFrame);\n      player.callMethod('appendVideoMetadata', window.location.href);\n    }\n  };\n  window.addEventListener('message', onMessage);\n}\n\n/**\n * Seek to time indicated by vimeo_t query parameter if present in URL\n *\n * @param {HTMLElement} [parent=document] The parent element.\n * @return {void}\n */\nfunction checkUrlTimeParam() {\n  var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n  //  Prevent execution if users include the player.js script multiple times.\n  if (window.VimeoCheckedUrlTimeParam) {\n    return;\n  }\n  window.VimeoCheckedUrlTimeParam = true;\n  var handleError = function handleError(error) {\n    if ('console' in window && console.error) {\n      console.error(\"There was an error getting video Id: \".concat(error));\n    }\n  };\n  var onMessage = function onMessage(event) {\n    if (!isVimeoUrl(event.origin)) {\n      return;\n    }\n    var data = parseMessageData(event.data);\n    if (!data || data.event !== 'ready') {\n      return;\n    }\n    var senderIFrame = event.source ? findIframeBySourceWindow(event.source, parent) : null;\n    if (senderIFrame && isVimeoEmbed(senderIFrame.src)) {\n      var player = new Player(senderIFrame);\n      player.getVideoId().then(function (videoId) {\n        var matches = new RegExp(\"[?&]vimeo_t_\".concat(videoId, \"=([^&#]*)\")).exec(window.location.href);\n        if (matches && matches[1]) {\n          var sec = decodeURI(matches[1]);\n          player.setCurrentTime(sec);\n        }\n        return;\n      }).catch(handleError);\n    }\n  };\n  window.addEventListener('message', onMessage);\n}\n\n/**\n * Updates iframe embeds to support DRM content playback by adding the 'encrypted-media' permission\n * to the iframe's allow attribute when DRM initialization fails. This function acts as a fallback\n * mechanism to enable playback of DRM-protected content in embeds that weren't properly configured.\n *\n * @return {void}\n */\nfunction updateDRMEmbeds() {\n  if (window.VimeoDRMEmbedsUpdated) {\n    return;\n  }\n  window.VimeoDRMEmbedsUpdated = true;\n\n  /**\n   * Handle message events for DRM initialization failures\n   * @param {MessageEvent} event - The message event from the iframe\n   */\n  var onMessage = function onMessage(event) {\n    if (!isVimeoUrl(event.origin)) {\n      return;\n    }\n    var data = parseMessageData(event.data);\n    if (!data || data.event !== 'drminitfailed') {\n      return;\n    }\n    var senderIFrame = event.source ? findIframeBySourceWindow(event.source) : null;\n    if (!senderIFrame) {\n      return;\n    }\n    var currentAllow = senderIFrame.getAttribute('allow') || '';\n    var allowSupportsDRM = currentAllow.includes('encrypted-media');\n    if (!allowSupportsDRM) {\n      // For DRM playback to successfully occur, the iframe `allow` attribute must include 'encrypted-media'.\n      // If the video requires DRM but doesn't have the attribute, we try to add on behalf of the embed owner\n      // as a temporary measure to enable playback until they're able to update their embeds.\n      senderIFrame.setAttribute('allow', \"\".concat(currentAllow, \"; encrypted-media\"));\n      var currentUrl = new URL(senderIFrame.getAttribute('src'));\n\n      // Adding this forces the embed to reload once `allow` has been updated with `encrypted-media`.\n      currentUrl.searchParams.set('forcereload', 'drm');\n      senderIFrame.setAttribute('src', currentUrl.toString());\n      return;\n    }\n  };\n  window.addEventListener('message', onMessage);\n}\n\n/* MIT License\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nTerms */\n\nfunction initializeScreenfull() {\n  var fn = function () {\n    var val;\n    var fnMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],\n    // New WebKit\n    ['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n    // Old WebKit\n    ['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'], ['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'], ['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\n    var i = 0;\n    var l = fnMap.length;\n    var ret = {};\n    for (; i < l; i++) {\n      val = fnMap[i];\n      if (val && val[1] in document) {\n        for (i = 0; i < val.length; i++) {\n          ret[fnMap[0][i]] = val[i];\n        }\n        return ret;\n      }\n    }\n    return false;\n  }();\n  var eventNameMap = {\n    fullscreenchange: fn.fullscreenchange,\n    fullscreenerror: fn.fullscreenerror\n  };\n  var screenfull = {\n    request: function request(element) {\n      return new Promise(function (resolve, reject) {\n        var onFullScreenEntered = function onFullScreenEntered() {\n          screenfull.off('fullscreenchange', onFullScreenEntered);\n          resolve();\n        };\n        screenfull.on('fullscreenchange', onFullScreenEntered);\n        element = element || document.documentElement;\n        var returnPromise = element[fn.requestFullscreen]();\n        if (returnPromise instanceof Promise) {\n          returnPromise.then(onFullScreenEntered).catch(reject);\n        }\n      });\n    },\n    exit: function exit() {\n      return new Promise(function (resolve, reject) {\n        if (!screenfull.isFullscreen) {\n          resolve();\n          return;\n        }\n        var onFullScreenExit = function onFullScreenExit() {\n          screenfull.off('fullscreenchange', onFullScreenExit);\n          resolve();\n        };\n        screenfull.on('fullscreenchange', onFullScreenExit);\n        var returnPromise = document[fn.exitFullscreen]();\n        if (returnPromise instanceof Promise) {\n          returnPromise.then(onFullScreenExit).catch(reject);\n        }\n      });\n    },\n    on: function on(event, callback) {\n      var eventName = eventNameMap[event];\n      if (eventName) {\n        document.addEventListener(eventName, callback);\n      }\n    },\n    off: function off(event, callback) {\n      var eventName = eventNameMap[event];\n      if (eventName) {\n        document.removeEventListener(eventName, callback);\n      }\n    }\n  };\n  Object.defineProperties(screenfull, {\n    isFullscreen: {\n      get: function get() {\n        return Boolean(document[fn.fullscreenElement]);\n      }\n    },\n    element: {\n      enumerable: true,\n      get: function get() {\n        return document[fn.fullscreenElement];\n      }\n    },\n    isEnabled: {\n      enumerable: true,\n      get: function get() {\n        // Coerce to boolean in case of old WebKit\n        return Boolean(document[fn.fullscreenEnabled]);\n      }\n    }\n  });\n  return screenfull;\n}\n\n/** @typedef {import('./timing-src-connector.types').PlayerControls} PlayerControls */\n/** @typedef {import('timing-object').ITimingObject} TimingObject */\n/** @typedef {import('./timing-src-connector.types').TimingSrcConnectorOptions} TimingSrcConnectorOptions */\n/** @typedef {(msg: string) => any} Logger */\n/** @typedef {import('timing-object').TConnectionState} TConnectionState */\n\n/**\n * @type {TimingSrcConnectorOptions}\n *\n * For details on these properties and their effects, see the typescript definition referenced above.\n */\nvar defaultOptions = {\n  role: 'viewer',\n  autoPlayMuted: true,\n  allowedDrift: 0.3,\n  maxAllowedDrift: 1,\n  minCheckInterval: 0.1,\n  maxRateAdjustment: 0.2,\n  maxTimeToCatchUp: 1\n};\n\n/**\n * There's a proposed W3C spec for the Timing Object which would introduce a new set of APIs that would simplify time-synchronization tasks for browser applications.\n *\n * Proposed spec: https://webtiming.github.io/timingobject/\n * V3 Spec: https://timingsrc.readthedocs.io/en/latest/\n * Demuxed talk: https://www.youtube.com/watch?v=cZSjDaGDmX8\n *\n * This class makes it easy to connect Vimeo.Player to a provided TimingObject via Vimeo.Player.setTimingSrc(myTimingObject, options) and the synchronization will be handled automatically.\n *\n * There are 5 general responsibilities in TimingSrcConnector:\n *\n * 1. `updatePlayer()` which sets the player's currentTime, playbackRate and pause/play state based on current state of the TimingObject.\n * 2. `updateTimingObject()` which sets the TimingObject's position and velocity from the player's state.\n * 3. `playerUpdater` which listens for change events on the TimingObject and will respond by calling updatePlayer.\n * 4. `timingObjectUpdater` which listens to the player events of seeked, play and pause and will respond by calling `updateTimingObject()`.\n * 5. `maintainPlaybackPosition` this is code that constantly monitors the player to make sure it's always in sync with the TimingObject. This is needed because videos will generally not play with precise time accuracy and there will be some drift which becomes more noticeable over longer periods (as noted in the timing-object spec). More details on this method below.\n */\nvar TimingSrcConnector = /*#__PURE__*/function (_EventTarget) {\n  _inherits(TimingSrcConnector, _EventTarget);\n  var _super = _createSuper(TimingSrcConnector);\n  /**\n   * @param {PlayerControls} player\n   * @param {TimingObject} timingObject\n   * @param {TimingSrcConnectorOptions} options\n   * @param {Logger} logger\n   */\n  function TimingSrcConnector(_player, timingObject) {\n    var _this;\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var logger = arguments.length > 3 ? arguments[3] : undefined;\n    _classCallCheck(this, TimingSrcConnector);\n    _this = _super.call(this);\n    _defineProperty(_assertThisInitialized(_this), \"logger\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"speedAdjustment\", 0);\n    /**\n     * @param {PlayerControls} player\n     * @param {number} newAdjustment\n     * @return {Promise<void>}\n     */\n    _defineProperty(_assertThisInitialized(_this), \"adjustSpeed\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(player, newAdjustment) {\n        var newPlaybackRate;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(_this.speedAdjustment === newAdjustment)) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              _context.next = 4;\n              return player.getPlaybackRate();\n            case 4:\n              _context.t0 = _context.sent;\n              _context.t1 = _this.speedAdjustment;\n              _context.t2 = _context.t0 - _context.t1;\n              _context.t3 = newAdjustment;\n              newPlaybackRate = _context.t2 + _context.t3;\n              _this.log(\"New playbackRate:  \".concat(newPlaybackRate));\n              _context.next = 12;\n              return player.setPlaybackRate(newPlaybackRate);\n            case 12:\n              _this.speedAdjustment = newAdjustment;\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    _this.logger = logger;\n    _this.init(timingObject, _player, _objectSpread2(_objectSpread2({}, defaultOptions), options));\n    return _this;\n  }\n  _createClass(TimingSrcConnector, [{\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.dispatchEvent(new Event('disconnect'));\n    }\n\n    /**\n     * @param {TimingObject} timingObject\n     * @param {PlayerControls} player\n     * @param {TimingSrcConnectorOptions} options\n     * @return {Promise<void>}\n     */\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(timingObject, player, options) {\n        var _this2 = this;\n        var playerUpdater, positionSync, timingObjectUpdater;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.waitForTOReadyState(timingObject, 'open');\n            case 2:\n              if (!(options.role === 'viewer')) {\n                _context2.next = 10;\n                break;\n              }\n              _context2.next = 5;\n              return this.updatePlayer(timingObject, player, options);\n            case 5:\n              playerUpdater = subscribe(timingObject, 'change', function () {\n                return _this2.updatePlayer(timingObject, player, options);\n              });\n              positionSync = this.maintainPlaybackPosition(timingObject, player, options);\n              this.addEventListener('disconnect', function () {\n                positionSync.cancel();\n                playerUpdater.cancel();\n              });\n              _context2.next = 14;\n              break;\n            case 10:\n              _context2.next = 12;\n              return this.updateTimingObject(timingObject, player);\n            case 12:\n              timingObjectUpdater = subscribe(player, ['seeked', 'play', 'pause', 'ratechange'], function () {\n                return _this2.updateTimingObject(timingObject, player);\n              }, 'on', 'off');\n              this.addEventListener('disconnect', function () {\n                return timingObjectUpdater.cancel();\n              });\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function init(_x3, _x4, _x5) {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n    /**\n     * Sets the TimingObject's state to reflect that of the player\n     *\n     * @param {TimingObject} timingObject\n     * @param {PlayerControls} player\n     * @return {Promise<void>}\n     */\n  }, {\n    key: \"updateTimingObject\",\n    value: function () {\n      var _updateTimingObject = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(timingObject, player) {\n        var _yield$Promise$all, _yield$Promise$all2, position, isPaused, playbackRate;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return Promise.all([player.getCurrentTime(), player.getPaused(), player.getPlaybackRate()]);\n            case 2:\n              _yield$Promise$all = _context3.sent;\n              _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 3);\n              position = _yield$Promise$all2[0];\n              isPaused = _yield$Promise$all2[1];\n              playbackRate = _yield$Promise$all2[2];\n              timingObject.update({\n                position: position,\n                velocity: isPaused ? 0 : playbackRate\n              });\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      function updateTimingObject(_x6, _x7) {\n        return _updateTimingObject.apply(this, arguments);\n      }\n      return updateTimingObject;\n    }()\n    /**\n     * Sets the player's timing state to reflect that of the TimingObject\n     *\n     * @param {TimingObject} timingObject\n     * @param {PlayerControls} player\n     * @param {TimingSrcConnectorOptions} options\n     * @return {Promise<void>}\n     */\n  }, {\n    key: \"updatePlayer\",\n    value: function () {\n      var _updatePlayer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(timingObject, player, options) {\n        var _timingObject$query, position, velocity;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _timingObject$query = timingObject.query(), position = _timingObject$query.position, velocity = _timingObject$query.velocity;\n              if (typeof position === 'number') {\n                player.setCurrentTime(position);\n              }\n              if (!(typeof velocity === 'number')) {\n                _context5.next = 25;\n                break;\n              }\n              if (!(velocity === 0)) {\n                _context5.next = 11;\n                break;\n              }\n              _context5.next = 6;\n              return player.getPaused();\n            case 6:\n              _context5.t0 = _context5.sent;\n              if (!(_context5.t0 === false)) {\n                _context5.next = 9;\n                break;\n              }\n              player.pause();\n            case 9:\n              _context5.next = 25;\n              break;\n            case 11:\n              if (!(velocity > 0)) {\n                _context5.next = 25;\n                break;\n              }\n              _context5.next = 14;\n              return player.getPaused();\n            case 14:\n              _context5.t1 = _context5.sent;\n              if (!(_context5.t1 === true)) {\n                _context5.next = 19;\n                break;\n              }\n              _context5.next = 18;\n              return player.play().catch( /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(err) {\n                  return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                    while (1) switch (_context4.prev = _context4.next) {\n                      case 0:\n                        if (!(err.name === 'NotAllowedError' && options.autoPlayMuted)) {\n                          _context4.next = 5;\n                          break;\n                        }\n                        _context4.next = 3;\n                        return player.setMuted(true);\n                      case 3:\n                        _context4.next = 5;\n                        return player.play().catch(function (err2) {\n                          return console.error('Couldn\\'t play the video from TimingSrcConnector. Error:', err2);\n                        });\n                      case 5:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }, _callee4);\n                }));\n                return function (_x11) {\n                  return _ref2.apply(this, arguments);\n                };\n              }());\n            case 18:\n              this.updatePlayer(timingObject, player, options);\n            case 19:\n              _context5.next = 21;\n              return player.getPlaybackRate();\n            case 21:\n              _context5.t2 = _context5.sent;\n              _context5.t3 = velocity;\n              if (!(_context5.t2 !== _context5.t3)) {\n                _context5.next = 25;\n                break;\n              }\n              player.setPlaybackRate(velocity);\n            case 25:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function updatePlayer(_x8, _x9, _x10) {\n        return _updatePlayer.apply(this, arguments);\n      }\n      return updatePlayer;\n    }()\n    /**\n     * Since video players do not play with 100% time precision, we need to closely monitor\n     * our player to be sure it remains in sync with the TimingObject.\n     *\n     * If out of sync, we use the current conditions and the options provided to determine\n     * whether to re-sync via setting currentTime or adjusting the playbackRate\n     *\n     * @param {TimingObject} timingObject\n     * @param {PlayerControls} player\n     * @param {TimingSrcConnectorOptions} options\n     * @return {{cancel: (function(): void)}}\n     */\n  }, {\n    key: \"maintainPlaybackPosition\",\n    value: function maintainPlaybackPosition(timingObject, player, options) {\n      var _this3 = this;\n      var allowedDrift = options.allowedDrift,\n        maxAllowedDrift = options.maxAllowedDrift,\n        minCheckInterval = options.minCheckInterval,\n        maxRateAdjustment = options.maxRateAdjustment,\n        maxTimeToCatchUp = options.maxTimeToCatchUp;\n      var syncInterval = Math.min(maxTimeToCatchUp, Math.max(minCheckInterval, maxAllowedDrift)) * 1000;\n      var check = /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n          var diff, diffAbs, min, max, adjustment;\n          return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n            while (1) switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.t0 = timingObject.query().velocity === 0;\n                if (_context6.t0) {\n                  _context6.next = 6;\n                  break;\n                }\n                _context6.next = 4;\n                return player.getPaused();\n              case 4:\n                _context6.t1 = _context6.sent;\n                _context6.t0 = _context6.t1 === true;\n              case 6:\n                if (!_context6.t0) {\n                  _context6.next = 8;\n                  break;\n                }\n                return _context6.abrupt(\"return\");\n              case 8:\n                _context6.t2 = timingObject.query().position;\n                _context6.next = 11;\n                return player.getCurrentTime();\n              case 11:\n                _context6.t3 = _context6.sent;\n                diff = _context6.t2 - _context6.t3;\n                diffAbs = Math.abs(diff);\n                _this3.log(\"Drift: \".concat(diff));\n                if (!(diffAbs > maxAllowedDrift)) {\n                  _context6.next = 22;\n                  break;\n                }\n                _context6.next = 18;\n                return _this3.adjustSpeed(player, 0);\n              case 18:\n                player.setCurrentTime(timingObject.query().position);\n                _this3.log('Resync by currentTime');\n                _context6.next = 29;\n                break;\n              case 22:\n                if (!(diffAbs > allowedDrift)) {\n                  _context6.next = 29;\n                  break;\n                }\n                min = diffAbs / maxTimeToCatchUp;\n                max = maxRateAdjustment;\n                adjustment = min < max ? (max - min) / 2 : max;\n                _context6.next = 28;\n                return _this3.adjustSpeed(player, adjustment * Math.sign(diff));\n              case 28:\n                _this3.log('Resync by playbackRate');\n              case 29:\n              case \"end\":\n                return _context6.stop();\n            }\n          }, _callee6);\n        }));\n        return function check() {\n          return _ref3.apply(this, arguments);\n        };\n      }();\n      var interval = setInterval(function () {\n        return check();\n      }, syncInterval);\n      return {\n        cancel: function cancel() {\n          return clearInterval(interval);\n        }\n      };\n    }\n\n    /**\n     * @param {string} msg\n     */\n  }, {\n    key: \"log\",\n    value: function log(msg) {\n      var _this$logger;\n      (_this$logger = this.logger) === null || _this$logger === void 0 ? void 0 : _this$logger.call(this, \"TimingSrcConnector: \".concat(msg));\n    }\n  }, {\n    key: \"waitForTOReadyState\",\n    value:\n    /**\n     * @param {TimingObject} timingObject\n     * @param {TConnectionState} state\n     * @return {Promise<void>}\n     */\n    function waitForTOReadyState(timingObject, state) {\n      return new Promise(function (resolve) {\n        var check = function check() {\n          if (timingObject.readyState === state) {\n            resolve();\n          } else {\n            timingObject.addEventListener('readystatechange', check, {\n              once: true\n            });\n          }\n        };\n        check();\n      });\n    }\n  }]);\n  return TimingSrcConnector;\n}( /*#__PURE__*/_wrapNativeSuper(EventTarget));\n\nvar playerMap = new WeakMap();\nvar readyMap = new WeakMap();\nvar screenfull = {};\nvar Player = /*#__PURE__*/function () {\n  /**\n   * Create a Player.\n   *\n   * @param {(HTMLIFrameElement|HTMLElement|string|jQuery)} element A reference to the Vimeo\n   *        player iframe, and id, or a jQuery object.\n   * @param {object} [options] oEmbed parameters to use when creating an embed in the element.\n   * @return {Player}\n   */\n  function Player(element) {\n    var _this = this;\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, Player);\n    /* global jQuery */\n    if (window.jQuery && element instanceof jQuery) {\n      if (element.length > 1 && window.console && console.warn) {\n        console.warn('A jQuery object with multiple elements was passed, using the first element.');\n      }\n      element = element[0];\n    }\n\n    // Find an element by ID\n    if (typeof document !== 'undefined' && typeof element === 'string') {\n      element = document.getElementById(element);\n    }\n\n    // Not an element!\n    if (!isDomElement(element)) {\n      throw new TypeError('You must pass either a valid element or a valid id.');\n    }\n\n    // Already initialized an embed in this div, so grab the iframe\n    if (element.nodeName !== 'IFRAME') {\n      var iframe = element.querySelector('iframe');\n      if (iframe) {\n        element = iframe;\n      }\n    }\n\n    // iframe url is not a Vimeo url\n    if (element.nodeName === 'IFRAME' && !isVimeoUrl(element.getAttribute('src') || '')) {\n      throw new Error('The player element passed isn’t a Vimeo embed.');\n    }\n\n    // If there is already a player object in the map, return that\n    if (playerMap.has(element)) {\n      return playerMap.get(element);\n    }\n    this._window = element.ownerDocument.defaultView;\n    this.element = element;\n    this.origin = '*';\n    var readyPromise = new npo_src(function (resolve, reject) {\n      _this._onMessage = function (event) {\n        if (!isVimeoUrl(event.origin) || _this.element.contentWindow !== event.source) {\n          return;\n        }\n        if (_this.origin === '*') {\n          _this.origin = event.origin;\n        }\n        var data = parseMessageData(event.data);\n        var isError = data && data.event === 'error';\n        var isReadyError = isError && data.data && data.data.method === 'ready';\n        if (isReadyError) {\n          var error = new Error(data.data.message);\n          error.name = data.data.name;\n          reject(error);\n          return;\n        }\n        var isReadyEvent = data && data.event === 'ready';\n        var isPingResponse = data && data.method === 'ping';\n        if (isReadyEvent || isPingResponse) {\n          _this.element.setAttribute('data-ready', 'true');\n          resolve();\n          return;\n        }\n        processData(_this, data);\n      };\n      _this._window.addEventListener('message', _this._onMessage);\n      if (_this.element.nodeName !== 'IFRAME') {\n        var params = getOEmbedParameters(element, options);\n        var url = getVimeoUrl(params);\n        getOEmbedData(url, params, element).then(function (data) {\n          var iframe = createEmbed(data, element);\n          // Overwrite element with the new iframe,\n          // but store reference to the original element\n          _this.element = iframe;\n          _this._originalElement = element;\n          swapCallbacks(element, iframe);\n          playerMap.set(_this.element, _this);\n          return data;\n        }).catch(reject);\n      }\n    });\n\n    // Store a copy of this Player in the map\n    readyMap.set(this, readyPromise);\n    playerMap.set(this.element, this);\n\n    // Send a ping to the iframe so the ready promise will be resolved if\n    // the player is already ready.\n    if (this.element.nodeName === 'IFRAME') {\n      postMessage(this, 'ping');\n    }\n    if (screenfull.isEnabled) {\n      var exitFullscreen = function exitFullscreen() {\n        return screenfull.exit();\n      };\n      this.fullscreenchangeHandler = function () {\n        if (screenfull.isFullscreen) {\n          storeCallback(_this, 'event:exitFullscreen', exitFullscreen);\n        } else {\n          removeCallback(_this, 'event:exitFullscreen', exitFullscreen);\n        }\n        // eslint-disable-next-line\n        _this.ready().then(function () {\n          postMessage(_this, 'fullscreenchange', screenfull.isFullscreen);\n        });\n      };\n      screenfull.on('fullscreenchange', this.fullscreenchangeHandler);\n    }\n    return this;\n  }\n\n  /**\n   * Check to see if the URL is a Vimeo URL.\n   *\n   * @param {string} url The URL string.\n   * @return {boolean}\n   */\n  _createClass(Player, [{\n    key: \"callMethod\",\n    value:\n    /**\n     * Get a promise for a method.\n     *\n     * @param {string} name The API method to call.\n     * @param {...(string|number|object|Array)} args Arguments to send via postMessage.\n     * @return {Promise}\n     */\n    function callMethod(name) {\n      var _this2 = this;\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      if (name === undefined || name === null) {\n        throw new TypeError('You must pass a method name.');\n      }\n      return new npo_src(function (resolve, reject) {\n        // We are storing the resolve/reject handlers to call later, so we\n        // can’t return here.\n        return _this2.ready().then(function () {\n          storeCallback(_this2, name, {\n            resolve: resolve,\n            reject: reject\n          });\n          if (args.length === 0) {\n            args = {};\n          } else if (args.length === 1) {\n            args = args[0];\n          }\n          postMessage(_this2, name, args);\n        }).catch(reject);\n      });\n    }\n    /**\n     * Get a promise for the value of a player property.\n     *\n     * @param {string} name The property name\n     * @return {Promise}\n     */\n  }, {\n    key: \"get\",\n    value: function get(name) {\n      var _this3 = this;\n      return new npo_src(function (resolve, reject) {\n        name = getMethodName(name, 'get');\n\n        // We are storing the resolve/reject handlers to call later, so we\n        // can’t return here.\n        return _this3.ready().then(function () {\n          storeCallback(_this3, name, {\n            resolve: resolve,\n            reject: reject\n          });\n          postMessage(_this3, name);\n        }).catch(reject);\n      });\n    }\n\n    /**\n     * Get a promise for setting the value of a player property.\n     *\n     * @param {string} name The API method to call.\n     * @param {mixed} value The value to set.\n     * @return {Promise}\n     */\n  }, {\n    key: \"set\",\n    value: function set(name, value) {\n      var _this4 = this;\n      return new npo_src(function (resolve, reject) {\n        name = getMethodName(name, 'set');\n        if (value === undefined || value === null) {\n          throw new TypeError('There must be a value to set.');\n        }\n\n        // We are storing the resolve/reject handlers to call later, so we\n        // can’t return here.\n        return _this4.ready().then(function () {\n          storeCallback(_this4, name, {\n            resolve: resolve,\n            reject: reject\n          });\n          postMessage(_this4, name, value);\n        }).catch(reject);\n      });\n    }\n\n    /**\n     * Add an event listener for the specified event. Will call the\n     * callback with a single parameter, `data`, that contains the data for\n     * that event.\n     *\n     * @param {string} eventName The name of the event.\n     * @param {function(*)} callback The function to call when the event fires.\n     * @return {void}\n     */\n  }, {\n    key: \"on\",\n    value: function on(eventName, callback) {\n      if (!eventName) {\n        throw new TypeError('You must pass an event name.');\n      }\n      if (!callback) {\n        throw new TypeError('You must pass a callback function.');\n      }\n      if (typeof callback !== 'function') {\n        throw new TypeError('The callback must be a function.');\n      }\n      var callbacks = getCallbacks(this, \"event:\".concat(eventName));\n      if (callbacks.length === 0) {\n        this.callMethod('addEventListener', eventName).catch(function () {\n          // Ignore the error. There will be an error event fired that\n          // will trigger the error callback if they are listening.\n        });\n      }\n      storeCallback(this, \"event:\".concat(eventName), callback);\n    }\n\n    /**\n     * Remove an event listener for the specified event. Will remove all\n     * listeners for that event if a `callback` isn’t passed, or only that\n     * specific callback if it is passed.\n     *\n     * @param {string} eventName The name of the event.\n     * @param {function} [callback] The specific callback to remove.\n     * @return {void}\n     */\n  }, {\n    key: \"off\",\n    value: function off(eventName, callback) {\n      if (!eventName) {\n        throw new TypeError('You must pass an event name.');\n      }\n      if (callback && typeof callback !== 'function') {\n        throw new TypeError('The callback must be a function.');\n      }\n      var lastCallback = removeCallback(this, \"event:\".concat(eventName), callback);\n\n      // If there are no callbacks left, remove the listener\n      if (lastCallback) {\n        this.callMethod('removeEventListener', eventName).catch(function (e) {\n          // Ignore the error. There will be an error event fired that\n          // will trigger the error callback if they are listening.\n        });\n      }\n    }\n\n    /**\n     * A promise to load a new video.\n     *\n     * @promise LoadVideoPromise\n     * @fulfill {number} The video with this id or url successfully loaded.\n     * @reject {TypeError} The id was not a number.\n     */\n    /**\n     * Load a new video into this embed. The promise will be resolved if\n     * the video is successfully loaded, or it will be rejected if it could\n     * not be loaded.\n     *\n     * @param {number|string|object} options The id of the video, the url of the video, or an object with embed options.\n     * @return {LoadVideoPromise}\n     */\n  }, {\n    key: \"loadVideo\",\n    value: function loadVideo(options) {\n      return this.callMethod('loadVideo', options);\n    }\n\n    /**\n     * A promise to perform an action when the Player is ready.\n     *\n     * @todo document errors\n     * @promise LoadVideoPromise\n     * @fulfill {void}\n     */\n    /**\n     * Trigger a function when the player iframe has initialized. You do not\n     * need to wait for `ready` to trigger to begin adding event listeners\n     * or calling other methods.\n     *\n     * @return {ReadyPromise}\n     */\n  }, {\n    key: \"ready\",\n    value: function ready() {\n      var readyPromise = readyMap.get(this) || new npo_src(function (resolve, reject) {\n        reject(new Error('Unknown player. Probably unloaded.'));\n      });\n      return npo_src.resolve(readyPromise);\n    }\n\n    /**\n     * A promise to add a cue point to the player.\n     *\n     * @promise AddCuePointPromise\n     * @fulfill {string} The id of the cue point to use for removeCuePoint.\n     * @reject {RangeError} the time was less than 0 or greater than the\n     *         video’s duration.\n     * @reject {UnsupportedError} Cue points are not supported with the current\n     *         player or browser.\n     */\n    /**\n     * Add a cue point to the player.\n     *\n     * @param {number} time The time for the cue point.\n     * @param {object} [data] Arbitrary data to be returned with the cue point.\n     * @return {AddCuePointPromise}\n     */\n  }, {\n    key: \"addCuePoint\",\n    value: function addCuePoint(time) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.callMethod('addCuePoint', {\n        time: time,\n        data: data\n      });\n    }\n\n    /**\n     * A promise to remove a cue point from the player.\n     *\n     * @promise AddCuePointPromise\n     * @fulfill {string} The id of the cue point that was removed.\n     * @reject {InvalidCuePoint} The cue point with the specified id was not\n     *         found.\n     * @reject {UnsupportedError} Cue points are not supported with the current\n     *         player or browser.\n     */\n    /**\n     * Remove a cue point from the video.\n     *\n     * @param {string} id The id of the cue point to remove.\n     * @return {RemoveCuePointPromise}\n     */\n  }, {\n    key: \"removeCuePoint\",\n    value: function removeCuePoint(id) {\n      return this.callMethod('removeCuePoint', id);\n    }\n\n    /**\n     * A representation of a text track on a video.\n     *\n     * @typedef {Object} VimeoTextTrack\n     * @property {string} language The ISO language code.\n     * @property {string} kind The kind of track it is (captions or subtitles).\n     * @property {string} label The human‐readable label for the track.\n     */\n    /**\n     * A promise to enable a text track.\n     *\n     * @promise EnableTextTrackPromise\n     * @fulfill {VimeoTextTrack} The text track that was enabled.\n     * @reject {InvalidTrackLanguageError} No track was available with the\n     *         specified language.\n     * @reject {InvalidTrackError} No track was available with the specified\n     *         language and kind.\n     */\n    /**\n     * Enable the text track with the specified language, and optionally the\n     * specified kind (captions or subtitles).\n     *\n     * When set via the API, the track language will not change the viewer’s\n     * stored preference.\n     *\n     * @param {string} language The two‐letter language code.\n     * @param {string} [kind] The kind of track to enable (captions or subtitles).\n     * @return {EnableTextTrackPromise}\n     */\n  }, {\n    key: \"enableTextTrack\",\n    value: function enableTextTrack(language, kind) {\n      if (!language) {\n        throw new TypeError('You must pass a language.');\n      }\n      return this.callMethod('enableTextTrack', {\n        language: language,\n        kind: kind\n      });\n    }\n\n    /**\n     * A promise to disable the active text track.\n     *\n     * @promise DisableTextTrackPromise\n     * @fulfill {void} The track was disabled.\n     */\n    /**\n     * Disable the currently-active text track.\n     *\n     * @return {DisableTextTrackPromise}\n     */\n  }, {\n    key: \"disableTextTrack\",\n    value: function disableTextTrack() {\n      return this.callMethod('disableTextTrack');\n    }\n\n    /**\n     * A promise to pause the video.\n     *\n     * @promise PausePromise\n     * @fulfill {void} The video was paused.\n     */\n    /**\n     * Pause the video if it’s playing.\n     *\n     * @return {PausePromise}\n     */\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      return this.callMethod('pause');\n    }\n\n    /**\n     * A promise to play the video.\n     *\n     * @promise PlayPromise\n     * @fulfill {void} The video was played.\n     */\n    /**\n     * Play the video if it’s paused. **Note:** on iOS and some other\n     * mobile devices, you cannot programmatically trigger play. Once the\n     * viewer has tapped on the play button in the player, however, you\n     * will be able to use this function.\n     *\n     * @return {PlayPromise}\n     */\n  }, {\n    key: \"play\",\n    value: function play() {\n      return this.callMethod('play');\n    }\n\n    /**\n     * Request that the player enters fullscreen.\n     * @return {Promise}\n     */\n  }, {\n    key: \"requestFullscreen\",\n    value: function requestFullscreen() {\n      if (screenfull.isEnabled) {\n        return screenfull.request(this.element);\n      }\n      return this.callMethod('requestFullscreen');\n    }\n\n    /**\n     * Request that the player exits fullscreen.\n     * @return {Promise}\n     */\n  }, {\n    key: \"exitFullscreen\",\n    value: function exitFullscreen() {\n      if (screenfull.isEnabled) {\n        return screenfull.exit();\n      }\n      return this.callMethod('exitFullscreen');\n    }\n\n    /**\n     * Returns true if the player is currently fullscreen.\n     * @return {Promise}\n     */\n  }, {\n    key: \"getFullscreen\",\n    value: function getFullscreen() {\n      if (screenfull.isEnabled) {\n        return npo_src.resolve(screenfull.isFullscreen);\n      }\n      return this.get('fullscreen');\n    }\n\n    /**\n     * Request that the player enters picture-in-picture.\n     * @return {Promise}\n     */\n  }, {\n    key: \"requestPictureInPicture\",\n    value: function requestPictureInPicture() {\n      return this.callMethod('requestPictureInPicture');\n    }\n\n    /**\n     * Request that the player exits picture-in-picture.\n     * @return {Promise}\n     */\n  }, {\n    key: \"exitPictureInPicture\",\n    value: function exitPictureInPicture() {\n      return this.callMethod('exitPictureInPicture');\n    }\n\n    /**\n     * Returns true if the player is currently picture-in-picture.\n     * @return {Promise}\n     */\n  }, {\n    key: \"getPictureInPicture\",\n    value: function getPictureInPicture() {\n      return this.get('pictureInPicture');\n    }\n\n    /**\n     * A promise to prompt the viewer to initiate remote playback.\n     *\n     * @promise RemotePlaybackPromptPromise\n     * @fulfill {void}\n     * @reject {NotFoundError} No remote playback device is available.\n     */\n    /**\n     * Request to prompt the user to initiate remote playback.\n     *\n     * @return {RemotePlaybackPromptPromise}\n     */\n  }, {\n    key: \"remotePlaybackPrompt\",\n    value: function remotePlaybackPrompt() {\n      return this.callMethod('remotePlaybackPrompt');\n    }\n\n    /**\n     * A promise to unload the video.\n     *\n     * @promise UnloadPromise\n     * @fulfill {void} The video was unloaded.\n     */\n    /**\n     * Return the player to its initial state.\n     *\n     * @return {UnloadPromise}\n     */\n  }, {\n    key: \"unload\",\n    value: function unload() {\n      return this.callMethod('unload');\n    }\n\n    /**\n     * Cleanup the player and remove it from the DOM\n     *\n     * It won't be usable and a new one should be constructed\n     *  in order to do any operations.\n     *\n     * @return {Promise}\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this5 = this;\n      return new npo_src(function (resolve) {\n        readyMap.delete(_this5);\n        playerMap.delete(_this5.element);\n        if (_this5._originalElement) {\n          playerMap.delete(_this5._originalElement);\n          _this5._originalElement.removeAttribute('data-vimeo-initialized');\n        }\n        if (_this5.element && _this5.element.nodeName === 'IFRAME' && _this5.element.parentNode) {\n          // If we've added an additional wrapper div, remove that from the DOM.\n          // If not, just remove the iframe element.\n          if (_this5.element.parentNode.parentNode && _this5._originalElement && _this5._originalElement !== _this5.element.parentNode) {\n            _this5.element.parentNode.parentNode.removeChild(_this5.element.parentNode);\n          } else {\n            _this5.element.parentNode.removeChild(_this5.element);\n          }\n        }\n\n        // If the clip is private there is a case where the element stays the\n        // div element. Destroy should reset the div and remove the iframe child.\n        if (_this5.element && _this5.element.nodeName === 'DIV' && _this5.element.parentNode) {\n          _this5.element.removeAttribute('data-vimeo-initialized');\n          var iframe = _this5.element.querySelector('iframe');\n          if (iframe && iframe.parentNode) {\n            // If we've added an additional wrapper div, remove that from the DOM.\n            // If not, just remove the iframe element.\n            if (iframe.parentNode.parentNode && _this5._originalElement && _this5._originalElement !== iframe.parentNode) {\n              iframe.parentNode.parentNode.removeChild(iframe.parentNode);\n            } else {\n              iframe.parentNode.removeChild(iframe);\n            }\n          }\n        }\n        _this5._window.removeEventListener('message', _this5._onMessage);\n        if (screenfull.isEnabled) {\n          screenfull.off('fullscreenchange', _this5.fullscreenchangeHandler);\n        }\n        resolve();\n      });\n    }\n\n    /**\n     * A promise to get the autopause behavior of the video.\n     *\n     * @promise GetAutopausePromise\n     * @fulfill {boolean} Whether autopause is turned on or off.\n     * @reject {UnsupportedError} Autopause is not supported with the current\n     *         player or browser.\n     */\n    /**\n     * Get the autopause behavior for this player.\n     *\n     * @return {GetAutopausePromise}\n     */\n  }, {\n    key: \"getAutopause\",\n    value: function getAutopause() {\n      return this.get('autopause');\n    }\n\n    /**\n     * A promise to set the autopause behavior of the video.\n     *\n     * @promise SetAutopausePromise\n     * @fulfill {boolean} Whether autopause is turned on or off.\n     * @reject {UnsupportedError} Autopause is not supported with the current\n     *         player or browser.\n     */\n    /**\n     * Enable or disable the autopause behavior of this player.\n     *\n     * By default, when another video is played in the same browser, this\n     * player will automatically pause. Unless you have a specific reason\n     * for doing so, we recommend that you leave autopause set to the\n     * default (`true`).\n     *\n     * @param {boolean} autopause\n     * @return {SetAutopausePromise}\n     */\n  }, {\n    key: \"setAutopause\",\n    value: function setAutopause(autopause) {\n      return this.set('autopause', autopause);\n    }\n\n    /**\n     * A promise to get the buffered property of the video.\n     *\n     * @promise GetBufferedPromise\n     * @fulfill {Array} Buffered Timeranges converted to an Array.\n     */\n    /**\n     * Get the buffered property of the video.\n     *\n     * @return {GetBufferedPromise}\n     */\n  }, {\n    key: \"getBuffered\",\n    value: function getBuffered() {\n      return this.get('buffered');\n    }\n\n    /**\n     * @typedef {Object} CameraProperties\n     * @prop {number} props.yaw - Number between 0 and 360.\n     * @prop {number} props.pitch - Number between -90 and 90.\n     * @prop {number} props.roll - Number between -180 and 180.\n     * @prop {number} props.fov - The field of view in degrees.\n     */\n    /**\n     * A promise to get the camera properties of the player.\n     *\n     * @promise GetCameraPromise\n     * @fulfill {CameraProperties} The camera properties.\n     */\n    /**\n     * For 360° videos get the camera properties for this player.\n     *\n     * @return {GetCameraPromise}\n     */\n  }, {\n    key: \"getCameraProps\",\n    value: function getCameraProps() {\n      return this.get('cameraProps');\n    }\n\n    /**\n     * A promise to set the camera properties of the player.\n     *\n     * @promise SetCameraPromise\n     * @fulfill {Object} The camera was successfully set.\n     * @reject {RangeError} The range was out of bounds.\n     */\n    /**\n     * For 360° videos set the camera properties for this player.\n     *\n     * @param {CameraProperties} camera The camera properties\n     * @return {SetCameraPromise}\n     */\n  }, {\n    key: \"setCameraProps\",\n    value: function setCameraProps(camera) {\n      return this.set('cameraProps', camera);\n    }\n\n    /**\n     * A representation of a chapter.\n     *\n     * @typedef {Object} VimeoChapter\n     * @property {number} startTime The start time of the chapter.\n     * @property {object} title The title of the chapter.\n     * @property {number} index The place in the order of Chapters. Starts at 1.\n     */\n    /**\n     * A promise to get chapters for the video.\n     *\n     * @promise GetChaptersPromise\n     * @fulfill {VimeoChapter[]} The chapters for the video.\n     */\n    /**\n     * Get an array of all the chapters for the video.\n     *\n     * @return {GetChaptersPromise}\n     */\n  }, {\n    key: \"getChapters\",\n    value: function getChapters() {\n      return this.get('chapters');\n    }\n\n    /**\n     * A promise to get the currently active chapter.\n     *\n     * @promise GetCurrentChaptersPromise\n     * @fulfill {VimeoChapter|undefined} The current chapter for the video.\n     */\n    /**\n     * Get the currently active chapter for the video.\n     *\n     * @return {GetCurrentChaptersPromise}\n     */\n  }, {\n    key: \"getCurrentChapter\",\n    value: function getCurrentChapter() {\n      return this.get('currentChapter');\n    }\n\n    /**\n     * A promise to get the accent color of the player.\n     *\n     * @promise GetColorPromise\n     * @fulfill {string} The hex color of the player.\n     */\n    /**\n     * Get the accent color for this player. Note this is deprecated in place of `getColorTwo`.\n     *\n     * @return {GetColorPromise}\n     */\n  }, {\n    key: \"getColor\",\n    value: function getColor() {\n      return this.get('color');\n    }\n\n    /**\n     * A promise to get all colors for the player in an array.\n     *\n     * @promise GetColorsPromise\n     * @fulfill {string[]} The hex colors of the player.\n     */\n    /**\n     * Get all the colors for this player in an array: [colorOne, colorTwo, colorThree, colorFour]\n     *\n     * @return {GetColorPromise}\n     */\n  }, {\n    key: \"getColors\",\n    value: function getColors() {\n      return npo_src.all([this.get('colorOne'), this.get('colorTwo'), this.get('colorThree'), this.get('colorFour')]);\n    }\n\n    /**\n     * A promise to set the accent color of the player.\n     *\n     * @promise SetColorPromise\n     * @fulfill {string} The color was successfully set.\n     * @reject {TypeError} The string was not a valid hex or rgb color.\n     * @reject {ContrastError} The color was set, but the contrast is\n     *         outside of the acceptable range.\n     * @reject {EmbedSettingsError} The owner of the player has chosen to\n     *         use a specific color.\n     */\n    /**\n     * Set the accent color of this player to a hex or rgb string. Setting the\n     * color may fail if the owner of the video has set their embed\n     * preferences to force a specific color.\n     * Note this is deprecated in place of `setColorTwo`.\n     *\n     * @param {string} color The hex or rgb color string to set.\n     * @return {SetColorPromise}\n     */\n  }, {\n    key: \"setColor\",\n    value: function setColor(color) {\n      return this.set('color', color);\n    }\n\n    /**\n     * A promise to set all colors for the player.\n     *\n     * @promise SetColorsPromise\n     * @fulfill {string[]} The colors were successfully set.\n     * @reject {TypeError} The string was not a valid hex or rgb color.\n     * @reject {ContrastError} The color was set, but the contrast is\n     *         outside of the acceptable range.\n     * @reject {EmbedSettingsError} The owner of the player has chosen to\n     *         use a specific color.\n     */\n    /**\n     * Set the colors of this player to a hex or rgb string. Setting the\n     * color may fail if the owner of the video has set their embed\n     * preferences to force a specific color.\n     * The colors should be passed in as an array: [colorOne, colorTwo, colorThree, colorFour].\n     * If a color should not be set, the index in the array can be left as null.\n     *\n     * @param {string[]} colors Array of the hex or rgb color strings to set.\n     * @return {SetColorsPromise}\n     */\n  }, {\n    key: \"setColors\",\n    value: function setColors(colors) {\n      if (!Array.isArray(colors)) {\n        return new npo_src(function (resolve, reject) {\n          return reject(new TypeError('Argument must be an array.'));\n        });\n      }\n      var nullPromise = new npo_src(function (resolve) {\n        return resolve(null);\n      });\n      var colorPromises = [colors[0] ? this.set('colorOne', colors[0]) : nullPromise, colors[1] ? this.set('colorTwo', colors[1]) : nullPromise, colors[2] ? this.set('colorThree', colors[2]) : nullPromise, colors[3] ? this.set('colorFour', colors[3]) : nullPromise];\n      return npo_src.all(colorPromises);\n    }\n\n    /**\n     * A representation of a cue point.\n     *\n     * @typedef {Object} VimeoCuePoint\n     * @property {number} time The time of the cue point.\n     * @property {object} data The data passed when adding the cue point.\n     * @property {string} id The unique id for use with removeCuePoint.\n     */\n    /**\n     * A promise to get the cue points of a video.\n     *\n     * @promise GetCuePointsPromise\n     * @fulfill {VimeoCuePoint[]} The cue points added to the video.\n     * @reject {UnsupportedError} Cue points are not supported with the current\n     *         player or browser.\n     */\n    /**\n     * Get an array of the cue points added to the video.\n     *\n     * @return {GetCuePointsPromise}\n     */\n  }, {\n    key: \"getCuePoints\",\n    value: function getCuePoints() {\n      return this.get('cuePoints');\n    }\n\n    /**\n     * A promise to get the current time of the video.\n     *\n     * @promise GetCurrentTimePromise\n     * @fulfill {number} The current time in seconds.\n     */\n    /**\n     * Get the current playback position in seconds.\n     *\n     * @return {GetCurrentTimePromise}\n     */\n  }, {\n    key: \"getCurrentTime\",\n    value: function getCurrentTime() {\n      return this.get('currentTime');\n    }\n\n    /**\n     * A promise to set the current time of the video.\n     *\n     * @promise SetCurrentTimePromise\n     * @fulfill {number} The actual current time that was set.\n     * @reject {RangeError} the time was less than 0 or greater than the\n     *         video’s duration.\n     */\n    /**\n     * Set the current playback position in seconds. If the player was\n     * paused, it will remain paused. Likewise, if the player was playing,\n     * it will resume playing once the video has buffered.\n     *\n     * You can provide an accurate time and the player will attempt to seek\n     * to as close to that time as possible. The exact time will be the\n     * fulfilled value of the promise.\n     *\n     * @param {number} currentTime\n     * @return {SetCurrentTimePromise}\n     */\n  }, {\n    key: \"setCurrentTime\",\n    value: function setCurrentTime(currentTime) {\n      return this.set('currentTime', currentTime);\n    }\n\n    /**\n     * A promise to get the duration of the video.\n     *\n     * @promise GetDurationPromise\n     * @fulfill {number} The duration in seconds.\n     */\n    /**\n     * Get the duration of the video in seconds. It will be rounded to the\n     * nearest second before playback begins, and to the nearest thousandth\n     * of a second after playback begins.\n     *\n     * @return {GetDurationPromise}\n     */\n  }, {\n    key: \"getDuration\",\n    value: function getDuration() {\n      return this.get('duration');\n    }\n\n    /**\n     * A promise to get the ended state of the video.\n     *\n     * @promise GetEndedPromise\n     * @fulfill {boolean} Whether or not the video has ended.\n     */\n    /**\n     * Get the ended state of the video. The video has ended if\n     * `currentTime === duration`.\n     *\n     * @return {GetEndedPromise}\n     */\n  }, {\n    key: \"getEnded\",\n    value: function getEnded() {\n      return this.get('ended');\n    }\n\n    /**\n     * A promise to get the loop state of the player.\n     *\n     * @promise GetLoopPromise\n     * @fulfill {boolean} Whether or not the player is set to loop.\n     */\n    /**\n     * Get the loop state of the player.\n     *\n     * @return {GetLoopPromise}\n     */\n  }, {\n    key: \"getLoop\",\n    value: function getLoop() {\n      return this.get('loop');\n    }\n\n    /**\n     * A promise to set the loop state of the player.\n     *\n     * @promise SetLoopPromise\n     * @fulfill {boolean} The loop state that was set.\n     */\n    /**\n     * Set the loop state of the player. When set to `true`, the player\n     * will start over immediately once playback ends.\n     *\n     * @param {boolean} loop\n     * @return {SetLoopPromise}\n     */\n  }, {\n    key: \"setLoop\",\n    value: function setLoop(loop) {\n      return this.set('loop', loop);\n    }\n\n    /**\n     * A promise to set the muted state of the player.\n     *\n     * @promise SetMutedPromise\n     * @fulfill {boolean} The muted state that was set.\n     */\n    /**\n     * Set the muted state of the player. When set to `true`, the player\n     * volume will be muted.\n     *\n     * @param {boolean} muted\n     * @return {SetMutedPromise}\n     */\n  }, {\n    key: \"setMuted\",\n    value: function setMuted(muted) {\n      return this.set('muted', muted);\n    }\n\n    /**\n     * A promise to get the muted state of the player.\n     *\n     * @promise GetMutedPromise\n     * @fulfill {boolean} Whether or not the player is muted.\n     */\n    /**\n     * Get the muted state of the player.\n     *\n     * @return {GetMutedPromise}\n     */\n  }, {\n    key: \"getMuted\",\n    value: function getMuted() {\n      return this.get('muted');\n    }\n\n    /**\n     * A promise to get the paused state of the player.\n     *\n     * @promise GetLoopPromise\n     * @fulfill {boolean} Whether or not the video is paused.\n     */\n    /**\n     * Get the paused state of the player.\n     *\n     * @return {GetLoopPromise}\n     */\n  }, {\n    key: \"getPaused\",\n    value: function getPaused() {\n      return this.get('paused');\n    }\n\n    /**\n     * A promise to get the playback rate of the player.\n     *\n     * @promise GetPlaybackRatePromise\n     * @fulfill {number} The playback rate of the player on a scale from 0 to 2.\n     */\n    /**\n     * Get the playback rate of the player on a scale from `0` to `2`.\n     *\n     * @return {GetPlaybackRatePromise}\n     */\n  }, {\n    key: \"getPlaybackRate\",\n    value: function getPlaybackRate() {\n      return this.get('playbackRate');\n    }\n\n    /**\n     * A promise to set the playbackrate of the player.\n     *\n     * @promise SetPlaybackRatePromise\n     * @fulfill {number} The playback rate was set.\n     * @reject {RangeError} The playback rate was less than 0 or greater than 2.\n     */\n    /**\n     * Set the playback rate of the player on a scale from `0` to `2`. When set\n     * via the API, the playback rate will not be synchronized to other\n     * players or stored as the viewer's preference.\n     *\n     * @param {number} playbackRate\n     * @return {SetPlaybackRatePromise}\n     */\n  }, {\n    key: \"setPlaybackRate\",\n    value: function setPlaybackRate(playbackRate) {\n      return this.set('playbackRate', playbackRate);\n    }\n\n    /**\n     * A promise to get the played property of the video.\n     *\n     * @promise GetPlayedPromise\n     * @fulfill {Array} Played Timeranges converted to an Array.\n     */\n    /**\n     * Get the played property of the video.\n     *\n     * @return {GetPlayedPromise}\n     */\n  }, {\n    key: \"getPlayed\",\n    value: function getPlayed() {\n      return this.get('played');\n    }\n\n    /**\n     * A promise to get the qualities available of the current video.\n     *\n     * @promise GetQualitiesPromise\n     * @fulfill {Array} The qualities of the video.\n     */\n    /**\n     * Get the qualities of the current video.\n     *\n     * @return {GetQualitiesPromise}\n     */\n  }, {\n    key: \"getQualities\",\n    value: function getQualities() {\n      return this.get('qualities');\n    }\n\n    /**\n     * A promise to get the current set quality of the video.\n     *\n     * @promise GetQualityPromise\n     * @fulfill {string} The current set quality.\n     */\n    /**\n     * Get the current set quality of the video.\n     *\n     * @return {GetQualityPromise}\n     */\n  }, {\n    key: \"getQuality\",\n    value: function getQuality() {\n      return this.get('quality');\n    }\n\n    /**\n     * A promise to set the video quality.\n     *\n     * @promise SetQualityPromise\n     * @fulfill {number} The quality was set.\n     * @reject {RangeError} The quality is not available.\n     */\n    /**\n     * Set a video quality.\n     *\n     * @param {string} quality\n     * @return {SetQualityPromise}\n     */\n  }, {\n    key: \"setQuality\",\n    value: function setQuality(quality) {\n      return this.set('quality', quality);\n    }\n\n    /**\n     * A promise to get the remote playback availability.\n     *\n     * @promise RemotePlaybackAvailabilityPromise\n     * @fulfill {boolean} Whether remote playback is available.\n     */\n    /**\n     * Get the availability of remote playback.\n     *\n     * @return {RemotePlaybackAvailabilityPromise}\n     */\n  }, {\n    key: \"getRemotePlaybackAvailability\",\n    value: function getRemotePlaybackAvailability() {\n      return this.get('remotePlaybackAvailability');\n    }\n\n    /**\n     * A promise to get the current remote playback state.\n     *\n     * @promise RemotePlaybackStatePromise\n     * @fulfill {string} The state of the remote playback: connecting, connected, or disconnected.\n     */\n    /**\n     * Get the current remote playback state.\n     *\n     * @return {RemotePlaybackStatePromise}\n     */\n  }, {\n    key: \"getRemotePlaybackState\",\n    value: function getRemotePlaybackState() {\n      return this.get('remotePlaybackState');\n    }\n\n    /**\n     * A promise to get the seekable property of the video.\n     *\n     * @promise GetSeekablePromise\n     * @fulfill {Array} Seekable Timeranges converted to an Array.\n     */\n    /**\n     * Get the seekable property of the video.\n     *\n     * @return {GetSeekablePromise}\n     */\n  }, {\n    key: \"getSeekable\",\n    value: function getSeekable() {\n      return this.get('seekable');\n    }\n\n    /**\n     * A promise to get the seeking property of the player.\n     *\n     * @promise GetSeekingPromise\n     * @fulfill {boolean} Whether or not the player is currently seeking.\n     */\n    /**\n     * Get if the player is currently seeking.\n     *\n     * @return {GetSeekingPromise}\n     */\n  }, {\n    key: \"getSeeking\",\n    value: function getSeeking() {\n      return this.get('seeking');\n    }\n\n    /**\n     * A promise to get the text tracks of a video.\n     *\n     * @promise GetTextTracksPromise\n     * @fulfill {VimeoTextTrack[]} The text tracks associated with the video.\n     */\n    /**\n     * Get an array of the text tracks that exist for the video.\n     *\n     * @return {GetTextTracksPromise}\n     */\n  }, {\n    key: \"getTextTracks\",\n    value: function getTextTracks() {\n      return this.get('textTracks');\n    }\n\n    /**\n     * A promise to get the embed code for the video.\n     *\n     * @promise GetVideoEmbedCodePromise\n     * @fulfill {string} The `<iframe>` embed code for the video.\n     */\n    /**\n     * Get the `<iframe>` embed code for the video.\n     *\n     * @return {GetVideoEmbedCodePromise}\n     */\n  }, {\n    key: \"getVideoEmbedCode\",\n    value: function getVideoEmbedCode() {\n      return this.get('videoEmbedCode');\n    }\n\n    /**\n     * A promise to get the id of the video.\n     *\n     * @promise GetVideoIdPromise\n     * @fulfill {number} The id of the video.\n     */\n    /**\n     * Get the id of the video.\n     *\n     * @return {GetVideoIdPromise}\n     */\n  }, {\n    key: \"getVideoId\",\n    value: function getVideoId() {\n      return this.get('videoId');\n    }\n\n    /**\n     * A promise to get the title of the video.\n     *\n     * @promise GetVideoTitlePromise\n     * @fulfill {number} The title of the video.\n     */\n    /**\n     * Get the title of the video.\n     *\n     * @return {GetVideoTitlePromise}\n     */\n  }, {\n    key: \"getVideoTitle\",\n    value: function getVideoTitle() {\n      return this.get('videoTitle');\n    }\n\n    /**\n     * A promise to get the native width of the video.\n     *\n     * @promise GetVideoWidthPromise\n     * @fulfill {number} The native width of the video.\n     */\n    /**\n     * Get the native width of the currently‐playing video. The width of\n     * the highest‐resolution available will be used before playback begins.\n     *\n     * @return {GetVideoWidthPromise}\n     */\n  }, {\n    key: \"getVideoWidth\",\n    value: function getVideoWidth() {\n      return this.get('videoWidth');\n    }\n\n    /**\n     * A promise to get the native height of the video.\n     *\n     * @promise GetVideoHeightPromise\n     * @fulfill {number} The native height of the video.\n     */\n    /**\n     * Get the native height of the currently‐playing video. The height of\n     * the highest‐resolution available will be used before playback begins.\n     *\n     * @return {GetVideoHeightPromise}\n     */\n  }, {\n    key: \"getVideoHeight\",\n    value: function getVideoHeight() {\n      return this.get('videoHeight');\n    }\n\n    /**\n     * A promise to get the vimeo.com url for the video.\n     *\n     * @promise GetVideoUrlPromise\n     * @fulfill {number} The vimeo.com url for the video.\n     * @reject {PrivacyError} The url isn’t available because of the video’s privacy setting.\n     */\n    /**\n     * Get the vimeo.com url for the video.\n     *\n     * @return {GetVideoUrlPromise}\n     */\n  }, {\n    key: \"getVideoUrl\",\n    value: function getVideoUrl() {\n      return this.get('videoUrl');\n    }\n\n    /**\n     * A promise to get the volume level of the player.\n     *\n     * @promise GetVolumePromise\n     * @fulfill {number} The volume level of the player on a scale from 0 to 1.\n     */\n    /**\n     * Get the current volume level of the player on a scale from `0` to `1`.\n     *\n     * Most mobile devices do not support an independent volume from the\n     * system volume. In those cases, this method will always return `1`.\n     *\n     * @return {GetVolumePromise}\n     */\n  }, {\n    key: \"getVolume\",\n    value: function getVolume() {\n      return this.get('volume');\n    }\n\n    /**\n     * A promise to set the volume level of the player.\n     *\n     * @promise SetVolumePromise\n     * @fulfill {number} The volume was set.\n     * @reject {RangeError} The volume was less than 0 or greater than 1.\n     */\n    /**\n     * Set the volume of the player on a scale from `0` to `1`. When set\n     * via the API, the volume level will not be synchronized to other\n     * players or stored as the viewer’s preference.\n     *\n     * Most mobile devices do not support setting the volume. An error will\n     * *not* be triggered in that situation.\n     *\n     * @param {number} volume\n     * @return {SetVolumePromise}\n     */\n  }, {\n    key: \"setVolume\",\n    value: function setVolume(volume) {\n      return this.set('volume', volume);\n    }\n\n    /** @typedef {import('timing-object').ITimingObject} TimingObject */\n    /** @typedef {import('./lib/timing-src-connector.types').TimingSrcConnectorOptions} TimingSrcConnectorOptions */\n    /** @typedef {import('./lib/timing-src-connector').TimingSrcConnector} TimingSrcConnector */\n\n    /**\n     * Connects a TimingObject to the video player (https://webtiming.github.io/timingobject/)\n     *\n     * @param {TimingObject} timingObject\n     * @param {TimingSrcConnectorOptions} options\n     *\n     * @return {Promise<TimingSrcConnector>}\n     */\n  }, {\n    key: \"setTimingSrc\",\n    value: function () {\n      var _setTimingSrc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(timingObject, options) {\n        var _this6 = this;\n        var connector;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (timingObject) {\n                _context.next = 2;\n                break;\n              }\n              throw new TypeError('A Timing Object must be provided.');\n            case 2:\n              _context.next = 4;\n              return this.ready();\n            case 4:\n              connector = new TimingSrcConnector(this, timingObject, options);\n              postMessage(this, 'notifyTimingObjectConnect');\n              connector.addEventListener('disconnect', function () {\n                return postMessage(_this6, 'notifyTimingObjectDisconnect');\n              });\n              return _context.abrupt(\"return\", connector);\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function setTimingSrc(_x, _x2) {\n        return _setTimingSrc.apply(this, arguments);\n      }\n      return setTimingSrc;\n    }()\n  }], [{\n    key: \"isVimeoUrl\",\n    value: function isVimeoUrl$1(url) {\n      return isVimeoUrl(url);\n    }\n  }]);\n  return Player;\n}(); // Setup embed only if this is not a server runtime\nif (!isServerRuntime) {\n  screenfull = initializeScreenfull();\n  initializeEmbeds();\n  resizeEmbeds();\n  initAppendVideoMetadata();\n  checkUrlTimeParam();\n  logSurveyLink();\n  updateDRMEmbeds();\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Player);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vimeo/player/dist/player.es.js\n"));

/***/ }),

/***/ "./node_modules/domelementtype/lib/index.js":
/*!**************************************************!*\
  !*** ./node_modules/domelementtype/lib/index.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Doctype = exports.CDATA = exports.Tag = exports.Style = exports.Script = exports.Comment = exports.Directive = exports.Text = exports.Root = exports.isTag = exports.ElementType = void 0;\n/** Types of elements found in htmlparser2's DOM */\nvar ElementType;\n(function (ElementType) {\n    /** Type for the root element of a document */\n    ElementType[\"Root\"] = \"root\";\n    /** Type for Text */\n    ElementType[\"Text\"] = \"text\";\n    /** Type for <? ... ?> */\n    ElementType[\"Directive\"] = \"directive\";\n    /** Type for <!-- ... --> */\n    ElementType[\"Comment\"] = \"comment\";\n    /** Type for <script> tags */\n    ElementType[\"Script\"] = \"script\";\n    /** Type for <style> tags */\n    ElementType[\"Style\"] = \"style\";\n    /** Type for Any tag */\n    ElementType[\"Tag\"] = \"tag\";\n    /** Type for <![CDATA[ ... ]]> */\n    ElementType[\"CDATA\"] = \"cdata\";\n    /** Type for <!doctype ...> */\n    ElementType[\"Doctype\"] = \"doctype\";\n})(ElementType = exports.ElementType || (exports.ElementType = {}));\n/**\n * Tests whether an element is a tag or not.\n *\n * @param elem Element to test\n */\nfunction isTag(elem) {\n    return (elem.type === ElementType.Tag ||\n        elem.type === ElementType.Script ||\n        elem.type === ElementType.Style);\n}\nexports.isTag = isTag;\n// Exports for backwards compatibility\n/** Type for the root element of a document */\nexports.Root = ElementType.Root;\n/** Type for Text */\nexports.Text = ElementType.Text;\n/** Type for <? ... ?> */\nexports.Directive = ElementType.Directive;\n/** Type for <!-- ... --> */\nexports.Comment = ElementType.Comment;\n/** Type for <script> tags */\nexports.Script = ElementType.Script;\n/** Type for <style> tags */\nexports.Style = ElementType.Style;\n/** Type for Any tag */\nexports.Tag = ElementType.Tag;\n/** Type for <![CDATA[ ... ]]> */\nexports.CDATA = ElementType.CDATA;\n/** Type for <!doctype ...> */\nexports.Doctype = ElementType.Doctype;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9tZWxlbWVudHR5cGUvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGVBQWUsR0FBRyxhQUFhLEdBQUcsV0FBVyxHQUFHLGFBQWEsR0FBRyxjQUFjLEdBQUcsZUFBZSxHQUFHLGlCQUFpQixHQUFHLFlBQVksR0FBRyxZQUFZLEdBQUcsYUFBYSxHQUFHLG1CQUFtQjtBQUN4TDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHdDQUF3QyxtQkFBbUIsS0FBSztBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0EsWUFBWTtBQUNaO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsZUFBZTtBQUNmO0FBQ0EsY0FBYztBQUNkO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsV0FBVztBQUNYO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsZUFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZG9tZWxlbWVudHR5cGUvbGliL2luZGV4LmpzP2NiYzUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkRvY3R5cGUgPSBleHBvcnRzLkNEQVRBID0gZXhwb3J0cy5UYWcgPSBleHBvcnRzLlN0eWxlID0gZXhwb3J0cy5TY3JpcHQgPSBleHBvcnRzLkNvbW1lbnQgPSBleHBvcnRzLkRpcmVjdGl2ZSA9IGV4cG9ydHMuVGV4dCA9IGV4cG9ydHMuUm9vdCA9IGV4cG9ydHMuaXNUYWcgPSBleHBvcnRzLkVsZW1lbnRUeXBlID0gdm9pZCAwO1xuLyoqIFR5cGVzIG9mIGVsZW1lbnRzIGZvdW5kIGluIGh0bWxwYXJzZXIyJ3MgRE9NICovXG52YXIgRWxlbWVudFR5cGU7XG4oZnVuY3Rpb24gKEVsZW1lbnRUeXBlKSB7XG4gICAgLyoqIFR5cGUgZm9yIHRoZSByb290IGVsZW1lbnQgb2YgYSBkb2N1bWVudCAqL1xuICAgIEVsZW1lbnRUeXBlW1wiUm9vdFwiXSA9IFwicm9vdFwiO1xuICAgIC8qKiBUeXBlIGZvciBUZXh0ICovXG4gICAgRWxlbWVudFR5cGVbXCJUZXh0XCJdID0gXCJ0ZXh0XCI7XG4gICAgLyoqIFR5cGUgZm9yIDw/IC4uLiA/PiAqL1xuICAgIEVsZW1lbnRUeXBlW1wiRGlyZWN0aXZlXCJdID0gXCJkaXJlY3RpdmVcIjtcbiAgICAvKiogVHlwZSBmb3IgPCEtLSAuLi4gLS0+ICovXG4gICAgRWxlbWVudFR5cGVbXCJDb21tZW50XCJdID0gXCJjb21tZW50XCI7XG4gICAgLyoqIFR5cGUgZm9yIDxzY3JpcHQ+IHRhZ3MgKi9cbiAgICBFbGVtZW50VHlwZVtcIlNjcmlwdFwiXSA9IFwic2NyaXB0XCI7XG4gICAgLyoqIFR5cGUgZm9yIDxzdHlsZT4gdGFncyAqL1xuICAgIEVsZW1lbnRUeXBlW1wiU3R5bGVcIl0gPSBcInN0eWxlXCI7XG4gICAgLyoqIFR5cGUgZm9yIEFueSB0YWcgKi9cbiAgICBFbGVtZW50VHlwZVtcIlRhZ1wiXSA9IFwidGFnXCI7XG4gICAgLyoqIFR5cGUgZm9yIDwhW0NEQVRBWyAuLi4gXV0+ICovXG4gICAgRWxlbWVudFR5cGVbXCJDREFUQVwiXSA9IFwiY2RhdGFcIjtcbiAgICAvKiogVHlwZSBmb3IgPCFkb2N0eXBlIC4uLj4gKi9cbiAgICBFbGVtZW50VHlwZVtcIkRvY3R5cGVcIl0gPSBcImRvY3R5cGVcIjtcbn0pKEVsZW1lbnRUeXBlID0gZXhwb3J0cy5FbGVtZW50VHlwZSB8fCAoZXhwb3J0cy5FbGVtZW50VHlwZSA9IHt9KSk7XG4vKipcbiAqIFRlc3RzIHdoZXRoZXIgYW4gZWxlbWVudCBpcyBhIHRhZyBvciBub3QuXG4gKlxuICogQHBhcmFtIGVsZW0gRWxlbWVudCB0byB0ZXN0XG4gKi9cbmZ1bmN0aW9uIGlzVGFnKGVsZW0pIHtcbiAgICByZXR1cm4gKGVsZW0udHlwZSA9PT0gRWxlbWVudFR5cGUuVGFnIHx8XG4gICAgICAgIGVsZW0udHlwZSA9PT0gRWxlbWVudFR5cGUuU2NyaXB0IHx8XG4gICAgICAgIGVsZW0udHlwZSA9PT0gRWxlbWVudFR5cGUuU3R5bGUpO1xufVxuZXhwb3J0cy5pc1RhZyA9IGlzVGFnO1xuLy8gRXhwb3J0cyBmb3IgYmFja3dhcmRzIGNvbXBhdGliaWxpdHlcbi8qKiBUeXBlIGZvciB0aGUgcm9vdCBlbGVtZW50IG9mIGEgZG9jdW1lbnQgKi9cbmV4cG9ydHMuUm9vdCA9IEVsZW1lbnRUeXBlLlJvb3Q7XG4vKiogVHlwZSBmb3IgVGV4dCAqL1xuZXhwb3J0cy5UZXh0ID0gRWxlbWVudFR5cGUuVGV4dDtcbi8qKiBUeXBlIGZvciA8PyAuLi4gPz4gKi9cbmV4cG9ydHMuRGlyZWN0aXZlID0gRWxlbWVudFR5cGUuRGlyZWN0aXZlO1xuLyoqIFR5cGUgZm9yIDwhLS0gLi4uIC0tPiAqL1xuZXhwb3J0cy5Db21tZW50ID0gRWxlbWVudFR5cGUuQ29tbWVudDtcbi8qKiBUeXBlIGZvciA8c2NyaXB0PiB0YWdzICovXG5leHBvcnRzLlNjcmlwdCA9IEVsZW1lbnRUeXBlLlNjcmlwdDtcbi8qKiBUeXBlIGZvciA8c3R5bGU+IHRhZ3MgKi9cbmV4cG9ydHMuU3R5bGUgPSBFbGVtZW50VHlwZS5TdHlsZTtcbi8qKiBUeXBlIGZvciBBbnkgdGFnICovXG5leHBvcnRzLlRhZyA9IEVsZW1lbnRUeXBlLlRhZztcbi8qKiBUeXBlIGZvciA8IVtDREFUQVsgLi4uIF1dPiAqL1xuZXhwb3J0cy5DREFUQSA9IEVsZW1lbnRUeXBlLkNEQVRBO1xuLyoqIFR5cGUgZm9yIDwhZG9jdHlwZSAuLi4+ICovXG5leHBvcnRzLkRvY3R5cGUgPSBFbGVtZW50VHlwZS5Eb2N0eXBlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/domelementtype/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/domhandler/lib/index.js":
/*!**********************************************!*\
  !*** ./node_modules/domhandler/lib/index.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DomHandler = void 0;\nvar domelementtype_1 = __webpack_require__(/*! domelementtype */ \"./node_modules/domelementtype/lib/index.js\");\nvar node_js_1 = __webpack_require__(/*! ./node.js */ \"./node_modules/domhandler/lib/node.js\");\n__exportStar(__webpack_require__(/*! ./node.js */ \"./node_modules/domhandler/lib/node.js\"), exports);\n// Default options\nvar defaultOpts = {\n    withStartIndices: false,\n    withEndIndices: false,\n    xmlMode: false,\n};\nvar DomHandler = /** @class */ (function () {\n    /**\n     * @param callback Called once parsing has completed.\n     * @param options Settings for the handler.\n     * @param elementCB Callback whenever a tag is closed.\n     */\n    function DomHandler(callback, options, elementCB) {\n        /** The elements of the DOM */\n        this.dom = [];\n        /** The root element for the DOM */\n        this.root = new node_js_1.Document(this.dom);\n        /** Indicated whether parsing has been completed. */\n        this.done = false;\n        /** Stack of open tags. */\n        this.tagStack = [this.root];\n        /** A data node that is still being written to. */\n        this.lastNode = null;\n        /** Reference to the parser instance. Used for location information. */\n        this.parser = null;\n        // Make it possible to skip arguments, for backwards-compatibility\n        if (typeof options === \"function\") {\n            elementCB = options;\n            options = defaultOpts;\n        }\n        if (typeof callback === \"object\") {\n            options = callback;\n            callback = undefined;\n        }\n        this.callback = callback !== null && callback !== void 0 ? callback : null;\n        this.options = options !== null && options !== void 0 ? options : defaultOpts;\n        this.elementCB = elementCB !== null && elementCB !== void 0 ? elementCB : null;\n    }\n    DomHandler.prototype.onparserinit = function (parser) {\n        this.parser = parser;\n    };\n    // Resets the handler back to starting state\n    DomHandler.prototype.onreset = function () {\n        this.dom = [];\n        this.root = new node_js_1.Document(this.dom);\n        this.done = false;\n        this.tagStack = [this.root];\n        this.lastNode = null;\n        this.parser = null;\n    };\n    // Signals the handler that parsing is done\n    DomHandler.prototype.onend = function () {\n        if (this.done)\n            return;\n        this.done = true;\n        this.parser = null;\n        this.handleCallback(null);\n    };\n    DomHandler.prototype.onerror = function (error) {\n        this.handleCallback(error);\n    };\n    DomHandler.prototype.onclosetag = function () {\n        this.lastNode = null;\n        var elem = this.tagStack.pop();\n        if (this.options.withEndIndices) {\n            elem.endIndex = this.parser.endIndex;\n        }\n        if (this.elementCB)\n            this.elementCB(elem);\n    };\n    DomHandler.prototype.onopentag = function (name, attribs) {\n        var type = this.options.xmlMode ? domelementtype_1.ElementType.Tag : undefined;\n        var element = new node_js_1.Element(name, attribs, undefined, type);\n        this.addNode(element);\n        this.tagStack.push(element);\n    };\n    DomHandler.prototype.ontext = function (data) {\n        var lastNode = this.lastNode;\n        if (lastNode && lastNode.type === domelementtype_1.ElementType.Text) {\n            lastNode.data += data;\n            if (this.options.withEndIndices) {\n                lastNode.endIndex = this.parser.endIndex;\n            }\n        }\n        else {\n            var node = new node_js_1.Text(data);\n            this.addNode(node);\n            this.lastNode = node;\n        }\n    };\n    DomHandler.prototype.oncomment = function (data) {\n        if (this.lastNode && this.lastNode.type === domelementtype_1.ElementType.Comment) {\n            this.lastNode.data += data;\n            return;\n        }\n        var node = new node_js_1.Comment(data);\n        this.addNode(node);\n        this.lastNode = node;\n    };\n    DomHandler.prototype.oncommentend = function () {\n        this.lastNode = null;\n    };\n    DomHandler.prototype.oncdatastart = function () {\n        var text = new node_js_1.Text(\"\");\n        var node = new node_js_1.CDATA([text]);\n        this.addNode(node);\n        text.parent = node;\n        this.lastNode = text;\n    };\n    DomHandler.prototype.oncdataend = function () {\n        this.lastNode = null;\n    };\n    DomHandler.prototype.onprocessinginstruction = function (name, data) {\n        var node = new node_js_1.ProcessingInstruction(name, data);\n        this.addNode(node);\n    };\n    DomHandler.prototype.handleCallback = function (error) {\n        if (typeof this.callback === \"function\") {\n            this.callback(error, this.dom);\n        }\n        else if (error) {\n            throw error;\n        }\n    };\n    DomHandler.prototype.addNode = function (node) {\n        var parent = this.tagStack[this.tagStack.length - 1];\n        var previousSibling = parent.children[parent.children.length - 1];\n        if (this.options.withStartIndices) {\n            node.startIndex = this.parser.startIndex;\n        }\n        if (this.options.withEndIndices) {\n            node.endIndex = this.parser.endIndex;\n        }\n        parent.children.push(node);\n        if (previousSibling) {\n            node.prev = previousSibling;\n            previousSibling.next = node;\n        }\n        node.parent = parent;\n        this.lastNode = null;\n    };\n    return DomHandler;\n}());\nexports.DomHandler = DomHandler;\nexports[\"default\"] = DomHandler;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/domhandler/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/domhandler/lib/node.js":
/*!*********************************************!*\
  !*** ./node_modules/domhandler/lib/node.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.cloneNode = exports.hasChildren = exports.isDocument = exports.isDirective = exports.isComment = exports.isText = exports.isCDATA = exports.isTag = exports.Element = exports.Document = exports.CDATA = exports.NodeWithChildren = exports.ProcessingInstruction = exports.Comment = exports.Text = exports.DataNode = exports.Node = void 0;\nvar domelementtype_1 = __webpack_require__(/*! domelementtype */ \"./node_modules/domelementtype/lib/index.js\");\n/**\n * This object will be used as the prototype for Nodes when creating a\n * DOM-Level-1-compliant structure.\n */\nvar Node = /** @class */ (function () {\n    function Node() {\n        /** Parent of the node */\n        this.parent = null;\n        /** Previous sibling */\n        this.prev = null;\n        /** Next sibling */\n        this.next = null;\n        /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */\n        this.startIndex = null;\n        /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */\n        this.endIndex = null;\n    }\n    Object.defineProperty(Node.prototype, \"parentNode\", {\n        // Read-write aliases for properties\n        /**\n         * Same as {@link parent}.\n         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n         */\n        get: function () {\n            return this.parent;\n        },\n        set: function (parent) {\n            this.parent = parent;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"previousSibling\", {\n        /**\n         * Same as {@link prev}.\n         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n         */\n        get: function () {\n            return this.prev;\n        },\n        set: function (prev) {\n            this.prev = prev;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"nextSibling\", {\n        /**\n         * Same as {@link next}.\n         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n         */\n        get: function () {\n            return this.next;\n        },\n        set: function (next) {\n            this.next = next;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Clone this node, and optionally its children.\n     *\n     * @param recursive Clone child nodes as well.\n     * @returns A clone of the node.\n     */\n    Node.prototype.cloneNode = function (recursive) {\n        if (recursive === void 0) { recursive = false; }\n        return cloneNode(this, recursive);\n    };\n    return Node;\n}());\nexports.Node = Node;\n/**\n * A node that contains some data.\n */\nvar DataNode = /** @class */ (function (_super) {\n    __extends(DataNode, _super);\n    /**\n     * @param data The content of the data node\n     */\n    function DataNode(data) {\n        var _this = _super.call(this) || this;\n        _this.data = data;\n        return _this;\n    }\n    Object.defineProperty(DataNode.prototype, \"nodeValue\", {\n        /**\n         * Same as {@link data}.\n         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n         */\n        get: function () {\n            return this.data;\n        },\n        set: function (data) {\n            this.data = data;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return DataNode;\n}(Node));\nexports.DataNode = DataNode;\n/**\n * Text within the document.\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = domelementtype_1.ElementType.Text;\n        return _this;\n    }\n    Object.defineProperty(Text.prototype, \"nodeType\", {\n        get: function () {\n            return 3;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Text;\n}(DataNode));\nexports.Text = Text;\n/**\n * Comments within the document.\n */\nvar Comment = /** @class */ (function (_super) {\n    __extends(Comment, _super);\n    function Comment() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = domelementtype_1.ElementType.Comment;\n        return _this;\n    }\n    Object.defineProperty(Comment.prototype, \"nodeType\", {\n        get: function () {\n            return 8;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Comment;\n}(DataNode));\nexports.Comment = Comment;\n/**\n * Processing instructions, including doc types.\n */\nvar ProcessingInstruction = /** @class */ (function (_super) {\n    __extends(ProcessingInstruction, _super);\n    function ProcessingInstruction(name, data) {\n        var _this = _super.call(this, data) || this;\n        _this.name = name;\n        _this.type = domelementtype_1.ElementType.Directive;\n        return _this;\n    }\n    Object.defineProperty(ProcessingInstruction.prototype, \"nodeType\", {\n        get: function () {\n            return 1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return ProcessingInstruction;\n}(DataNode));\nexports.ProcessingInstruction = ProcessingInstruction;\n/**\n * A `Node` that can have children.\n */\nvar NodeWithChildren = /** @class */ (function (_super) {\n    __extends(NodeWithChildren, _super);\n    /**\n     * @param children Children of the node. Only certain node types can have children.\n     */\n    function NodeWithChildren(children) {\n        var _this = _super.call(this) || this;\n        _this.children = children;\n        return _this;\n    }\n    Object.defineProperty(NodeWithChildren.prototype, \"firstChild\", {\n        // Aliases\n        /** First child of the node. */\n        get: function () {\n            var _a;\n            return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeWithChildren.prototype, \"lastChild\", {\n        /** Last child of the node. */\n        get: function () {\n            return this.children.length > 0\n                ? this.children[this.children.length - 1]\n                : null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeWithChildren.prototype, \"childNodes\", {\n        /**\n         * Same as {@link children}.\n         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n         */\n        get: function () {\n            return this.children;\n        },\n        set: function (children) {\n            this.children = children;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return NodeWithChildren;\n}(Node));\nexports.NodeWithChildren = NodeWithChildren;\nvar CDATA = /** @class */ (function (_super) {\n    __extends(CDATA, _super);\n    function CDATA() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = domelementtype_1.ElementType.CDATA;\n        return _this;\n    }\n    Object.defineProperty(CDATA.prototype, \"nodeType\", {\n        get: function () {\n            return 4;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return CDATA;\n}(NodeWithChildren));\nexports.CDATA = CDATA;\n/**\n * The root node of the document.\n */\nvar Document = /** @class */ (function (_super) {\n    __extends(Document, _super);\n    function Document() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = domelementtype_1.ElementType.Root;\n        return _this;\n    }\n    Object.defineProperty(Document.prototype, \"nodeType\", {\n        get: function () {\n            return 9;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Document;\n}(NodeWithChildren));\nexports.Document = Document;\n/**\n * An element within the DOM.\n */\nvar Element = /** @class */ (function (_super) {\n    __extends(Element, _super);\n    /**\n     * @param name Name of the tag, eg. `div`, `span`.\n     * @param attribs Object mapping attribute names to attribute values.\n     * @param children Children of the node.\n     */\n    function Element(name, attribs, children, type) {\n        if (children === void 0) { children = []; }\n        if (type === void 0) { type = name === \"script\"\n            ? domelementtype_1.ElementType.Script\n            : name === \"style\"\n                ? domelementtype_1.ElementType.Style\n                : domelementtype_1.ElementType.Tag; }\n        var _this = _super.call(this, children) || this;\n        _this.name = name;\n        _this.attribs = attribs;\n        _this.type = type;\n        return _this;\n    }\n    Object.defineProperty(Element.prototype, \"nodeType\", {\n        get: function () {\n            return 1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Element.prototype, \"tagName\", {\n        // DOM Level 1 aliases\n        /**\n         * Same as {@link name}.\n         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n         */\n        get: function () {\n            return this.name;\n        },\n        set: function (name) {\n            this.name = name;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Element.prototype, \"attributes\", {\n        get: function () {\n            var _this = this;\n            return Object.keys(this.attribs).map(function (name) {\n                var _a, _b;\n                return ({\n                    name: name,\n                    value: _this.attribs[name],\n                    namespace: (_a = _this[\"x-attribsNamespace\"]) === null || _a === void 0 ? void 0 : _a[name],\n                    prefix: (_b = _this[\"x-attribsPrefix\"]) === null || _b === void 0 ? void 0 : _b[name],\n                });\n            });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Element;\n}(NodeWithChildren));\nexports.Element = Element;\n/**\n * @param node Node to check.\n * @returns `true` if the node is a `Element`, `false` otherwise.\n */\nfunction isTag(node) {\n    return (0, domelementtype_1.isTag)(node);\n}\nexports.isTag = isTag;\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `CDATA`, `false` otherwise.\n */\nfunction isCDATA(node) {\n    return node.type === domelementtype_1.ElementType.CDATA;\n}\nexports.isCDATA = isCDATA;\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Text`, `false` otherwise.\n */\nfunction isText(node) {\n    return node.type === domelementtype_1.ElementType.Text;\n}\nexports.isText = isText;\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Comment`, `false` otherwise.\n */\nfunction isComment(node) {\n    return node.type === domelementtype_1.ElementType.Comment;\n}\nexports.isComment = isComment;\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nfunction isDirective(node) {\n    return node.type === domelementtype_1.ElementType.Directive;\n}\nexports.isDirective = isDirective;\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nfunction isDocument(node) {\n    return node.type === domelementtype_1.ElementType.Root;\n}\nexports.isDocument = isDocument;\n/**\n * @param node Node to check.\n * @returns `true` if the node has children, `false` otherwise.\n */\nfunction hasChildren(node) {\n    return Object.prototype.hasOwnProperty.call(node, \"children\");\n}\nexports.hasChildren = hasChildren;\n/**\n * Clone a node, and optionally its children.\n *\n * @param recursive Clone child nodes as well.\n * @returns A clone of the node.\n */\nfunction cloneNode(node, recursive) {\n    if (recursive === void 0) { recursive = false; }\n    var result;\n    if (isText(node)) {\n        result = new Text(node.data);\n    }\n    else if (isComment(node)) {\n        result = new Comment(node.data);\n    }\n    else if (isTag(node)) {\n        var children = recursive ? cloneChildren(node.children) : [];\n        var clone_1 = new Element(node.name, __assign({}, node.attribs), children);\n        children.forEach(function (child) { return (child.parent = clone_1); });\n        if (node.namespace != null) {\n            clone_1.namespace = node.namespace;\n        }\n        if (node[\"x-attribsNamespace\"]) {\n            clone_1[\"x-attribsNamespace\"] = __assign({}, node[\"x-attribsNamespace\"]);\n        }\n        if (node[\"x-attribsPrefix\"]) {\n            clone_1[\"x-attribsPrefix\"] = __assign({}, node[\"x-attribsPrefix\"]);\n        }\n        result = clone_1;\n    }\n    else if (isCDATA(node)) {\n        var children = recursive ? cloneChildren(node.children) : [];\n        var clone_2 = new CDATA(children);\n        children.forEach(function (child) { return (child.parent = clone_2); });\n        result = clone_2;\n    }\n    else if (isDocument(node)) {\n        var children = recursive ? cloneChildren(node.children) : [];\n        var clone_3 = new Document(children);\n        children.forEach(function (child) { return (child.parent = clone_3); });\n        if (node[\"x-mode\"]) {\n            clone_3[\"x-mode\"] = node[\"x-mode\"];\n        }\n        result = clone_3;\n    }\n    else if (isDirective(node)) {\n        var instruction = new ProcessingInstruction(node.name, node.data);\n        if (node[\"x-name\"] != null) {\n            instruction[\"x-name\"] = node[\"x-name\"];\n            instruction[\"x-publicId\"] = node[\"x-publicId\"];\n            instruction[\"x-systemId\"] = node[\"x-systemId\"];\n        }\n        result = instruction;\n    }\n    else {\n        throw new Error(\"Not implemented yet: \".concat(node.type));\n    }\n    result.startIndex = node.startIndex;\n    result.endIndex = node.endIndex;\n    if (node.sourceCodeLocation != null) {\n        result.sourceCodeLocation = node.sourceCodeLocation;\n    }\n    return result;\n}\nexports.cloneNode = cloneNode;\nfunction cloneChildren(childs) {\n    var children = childs.map(function (child) { return cloneNode(child, true); });\n    for (var i = 1; i < children.length; i++) {\n        children[i].prev = children[i - 1];\n        children[i - 1].next = children[i];\n    }\n    return children;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9taGFuZGxlci9saWIvbm9kZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0JBQWdCLHNDQUFzQyxrQkFBa0I7QUFDdkYsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxpREFBaUQsT0FBTztBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQixHQUFHLG1CQUFtQixHQUFHLGtCQUFrQixHQUFHLG1CQUFtQixHQUFHLGlCQUFpQixHQUFHLGNBQWMsR0FBRyxlQUFlLEdBQUcsYUFBYSxHQUFHLGVBQWUsR0FBRyxnQkFBZ0IsR0FBRyxhQUFhLEdBQUcsd0JBQXdCLEdBQUcsNkJBQTZCLEdBQUcsZUFBZSxHQUFHLFlBQVksR0FBRyxnQkFBZ0IsR0FBRyxZQUFZO0FBQzVVLHVCQUF1QixtQkFBTyxDQUFDLGtFQUFnQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGFBQWE7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxvQkFBb0IsV0FBVztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLG9CQUFvQixXQUFXO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQztBQUNwQztBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixXQUFXO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7QUFDRCxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7QUFDRCxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7QUFDRCxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQztBQUNELDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxvQkFBb0IsZUFBZTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDO0FBQ0Qsd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDO0FBQ0QsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDO0FBQ0QsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUM7QUFDbkMsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFdBQVc7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7QUFDRCxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdEO0FBQ3hELDRDQUE0QyxrQ0FBa0M7QUFDOUU7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQ7QUFDdkQ7QUFDQTtBQUNBLG9EQUFvRDtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsa0NBQWtDO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsa0NBQWtDO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGlEQUFpRCxnQ0FBZ0M7QUFDakYsb0JBQW9CLHFCQUFxQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kb21oYW5kbGVyL2xpYi9ub2RlLmpzPzJhM2MiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwgcCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIgKyBTdHJpbmcoYikgKyBcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xudmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY2xvbmVOb2RlID0gZXhwb3J0cy5oYXNDaGlsZHJlbiA9IGV4cG9ydHMuaXNEb2N1bWVudCA9IGV4cG9ydHMuaXNEaXJlY3RpdmUgPSBleHBvcnRzLmlzQ29tbWVudCA9IGV4cG9ydHMuaXNUZXh0ID0gZXhwb3J0cy5pc0NEQVRBID0gZXhwb3J0cy5pc1RhZyA9IGV4cG9ydHMuRWxlbWVudCA9IGV4cG9ydHMuRG9jdW1lbnQgPSBleHBvcnRzLkNEQVRBID0gZXhwb3J0cy5Ob2RlV2l0aENoaWxkcmVuID0gZXhwb3J0cy5Qcm9jZXNzaW5nSW5zdHJ1Y3Rpb24gPSBleHBvcnRzLkNvbW1lbnQgPSBleHBvcnRzLlRleHQgPSBleHBvcnRzLkRhdGFOb2RlID0gZXhwb3J0cy5Ob2RlID0gdm9pZCAwO1xudmFyIGRvbWVsZW1lbnR0eXBlXzEgPSByZXF1aXJlKFwiZG9tZWxlbWVudHR5cGVcIik7XG4vKipcbiAqIFRoaXMgb2JqZWN0IHdpbGwgYmUgdXNlZCBhcyB0aGUgcHJvdG90eXBlIGZvciBOb2RlcyB3aGVuIGNyZWF0aW5nIGFcbiAqIERPTS1MZXZlbC0xLWNvbXBsaWFudCBzdHJ1Y3R1cmUuXG4gKi9cbnZhciBOb2RlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIE5vZGUoKSB7XG4gICAgICAgIC8qKiBQYXJlbnQgb2YgdGhlIG5vZGUgKi9cbiAgICAgICAgdGhpcy5wYXJlbnQgPSBudWxsO1xuICAgICAgICAvKiogUHJldmlvdXMgc2libGluZyAqL1xuICAgICAgICB0aGlzLnByZXYgPSBudWxsO1xuICAgICAgICAvKiogTmV4dCBzaWJsaW5nICovXG4gICAgICAgIHRoaXMubmV4dCA9IG51bGw7XG4gICAgICAgIC8qKiBUaGUgc3RhcnQgaW5kZXggb2YgdGhlIG5vZGUuIFJlcXVpcmVzIGB3aXRoU3RhcnRJbmRpY2VzYCBvbiB0aGUgaGFuZGxlciB0byBiZSBgdHJ1ZS4gKi9cbiAgICAgICAgdGhpcy5zdGFydEluZGV4ID0gbnVsbDtcbiAgICAgICAgLyoqIFRoZSBlbmQgaW5kZXggb2YgdGhlIG5vZGUuIFJlcXVpcmVzIGB3aXRoRW5kSW5kaWNlc2Agb24gdGhlIGhhbmRsZXIgdG8gYmUgYHRydWUuICovXG4gICAgICAgIHRoaXMuZW5kSW5kZXggPSBudWxsO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoTm9kZS5wcm90b3R5cGUsIFwicGFyZW50Tm9kZVwiLCB7XG4gICAgICAgIC8vIFJlYWQtd3JpdGUgYWxpYXNlcyBmb3IgcHJvcGVydGllc1xuICAgICAgICAvKipcbiAgICAgICAgICogU2FtZSBhcyB7QGxpbmsgcGFyZW50fS5cbiAgICAgICAgICogW0RPTSBzcGVjXShodHRwczovL2RvbS5zcGVjLndoYXR3Zy5vcmcpLWNvbXBhdGlibGUgYWxpYXMuXG4gICAgICAgICAqL1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnBhcmVudDtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAocGFyZW50KSB7XG4gICAgICAgICAgICB0aGlzLnBhcmVudCA9IHBhcmVudDtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShOb2RlLnByb3RvdHlwZSwgXCJwcmV2aW91c1NpYmxpbmdcIiwge1xuICAgICAgICAvKipcbiAgICAgICAgICogU2FtZSBhcyB7QGxpbmsgcHJldn0uXG4gICAgICAgICAqIFtET00gc3BlY10oaHR0cHM6Ly9kb20uc3BlYy53aGF0d2cub3JnKS1jb21wYXRpYmxlIGFsaWFzLlxuICAgICAgICAgKi9cbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5wcmV2O1xuICAgICAgICB9LFxuICAgICAgICBzZXQ6IGZ1bmN0aW9uIChwcmV2KSB7XG4gICAgICAgICAgICB0aGlzLnByZXYgPSBwcmV2O1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KE5vZGUucHJvdG90eXBlLCBcIm5leHRTaWJsaW5nXCIsIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNhbWUgYXMge0BsaW5rIG5leHR9LlxuICAgICAgICAgKiBbRE9NIHNwZWNdKGh0dHBzOi8vZG9tLnNwZWMud2hhdHdnLm9yZyktY29tcGF0aWJsZSBhbGlhcy5cbiAgICAgICAgICovXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubmV4dDtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAobmV4dCkge1xuICAgICAgICAgICAgdGhpcy5uZXh0ID0gbmV4dDtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIC8qKlxuICAgICAqIENsb25lIHRoaXMgbm9kZSwgYW5kIG9wdGlvbmFsbHkgaXRzIGNoaWxkcmVuLlxuICAgICAqXG4gICAgICogQHBhcmFtIHJlY3Vyc2l2ZSBDbG9uZSBjaGlsZCBub2RlcyBhcyB3ZWxsLlxuICAgICAqIEByZXR1cm5zIEEgY2xvbmUgb2YgdGhlIG5vZGUuXG4gICAgICovXG4gICAgTm9kZS5wcm90b3R5cGUuY2xvbmVOb2RlID0gZnVuY3Rpb24gKHJlY3Vyc2l2ZSkge1xuICAgICAgICBpZiAocmVjdXJzaXZlID09PSB2b2lkIDApIHsgcmVjdXJzaXZlID0gZmFsc2U7IH1cbiAgICAgICAgcmV0dXJuIGNsb25lTm9kZSh0aGlzLCByZWN1cnNpdmUpO1xuICAgIH07XG4gICAgcmV0dXJuIE5vZGU7XG59KCkpO1xuZXhwb3J0cy5Ob2RlID0gTm9kZTtcbi8qKlxuICogQSBub2RlIHRoYXQgY29udGFpbnMgc29tZSBkYXRhLlxuICovXG52YXIgRGF0YU5vZGUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKERhdGFOb2RlLCBfc3VwZXIpO1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSBkYXRhIFRoZSBjb250ZW50IG9mIHRoZSBkYXRhIG5vZGVcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBEYXRhTm9kZShkYXRhKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLmRhdGEgPSBkYXRhO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShEYXRhTm9kZS5wcm90b3R5cGUsIFwibm9kZVZhbHVlXCIsIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNhbWUgYXMge0BsaW5rIGRhdGF9LlxuICAgICAgICAgKiBbRE9NIHNwZWNdKGh0dHBzOi8vZG9tLnNwZWMud2hhdHdnLm9yZyktY29tcGF0aWJsZSBhbGlhcy5cbiAgICAgICAgICovXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGF0YTtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIHJldHVybiBEYXRhTm9kZTtcbn0oTm9kZSkpO1xuZXhwb3J0cy5EYXRhTm9kZSA9IERhdGFOb2RlO1xuLyoqXG4gKiBUZXh0IHdpdGhpbiB0aGUgZG9jdW1lbnQuXG4gKi9cbnZhciBUZXh0ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhUZXh0LCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIFRleHQoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy50eXBlID0gZG9tZWxlbWVudHR5cGVfMS5FbGVtZW50VHlwZS5UZXh0O1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShUZXh0LnByb3RvdHlwZSwgXCJub2RlVHlwZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIDM7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICByZXR1cm4gVGV4dDtcbn0oRGF0YU5vZGUpKTtcbmV4cG9ydHMuVGV4dCA9IFRleHQ7XG4vKipcbiAqIENvbW1lbnRzIHdpdGhpbiB0aGUgZG9jdW1lbnQuXG4gKi9cbnZhciBDb21tZW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhDb21tZW50LCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIENvbW1lbnQoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy50eXBlID0gZG9tZWxlbWVudHR5cGVfMS5FbGVtZW50VHlwZS5Db21tZW50O1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDb21tZW50LnByb3RvdHlwZSwgXCJub2RlVHlwZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIDg7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICByZXR1cm4gQ29tbWVudDtcbn0oRGF0YU5vZGUpKTtcbmV4cG9ydHMuQ29tbWVudCA9IENvbW1lbnQ7XG4vKipcbiAqIFByb2Nlc3NpbmcgaW5zdHJ1Y3Rpb25zLCBpbmNsdWRpbmcgZG9jIHR5cGVzLlxuICovXG52YXIgUHJvY2Vzc2luZ0luc3RydWN0aW9uID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhQcm9jZXNzaW5nSW5zdHJ1Y3Rpb24sIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gUHJvY2Vzc2luZ0luc3RydWN0aW9uKG5hbWUsIGRhdGEpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgZGF0YSkgfHwgdGhpcztcbiAgICAgICAgX3RoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIF90aGlzLnR5cGUgPSBkb21lbGVtZW50dHlwZV8xLkVsZW1lbnRUeXBlLkRpcmVjdGl2ZTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoUHJvY2Vzc2luZ0luc3RydWN0aW9uLnByb3RvdHlwZSwgXCJub2RlVHlwZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICByZXR1cm4gUHJvY2Vzc2luZ0luc3RydWN0aW9uO1xufShEYXRhTm9kZSkpO1xuZXhwb3J0cy5Qcm9jZXNzaW5nSW5zdHJ1Y3Rpb24gPSBQcm9jZXNzaW5nSW5zdHJ1Y3Rpb247XG4vKipcbiAqIEEgYE5vZGVgIHRoYXQgY2FuIGhhdmUgY2hpbGRyZW4uXG4gKi9cbnZhciBOb2RlV2l0aENoaWxkcmVuID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhOb2RlV2l0aENoaWxkcmVuLCBfc3VwZXIpO1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSBjaGlsZHJlbiBDaGlsZHJlbiBvZiB0aGUgbm9kZS4gT25seSBjZXJ0YWluIG5vZGUgdHlwZXMgY2FuIGhhdmUgY2hpbGRyZW4uXG4gICAgICovXG4gICAgZnVuY3Rpb24gTm9kZVdpdGhDaGlsZHJlbihjaGlsZHJlbikge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy5jaGlsZHJlbiA9IGNoaWxkcmVuO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShOb2RlV2l0aENoaWxkcmVuLnByb3RvdHlwZSwgXCJmaXJzdENoaWxkXCIsIHtcbiAgICAgICAgLy8gQWxpYXNlc1xuICAgICAgICAvKiogRmlyc3QgY2hpbGQgb2YgdGhlIG5vZGUuICovXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgcmV0dXJuIChfYSA9IHRoaXMuY2hpbGRyZW5bMF0pICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IG51bGw7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoTm9kZVdpdGhDaGlsZHJlbi5wcm90b3R5cGUsIFwibGFzdENoaWxkXCIsIHtcbiAgICAgICAgLyoqIExhc3QgY2hpbGQgb2YgdGhlIG5vZGUuICovXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY2hpbGRyZW4ubGVuZ3RoID4gMFxuICAgICAgICAgICAgICAgID8gdGhpcy5jaGlsZHJlblt0aGlzLmNoaWxkcmVuLmxlbmd0aCAtIDFdXG4gICAgICAgICAgICAgICAgOiBudWxsO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KE5vZGVXaXRoQ2hpbGRyZW4ucHJvdG90eXBlLCBcImNoaWxkTm9kZXNcIiwge1xuICAgICAgICAvKipcbiAgICAgICAgICogU2FtZSBhcyB7QGxpbmsgY2hpbGRyZW59LlxuICAgICAgICAgKiBbRE9NIHNwZWNdKGh0dHBzOi8vZG9tLnNwZWMud2hhdHdnLm9yZyktY29tcGF0aWJsZSBhbGlhcy5cbiAgICAgICAgICovXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY2hpbGRyZW47XG4gICAgICAgIH0sXG4gICAgICAgIHNldDogZnVuY3Rpb24gKGNoaWxkcmVuKSB7XG4gICAgICAgICAgICB0aGlzLmNoaWxkcmVuID0gY2hpbGRyZW47XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICByZXR1cm4gTm9kZVdpdGhDaGlsZHJlbjtcbn0oTm9kZSkpO1xuZXhwb3J0cy5Ob2RlV2l0aENoaWxkcmVuID0gTm9kZVdpdGhDaGlsZHJlbjtcbnZhciBDREFUQSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoQ0RBVEEsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gQ0RBVEEoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy50eXBlID0gZG9tZWxlbWVudHR5cGVfMS5FbGVtZW50VHlwZS5DREFUQTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQ0RBVEEucHJvdG90eXBlLCBcIm5vZGVUeXBlXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gNDtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIHJldHVybiBDREFUQTtcbn0oTm9kZVdpdGhDaGlsZHJlbikpO1xuZXhwb3J0cy5DREFUQSA9IENEQVRBO1xuLyoqXG4gKiBUaGUgcm9vdCBub2RlIG9mIHRoZSBkb2N1bWVudC5cbiAqL1xudmFyIERvY3VtZW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhEb2N1bWVudCwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBEb2N1bWVudCgpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLnR5cGUgPSBkb21lbGVtZW50dHlwZV8xLkVsZW1lbnRUeXBlLlJvb3Q7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KERvY3VtZW50LnByb3RvdHlwZSwgXCJub2RlVHlwZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIDk7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICByZXR1cm4gRG9jdW1lbnQ7XG59KE5vZGVXaXRoQ2hpbGRyZW4pKTtcbmV4cG9ydHMuRG9jdW1lbnQgPSBEb2N1bWVudDtcbi8qKlxuICogQW4gZWxlbWVudCB3aXRoaW4gdGhlIERPTS5cbiAqL1xudmFyIEVsZW1lbnQgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKEVsZW1lbnQsIF9zdXBlcik7XG4gICAgLyoqXG4gICAgICogQHBhcmFtIG5hbWUgTmFtZSBvZiB0aGUgdGFnLCBlZy4gYGRpdmAsIGBzcGFuYC5cbiAgICAgKiBAcGFyYW0gYXR0cmlicyBPYmplY3QgbWFwcGluZyBhdHRyaWJ1dGUgbmFtZXMgdG8gYXR0cmlidXRlIHZhbHVlcy5cbiAgICAgKiBAcGFyYW0gY2hpbGRyZW4gQ2hpbGRyZW4gb2YgdGhlIG5vZGUuXG4gICAgICovXG4gICAgZnVuY3Rpb24gRWxlbWVudChuYW1lLCBhdHRyaWJzLCBjaGlsZHJlbiwgdHlwZSkge1xuICAgICAgICBpZiAoY2hpbGRyZW4gPT09IHZvaWQgMCkgeyBjaGlsZHJlbiA9IFtdOyB9XG4gICAgICAgIGlmICh0eXBlID09PSB2b2lkIDApIHsgdHlwZSA9IG5hbWUgPT09IFwic2NyaXB0XCJcbiAgICAgICAgICAgID8gZG9tZWxlbWVudHR5cGVfMS5FbGVtZW50VHlwZS5TY3JpcHRcbiAgICAgICAgICAgIDogbmFtZSA9PT0gXCJzdHlsZVwiXG4gICAgICAgICAgICAgICAgPyBkb21lbGVtZW50dHlwZV8xLkVsZW1lbnRUeXBlLlN0eWxlXG4gICAgICAgICAgICAgICAgOiBkb21lbGVtZW50dHlwZV8xLkVsZW1lbnRUeXBlLlRhZzsgfVxuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBjaGlsZHJlbikgfHwgdGhpcztcbiAgICAgICAgX3RoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIF90aGlzLmF0dHJpYnMgPSBhdHRyaWJzO1xuICAgICAgICBfdGhpcy50eXBlID0gdHlwZTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRWxlbWVudC5wcm90b3R5cGUsIFwibm9kZVR5cGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiAxO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEVsZW1lbnQucHJvdG90eXBlLCBcInRhZ05hbWVcIiwge1xuICAgICAgICAvLyBET00gTGV2ZWwgMSBhbGlhc2VzXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTYW1lIGFzIHtAbGluayBuYW1lfS5cbiAgICAgICAgICogW0RPTSBzcGVjXShodHRwczovL2RvbS5zcGVjLndoYXR3Zy5vcmcpLWNvbXBhdGlibGUgYWxpYXMuXG4gICAgICAgICAqL1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm5hbWU7XG4gICAgICAgIH0sXG4gICAgICAgIHNldDogZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRWxlbWVudC5wcm90b3R5cGUsIFwiYXR0cmlidXRlc1wiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgICAgIHJldHVybiBPYmplY3Qua2V5cyh0aGlzLmF0dHJpYnMpLm1hcChmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICAgICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgICAgICAgICAgcmV0dXJuICh7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IG5hbWUsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdGhpcy5hdHRyaWJzW25hbWVdLFxuICAgICAgICAgICAgICAgICAgICBuYW1lc3BhY2U6IChfYSA9IF90aGlzW1wieC1hdHRyaWJzTmFtZXNwYWNlXCJdKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2FbbmFtZV0sXG4gICAgICAgICAgICAgICAgICAgIHByZWZpeDogKF9iID0gX3RoaXNbXCJ4LWF0dHJpYnNQcmVmaXhcIl0pID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYltuYW1lXSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIEVsZW1lbnQ7XG59KE5vZGVXaXRoQ2hpbGRyZW4pKTtcbmV4cG9ydHMuRWxlbWVudCA9IEVsZW1lbnQ7XG4vKipcbiAqIEBwYXJhbSBub2RlIE5vZGUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyBgdHJ1ZWAgaWYgdGhlIG5vZGUgaXMgYSBgRWxlbWVudGAsIGBmYWxzZWAgb3RoZXJ3aXNlLlxuICovXG5mdW5jdGlvbiBpc1RhZyhub2RlKSB7XG4gICAgcmV0dXJuICgwLCBkb21lbGVtZW50dHlwZV8xLmlzVGFnKShub2RlKTtcbn1cbmV4cG9ydHMuaXNUYWcgPSBpc1RhZztcbi8qKlxuICogQHBhcmFtIG5vZGUgTm9kZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIGB0cnVlYCBpZiB0aGUgbm9kZSBoYXMgdGhlIHR5cGUgYENEQVRBYCwgYGZhbHNlYCBvdGhlcndpc2UuXG4gKi9cbmZ1bmN0aW9uIGlzQ0RBVEEobm9kZSkge1xuICAgIHJldHVybiBub2RlLnR5cGUgPT09IGRvbWVsZW1lbnR0eXBlXzEuRWxlbWVudFR5cGUuQ0RBVEE7XG59XG5leHBvcnRzLmlzQ0RBVEEgPSBpc0NEQVRBO1xuLyoqXG4gKiBAcGFyYW0gbm9kZSBOb2RlIHRvIGNoZWNrLlxuICogQHJldHVybnMgYHRydWVgIGlmIHRoZSBub2RlIGhhcyB0aGUgdHlwZSBgVGV4dGAsIGBmYWxzZWAgb3RoZXJ3aXNlLlxuICovXG5mdW5jdGlvbiBpc1RleHQobm9kZSkge1xuICAgIHJldHVybiBub2RlLnR5cGUgPT09IGRvbWVsZW1lbnR0eXBlXzEuRWxlbWVudFR5cGUuVGV4dDtcbn1cbmV4cG9ydHMuaXNUZXh0ID0gaXNUZXh0O1xuLyoqXG4gKiBAcGFyYW0gbm9kZSBOb2RlIHRvIGNoZWNrLlxuICogQHJldHVybnMgYHRydWVgIGlmIHRoZSBub2RlIGhhcyB0aGUgdHlwZSBgQ29tbWVudGAsIGBmYWxzZWAgb3RoZXJ3aXNlLlxuICovXG5mdW5jdGlvbiBpc0NvbW1lbnQobm9kZSkge1xuICAgIHJldHVybiBub2RlLnR5cGUgPT09IGRvbWVsZW1lbnR0eXBlXzEuRWxlbWVudFR5cGUuQ29tbWVudDtcbn1cbmV4cG9ydHMuaXNDb21tZW50ID0gaXNDb21tZW50O1xuLyoqXG4gKiBAcGFyYW0gbm9kZSBOb2RlIHRvIGNoZWNrLlxuICogQHJldHVybnMgYHRydWVgIGlmIHRoZSBub2RlIGhhcyB0aGUgdHlwZSBgUHJvY2Vzc2luZ0luc3RydWN0aW9uYCwgYGZhbHNlYCBvdGhlcndpc2UuXG4gKi9cbmZ1bmN0aW9uIGlzRGlyZWN0aXZlKG5vZGUpIHtcbiAgICByZXR1cm4gbm9kZS50eXBlID09PSBkb21lbGVtZW50dHlwZV8xLkVsZW1lbnRUeXBlLkRpcmVjdGl2ZTtcbn1cbmV4cG9ydHMuaXNEaXJlY3RpdmUgPSBpc0RpcmVjdGl2ZTtcbi8qKlxuICogQHBhcmFtIG5vZGUgTm9kZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIGB0cnVlYCBpZiB0aGUgbm9kZSBoYXMgdGhlIHR5cGUgYFByb2Nlc3NpbmdJbnN0cnVjdGlvbmAsIGBmYWxzZWAgb3RoZXJ3aXNlLlxuICovXG5mdW5jdGlvbiBpc0RvY3VtZW50KG5vZGUpIHtcbiAgICByZXR1cm4gbm9kZS50eXBlID09PSBkb21lbGVtZW50dHlwZV8xLkVsZW1lbnRUeXBlLlJvb3Q7XG59XG5leHBvcnRzLmlzRG9jdW1lbnQgPSBpc0RvY3VtZW50O1xuLyoqXG4gKiBAcGFyYW0gbm9kZSBOb2RlIHRvIGNoZWNrLlxuICogQHJldHVybnMgYHRydWVgIGlmIHRoZSBub2RlIGhhcyBjaGlsZHJlbiwgYGZhbHNlYCBvdGhlcndpc2UuXG4gKi9cbmZ1bmN0aW9uIGhhc0NoaWxkcmVuKG5vZGUpIHtcbiAgICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG5vZGUsIFwiY2hpbGRyZW5cIik7XG59XG5leHBvcnRzLmhhc0NoaWxkcmVuID0gaGFzQ2hpbGRyZW47XG4vKipcbiAqIENsb25lIGEgbm9kZSwgYW5kIG9wdGlvbmFsbHkgaXRzIGNoaWxkcmVuLlxuICpcbiAqIEBwYXJhbSByZWN1cnNpdmUgQ2xvbmUgY2hpbGQgbm9kZXMgYXMgd2VsbC5cbiAqIEByZXR1cm5zIEEgY2xvbmUgb2YgdGhlIG5vZGUuXG4gKi9cbmZ1bmN0aW9uIGNsb25lTm9kZShub2RlLCByZWN1cnNpdmUpIHtcbiAgICBpZiAocmVjdXJzaXZlID09PSB2b2lkIDApIHsgcmVjdXJzaXZlID0gZmFsc2U7IH1cbiAgICB2YXIgcmVzdWx0O1xuICAgIGlmIChpc1RleHQobm9kZSkpIHtcbiAgICAgICAgcmVzdWx0ID0gbmV3IFRleHQobm9kZS5kYXRhKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNDb21tZW50KG5vZGUpKSB7XG4gICAgICAgIHJlc3VsdCA9IG5ldyBDb21tZW50KG5vZGUuZGF0YSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzVGFnKG5vZGUpKSB7XG4gICAgICAgIHZhciBjaGlsZHJlbiA9IHJlY3Vyc2l2ZSA/IGNsb25lQ2hpbGRyZW4obm9kZS5jaGlsZHJlbikgOiBbXTtcbiAgICAgICAgdmFyIGNsb25lXzEgPSBuZXcgRWxlbWVudChub2RlLm5hbWUsIF9fYXNzaWduKHt9LCBub2RlLmF0dHJpYnMpLCBjaGlsZHJlbik7XG4gICAgICAgIGNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24gKGNoaWxkKSB7IHJldHVybiAoY2hpbGQucGFyZW50ID0gY2xvbmVfMSk7IH0pO1xuICAgICAgICBpZiAobm9kZS5uYW1lc3BhY2UgIT0gbnVsbCkge1xuICAgICAgICAgICAgY2xvbmVfMS5uYW1lc3BhY2UgPSBub2RlLm5hbWVzcGFjZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobm9kZVtcIngtYXR0cmlic05hbWVzcGFjZVwiXSkge1xuICAgICAgICAgICAgY2xvbmVfMVtcIngtYXR0cmlic05hbWVzcGFjZVwiXSA9IF9fYXNzaWduKHt9LCBub2RlW1wieC1hdHRyaWJzTmFtZXNwYWNlXCJdKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobm9kZVtcIngtYXR0cmlic1ByZWZpeFwiXSkge1xuICAgICAgICAgICAgY2xvbmVfMVtcIngtYXR0cmlic1ByZWZpeFwiXSA9IF9fYXNzaWduKHt9LCBub2RlW1wieC1hdHRyaWJzUHJlZml4XCJdKTtcbiAgICAgICAgfVxuICAgICAgICByZXN1bHQgPSBjbG9uZV8xO1xuICAgIH1cbiAgICBlbHNlIGlmIChpc0NEQVRBKG5vZGUpKSB7XG4gICAgICAgIHZhciBjaGlsZHJlbiA9IHJlY3Vyc2l2ZSA/IGNsb25lQ2hpbGRyZW4obm9kZS5jaGlsZHJlbikgOiBbXTtcbiAgICAgICAgdmFyIGNsb25lXzIgPSBuZXcgQ0RBVEEoY2hpbGRyZW4pO1xuICAgICAgICBjaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uIChjaGlsZCkgeyByZXR1cm4gKGNoaWxkLnBhcmVudCA9IGNsb25lXzIpOyB9KTtcbiAgICAgICAgcmVzdWx0ID0gY2xvbmVfMjtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNEb2N1bWVudChub2RlKSkge1xuICAgICAgICB2YXIgY2hpbGRyZW4gPSByZWN1cnNpdmUgPyBjbG9uZUNoaWxkcmVuKG5vZGUuY2hpbGRyZW4pIDogW107XG4gICAgICAgIHZhciBjbG9uZV8zID0gbmV3IERvY3VtZW50KGNoaWxkcmVuKTtcbiAgICAgICAgY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbiAoY2hpbGQpIHsgcmV0dXJuIChjaGlsZC5wYXJlbnQgPSBjbG9uZV8zKTsgfSk7XG4gICAgICAgIGlmIChub2RlW1wieC1tb2RlXCJdKSB7XG4gICAgICAgICAgICBjbG9uZV8zW1wieC1tb2RlXCJdID0gbm9kZVtcIngtbW9kZVwiXTtcbiAgICAgICAgfVxuICAgICAgICByZXN1bHQgPSBjbG9uZV8zO1xuICAgIH1cbiAgICBlbHNlIGlmIChpc0RpcmVjdGl2ZShub2RlKSkge1xuICAgICAgICB2YXIgaW5zdHJ1Y3Rpb24gPSBuZXcgUHJvY2Vzc2luZ0luc3RydWN0aW9uKG5vZGUubmFtZSwgbm9kZS5kYXRhKTtcbiAgICAgICAgaWYgKG5vZGVbXCJ4LW5hbWVcIl0gIT0gbnVsbCkge1xuICAgICAgICAgICAgaW5zdHJ1Y3Rpb25bXCJ4LW5hbWVcIl0gPSBub2RlW1wieC1uYW1lXCJdO1xuICAgICAgICAgICAgaW5zdHJ1Y3Rpb25bXCJ4LXB1YmxpY0lkXCJdID0gbm9kZVtcIngtcHVibGljSWRcIl07XG4gICAgICAgICAgICBpbnN0cnVjdGlvbltcIngtc3lzdGVtSWRcIl0gPSBub2RlW1wieC1zeXN0ZW1JZFwiXTtcbiAgICAgICAgfVxuICAgICAgICByZXN1bHQgPSBpbnN0cnVjdGlvbjtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vdCBpbXBsZW1lbnRlZCB5ZXQ6IFwiLmNvbmNhdChub2RlLnR5cGUpKTtcbiAgICB9XG4gICAgcmVzdWx0LnN0YXJ0SW5kZXggPSBub2RlLnN0YXJ0SW5kZXg7XG4gICAgcmVzdWx0LmVuZEluZGV4ID0gbm9kZS5lbmRJbmRleDtcbiAgICBpZiAobm9kZS5zb3VyY2VDb2RlTG9jYXRpb24gIT0gbnVsbCkge1xuICAgICAgICByZXN1bHQuc291cmNlQ29kZUxvY2F0aW9uID0gbm9kZS5zb3VyY2VDb2RlTG9jYXRpb247XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5leHBvcnRzLmNsb25lTm9kZSA9IGNsb25lTm9kZTtcbmZ1bmN0aW9uIGNsb25lQ2hpbGRyZW4oY2hpbGRzKSB7XG4gICAgdmFyIGNoaWxkcmVuID0gY2hpbGRzLm1hcChmdW5jdGlvbiAoY2hpbGQpIHsgcmV0dXJuIGNsb25lTm9kZShjaGlsZCwgdHJ1ZSk7IH0pO1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY2hpbGRyZW5baV0ucHJldiA9IGNoaWxkcmVuW2kgLSAxXTtcbiAgICAgICAgY2hpbGRyZW5baSAtIDFdLm5leHQgPSBjaGlsZHJlbltpXTtcbiAgICB9XG4gICAgcmV0dXJuIGNoaWxkcmVuO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/domhandler/lib/node.js\n"));

/***/ }),

/***/ "./node_modules/html-dom-parser/lib/client/constants.js":
/*!**************************************************************!*\
  !*** ./node_modules/html-dom-parser/lib/client/constants.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("/**\n * SVG elements are case-sensitive.\n *\n * @see {@link https://developer.mozilla.org/docs/Web/SVG/Element#svg_elements_a_to_z}\n */\nexports.CASE_SENSITIVE_TAG_NAMES = [\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'linearGradient',\n  'radialGradient',\n  'textPath'\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaHRtbC1kb20tcGFyc2VyL2xpYi9jbGllbnQvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9odG1sLWRvbS1wYXJzZXIvbGliL2NsaWVudC9jb25zdGFudHMuanM/OGQ3NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFNWRyBlbGVtZW50cyBhcmUgY2FzZS1zZW5zaXRpdmUuXG4gKlxuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvU1ZHL0VsZW1lbnQjc3ZnX2VsZW1lbnRzX2FfdG9fen1cbiAqL1xuZXhwb3J0cy5DQVNFX1NFTlNJVElWRV9UQUdfTkFNRVMgPSBbXG4gICdhbmltYXRlTW90aW9uJyxcbiAgJ2FuaW1hdGVUcmFuc2Zvcm0nLFxuICAnY2xpcFBhdGgnLFxuICAnZmVCbGVuZCcsXG4gICdmZUNvbG9yTWF0cml4JyxcbiAgJ2ZlQ29tcG9uZW50VHJhbnNmZXInLFxuICAnZmVDb21wb3NpdGUnLFxuICAnZmVDb252b2x2ZU1hdHJpeCcsXG4gICdmZURpZmZ1c2VMaWdodGluZycsXG4gICdmZURpc3BsYWNlbWVudE1hcCcsXG4gICdmZURyb3BTaGFkb3cnLFxuICAnZmVGbG9vZCcsXG4gICdmZUZ1bmNBJyxcbiAgJ2ZlRnVuY0InLFxuICAnZmVGdW5jRycsXG4gICdmZUZ1bmNSJyxcbiAgJ2ZlR2F1c3NpYW5CbHVyJyxcbiAgJ2ZlSW1hZ2UnLFxuICAnZmVNZXJnZScsXG4gICdmZU1lcmdlTm9kZScsXG4gICdmZU1vcnBob2xvZ3knLFxuICAnZmVPZmZzZXQnLFxuICAnZmVQb2ludExpZ2h0JyxcbiAgJ2ZlU3BlY3VsYXJMaWdodGluZycsXG4gICdmZVNwb3RMaWdodCcsXG4gICdmZVRpbGUnLFxuICAnZmVUdXJidWxlbmNlJyxcbiAgJ2ZvcmVpZ25PYmplY3QnLFxuICAnbGluZWFyR3JhZGllbnQnLFxuICAncmFkaWFsR3JhZGllbnQnLFxuICAndGV4dFBhdGgnXG5dO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/html-dom-parser/lib/client/constants.js\n"));

/***/ }),

/***/ "./node_modules/html-dom-parser/lib/client/domparser.js":
/*!**************************************************************!*\
  !*** ./node_modules/html-dom-parser/lib/client/domparser.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// constants\nvar HTML = 'html';\nvar HEAD = 'head';\nvar BODY = 'body';\nvar FIRST_TAG_REGEX = /<([a-zA-Z]+[0-9]?)/; // e.g., <h1>\n// match-all-characters in case of newlines (DOTALL)\nvar HEAD_TAG_REGEX = /<head[^]*>/i;\nvar BODY_TAG_REGEX = /<body[^]*>/i;\n\n// falls back to `parseFromString` if `createHTMLDocument` cannot be used\nvar parseFromDocument = function () {\n  throw new Error(\n    'This browser does not support `document.implementation.createHTMLDocument`'\n  );\n};\n\nvar parseFromString = function () {\n  throw new Error(\n    'This browser does not support `DOMParser.prototype.parseFromString`'\n  );\n};\n\nvar DOMParser = typeof window === 'object' && window.DOMParser;\n\n/**\n * DOMParser (performance: slow).\n *\n * @see https://developer.mozilla.org/docs/Web/API/DOMParser#Parsing_an_SVG_or_HTML_document\n */\nif (typeof DOMParser === 'function') {\n  var domParser = new DOMParser();\n  var mimeType = 'text/html';\n\n  /**\n   * Creates an HTML document using `DOMParser.parseFromString`.\n   *\n   * @param  {string} html      - The HTML string.\n   * @param  {string} [tagName] - The element to render the HTML (with 'body' as fallback).\n   * @return {HTMLDocument}\n   */\n  parseFromString = function (html, tagName) {\n    if (tagName) {\n      html = '<' + tagName + '>' + html + '</' + tagName + '>';\n    }\n\n    return domParser.parseFromString(html, mimeType);\n  };\n\n  parseFromDocument = parseFromString;\n}\n\n/**\n * DOMImplementation (performance: fair).\n *\n * @see https://developer.mozilla.org/docs/Web/API/DOMImplementation/createHTMLDocument\n */\nif (typeof document === 'object' && document.implementation) {\n  var doc = document.implementation.createHTMLDocument();\n\n  /**\n   * Use HTML document created by `document.implementation.createHTMLDocument`.\n   *\n   * @param  {string} html      - The HTML string.\n   * @param  {string} [tagName] - The element to render the HTML (with 'body' as fallback).\n   * @return {HTMLDocument}\n   */\n  parseFromDocument = function (html, tagName) {\n    if (tagName) {\n      var element = doc.documentElement.querySelector(tagName);\n      element.innerHTML = html;\n      return doc;\n    }\n\n    doc.documentElement.innerHTML = html;\n    return doc;\n  };\n}\n\n/**\n * Template (performance: fast).\n *\n * @see https://developer.mozilla.org/docs/Web/HTML/Element/template\n */\nvar template =\n  typeof document === 'object' ? document.createElement('template') : {};\n\nvar parseFromTemplate;\n\nif (template.content) {\n  /**\n   * Uses a template element (content fragment) to parse HTML.\n   *\n   * @param  {string} html - The HTML string.\n   * @return {NodeList}\n   */\n  parseFromTemplate = function (html) {\n    template.innerHTML = html;\n    return template.content.childNodes;\n  };\n}\n\n/**\n * Parses HTML string to DOM nodes.\n *\n * @param  {string}   html - HTML markup.\n * @return {NodeList}\n */\nfunction domparser(html) {\n  var firstTagName;\n  var match = html.match(FIRST_TAG_REGEX);\n\n  if (match && match[1]) {\n    firstTagName = match[1].toLowerCase();\n  }\n\n  var doc;\n  var element;\n  var elements;\n\n  switch (firstTagName) {\n    case HTML:\n      doc = parseFromString(html);\n\n      // the created document may come with filler head/body elements,\n      // so make sure to remove them if they don't actually exist\n      if (!HEAD_TAG_REGEX.test(html)) {\n        element = doc.querySelector(HEAD);\n        if (element) {\n          element.parentNode.removeChild(element);\n        }\n      }\n\n      if (!BODY_TAG_REGEX.test(html)) {\n        element = doc.querySelector(BODY);\n        if (element) {\n          element.parentNode.removeChild(element);\n        }\n      }\n\n      return doc.querySelectorAll(HTML);\n\n    case HEAD:\n    case BODY:\n      doc = parseFromDocument(html);\n      elements = doc.querySelectorAll(firstTagName);\n\n      // if there's a sibling element, then return both elements\n      if (BODY_TAG_REGEX.test(html) && HEAD_TAG_REGEX.test(html)) {\n        return elements[0].parentNode.childNodes;\n      }\n      return elements;\n\n    // low-level tag or text\n    default:\n      if (parseFromTemplate) {\n        return parseFromTemplate(html);\n      }\n      element = parseFromDocument(html, BODY).querySelector(BODY);\n      return element.childNodes;\n  }\n}\n\nmodule.exports = domparser;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaHRtbC1kb20tcGFyc2VyL2xpYi9jbGllbnQvZG9tcGFyc2VyLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsUUFBUTtBQUN0QixjQUFjLFFBQVE7QUFDdEIsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsUUFBUTtBQUN0QixjQUFjLFFBQVE7QUFDdEIsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWSxVQUFVO0FBQ3RCLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvaHRtbC1kb20tcGFyc2VyL2xpYi9jbGllbnQvZG9tcGFyc2VyLmpzPzc2M2YiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gY29uc3RhbnRzXG52YXIgSFRNTCA9ICdodG1sJztcbnZhciBIRUFEID0gJ2hlYWQnO1xudmFyIEJPRFkgPSAnYm9keSc7XG52YXIgRklSU1RfVEFHX1JFR0VYID0gLzwoW2EtekEtWl0rWzAtOV0/KS87IC8vIGUuZy4sIDxoMT5cbi8vIG1hdGNoLWFsbC1jaGFyYWN0ZXJzIGluIGNhc2Ugb2YgbmV3bGluZXMgKERPVEFMTClcbnZhciBIRUFEX1RBR19SRUdFWCA9IC88aGVhZFteXSo+L2k7XG52YXIgQk9EWV9UQUdfUkVHRVggPSAvPGJvZHlbXl0qPi9pO1xuXG4vLyBmYWxscyBiYWNrIHRvIGBwYXJzZUZyb21TdHJpbmdgIGlmIGBjcmVhdGVIVE1MRG9jdW1lbnRgIGNhbm5vdCBiZSB1c2VkXG52YXIgcGFyc2VGcm9tRG9jdW1lbnQgPSBmdW5jdGlvbiAoKSB7XG4gIHRocm93IG5ldyBFcnJvcihcbiAgICAnVGhpcyBicm93c2VyIGRvZXMgbm90IHN1cHBvcnQgYGRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudGAnXG4gICk7XG59O1xuXG52YXIgcGFyc2VGcm9tU3RyaW5nID0gZnVuY3Rpb24gKCkge1xuICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgJ1RoaXMgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IGBET01QYXJzZXIucHJvdG90eXBlLnBhcnNlRnJvbVN0cmluZ2AnXG4gICk7XG59O1xuXG52YXIgRE9NUGFyc2VyID0gdHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcgJiYgd2luZG93LkRPTVBhcnNlcjtcblxuLyoqXG4gKiBET01QYXJzZXIgKHBlcmZvcm1hbmNlOiBzbG93KS5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0FQSS9ET01QYXJzZXIjUGFyc2luZ19hbl9TVkdfb3JfSFRNTF9kb2N1bWVudFxuICovXG5pZiAodHlwZW9mIERPTVBhcnNlciA9PT0gJ2Z1bmN0aW9uJykge1xuICB2YXIgZG9tUGFyc2VyID0gbmV3IERPTVBhcnNlcigpO1xuICB2YXIgbWltZVR5cGUgPSAndGV4dC9odG1sJztcblxuICAvKipcbiAgICogQ3JlYXRlcyBhbiBIVE1MIGRvY3VtZW50IHVzaW5nIGBET01QYXJzZXIucGFyc2VGcm9tU3RyaW5nYC5cbiAgICpcbiAgICogQHBhcmFtICB7c3RyaW5nfSBodG1sICAgICAgLSBUaGUgSFRNTCBzdHJpbmcuXG4gICAqIEBwYXJhbSAge3N0cmluZ30gW3RhZ05hbWVdIC0gVGhlIGVsZW1lbnQgdG8gcmVuZGVyIHRoZSBIVE1MICh3aXRoICdib2R5JyBhcyBmYWxsYmFjaykuXG4gICAqIEByZXR1cm4ge0hUTUxEb2N1bWVudH1cbiAgICovXG4gIHBhcnNlRnJvbVN0cmluZyA9IGZ1bmN0aW9uIChodG1sLCB0YWdOYW1lKSB7XG4gICAgaWYgKHRhZ05hbWUpIHtcbiAgICAgIGh0bWwgPSAnPCcgKyB0YWdOYW1lICsgJz4nICsgaHRtbCArICc8LycgKyB0YWdOYW1lICsgJz4nO1xuICAgIH1cblxuICAgIHJldHVybiBkb21QYXJzZXIucGFyc2VGcm9tU3RyaW5nKGh0bWwsIG1pbWVUeXBlKTtcbiAgfTtcblxuICBwYXJzZUZyb21Eb2N1bWVudCA9IHBhcnNlRnJvbVN0cmluZztcbn1cblxuLyoqXG4gKiBET01JbXBsZW1lbnRhdGlvbiAocGVyZm9ybWFuY2U6IGZhaXIpLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQVBJL0RPTUltcGxlbWVudGF0aW9uL2NyZWF0ZUhUTUxEb2N1bWVudFxuICovXG5pZiAodHlwZW9mIGRvY3VtZW50ID09PSAnb2JqZWN0JyAmJiBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbikge1xuICB2YXIgZG9jID0gZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50KCk7XG5cbiAgLyoqXG4gICAqIFVzZSBIVE1MIGRvY3VtZW50IGNyZWF0ZWQgYnkgYGRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudGAuXG4gICAqXG4gICAqIEBwYXJhbSAge3N0cmluZ30gaHRtbCAgICAgIC0gVGhlIEhUTUwgc3RyaW5nLlxuICAgKiBAcGFyYW0gIHtzdHJpbmd9IFt0YWdOYW1lXSAtIFRoZSBlbGVtZW50IHRvIHJlbmRlciB0aGUgSFRNTCAod2l0aCAnYm9keScgYXMgZmFsbGJhY2spLlxuICAgKiBAcmV0dXJuIHtIVE1MRG9jdW1lbnR9XG4gICAqL1xuICBwYXJzZUZyb21Eb2N1bWVudCA9IGZ1bmN0aW9uIChodG1sLCB0YWdOYW1lKSB7XG4gICAgaWYgKHRhZ05hbWUpIHtcbiAgICAgIHZhciBlbGVtZW50ID0gZG9jLmRvY3VtZW50RWxlbWVudC5xdWVyeVNlbGVjdG9yKHRhZ05hbWUpO1xuICAgICAgZWxlbWVudC5pbm5lckhUTUwgPSBodG1sO1xuICAgICAgcmV0dXJuIGRvYztcbiAgICB9XG5cbiAgICBkb2MuZG9jdW1lbnRFbGVtZW50LmlubmVySFRNTCA9IGh0bWw7XG4gICAgcmV0dXJuIGRvYztcbiAgfTtcbn1cblxuLyoqXG4gKiBUZW1wbGF0ZSAocGVyZm9ybWFuY2U6IGZhc3QpLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvSFRNTC9FbGVtZW50L3RlbXBsYXRlXG4gKi9cbnZhciB0ZW1wbGF0ZSA9XG4gIHR5cGVvZiBkb2N1bWVudCA9PT0gJ29iamVjdCcgPyBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZW1wbGF0ZScpIDoge307XG5cbnZhciBwYXJzZUZyb21UZW1wbGF0ZTtcblxuaWYgKHRlbXBsYXRlLmNvbnRlbnQpIHtcbiAgLyoqXG4gICAqIFVzZXMgYSB0ZW1wbGF0ZSBlbGVtZW50IChjb250ZW50IGZyYWdtZW50KSB0byBwYXJzZSBIVE1MLlxuICAgKlxuICAgKiBAcGFyYW0gIHtzdHJpbmd9IGh0bWwgLSBUaGUgSFRNTCBzdHJpbmcuXG4gICAqIEByZXR1cm4ge05vZGVMaXN0fVxuICAgKi9cbiAgcGFyc2VGcm9tVGVtcGxhdGUgPSBmdW5jdGlvbiAoaHRtbCkge1xuICAgIHRlbXBsYXRlLmlubmVySFRNTCA9IGh0bWw7XG4gICAgcmV0dXJuIHRlbXBsYXRlLmNvbnRlbnQuY2hpbGROb2RlcztcbiAgfTtcbn1cblxuLyoqXG4gKiBQYXJzZXMgSFRNTCBzdHJpbmcgdG8gRE9NIG5vZGVzLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gICBodG1sIC0gSFRNTCBtYXJrdXAuXG4gKiBAcmV0dXJuIHtOb2RlTGlzdH1cbiAqL1xuZnVuY3Rpb24gZG9tcGFyc2VyKGh0bWwpIHtcbiAgdmFyIGZpcnN0VGFnTmFtZTtcbiAgdmFyIG1hdGNoID0gaHRtbC5tYXRjaChGSVJTVF9UQUdfUkVHRVgpO1xuXG4gIGlmIChtYXRjaCAmJiBtYXRjaFsxXSkge1xuICAgIGZpcnN0VGFnTmFtZSA9IG1hdGNoWzFdLnRvTG93ZXJDYXNlKCk7XG4gIH1cblxuICB2YXIgZG9jO1xuICB2YXIgZWxlbWVudDtcbiAgdmFyIGVsZW1lbnRzO1xuXG4gIHN3aXRjaCAoZmlyc3RUYWdOYW1lKSB7XG4gICAgY2FzZSBIVE1MOlxuICAgICAgZG9jID0gcGFyc2VGcm9tU3RyaW5nKGh0bWwpO1xuXG4gICAgICAvLyB0aGUgY3JlYXRlZCBkb2N1bWVudCBtYXkgY29tZSB3aXRoIGZpbGxlciBoZWFkL2JvZHkgZWxlbWVudHMsXG4gICAgICAvLyBzbyBtYWtlIHN1cmUgdG8gcmVtb3ZlIHRoZW0gaWYgdGhleSBkb24ndCBhY3R1YWxseSBleGlzdFxuICAgICAgaWYgKCFIRUFEX1RBR19SRUdFWC50ZXN0KGh0bWwpKSB7XG4gICAgICAgIGVsZW1lbnQgPSBkb2MucXVlcnlTZWxlY3RvcihIRUFEKTtcbiAgICAgICAgaWYgKGVsZW1lbnQpIHtcbiAgICAgICAgICBlbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZWxlbWVudCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKCFCT0RZX1RBR19SRUdFWC50ZXN0KGh0bWwpKSB7XG4gICAgICAgIGVsZW1lbnQgPSBkb2MucXVlcnlTZWxlY3RvcihCT0RZKTtcbiAgICAgICAgaWYgKGVsZW1lbnQpIHtcbiAgICAgICAgICBlbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZWxlbWVudCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGRvYy5xdWVyeVNlbGVjdG9yQWxsKEhUTUwpO1xuXG4gICAgY2FzZSBIRUFEOlxuICAgIGNhc2UgQk9EWTpcbiAgICAgIGRvYyA9IHBhcnNlRnJvbURvY3VtZW50KGh0bWwpO1xuICAgICAgZWxlbWVudHMgPSBkb2MucXVlcnlTZWxlY3RvckFsbChmaXJzdFRhZ05hbWUpO1xuXG4gICAgICAvLyBpZiB0aGVyZSdzIGEgc2libGluZyBlbGVtZW50LCB0aGVuIHJldHVybiBib3RoIGVsZW1lbnRzXG4gICAgICBpZiAoQk9EWV9UQUdfUkVHRVgudGVzdChodG1sKSAmJiBIRUFEX1RBR19SRUdFWC50ZXN0KGh0bWwpKSB7XG4gICAgICAgIHJldHVybiBlbGVtZW50c1swXS5wYXJlbnROb2RlLmNoaWxkTm9kZXM7XG4gICAgICB9XG4gICAgICByZXR1cm4gZWxlbWVudHM7XG5cbiAgICAvLyBsb3ctbGV2ZWwgdGFnIG9yIHRleHRcbiAgICBkZWZhdWx0OlxuICAgICAgaWYgKHBhcnNlRnJvbVRlbXBsYXRlKSB7XG4gICAgICAgIHJldHVybiBwYXJzZUZyb21UZW1wbGF0ZShodG1sKTtcbiAgICAgIH1cbiAgICAgIGVsZW1lbnQgPSBwYXJzZUZyb21Eb2N1bWVudChodG1sLCBCT0RZKS5xdWVyeVNlbGVjdG9yKEJPRFkpO1xuICAgICAgcmV0dXJuIGVsZW1lbnQuY2hpbGROb2RlcztcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbXBhcnNlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/html-dom-parser/lib/client/domparser.js\n"));

/***/ }),

/***/ "./node_modules/html-dom-parser/lib/client/html-to-dom.js":
/*!****************************************************************!*\
  !*** ./node_modules/html-dom-parser/lib/client/html-to-dom.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var domparser = __webpack_require__(/*! ./domparser */ \"./node_modules/html-dom-parser/lib/client/domparser.js\");\nvar utilities = __webpack_require__(/*! ./utilities */ \"./node_modules/html-dom-parser/lib/client/utilities.js\");\n\nvar formatDOM = utilities.formatDOM;\n\nvar DIRECTIVE_REGEX = /<(![a-zA-Z\\s]+)>/; // e.g., <!doctype html>\n\n/**\n * Parses HTML string to DOM nodes in browser.\n *\n * @param  {string} html  - HTML markup.\n * @return {DomElement[]} - DOM elements.\n */\nfunction HTMLDOMParser(html) {\n  if (typeof html !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (html === '') {\n    return [];\n  }\n\n  // match directive\n  var match = html.match(DIRECTIVE_REGEX);\n  var directive;\n\n  if (match && match[1]) {\n    directive = match[1];\n  }\n\n  return formatDOM(domparser(html), null, directive);\n}\n\nmodule.exports = HTMLDOMParser;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaHRtbC1kb20tcGFyc2VyL2xpYi9jbGllbnQvaHRtbC10by1kb20uanMiLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCLG1CQUFPLENBQUMsMkVBQWE7QUFDckMsZ0JBQWdCLG1CQUFPLENBQUMsMkVBQWE7O0FBRXJDOztBQUVBLDBDQUEwQzs7QUFFMUM7QUFDQTtBQUNBO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCLFlBQVksY0FBYztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2h0bWwtZG9tLXBhcnNlci9saWIvY2xpZW50L2h0bWwtdG8tZG9tLmpzP2QyMDMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGRvbXBhcnNlciA9IHJlcXVpcmUoJy4vZG9tcGFyc2VyJyk7XG52YXIgdXRpbGl0aWVzID0gcmVxdWlyZSgnLi91dGlsaXRpZXMnKTtcblxudmFyIGZvcm1hdERPTSA9IHV0aWxpdGllcy5mb3JtYXRET007XG5cbnZhciBESVJFQ1RJVkVfUkVHRVggPSAvPCghW2EtekEtWlxcc10rKT4vOyAvLyBlLmcuLCA8IWRvY3R5cGUgaHRtbD5cblxuLyoqXG4gKiBQYXJzZXMgSFRNTCBzdHJpbmcgdG8gRE9NIG5vZGVzIGluIGJyb3dzZXIuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSBodG1sICAtIEhUTUwgbWFya3VwLlxuICogQHJldHVybiB7RG9tRWxlbWVudFtdfSAtIERPTSBlbGVtZW50cy5cbiAqL1xuZnVuY3Rpb24gSFRNTERPTVBhcnNlcihodG1sKSB7XG4gIGlmICh0eXBlb2YgaHRtbCAhPT0gJ3N0cmluZycpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nJyk7XG4gIH1cblxuICBpZiAoaHRtbCA9PT0gJycpIHtcbiAgICByZXR1cm4gW107XG4gIH1cblxuICAvLyBtYXRjaCBkaXJlY3RpdmVcbiAgdmFyIG1hdGNoID0gaHRtbC5tYXRjaChESVJFQ1RJVkVfUkVHRVgpO1xuICB2YXIgZGlyZWN0aXZlO1xuXG4gIGlmIChtYXRjaCAmJiBtYXRjaFsxXSkge1xuICAgIGRpcmVjdGl2ZSA9IG1hdGNoWzFdO1xuICB9XG5cbiAgcmV0dXJuIGZvcm1hdERPTShkb21wYXJzZXIoaHRtbCksIG51bGwsIGRpcmVjdGl2ZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gSFRNTERPTVBhcnNlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/html-dom-parser/lib/client/html-to-dom.js\n"));

/***/ }),

/***/ "./node_modules/html-dom-parser/lib/client/utilities.js":
/*!**************************************************************!*\
  !*** ./node_modules/html-dom-parser/lib/client/utilities.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("var domhandler = __webpack_require__(/*! domhandler */ \"./node_modules/domhandler/lib/index.js\");\nvar constants = __webpack_require__(/*! ./constants */ \"./node_modules/html-dom-parser/lib/client/constants.js\");\n\nvar CASE_SENSITIVE_TAG_NAMES = constants.CASE_SENSITIVE_TAG_NAMES;\n\nvar Comment = domhandler.Comment;\nvar Element = domhandler.Element;\nvar ProcessingInstruction = domhandler.ProcessingInstruction;\nvar Text = domhandler.Text;\n\nvar caseSensitiveTagNamesMap = {};\nvar tagName;\n\nfor (var i = 0, len = CASE_SENSITIVE_TAG_NAMES.length; i < len; i++) {\n  tagName = CASE_SENSITIVE_TAG_NAMES[i];\n  caseSensitiveTagNamesMap[tagName.toLowerCase()] = tagName;\n}\n\n/**\n * Gets case-sensitive tag name.\n *\n * @param {string} tagName - Tag name in lowercase.\n * @returns {string|undefined} - Case-sensitive tag name.\n */\nfunction getCaseSensitiveTagName(tagName) {\n  return caseSensitiveTagNamesMap[tagName];\n}\n\n/**\n * Formats DOM attributes to a hash map.\n *\n * @param {NamedNodeMap} attributes - List of attributes.\n * @returns {object} - Map of attribute name to value.\n */\nfunction formatAttributes(attributes) {\n  var result = {};\n  var attribute;\n  // `NamedNodeMap` is array-like\n  for (var i = 0, len = attributes.length; i < len; i++) {\n    attribute = attributes[i];\n    result[attribute.name] = attribute.value;\n  }\n  return result;\n}\n\n/**\n * Corrects the tag name if it is case-sensitive (SVG).\n * Otherwise, returns the lowercase tag name (HTML).\n *\n * @param {string} tagName - Lowercase tag name.\n * @returns {string} - Formatted tag name.\n */\nfunction formatTagName(tagName) {\n  tagName = tagName.toLowerCase();\n  var caseSensitiveTagName = getCaseSensitiveTagName(tagName);\n  if (caseSensitiveTagName) {\n    return caseSensitiveTagName;\n  }\n  return tagName;\n}\n\n/**\n * Transforms DOM nodes to `domhandler` nodes.\n *\n * @param {NodeList} nodes - DOM nodes.\n * @param {Element|null} [parent=null] - Parent node.\n * @param {string} [directive] - Directive.\n * @returns {Array<Comment|Element|ProcessingInstruction|Text>}\n */\nfunction formatDOM(nodes, parent, directive) {\n  parent = parent || null;\n  var result = [];\n  var tagName;\n\n  for (var index = 0, len = nodes.length; index < len; index++) {\n    var node = nodes[index];\n    var current;\n\n    // set the node data given the type\n    switch (node.nodeType) {\n      case 1:\n        tagName = formatTagName(node.nodeName);\n        // script, style, or tag\n        current = new Element(tagName, formatAttributes(node.attributes));\n        current.children = formatDOM(\n          // template children are on content\n          tagName === 'template' ? node.content.childNodes : node.childNodes,\n          current\n        );\n        break;\n\n      case 3:\n        current = new Text(node.nodeValue);\n        break;\n\n      case 8:\n        current = new Comment(node.nodeValue);\n        break;\n\n      default:\n        continue;\n    }\n\n    // set previous node next\n    var prev = result[index - 1] || null;\n    if (prev) {\n      prev.next = current;\n    }\n\n    // set properties for current node\n    current.parent = parent;\n    current.prev = prev;\n    current.next = null;\n\n    result.push(current);\n  }\n\n  if (directive) {\n    current = new ProcessingInstruction(\n      directive.substring(0, directive.indexOf(' ')).toLowerCase(),\n      directive\n    );\n    current.next = result[0] || null;\n    current.parent = parent;\n    result.unshift(current);\n\n    if (result[1]) {\n      result[1].prev = result[0];\n    }\n  }\n\n  return result;\n}\n\nexports.formatAttributes = formatAttributes;\nexports.formatDOM = formatDOM;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaHRtbC1kb20tcGFyc2VyL2xpYi9jbGllbnQvdXRpbGl0aWVzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixtQkFBTyxDQUFDLDBEQUFZO0FBQ3JDLGdCQUFnQixtQkFBTyxDQUFDLDJFQUFhOztBQUVyQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLHVEQUF1RCxTQUFTO0FBQ2hFO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxrQkFBa0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxjQUFjO0FBQ3pCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLFNBQVM7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQixXQUFXLGNBQWM7QUFDekIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDBDQUEwQyxhQUFhO0FBQ3ZEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsd0JBQXdCO0FBQ3hCLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvaHRtbC1kb20tcGFyc2VyL2xpYi9jbGllbnQvdXRpbGl0aWVzLmpzP2FhZTIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGRvbWhhbmRsZXIgPSByZXF1aXJlKCdkb21oYW5kbGVyJyk7XG52YXIgY29uc3RhbnRzID0gcmVxdWlyZSgnLi9jb25zdGFudHMnKTtcblxudmFyIENBU0VfU0VOU0lUSVZFX1RBR19OQU1FUyA9IGNvbnN0YW50cy5DQVNFX1NFTlNJVElWRV9UQUdfTkFNRVM7XG5cbnZhciBDb21tZW50ID0gZG9taGFuZGxlci5Db21tZW50O1xudmFyIEVsZW1lbnQgPSBkb21oYW5kbGVyLkVsZW1lbnQ7XG52YXIgUHJvY2Vzc2luZ0luc3RydWN0aW9uID0gZG9taGFuZGxlci5Qcm9jZXNzaW5nSW5zdHJ1Y3Rpb247XG52YXIgVGV4dCA9IGRvbWhhbmRsZXIuVGV4dDtcblxudmFyIGNhc2VTZW5zaXRpdmVUYWdOYW1lc01hcCA9IHt9O1xudmFyIHRhZ05hbWU7XG5cbmZvciAodmFyIGkgPSAwLCBsZW4gPSBDQVNFX1NFTlNJVElWRV9UQUdfTkFNRVMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgdGFnTmFtZSA9IENBU0VfU0VOU0lUSVZFX1RBR19OQU1FU1tpXTtcbiAgY2FzZVNlbnNpdGl2ZVRhZ05hbWVzTWFwW3RhZ05hbWUudG9Mb3dlckNhc2UoKV0gPSB0YWdOYW1lO1xufVxuXG4vKipcbiAqIEdldHMgY2FzZS1zZW5zaXRpdmUgdGFnIG5hbWUuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHRhZ05hbWUgLSBUYWcgbmFtZSBpbiBsb3dlcmNhc2UuXG4gKiBAcmV0dXJucyB7c3RyaW5nfHVuZGVmaW5lZH0gLSBDYXNlLXNlbnNpdGl2ZSB0YWcgbmFtZS5cbiAqL1xuZnVuY3Rpb24gZ2V0Q2FzZVNlbnNpdGl2ZVRhZ05hbWUodGFnTmFtZSkge1xuICByZXR1cm4gY2FzZVNlbnNpdGl2ZVRhZ05hbWVzTWFwW3RhZ05hbWVdO1xufVxuXG4vKipcbiAqIEZvcm1hdHMgRE9NIGF0dHJpYnV0ZXMgdG8gYSBoYXNoIG1hcC5cbiAqXG4gKiBAcGFyYW0ge05hbWVkTm9kZU1hcH0gYXR0cmlidXRlcyAtIExpc3Qgb2YgYXR0cmlidXRlcy5cbiAqIEByZXR1cm5zIHtvYmplY3R9IC0gTWFwIG9mIGF0dHJpYnV0ZSBuYW1lIHRvIHZhbHVlLlxuICovXG5mdW5jdGlvbiBmb3JtYXRBdHRyaWJ1dGVzKGF0dHJpYnV0ZXMpIHtcbiAgdmFyIHJlc3VsdCA9IHt9O1xuICB2YXIgYXR0cmlidXRlO1xuICAvLyBgTmFtZWROb2RlTWFwYCBpcyBhcnJheS1saWtlXG4gIGZvciAodmFyIGkgPSAwLCBsZW4gPSBhdHRyaWJ1dGVzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgYXR0cmlidXRlID0gYXR0cmlidXRlc1tpXTtcbiAgICByZXN1bHRbYXR0cmlidXRlLm5hbWVdID0gYXR0cmlidXRlLnZhbHVlO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbi8qKlxuICogQ29ycmVjdHMgdGhlIHRhZyBuYW1lIGlmIGl0IGlzIGNhc2Utc2Vuc2l0aXZlIChTVkcpLlxuICogT3RoZXJ3aXNlLCByZXR1cm5zIHRoZSBsb3dlcmNhc2UgdGFnIG5hbWUgKEhUTUwpLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YWdOYW1lIC0gTG93ZXJjYXNlIHRhZyBuYW1lLlxuICogQHJldHVybnMge3N0cmluZ30gLSBGb3JtYXR0ZWQgdGFnIG5hbWUuXG4gKi9cbmZ1bmN0aW9uIGZvcm1hdFRhZ05hbWUodGFnTmFtZSkge1xuICB0YWdOYW1lID0gdGFnTmFtZS50b0xvd2VyQ2FzZSgpO1xuICB2YXIgY2FzZVNlbnNpdGl2ZVRhZ05hbWUgPSBnZXRDYXNlU2Vuc2l0aXZlVGFnTmFtZSh0YWdOYW1lKTtcbiAgaWYgKGNhc2VTZW5zaXRpdmVUYWdOYW1lKSB7XG4gICAgcmV0dXJuIGNhc2VTZW5zaXRpdmVUYWdOYW1lO1xuICB9XG4gIHJldHVybiB0YWdOYW1lO1xufVxuXG4vKipcbiAqIFRyYW5zZm9ybXMgRE9NIG5vZGVzIHRvIGBkb21oYW5kbGVyYCBub2Rlcy5cbiAqXG4gKiBAcGFyYW0ge05vZGVMaXN0fSBub2RlcyAtIERPTSBub2Rlcy5cbiAqIEBwYXJhbSB7RWxlbWVudHxudWxsfSBbcGFyZW50PW51bGxdIC0gUGFyZW50IG5vZGUuXG4gKiBAcGFyYW0ge3N0cmluZ30gW2RpcmVjdGl2ZV0gLSBEaXJlY3RpdmUuXG4gKiBAcmV0dXJucyB7QXJyYXk8Q29tbWVudHxFbGVtZW50fFByb2Nlc3NpbmdJbnN0cnVjdGlvbnxUZXh0Pn1cbiAqL1xuZnVuY3Rpb24gZm9ybWF0RE9NKG5vZGVzLCBwYXJlbnQsIGRpcmVjdGl2ZSkge1xuICBwYXJlbnQgPSBwYXJlbnQgfHwgbnVsbDtcbiAgdmFyIHJlc3VsdCA9IFtdO1xuICB2YXIgdGFnTmFtZTtcblxuICBmb3IgKHZhciBpbmRleCA9IDAsIGxlbiA9IG5vZGVzLmxlbmd0aDsgaW5kZXggPCBsZW47IGluZGV4KyspIHtcbiAgICB2YXIgbm9kZSA9IG5vZGVzW2luZGV4XTtcbiAgICB2YXIgY3VycmVudDtcblxuICAgIC8vIHNldCB0aGUgbm9kZSBkYXRhIGdpdmVuIHRoZSB0eXBlXG4gICAgc3dpdGNoIChub2RlLm5vZGVUeXBlKSB7XG4gICAgICBjYXNlIDE6XG4gICAgICAgIHRhZ05hbWUgPSBmb3JtYXRUYWdOYW1lKG5vZGUubm9kZU5hbWUpO1xuICAgICAgICAvLyBzY3JpcHQsIHN0eWxlLCBvciB0YWdcbiAgICAgICAgY3VycmVudCA9IG5ldyBFbGVtZW50KHRhZ05hbWUsIGZvcm1hdEF0dHJpYnV0ZXMobm9kZS5hdHRyaWJ1dGVzKSk7XG4gICAgICAgIGN1cnJlbnQuY2hpbGRyZW4gPSBmb3JtYXRET00oXG4gICAgICAgICAgLy8gdGVtcGxhdGUgY2hpbGRyZW4gYXJlIG9uIGNvbnRlbnRcbiAgICAgICAgICB0YWdOYW1lID09PSAndGVtcGxhdGUnID8gbm9kZS5jb250ZW50LmNoaWxkTm9kZXMgOiBub2RlLmNoaWxkTm9kZXMsXG4gICAgICAgICAgY3VycmVudFxuICAgICAgICApO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAzOlxuICAgICAgICBjdXJyZW50ID0gbmV3IFRleHQobm9kZS5ub2RlVmFsdWUpO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSA4OlxuICAgICAgICBjdXJyZW50ID0gbmV3IENvbW1lbnQobm9kZS5ub2RlVmFsdWUpO1xuICAgICAgICBicmVhaztcblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gc2V0IHByZXZpb3VzIG5vZGUgbmV4dFxuICAgIHZhciBwcmV2ID0gcmVzdWx0W2luZGV4IC0gMV0gfHwgbnVsbDtcbiAgICBpZiAocHJldikge1xuICAgICAgcHJldi5uZXh0ID0gY3VycmVudDtcbiAgICB9XG5cbiAgICAvLyBzZXQgcHJvcGVydGllcyBmb3IgY3VycmVudCBub2RlXG4gICAgY3VycmVudC5wYXJlbnQgPSBwYXJlbnQ7XG4gICAgY3VycmVudC5wcmV2ID0gcHJldjtcbiAgICBjdXJyZW50Lm5leHQgPSBudWxsO1xuXG4gICAgcmVzdWx0LnB1c2goY3VycmVudCk7XG4gIH1cblxuICBpZiAoZGlyZWN0aXZlKSB7XG4gICAgY3VycmVudCA9IG5ldyBQcm9jZXNzaW5nSW5zdHJ1Y3Rpb24oXG4gICAgICBkaXJlY3RpdmUuc3Vic3RyaW5nKDAsIGRpcmVjdGl2ZS5pbmRleE9mKCcgJykpLnRvTG93ZXJDYXNlKCksXG4gICAgICBkaXJlY3RpdmVcbiAgICApO1xuICAgIGN1cnJlbnQubmV4dCA9IHJlc3VsdFswXSB8fCBudWxsO1xuICAgIGN1cnJlbnQucGFyZW50ID0gcGFyZW50O1xuICAgIHJlc3VsdC51bnNoaWZ0KGN1cnJlbnQpO1xuXG4gICAgaWYgKHJlc3VsdFsxXSkge1xuICAgICAgcmVzdWx0WzFdLnByZXYgPSByZXN1bHRbMF07XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0cy5mb3JtYXRBdHRyaWJ1dGVzID0gZm9ybWF0QXR0cmlidXRlcztcbmV4cG9ydHMuZm9ybWF0RE9NID0gZm9ybWF0RE9NO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/html-dom-parser/lib/client/utilities.js\n"));

/***/ }),

/***/ "./node_modules/html-react-parser/index.js":
/*!*************************************************!*\
  !*** ./node_modules/html-react-parser/index.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var domhandler = __webpack_require__(/*! domhandler */ \"./node_modules/domhandler/lib/index.js\");\nvar htmlToDOM = __webpack_require__(/*! html-dom-parser */ \"./node_modules/html-dom-parser/lib/client/html-to-dom.js\");\n\nvar attributesToProps = __webpack_require__(/*! ./lib/attributes-to-props */ \"./node_modules/html-react-parser/lib/attributes-to-props.js\");\nvar domToReact = __webpack_require__(/*! ./lib/dom-to-react */ \"./node_modules/html-react-parser/lib/dom-to-react.js\");\n\n// support backwards compatibility for ES Module\nhtmlToDOM =\n  /* istanbul ignore next */\n  typeof htmlToDOM.default === 'function' ? htmlToDOM.default : htmlToDOM;\n\nvar domParserOptions = { lowerCaseAttributeNames: false };\n\n/**\n * Converts HTML string to React elements.\n *\n * @param {string} html - HTML string.\n * @param {object} [options] - Parser options.\n * @param {object} [options.htmlparser2] - htmlparser2 options.\n * @param {object} [options.library] - Library for React, Preact, etc.\n * @param {Function} [options.replace] - Replace method.\n * @returns {JSX.Element|JSX.Element[]|string} - React element(s), empty array, or string.\n */\nfunction HTMLReactParser(html, options) {\n  if (typeof html !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n  if (html === '') {\n    return [];\n  }\n  options = options || {};\n  return domToReact(\n    htmlToDOM(html, options.htmlparser2 || domParserOptions),\n    options\n  );\n}\n\nHTMLReactParser.domToReact = domToReact;\nHTMLReactParser.htmlToDOM = htmlToDOM;\nHTMLReactParser.attributesToProps = attributesToProps;\n\n// domhandler\nHTMLReactParser.Comment = domhandler.Comment;\nHTMLReactParser.Element = domhandler.Element;\nHTMLReactParser.ProcessingInstruction = domhandler.ProcessingInstruction;\nHTMLReactParser.Text = domhandler.Text;\n\n// support CommonJS and ES Modules\nmodule.exports = HTMLReactParser;\nHTMLReactParser.default = HTMLReactParser;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaHRtbC1yZWFjdC1wYXJzZXIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLG1CQUFPLENBQUMsMERBQVk7QUFDckMsZ0JBQWdCLG1CQUFPLENBQUMsaUZBQWlCOztBQUV6Qyx3QkFBd0IsbUJBQU8sQ0FBQyw4RkFBMkI7QUFDM0QsaUJBQWlCLG1CQUFPLENBQUMsZ0ZBQW9COztBQUU3QztBQUNBO0FBQ0E7QUFDQTs7QUFFQSx5QkFBeUI7O0FBRXpCO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFVBQVU7QUFDckIsYUFBYSxrQ0FBa0M7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2h0bWwtcmVhY3QtcGFyc2VyL2luZGV4LmpzPzhlYzciXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGRvbWhhbmRsZXIgPSByZXF1aXJlKCdkb21oYW5kbGVyJyk7XG52YXIgaHRtbFRvRE9NID0gcmVxdWlyZSgnaHRtbC1kb20tcGFyc2VyJyk7XG5cbnZhciBhdHRyaWJ1dGVzVG9Qcm9wcyA9IHJlcXVpcmUoJy4vbGliL2F0dHJpYnV0ZXMtdG8tcHJvcHMnKTtcbnZhciBkb21Ub1JlYWN0ID0gcmVxdWlyZSgnLi9saWIvZG9tLXRvLXJlYWN0Jyk7XG5cbi8vIHN1cHBvcnQgYmFja3dhcmRzIGNvbXBhdGliaWxpdHkgZm9yIEVTIE1vZHVsZVxuaHRtbFRvRE9NID1cbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgdHlwZW9mIGh0bWxUb0RPTS5kZWZhdWx0ID09PSAnZnVuY3Rpb24nID8gaHRtbFRvRE9NLmRlZmF1bHQgOiBodG1sVG9ET007XG5cbnZhciBkb21QYXJzZXJPcHRpb25zID0geyBsb3dlckNhc2VBdHRyaWJ1dGVOYW1lczogZmFsc2UgfTtcblxuLyoqXG4gKiBDb252ZXJ0cyBIVE1MIHN0cmluZyB0byBSZWFjdCBlbGVtZW50cy5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gaHRtbCAtIEhUTUwgc3RyaW5nLlxuICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zXSAtIFBhcnNlciBvcHRpb25zLlxuICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zLmh0bWxwYXJzZXIyXSAtIGh0bWxwYXJzZXIyIG9wdGlvbnMuXG4gKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnMubGlicmFyeV0gLSBMaWJyYXJ5IGZvciBSZWFjdCwgUHJlYWN0LCBldGMuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbb3B0aW9ucy5yZXBsYWNlXSAtIFJlcGxhY2UgbWV0aG9kLlxuICogQHJldHVybnMge0pTWC5FbGVtZW50fEpTWC5FbGVtZW50W118c3RyaW5nfSAtIFJlYWN0IGVsZW1lbnQocyksIGVtcHR5IGFycmF5LCBvciBzdHJpbmcuXG4gKi9cbmZ1bmN0aW9uIEhUTUxSZWFjdFBhcnNlcihodG1sLCBvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgaHRtbCAhPT0gJ3N0cmluZycpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nJyk7XG4gIH1cbiAgaWYgKGh0bWwgPT09ICcnKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICByZXR1cm4gZG9tVG9SZWFjdChcbiAgICBodG1sVG9ET00oaHRtbCwgb3B0aW9ucy5odG1scGFyc2VyMiB8fCBkb21QYXJzZXJPcHRpb25zKSxcbiAgICBvcHRpb25zXG4gICk7XG59XG5cbkhUTUxSZWFjdFBhcnNlci5kb21Ub1JlYWN0ID0gZG9tVG9SZWFjdDtcbkhUTUxSZWFjdFBhcnNlci5odG1sVG9ET00gPSBodG1sVG9ET007XG5IVE1MUmVhY3RQYXJzZXIuYXR0cmlidXRlc1RvUHJvcHMgPSBhdHRyaWJ1dGVzVG9Qcm9wcztcblxuLy8gZG9taGFuZGxlclxuSFRNTFJlYWN0UGFyc2VyLkNvbW1lbnQgPSBkb21oYW5kbGVyLkNvbW1lbnQ7XG5IVE1MUmVhY3RQYXJzZXIuRWxlbWVudCA9IGRvbWhhbmRsZXIuRWxlbWVudDtcbkhUTUxSZWFjdFBhcnNlci5Qcm9jZXNzaW5nSW5zdHJ1Y3Rpb24gPSBkb21oYW5kbGVyLlByb2Nlc3NpbmdJbnN0cnVjdGlvbjtcbkhUTUxSZWFjdFBhcnNlci5UZXh0ID0gZG9taGFuZGxlci5UZXh0O1xuXG4vLyBzdXBwb3J0IENvbW1vbkpTIGFuZCBFUyBNb2R1bGVzXG5tb2R1bGUuZXhwb3J0cyA9IEhUTUxSZWFjdFBhcnNlcjtcbkhUTUxSZWFjdFBhcnNlci5kZWZhdWx0ID0gSFRNTFJlYWN0UGFyc2VyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/html-react-parser/index.js\n"));

/***/ }),

/***/ "./node_modules/html-react-parser/lib/attributes-to-props.js":
/*!*******************************************************************!*\
  !*** ./node_modules/html-react-parser/lib/attributes-to-props.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var reactProperty = __webpack_require__(/*! react-property */ \"./node_modules/react-property/lib/index.js\");\nvar utilities = __webpack_require__(/*! ./utilities */ \"./node_modules/html-react-parser/lib/utilities.js\");\n\n// https://reactjs.org/docs/uncontrolled-components.html\n// https://developer.mozilla.org/docs/Web/HTML/Attributes\nvar UNCONTROLLED_COMPONENT_ATTRIBUTES = ['checked', 'value'];\nvar UNCONTROLLED_COMPONENT_NAMES = ['input', 'select', 'textarea'];\n\nvar VALUE_ONLY_INPUTS = {\n  reset: true,\n  submit: true\n};\n\n/**\n * Converts HTML/SVG DOM attributes to React props.\n *\n * @param {object} [attributes={}] - HTML/SVG DOM attributes.\n * @param {string} [nodeName] - DOM node name.\n * @returns - React props.\n */\nmodule.exports = function attributesToProps(attributes, nodeName) {\n  attributes = attributes || {};\n\n  var attributeName;\n  var attributeNameLowerCased;\n  var attributeValue;\n  var propName;\n  var propertyInfo;\n  var props = {};\n  var inputIsValueOnly = attributes.type && VALUE_ONLY_INPUTS[attributes.type];\n\n  for (attributeName in attributes) {\n    attributeValue = attributes[attributeName];\n\n    // ARIA (aria-*) or custom data (data-*) attribute\n    if (reactProperty.isCustomAttribute(attributeName)) {\n      props[attributeName] = attributeValue;\n      continue;\n    }\n\n    // convert HTML/SVG attribute to React prop\n    attributeNameLowerCased = attributeName.toLowerCase();\n    propName = getPropName(attributeNameLowerCased);\n\n    if (propName) {\n      propertyInfo = reactProperty.getPropertyInfo(propName);\n\n      // convert attribute to uncontrolled component prop (e.g., `value` to `defaultValue`)\n      if (\n        UNCONTROLLED_COMPONENT_ATTRIBUTES.indexOf(propName) !== -1 &&\n        UNCONTROLLED_COMPONENT_NAMES.indexOf(nodeName) !== -1 &&\n        !inputIsValueOnly\n      ) {\n        propName = getPropName('default' + attributeNameLowerCased);\n      }\n\n      props[propName] = attributeValue;\n\n      switch (propertyInfo && propertyInfo.type) {\n        case reactProperty.BOOLEAN:\n          props[propName] = true;\n          break;\n        case reactProperty.OVERLOADED_BOOLEAN:\n          if (attributeValue === '') {\n            props[propName] = true;\n          }\n          break;\n      }\n      continue;\n    }\n\n    // preserve custom attribute if React >=16\n    if (utilities.PRESERVE_CUSTOM_ATTRIBUTES) {\n      props[attributeName] = attributeValue;\n    }\n  }\n\n  // transform inline style to object\n  utilities.setStyleProp(attributes.style, props);\n\n  return props;\n};\n\n/**\n * Gets prop name from lowercased attribute name.\n *\n * @param {string} attributeName - Lowercased attribute name.\n * @returns - Prop name.\n */\nfunction getPropName(attributeName) {\n  return reactProperty.possibleStandardNames[attributeName];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaHRtbC1yZWFjdC1wYXJzZXIvbGliL2F0dHJpYnV0ZXMtdG8tcHJvcHMuanMiLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CLG1CQUFPLENBQUMsa0VBQWdCO0FBQzVDLGdCQUFnQixtQkFBTyxDQUFDLHNFQUFhOztBQUVyQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVEsY0FBYztBQUNqQyxXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9odG1sLXJlYWN0LXBhcnNlci9saWIvYXR0cmlidXRlcy10by1wcm9wcy5qcz83MzYyIl0sInNvdXJjZXNDb250ZW50IjpbInZhciByZWFjdFByb3BlcnR5ID0gcmVxdWlyZSgncmVhY3QtcHJvcGVydHknKTtcbnZhciB1dGlsaXRpZXMgPSByZXF1aXJlKCcuL3V0aWxpdGllcycpO1xuXG4vLyBodHRwczovL3JlYWN0anMub3JnL2RvY3MvdW5jb250cm9sbGVkLWNvbXBvbmVudHMuaHRtbFxuLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvSFRNTC9BdHRyaWJ1dGVzXG52YXIgVU5DT05UUk9MTEVEX0NPTVBPTkVOVF9BVFRSSUJVVEVTID0gWydjaGVja2VkJywgJ3ZhbHVlJ107XG52YXIgVU5DT05UUk9MTEVEX0NPTVBPTkVOVF9OQU1FUyA9IFsnaW5wdXQnLCAnc2VsZWN0JywgJ3RleHRhcmVhJ107XG5cbnZhciBWQUxVRV9PTkxZX0lOUFVUUyA9IHtcbiAgcmVzZXQ6IHRydWUsXG4gIHN1Ym1pdDogdHJ1ZVxufTtcblxuLyoqXG4gKiBDb252ZXJ0cyBIVE1ML1NWRyBET00gYXR0cmlidXRlcyB0byBSZWFjdCBwcm9wcy5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gW2F0dHJpYnV0ZXM9e31dIC0gSFRNTC9TVkcgRE9NIGF0dHJpYnV0ZXMuXG4gKiBAcGFyYW0ge3N0cmluZ30gW25vZGVOYW1lXSAtIERPTSBub2RlIG5hbWUuXG4gKiBAcmV0dXJucyAtIFJlYWN0IHByb3BzLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGF0dHJpYnV0ZXNUb1Byb3BzKGF0dHJpYnV0ZXMsIG5vZGVOYW1lKSB7XG4gIGF0dHJpYnV0ZXMgPSBhdHRyaWJ1dGVzIHx8IHt9O1xuXG4gIHZhciBhdHRyaWJ1dGVOYW1lO1xuICB2YXIgYXR0cmlidXRlTmFtZUxvd2VyQ2FzZWQ7XG4gIHZhciBhdHRyaWJ1dGVWYWx1ZTtcbiAgdmFyIHByb3BOYW1lO1xuICB2YXIgcHJvcGVydHlJbmZvO1xuICB2YXIgcHJvcHMgPSB7fTtcbiAgdmFyIGlucHV0SXNWYWx1ZU9ubHkgPSBhdHRyaWJ1dGVzLnR5cGUgJiYgVkFMVUVfT05MWV9JTlBVVFNbYXR0cmlidXRlcy50eXBlXTtcblxuICBmb3IgKGF0dHJpYnV0ZU5hbWUgaW4gYXR0cmlidXRlcykge1xuICAgIGF0dHJpYnV0ZVZhbHVlID0gYXR0cmlidXRlc1thdHRyaWJ1dGVOYW1lXTtcblxuICAgIC8vIEFSSUEgKGFyaWEtKikgb3IgY3VzdG9tIGRhdGEgKGRhdGEtKikgYXR0cmlidXRlXG4gICAgaWYgKHJlYWN0UHJvcGVydHkuaXNDdXN0b21BdHRyaWJ1dGUoYXR0cmlidXRlTmFtZSkpIHtcbiAgICAgIHByb3BzW2F0dHJpYnV0ZU5hbWVdID0gYXR0cmlidXRlVmFsdWU7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyBjb252ZXJ0IEhUTUwvU1ZHIGF0dHJpYnV0ZSB0byBSZWFjdCBwcm9wXG4gICAgYXR0cmlidXRlTmFtZUxvd2VyQ2FzZWQgPSBhdHRyaWJ1dGVOYW1lLnRvTG93ZXJDYXNlKCk7XG4gICAgcHJvcE5hbWUgPSBnZXRQcm9wTmFtZShhdHRyaWJ1dGVOYW1lTG93ZXJDYXNlZCk7XG5cbiAgICBpZiAocHJvcE5hbWUpIHtcbiAgICAgIHByb3BlcnR5SW5mbyA9IHJlYWN0UHJvcGVydHkuZ2V0UHJvcGVydHlJbmZvKHByb3BOYW1lKTtcblxuICAgICAgLy8gY29udmVydCBhdHRyaWJ1dGUgdG8gdW5jb250cm9sbGVkIGNvbXBvbmVudCBwcm9wIChlLmcuLCBgdmFsdWVgIHRvIGBkZWZhdWx0VmFsdWVgKVxuICAgICAgaWYgKFxuICAgICAgICBVTkNPTlRST0xMRURfQ09NUE9ORU5UX0FUVFJJQlVURVMuaW5kZXhPZihwcm9wTmFtZSkgIT09IC0xICYmXG4gICAgICAgIFVOQ09OVFJPTExFRF9DT01QT05FTlRfTkFNRVMuaW5kZXhPZihub2RlTmFtZSkgIT09IC0xICYmXG4gICAgICAgICFpbnB1dElzVmFsdWVPbmx5XG4gICAgICApIHtcbiAgICAgICAgcHJvcE5hbWUgPSBnZXRQcm9wTmFtZSgnZGVmYXVsdCcgKyBhdHRyaWJ1dGVOYW1lTG93ZXJDYXNlZCk7XG4gICAgICB9XG5cbiAgICAgIHByb3BzW3Byb3BOYW1lXSA9IGF0dHJpYnV0ZVZhbHVlO1xuXG4gICAgICBzd2l0Y2ggKHByb3BlcnR5SW5mbyAmJiBwcm9wZXJ0eUluZm8udHlwZSkge1xuICAgICAgICBjYXNlIHJlYWN0UHJvcGVydHkuQk9PTEVBTjpcbiAgICAgICAgICBwcm9wc1twcm9wTmFtZV0gPSB0cnVlO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIHJlYWN0UHJvcGVydHkuT1ZFUkxPQURFRF9CT09MRUFOOlxuICAgICAgICAgIGlmIChhdHRyaWJ1dGVWYWx1ZSA9PT0gJycpIHtcbiAgICAgICAgICAgIHByb3BzW3Byb3BOYW1lXSA9IHRydWU7XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gcHJlc2VydmUgY3VzdG9tIGF0dHJpYnV0ZSBpZiBSZWFjdCA+PTE2XG4gICAgaWYgKHV0aWxpdGllcy5QUkVTRVJWRV9DVVNUT01fQVRUUklCVVRFUykge1xuICAgICAgcHJvcHNbYXR0cmlidXRlTmFtZV0gPSBhdHRyaWJ1dGVWYWx1ZTtcbiAgICB9XG4gIH1cblxuICAvLyB0cmFuc2Zvcm0gaW5saW5lIHN0eWxlIHRvIG9iamVjdFxuICB1dGlsaXRpZXMuc2V0U3R5bGVQcm9wKGF0dHJpYnV0ZXMuc3R5bGUsIHByb3BzKTtcblxuICByZXR1cm4gcHJvcHM7XG59O1xuXG4vKipcbiAqIEdldHMgcHJvcCBuYW1lIGZyb20gbG93ZXJjYXNlZCBhdHRyaWJ1dGUgbmFtZS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gYXR0cmlidXRlTmFtZSAtIExvd2VyY2FzZWQgYXR0cmlidXRlIG5hbWUuXG4gKiBAcmV0dXJucyAtIFByb3AgbmFtZS5cbiAqL1xuZnVuY3Rpb24gZ2V0UHJvcE5hbWUoYXR0cmlidXRlTmFtZSkge1xuICByZXR1cm4gcmVhY3RQcm9wZXJ0eS5wb3NzaWJsZVN0YW5kYXJkTmFtZXNbYXR0cmlidXRlTmFtZV07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/html-react-parser/lib/attributes-to-props.js\n"));

/***/ }),

/***/ "./node_modules/html-react-parser/lib/dom-to-react.js":
/*!************************************************************!*\
  !*** ./node_modules/html-react-parser/lib/dom-to-react.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar attributesToProps = __webpack_require__(/*! ./attributes-to-props */ \"./node_modules/html-react-parser/lib/attributes-to-props.js\");\nvar utilities = __webpack_require__(/*! ./utilities */ \"./node_modules/html-react-parser/lib/utilities.js\");\n\nvar setStyleProp = utilities.setStyleProp;\nvar canTextBeChildOfNode = utilities.canTextBeChildOfNode;\n\n/**\n * Converts DOM nodes to JSX element(s).\n *\n * @param {DomElement[]} nodes - DOM nodes.\n * @param {object} [options={}] - Options.\n * @param {Function} [options.replace] - Replacer.\n * @param {object} [options.library] - Library (React, Preact, etc.).\n * @returns - String or JSX element(s).\n */\nfunction domToReact(nodes, options) {\n  options = options || {};\n\n  var library = options.library || React;\n  var cloneElement = library.cloneElement;\n  var createElement = library.createElement;\n  var isValidElement = library.isValidElement;\n\n  var result = [];\n  var node;\n  var isWhitespace;\n  var hasReplace = typeof options.replace === 'function';\n  var replaceElement;\n  var props;\n  var children;\n  var trim = options.trim;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    node = nodes[i];\n\n    // replace with custom React element (if present)\n    if (hasReplace) {\n      replaceElement = options.replace(node);\n\n      if (isValidElement(replaceElement)) {\n        // set \"key\" prop for sibling elements\n        // https://fb.me/react-warning-keys\n        if (len > 1) {\n          replaceElement = cloneElement(replaceElement, {\n            key: replaceElement.key || i\n          });\n        }\n        result.push(replaceElement);\n        continue;\n      }\n    }\n\n    if (node.type === 'text') {\n      isWhitespace = !node.data.trim().length;\n\n      if (isWhitespace && node.parent && !canTextBeChildOfNode(node.parent)) {\n        // We have a whitespace node that can't be nested in its parent\n        // so skip it\n        continue;\n      }\n\n      if (trim && isWhitespace) {\n        // Trim is enabled and we have a whitespace node\n        // so skip it\n        continue;\n      }\n\n      // We have a text node that's not whitespace and it can be nested\n      // in its parent so add it to the results\n      result.push(node.data);\n      continue;\n    }\n\n    props = node.attribs;\n    if (skipAttributesToProps(node)) {\n      setStyleProp(props.style, props);\n    } else if (props) {\n      props = attributesToProps(props, node.name);\n    }\n\n    children = null;\n\n    switch (node.type) {\n      case 'script':\n      case 'style':\n        // prevent text in <script> or <style> from being escaped\n        // https://reactjs.org/docs/dom-elements.html#dangerouslysetinnerhtml\n        if (node.children[0]) {\n          props.dangerouslySetInnerHTML = {\n            __html: node.children[0].data\n          };\n        }\n        break;\n\n      case 'tag':\n        // setting textarea value in children is an antipattern in React\n        // https://reactjs.org/docs/forms.html#the-textarea-tag\n        if (node.name === 'textarea' && node.children[0]) {\n          props.defaultValue = node.children[0].data;\n        } else if (node.children && node.children.length) {\n          // continue recursion of creating React elements (if applicable)\n          children = domToReact(node.children, options);\n        }\n        break;\n\n      // skip all other cases (e.g., comment)\n      default:\n        continue;\n    }\n\n    // set \"key\" prop for sibling elements\n    // https://fb.me/react-warning-keys\n    if (len > 1) {\n      props.key = i;\n    }\n\n    result.push(createElement(node.name, props, children));\n  }\n\n  return result.length === 1 ? result[0] : result;\n}\n\n/**\n * Determines whether DOM element attributes should be transformed to props.\n * Web Components should not have their attributes transformed except for `style`.\n *\n * @param {DomElement} node\n * @returns - Whether node attributes should be converted to props.\n */\nfunction skipAttributesToProps(node) {\n  return (\n    utilities.PRESERVE_CUSTOM_ATTRIBUTES &&\n    node.type === 'tag' &&\n    utilities.isCustomComponent(node.name, node.attribs)\n  );\n}\n\nmodule.exports = domToReact;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaHRtbC1yZWFjdC1wYXJzZXIvbGliL2RvbS10by1yZWFjdC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxZQUFZLG1CQUFPLENBQUMsNENBQU87QUFDM0Isd0JBQXdCLG1CQUFPLENBQUMsMEZBQXVCO0FBQ3ZELGdCQUFnQixtQkFBTyxDQUFDLHNFQUFhOztBQUVyQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsY0FBYztBQUN6QixXQUFXLFFBQVEsV0FBVztBQUM5QixXQUFXLFVBQVU7QUFDckIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsc0NBQXNDLFNBQVM7QUFDL0M7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvaHRtbC1yZWFjdC1wYXJzZXIvbGliL2RvbS10by1yZWFjdC5qcz9lYmNhIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG52YXIgYXR0cmlidXRlc1RvUHJvcHMgPSByZXF1aXJlKCcuL2F0dHJpYnV0ZXMtdG8tcHJvcHMnKTtcbnZhciB1dGlsaXRpZXMgPSByZXF1aXJlKCcuL3V0aWxpdGllcycpO1xuXG52YXIgc2V0U3R5bGVQcm9wID0gdXRpbGl0aWVzLnNldFN0eWxlUHJvcDtcbnZhciBjYW5UZXh0QmVDaGlsZE9mTm9kZSA9IHV0aWxpdGllcy5jYW5UZXh0QmVDaGlsZE9mTm9kZTtcblxuLyoqXG4gKiBDb252ZXJ0cyBET00gbm9kZXMgdG8gSlNYIGVsZW1lbnQocykuXG4gKlxuICogQHBhcmFtIHtEb21FbGVtZW50W119IG5vZGVzIC0gRE9NIG5vZGVzLlxuICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zPXt9XSAtIE9wdGlvbnMuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbb3B0aW9ucy5yZXBsYWNlXSAtIFJlcGxhY2VyLlxuICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zLmxpYnJhcnldIC0gTGlicmFyeSAoUmVhY3QsIFByZWFjdCwgZXRjLikuXG4gKiBAcmV0dXJucyAtIFN0cmluZyBvciBKU1ggZWxlbWVudChzKS5cbiAqL1xuZnVuY3Rpb24gZG9tVG9SZWFjdChub2Rlcywgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuICB2YXIgbGlicmFyeSA9IG9wdGlvbnMubGlicmFyeSB8fCBSZWFjdDtcbiAgdmFyIGNsb25lRWxlbWVudCA9IGxpYnJhcnkuY2xvbmVFbGVtZW50O1xuICB2YXIgY3JlYXRlRWxlbWVudCA9IGxpYnJhcnkuY3JlYXRlRWxlbWVudDtcbiAgdmFyIGlzVmFsaWRFbGVtZW50ID0gbGlicmFyeS5pc1ZhbGlkRWxlbWVudDtcblxuICB2YXIgcmVzdWx0ID0gW107XG4gIHZhciBub2RlO1xuICB2YXIgaXNXaGl0ZXNwYWNlO1xuICB2YXIgaGFzUmVwbGFjZSA9IHR5cGVvZiBvcHRpb25zLnJlcGxhY2UgPT09ICdmdW5jdGlvbic7XG4gIHZhciByZXBsYWNlRWxlbWVudDtcbiAgdmFyIHByb3BzO1xuICB2YXIgY2hpbGRyZW47XG4gIHZhciB0cmltID0gb3B0aW9ucy50cmltO1xuXG4gIGZvciAodmFyIGkgPSAwLCBsZW4gPSBub2Rlcy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgIG5vZGUgPSBub2Rlc1tpXTtcblxuICAgIC8vIHJlcGxhY2Ugd2l0aCBjdXN0b20gUmVhY3QgZWxlbWVudCAoaWYgcHJlc2VudClcbiAgICBpZiAoaGFzUmVwbGFjZSkge1xuICAgICAgcmVwbGFjZUVsZW1lbnQgPSBvcHRpb25zLnJlcGxhY2Uobm9kZSk7XG5cbiAgICAgIGlmIChpc1ZhbGlkRWxlbWVudChyZXBsYWNlRWxlbWVudCkpIHtcbiAgICAgICAgLy8gc2V0IFwia2V5XCIgcHJvcCBmb3Igc2libGluZyBlbGVtZW50c1xuICAgICAgICAvLyBodHRwczovL2ZiLm1lL3JlYWN0LXdhcm5pbmcta2V5c1xuICAgICAgICBpZiAobGVuID4gMSkge1xuICAgICAgICAgIHJlcGxhY2VFbGVtZW50ID0gY2xvbmVFbGVtZW50KHJlcGxhY2VFbGVtZW50LCB7XG4gICAgICAgICAgICBrZXk6IHJlcGxhY2VFbGVtZW50LmtleSB8fCBpXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmVzdWx0LnB1c2gocmVwbGFjZUVsZW1lbnQpO1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAobm9kZS50eXBlID09PSAndGV4dCcpIHtcbiAgICAgIGlzV2hpdGVzcGFjZSA9ICFub2RlLmRhdGEudHJpbSgpLmxlbmd0aDtcblxuICAgICAgaWYgKGlzV2hpdGVzcGFjZSAmJiBub2RlLnBhcmVudCAmJiAhY2FuVGV4dEJlQ2hpbGRPZk5vZGUobm9kZS5wYXJlbnQpKSB7XG4gICAgICAgIC8vIFdlIGhhdmUgYSB3aGl0ZXNwYWNlIG5vZGUgdGhhdCBjYW4ndCBiZSBuZXN0ZWQgaW4gaXRzIHBhcmVudFxuICAgICAgICAvLyBzbyBza2lwIGl0XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAodHJpbSAmJiBpc1doaXRlc3BhY2UpIHtcbiAgICAgICAgLy8gVHJpbSBpcyBlbmFibGVkIGFuZCB3ZSBoYXZlIGEgd2hpdGVzcGFjZSBub2RlXG4gICAgICAgIC8vIHNvIHNraXAgaXRcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIC8vIFdlIGhhdmUgYSB0ZXh0IG5vZGUgdGhhdCdzIG5vdCB3aGl0ZXNwYWNlIGFuZCBpdCBjYW4gYmUgbmVzdGVkXG4gICAgICAvLyBpbiBpdHMgcGFyZW50IHNvIGFkZCBpdCB0byB0aGUgcmVzdWx0c1xuICAgICAgcmVzdWx0LnB1c2gobm9kZS5kYXRhKTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIHByb3BzID0gbm9kZS5hdHRyaWJzO1xuICAgIGlmIChza2lwQXR0cmlidXRlc1RvUHJvcHMobm9kZSkpIHtcbiAgICAgIHNldFN0eWxlUHJvcChwcm9wcy5zdHlsZSwgcHJvcHMpO1xuICAgIH0gZWxzZSBpZiAocHJvcHMpIHtcbiAgICAgIHByb3BzID0gYXR0cmlidXRlc1RvUHJvcHMocHJvcHMsIG5vZGUubmFtZSk7XG4gICAgfVxuXG4gICAgY2hpbGRyZW4gPSBudWxsO1xuXG4gICAgc3dpdGNoIChub2RlLnR5cGUpIHtcbiAgICAgIGNhc2UgJ3NjcmlwdCc6XG4gICAgICBjYXNlICdzdHlsZSc6XG4gICAgICAgIC8vIHByZXZlbnQgdGV4dCBpbiA8c2NyaXB0PiBvciA8c3R5bGU+IGZyb20gYmVpbmcgZXNjYXBlZFxuICAgICAgICAvLyBodHRwczovL3JlYWN0anMub3JnL2RvY3MvZG9tLWVsZW1lbnRzLmh0bWwjZGFuZ2Vyb3VzbHlzZXRpbm5lcmh0bWxcbiAgICAgICAgaWYgKG5vZGUuY2hpbGRyZW5bMF0pIHtcbiAgICAgICAgICBwcm9wcy5kYW5nZXJvdXNseVNldElubmVySFRNTCA9IHtcbiAgICAgICAgICAgIF9faHRtbDogbm9kZS5jaGlsZHJlblswXS5kYXRhXG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAndGFnJzpcbiAgICAgICAgLy8gc2V0dGluZyB0ZXh0YXJlYSB2YWx1ZSBpbiBjaGlsZHJlbiBpcyBhbiBhbnRpcGF0dGVybiBpbiBSZWFjdFxuICAgICAgICAvLyBodHRwczovL3JlYWN0anMub3JnL2RvY3MvZm9ybXMuaHRtbCN0aGUtdGV4dGFyZWEtdGFnXG4gICAgICAgIGlmIChub2RlLm5hbWUgPT09ICd0ZXh0YXJlYScgJiYgbm9kZS5jaGlsZHJlblswXSkge1xuICAgICAgICAgIHByb3BzLmRlZmF1bHRWYWx1ZSA9IG5vZGUuY2hpbGRyZW5bMF0uZGF0YTtcbiAgICAgICAgfSBlbHNlIGlmIChub2RlLmNoaWxkcmVuICYmIG5vZGUuY2hpbGRyZW4ubGVuZ3RoKSB7XG4gICAgICAgICAgLy8gY29udGludWUgcmVjdXJzaW9uIG9mIGNyZWF0aW5nIFJlYWN0IGVsZW1lbnRzIChpZiBhcHBsaWNhYmxlKVxuICAgICAgICAgIGNoaWxkcmVuID0gZG9tVG9SZWFjdChub2RlLmNoaWxkcmVuLCBvcHRpb25zKTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcblxuICAgICAgLy8gc2tpcCBhbGwgb3RoZXIgY2FzZXMgKGUuZy4sIGNvbW1lbnQpXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyBzZXQgXCJrZXlcIiBwcm9wIGZvciBzaWJsaW5nIGVsZW1lbnRzXG4gICAgLy8gaHR0cHM6Ly9mYi5tZS9yZWFjdC13YXJuaW5nLWtleXNcbiAgICBpZiAobGVuID4gMSkge1xuICAgICAgcHJvcHMua2V5ID0gaTtcbiAgICB9XG5cbiAgICByZXN1bHQucHVzaChjcmVhdGVFbGVtZW50KG5vZGUubmFtZSwgcHJvcHMsIGNoaWxkcmVuKSk7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0Lmxlbmd0aCA9PT0gMSA/IHJlc3VsdFswXSA6IHJlc3VsdDtcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmVzIHdoZXRoZXIgRE9NIGVsZW1lbnQgYXR0cmlidXRlcyBzaG91bGQgYmUgdHJhbnNmb3JtZWQgdG8gcHJvcHMuXG4gKiBXZWIgQ29tcG9uZW50cyBzaG91bGQgbm90IGhhdmUgdGhlaXIgYXR0cmlidXRlcyB0cmFuc2Zvcm1lZCBleGNlcHQgZm9yIGBzdHlsZWAuXG4gKlxuICogQHBhcmFtIHtEb21FbGVtZW50fSBub2RlXG4gKiBAcmV0dXJucyAtIFdoZXRoZXIgbm9kZSBhdHRyaWJ1dGVzIHNob3VsZCBiZSBjb252ZXJ0ZWQgdG8gcHJvcHMuXG4gKi9cbmZ1bmN0aW9uIHNraXBBdHRyaWJ1dGVzVG9Qcm9wcyhub2RlKSB7XG4gIHJldHVybiAoXG4gICAgdXRpbGl0aWVzLlBSRVNFUlZFX0NVU1RPTV9BVFRSSUJVVEVTICYmXG4gICAgbm9kZS50eXBlID09PSAndGFnJyAmJlxuICAgIHV0aWxpdGllcy5pc0N1c3RvbUNvbXBvbmVudChub2RlLm5hbWUsIG5vZGUuYXR0cmlicylcbiAgKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21Ub1JlYWN0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/html-react-parser/lib/dom-to-react.js\n"));

/***/ }),

/***/ "./node_modules/html-react-parser/lib/utilities.js":
/*!*********************************************************!*\
  !*** ./node_modules/html-react-parser/lib/utilities.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar styleToJS = (__webpack_require__(/*! style-to-js */ \"./node_modules/style-to-js/cjs/index.js\")[\"default\"]);\n\n/**\n * Swap key with value in an object.\n *\n * @param {object} obj - The object.\n * @param {Function} [override] - The override method.\n * @returns - The inverted object.\n */\nfunction invertObject(obj, override) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('First argument must be an object');\n  }\n\n  var key;\n  var value;\n  var isOverridePresent = typeof override === 'function';\n  var overrides = {};\n  var result = {};\n\n  for (key in obj) {\n    value = obj[key];\n\n    if (isOverridePresent) {\n      overrides = override(key, value);\n      if (overrides && overrides.length === 2) {\n        result[overrides[0]] = overrides[1];\n        continue;\n      }\n    }\n\n    if (typeof value === 'string') {\n      result[value] = key;\n    }\n  }\n\n  return result;\n}\n\n/**\n * Check if a given tag is a custom component.\n *\n * @see {@link https://github.com/facebook/react/blob/v16.6.3/packages/react-dom/src/shared/isCustomComponent.js}\n *\n * @param {string} tagName - The name of the html tag.\n * @param {object} props - The props being passed to the element.\n * @returns - Whether tag is custom component.\n */\nfunction isCustomComponent(tagName, props) {\n  if (tagName.indexOf('-') === -1) {\n    return props && typeof props.is === 'string';\n  }\n\n  switch (tagName) {\n    // These are reserved SVG and MathML elements.\n    // We don't mind this whitelist too much because we expect it to never grow.\n    // The alternative is to track the namespace in a few places which is convoluted.\n    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts\n    case 'annotation-xml':\n    case 'color-profile':\n    case 'font-face':\n    case 'font-face-src':\n    case 'font-face-uri':\n    case 'font-face-format':\n    case 'font-face-name':\n    case 'missing-glyph':\n      return false;\n    default:\n      return true;\n  }\n}\n\nvar styleToJSOptions = { reactCompat: true };\n\n/**\n * Sets style prop.\n *\n * @param {null|undefined|string} style\n * @param {object} props\n */\nfunction setStyleProp(style, props) {\n  if (style === null || style === undefined) {\n    return;\n  }\n  try {\n    props.style = styleToJS(style, styleToJSOptions);\n  } catch (err) {\n    props.style = {};\n  }\n}\n\n/**\n * @constant {boolean}\n * @see {@link https://reactjs.org/blog/2017/09/08/dom-attributes-in-react-16.html}\n */\nvar PRESERVE_CUSTOM_ATTRIBUTES = React.version.split('.')[0] >= 16;\n\n// Taken from\n// https://github.com/facebook/react/blob/cae635054e17a6f107a39d328649137b83f25972/packages/react-dom/src/client/validateDOMNesting.js#L213\nvar elementsWithNoTextChildren = new Set([\n  'tr',\n  'tbody',\n  'thead',\n  'tfoot',\n  'colgroup',\n  'table',\n  'head',\n  'html',\n  'frameset'\n]);\n\n/**\n * Checks if the given node can contain text nodes\n *\n * @param {DomElement} node - Node.\n * @returns - Whether node can contain text nodes.\n */\nfunction canTextBeChildOfNode(node) {\n  return !elementsWithNoTextChildren.has(node.name);\n}\n\nmodule.exports = {\n  PRESERVE_CUSTOM_ATTRIBUTES: PRESERVE_CUSTOM_ATTRIBUTES,\n  invertObject: invertObject,\n  isCustomComponent: isCustomComponent,\n  setStyleProp: setStyleProp,\n  canTextBeChildOfNode: canTextBeChildOfNode,\n  elementsWithNoTextChildren: elementsWithNoTextChildren\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaHRtbC1yZWFjdC1wYXJzZXIvbGliL3V0aWxpdGllcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxZQUFZLG1CQUFPLENBQUMsNENBQU87QUFDM0IsZ0JBQWdCLDhGQUE4Qjs7QUFFOUM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsVUFBVTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHlCQUF5Qjs7QUFFekI7QUFDQTtBQUNBO0FBQ0EsV0FBVyx1QkFBdUI7QUFDbEMsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGNBQWM7QUFDZCxTQUFTO0FBQ1Q7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFlBQVk7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9odG1sLXJlYWN0LXBhcnNlci9saWIvdXRpbGl0aWVzLmpzPzZlM2YiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbnZhciBzdHlsZVRvSlMgPSByZXF1aXJlKCdzdHlsZS10by1qcycpLmRlZmF1bHQ7XG5cbi8qKlxuICogU3dhcCBrZXkgd2l0aCB2YWx1ZSBpbiBhbiBvYmplY3QuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IG9iaiAtIFRoZSBvYmplY3QuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbb3ZlcnJpZGVdIC0gVGhlIG92ZXJyaWRlIG1ldGhvZC5cbiAqIEByZXR1cm5zIC0gVGhlIGludmVydGVkIG9iamVjdC5cbiAqL1xuZnVuY3Rpb24gaW52ZXJ0T2JqZWN0KG9iaiwgb3ZlcnJpZGUpIHtcbiAgaWYgKCFvYmogfHwgdHlwZW9mIG9iaiAhPT0gJ29iamVjdCcpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGFuIG9iamVjdCcpO1xuICB9XG5cbiAgdmFyIGtleTtcbiAgdmFyIHZhbHVlO1xuICB2YXIgaXNPdmVycmlkZVByZXNlbnQgPSB0eXBlb2Ygb3ZlcnJpZGUgPT09ICdmdW5jdGlvbic7XG4gIHZhciBvdmVycmlkZXMgPSB7fTtcbiAgdmFyIHJlc3VsdCA9IHt9O1xuXG4gIGZvciAoa2V5IGluIG9iaikge1xuICAgIHZhbHVlID0gb2JqW2tleV07XG5cbiAgICBpZiAoaXNPdmVycmlkZVByZXNlbnQpIHtcbiAgICAgIG92ZXJyaWRlcyA9IG92ZXJyaWRlKGtleSwgdmFsdWUpO1xuICAgICAgaWYgKG92ZXJyaWRlcyAmJiBvdmVycmlkZXMubGVuZ3RoID09PSAyKSB7XG4gICAgICAgIHJlc3VsdFtvdmVycmlkZXNbMF1dID0gb3ZlcnJpZGVzWzFdO1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgcmVzdWx0W3ZhbHVlXSA9IGtleTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gdGFnIGlzIGEgY3VzdG9tIGNvbXBvbmVudC5cbiAqXG4gKiBAc2VlIHtAbGluayBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvYmxvYi92MTYuNi4zL3BhY2thZ2VzL3JlYWN0LWRvbS9zcmMvc2hhcmVkL2lzQ3VzdG9tQ29tcG9uZW50LmpzfVxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YWdOYW1lIC0gVGhlIG5hbWUgb2YgdGhlIGh0bWwgdGFnLlxuICogQHBhcmFtIHtvYmplY3R9IHByb3BzIC0gVGhlIHByb3BzIGJlaW5nIHBhc3NlZCB0byB0aGUgZWxlbWVudC5cbiAqIEByZXR1cm5zIC0gV2hldGhlciB0YWcgaXMgY3VzdG9tIGNvbXBvbmVudC5cbiAqL1xuZnVuY3Rpb24gaXNDdXN0b21Db21wb25lbnQodGFnTmFtZSwgcHJvcHMpIHtcbiAgaWYgKHRhZ05hbWUuaW5kZXhPZignLScpID09PSAtMSkge1xuICAgIHJldHVybiBwcm9wcyAmJiB0eXBlb2YgcHJvcHMuaXMgPT09ICdzdHJpbmcnO1xuICB9XG5cbiAgc3dpdGNoICh0YWdOYW1lKSB7XG4gICAgLy8gVGhlc2UgYXJlIHJlc2VydmVkIFNWRyBhbmQgTWF0aE1MIGVsZW1lbnRzLlxuICAgIC8vIFdlIGRvbid0IG1pbmQgdGhpcyB3aGl0ZWxpc3QgdG9vIG11Y2ggYmVjYXVzZSB3ZSBleHBlY3QgaXQgdG8gbmV2ZXIgZ3Jvdy5cbiAgICAvLyBUaGUgYWx0ZXJuYXRpdmUgaXMgdG8gdHJhY2sgdGhlIG5hbWVzcGFjZSBpbiBhIGZldyBwbGFjZXMgd2hpY2ggaXMgY29udm9sdXRlZC5cbiAgICAvLyBodHRwczovL3czYy5naXRodWIuaW8vd2ViY29tcG9uZW50cy9zcGVjL2N1c3RvbS8jY3VzdG9tLWVsZW1lbnRzLWNvcmUtY29uY2VwdHNcbiAgICBjYXNlICdhbm5vdGF0aW9uLXhtbCc6XG4gICAgY2FzZSAnY29sb3ItcHJvZmlsZSc6XG4gICAgY2FzZSAnZm9udC1mYWNlJzpcbiAgICBjYXNlICdmb250LWZhY2Utc3JjJzpcbiAgICBjYXNlICdmb250LWZhY2UtdXJpJzpcbiAgICBjYXNlICdmb250LWZhY2UtZm9ybWF0JzpcbiAgICBjYXNlICdmb250LWZhY2UtbmFtZSc6XG4gICAgY2FzZSAnbWlzc2luZy1nbHlwaCc6XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiB0cnVlO1xuICB9XG59XG5cbnZhciBzdHlsZVRvSlNPcHRpb25zID0geyByZWFjdENvbXBhdDogdHJ1ZSB9O1xuXG4vKipcbiAqIFNldHMgc3R5bGUgcHJvcC5cbiAqXG4gKiBAcGFyYW0ge251bGx8dW5kZWZpbmVkfHN0cmluZ30gc3R5bGVcbiAqIEBwYXJhbSB7b2JqZWN0fSBwcm9wc1xuICovXG5mdW5jdGlvbiBzZXRTdHlsZVByb3Aoc3R5bGUsIHByb3BzKSB7XG4gIGlmIChzdHlsZSA9PT0gbnVsbCB8fCBzdHlsZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIHRyeSB7XG4gICAgcHJvcHMuc3R5bGUgPSBzdHlsZVRvSlMoc3R5bGUsIHN0eWxlVG9KU09wdGlvbnMpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICBwcm9wcy5zdHlsZSA9IHt9O1xuICB9XG59XG5cbi8qKlxuICogQGNvbnN0YW50IHtib29sZWFufVxuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly9yZWFjdGpzLm9yZy9ibG9nLzIwMTcvMDkvMDgvZG9tLWF0dHJpYnV0ZXMtaW4tcmVhY3QtMTYuaHRtbH1cbiAqL1xudmFyIFBSRVNFUlZFX0NVU1RPTV9BVFRSSUJVVEVTID0gUmVhY3QudmVyc2lvbi5zcGxpdCgnLicpWzBdID49IDE2O1xuXG4vLyBUYWtlbiBmcm9tXG4vLyBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvYmxvYi9jYWU2MzUwNTRlMTdhNmYxMDdhMzlkMzI4NjQ5MTM3YjgzZjI1OTcyL3BhY2thZ2VzL3JlYWN0LWRvbS9zcmMvY2xpZW50L3ZhbGlkYXRlRE9NTmVzdGluZy5qcyNMMjEzXG52YXIgZWxlbWVudHNXaXRoTm9UZXh0Q2hpbGRyZW4gPSBuZXcgU2V0KFtcbiAgJ3RyJyxcbiAgJ3Rib2R5JyxcbiAgJ3RoZWFkJyxcbiAgJ3Rmb290JyxcbiAgJ2NvbGdyb3VwJyxcbiAgJ3RhYmxlJyxcbiAgJ2hlYWQnLFxuICAnaHRtbCcsXG4gICdmcmFtZXNldCdcbl0pO1xuXG4vKipcbiAqIENoZWNrcyBpZiB0aGUgZ2l2ZW4gbm9kZSBjYW4gY29udGFpbiB0ZXh0IG5vZGVzXG4gKlxuICogQHBhcmFtIHtEb21FbGVtZW50fSBub2RlIC0gTm9kZS5cbiAqIEByZXR1cm5zIC0gV2hldGhlciBub2RlIGNhbiBjb250YWluIHRleHQgbm9kZXMuXG4gKi9cbmZ1bmN0aW9uIGNhblRleHRCZUNoaWxkT2ZOb2RlKG5vZGUpIHtcbiAgcmV0dXJuICFlbGVtZW50c1dpdGhOb1RleHRDaGlsZHJlbi5oYXMobm9kZS5uYW1lKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIFBSRVNFUlZFX0NVU1RPTV9BVFRSSUJVVEVTOiBQUkVTRVJWRV9DVVNUT01fQVRUUklCVVRFUyxcbiAgaW52ZXJ0T2JqZWN0OiBpbnZlcnRPYmplY3QsXG4gIGlzQ3VzdG9tQ29tcG9uZW50OiBpc0N1c3RvbUNvbXBvbmVudCxcbiAgc2V0U3R5bGVQcm9wOiBzZXRTdHlsZVByb3AsXG4gIGNhblRleHRCZUNoaWxkT2ZOb2RlOiBjYW5UZXh0QmVDaGlsZE9mTm9kZSxcbiAgZWxlbWVudHNXaXRoTm9UZXh0Q2hpbGRyZW46IGVsZW1lbnRzV2l0aE5vVGV4dENoaWxkcmVuXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/html-react-parser/lib/utilities.js\n"));

/***/ }),

/***/ "./node_modules/inline-style-parser/index.js":
/*!***************************************************!*\
  !*** ./node_modules/inline-style-parser/index.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/inline-style-parser/index.js\n"));

/***/ }),

/***/ "./node_modules/isomorphic-fetch/fetch-npm-browserify.js":
/*!***************************************************************!*\
  !*** ./node_modules/isomorphic-fetch/fetch-npm-browserify.js ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\n__webpack_require__(/*! whatwg-fetch */ \"./node_modules/next/dist/build/polyfills/fetch/whatwg-fetch.js\");\nmodule.exports = self.fetch.bind(self);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaXNvbW9ycGhpYy1mZXRjaC9mZXRjaC1ucG0tYnJvd3NlcmlmeS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFPLENBQUMsb0ZBQWM7QUFDdEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2lzb21vcnBoaWMtZmV0Y2gvZmV0Y2gtbnBtLWJyb3dzZXJpZnkuanM/NTVjZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyB0aGUgd2hhdHdnLWZldGNoIHBvbHlmaWxsIGluc3RhbGxzIHRoZSBmZXRjaCgpIGZ1bmN0aW9uXG4vLyBvbiB0aGUgZ2xvYmFsIG9iamVjdCAod2luZG93IG9yIHNlbGYpXG4vL1xuLy8gUmV0dXJuIHRoYXQgYXMgdGhlIGV4cG9ydCBmb3IgdXNlIGluIFdlYnBhY2ssIEJyb3dzZXJpZnkgZXRjLlxucmVxdWlyZSgnd2hhdHdnLWZldGNoJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHNlbGYuZmV0Y2guYmluZChzZWxmKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/isomorphic-fetch/fetch-npm-browserify.js\n"));

/***/ }),

/***/ "./node_modules/lodash.isequal/index.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash.isequal/index.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("/* module decorator */ module = __webpack_require__.nmd(module);\n/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports =  true && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && \"object\" == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/lodash.isequal/index.js\n"));

/***/ }),

/***/ "./node_modules/mp4box/dist/mp4box.all.js":
/*!************************************************!*\
  !*** ./node_modules/mp4box/dist/mp4box.all.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("// file:src/log.js\n/* \n * Copyright (c) 2012-2013. Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nvar Log = (function (){\n\t\tvar start = new Date();\n\t\tvar LOG_LEVEL_ERROR \t= 4;\n\t\tvar LOG_LEVEL_WARNING \t= 3;\n\t\tvar LOG_LEVEL_INFO \t\t= 2;\n\t\tvar LOG_LEVEL_DEBUG\t\t= 1;\n\t\tvar log_level = LOG_LEVEL_ERROR;\n\t\tvar logObject = {\n\t\t\tsetLogLevel : function(level) {\n\t\t\t\tif (level == this.debug) log_level = LOG_LEVEL_DEBUG;\n\t\t\t\telse if (level == this.info) log_level = LOG_LEVEL_INFO;\n\t\t\t\telse if (level == this.warn) log_level = LOG_LEVEL_WARNING;\n\t\t\t\telse if (level == this.error) log_level = LOG_LEVEL_ERROR;\n\t\t\t\telse log_level = LOG_LEVEL_ERROR;\n\t\t\t},\n\t\t\tdebug : function(module, msg) {\n\t\t\t\tif (console.debug === undefined) {\n\t\t\t\t\tconsole.debug = console.log;\n\t\t\t\t}\n\t\t\t\tif (LOG_LEVEL_DEBUG >= log_level) {\n\t\t\t\t\tconsole.debug(\"[\"+Log.getDurationString(new Date()-start,1000)+\"]\",\"[\"+module+\"]\",msg);\n\t\t\t\t}\n\t\t\t},\n\t\t\tlog : function(module, msg) {\n\t\t\t\tthis.debug(module.msg)\n\t\t\t},\n\t\t\tinfo : function(module, msg) {\n\t\t\t\tif (LOG_LEVEL_INFO >= log_level) {\n\t\t\t\t\tconsole.info(\"[\"+Log.getDurationString(new Date()-start,1000)+\"]\",\"[\"+module+\"]\",msg);\n\t\t\t\t}\n\t\t\t},\n\t\t\twarn : function(module, msg) {\n\t\t\t\tif (LOG_LEVEL_WARNING >= log_level) {\n\t\t\t\t\tconsole.warn(\"[\"+Log.getDurationString(new Date()-start,1000)+\"]\",\"[\"+module+\"]\",msg);\n\t\t\t\t}\n\t\t\t},\n\t\t\terror : function(module, msg) {\n\t\t\t\tif (LOG_LEVEL_ERROR >= log_level) {\n\t\t\t\t\tconsole.error(\"[\"+Log.getDurationString(new Date()-start,1000)+\"]\",\"[\"+module+\"]\",msg);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn logObject;\n\t})();\n\t\n/* Helper function to print a duration value in the form H:MM:SS.MS */\nLog.getDurationString = function(duration, _timescale) {\n\tvar neg;\n\t/* Helper function to print a number on a fixed number of digits */\n\tfunction pad(number, length) {\n\t\tvar str = '' + number;\n\t\tvar a = str.split('.');\t\t\n\t\twhile (a[0].length < length) {\n\t\t\ta[0] = '0' + a[0];\n\t\t}\n\t\treturn a.join('.');\n\t}\n\tif (duration < 0) {\n\t\tneg = true;\n\t\tduration = -duration;\n\t} else {\n\t\tneg = false;\t\n\t}\n\tvar timescale = _timescale || 1;\n\tvar duration_sec = duration/timescale;\n\tvar hours = Math.floor(duration_sec/3600);\n\tduration_sec -= hours * 3600;\n\tvar minutes = Math.floor(duration_sec/60);\n\tduration_sec -= minutes * 60;\t\t\n\tvar msec = duration_sec*1000;\n\tduration_sec = Math.floor(duration_sec);\n\tmsec -= duration_sec*1000;\n\tmsec = Math.floor(msec);\n\treturn (neg ? \"-\": \"\")+hours+\":\"+pad(minutes,2)+\":\"+pad(duration_sec,2)+\".\"+pad(msec,3);\n}\n\t\n/* Helper function to stringify HTML5 TimeRanges objects */\t\nLog.printRanges = function(ranges) {\n\tvar length = ranges.length;\n\tif (length > 0) {\n\t\tvar str = \"\";\n\t\tfor (var i = 0; i < length; i++) {\n\t\t  if (i > 0) str += \",\";\n\t\t  str += \"[\"+Log.getDurationString(ranges.start(i))+ \",\"+Log.getDurationString(ranges.end(i))+\"]\";\n\t\t}\n\t\treturn str;\n\t} else {\n\t\treturn \"(empty)\";\n\t}\n}\n\nif (true) {\n\texports.Log = Log;\n}\n// file:src/stream.js\nvar MP4BoxStream = function(arrayBuffer) {\n  if (arrayBuffer instanceof ArrayBuffer) {\n    this.buffer = arrayBuffer;\n    this.dataview = new DataView(arrayBuffer);\n  } else {\n    throw (\"Needs an array buffer\");\n  }\n  this.position = 0;\n};\n\n/*************************************************************************\n  Common API between MultiBufferStream and SimpleStream\n *************************************************************************/\nMP4BoxStream.prototype.getPosition = function() {\n  return this.position;\n}\n\nMP4BoxStream.prototype.getEndPosition = function() {\n  return this.buffer.byteLength;\n}\n\nMP4BoxStream.prototype.getLength = function() {\n  return this.buffer.byteLength;\n}\n\nMP4BoxStream.prototype.seek = function (pos) {\n  var npos = Math.max(0, Math.min(this.buffer.byteLength, pos));\n  this.position = (isNaN(npos) || !isFinite(npos)) ? 0 : npos;\n  return true;\n}\n\nMP4BoxStream.prototype.isEos = function () {\n  return this.getPosition() >= this.getEndPosition();\n}\n\n/*************************************************************************\n  Read methods, simimar to DataStream but simpler\n *************************************************************************/\nMP4BoxStream.prototype.readAnyInt = function(size, signed) {\n  var res = 0;\n  if (this.position + size <= this.buffer.byteLength) {\n    switch (size) {\n      case 1:\n        if (signed) {\n          res = this.dataview.getInt8(this.position);\n        } else {\n          res = this.dataview.getUint8(this.position);\n        }\n        break;\n      case 2:\n        if (signed) {\n          res = this.dataview.getInt16(this.position);\n        } else {\n          res = this.dataview.getUint16(this.position);\n        }\n        break;\n      case 3:\n        if (signed) {\n          throw (\"No method for reading signed 24 bits values\");\n        } else {\n          res = this.dataview.getUint8(this.position) << 16;\n          res |= this.dataview.getUint8(this.position+1) << 8;\n          res |= this.dataview.getUint8(this.position+2);\n        }\n        break;\n      case 4:\n        if (signed) {\n          res = this.dataview.getInt32(this.position);\n        } else {\n          res = this.dataview.getUint32(this.position);\n        }\n        break;\n      case 8:\n        if (signed) {\n          throw (\"No method for reading signed 64 bits values\");\n        } else {\n          res = this.dataview.getUint32(this.position) << 32;\n          res |= this.dataview.getUint32(this.position+4);\n        }\n        break;\n      default:\n        throw (\"readInt method not implemented for size: \"+size);\n    }\n    this.position+= size;\n    return res;\n  } else {\n    throw (\"Not enough bytes in buffer\");\n  }\n}\n\nMP4BoxStream.prototype.readUint8 = function() {\n  return this.readAnyInt(1, false);\n}\n\nMP4BoxStream.prototype.readUint16 = function() {\n  return this.readAnyInt(2, false);\n}\n\nMP4BoxStream.prototype.readUint24 = function() {\n  return this.readAnyInt(3, false);\n}\n\nMP4BoxStream.prototype.readUint32 = function() {\n  return this.readAnyInt(4, false);\n}\n\nMP4BoxStream.prototype.readUint64 = function() {\n  return this.readAnyInt(8, false);\n}\n\nMP4BoxStream.prototype.readString = function(length) {\n  if (this.position + length <= this.buffer.byteLength) {\n    var s = \"\";\n    for (var i = 0; i < length; i++) {\n      s += String.fromCharCode(this.readUint8());\n    }\n    return s;\n  } else {\n    throw (\"Not enough bytes in buffer\");\n  }\n}\n\nMP4BoxStream.prototype.readCString = function() {\n  var arr = [];\n  while(true) {\n    var b = this.readUint8();\n    if (b !== 0) {\n      arr.push(b);\n    } else {\n      break;\n    }\n  }\n  return String.fromCharCode.apply(null, arr); \n}\n\nMP4BoxStream.prototype.readInt8 = function() {\n  return this.readAnyInt(1, true);\n}\n\nMP4BoxStream.prototype.readInt16 = function() {\n  return this.readAnyInt(2, true);\n}\n\nMP4BoxStream.prototype.readInt32 = function() {\n  return this.readAnyInt(4, true);\n}\n\nMP4BoxStream.prototype.readInt64 = function() {\n  return this.readAnyInt(8, false);\n}\n\nMP4BoxStream.prototype.readUint8Array = function(length) {\n  var arr = new Uint8Array(length);\n  for (var i = 0; i < length; i++) {\n    arr[i] = this.readUint8();\n  }\n  return arr;\n}\n\nMP4BoxStream.prototype.readInt16Array = function(length) {\n  var arr = new Int16Array(length);\n  for (var i = 0; i < length; i++) {\n    arr[i] = this.readInt16();\n  }\n  return arr;\n}\n\nMP4BoxStream.prototype.readUint16Array = function(length) {\n  var arr = new Int16Array(length);\n  for (var i = 0; i < length; i++) {\n    arr[i] = this.readUint16();\n  }\n  return arr;\n}\n\nMP4BoxStream.prototype.readUint32Array = function(length) {\n  var arr = new Uint32Array(length);\n  for (var i = 0; i < length; i++) {\n    arr[i] = this.readUint32();\n  }\n  return arr;\n}\n\nMP4BoxStream.prototype.readInt32Array = function(length) {\n  var arr = new Int32Array(length);\n  for (var i = 0; i < length; i++) {\n    arr[i] = this.readInt32();\n  }\n  return arr;\n}\n\nif (true) {\n  exports.MP4BoxStream = MP4BoxStream;\n}// file:src/DataStream.js\n/**\n  DataStream reads scalars, arrays and structs of data from an ArrayBuffer.\n  It's like a file-like DataView on steroids.\n\n  @param {ArrayBuffer} arrayBuffer ArrayBuffer to read from.\n  @param {?Number} byteOffset Offset from arrayBuffer beginning for the DataStream.\n  @param {?Boolean} endianness DataStream.BIG_ENDIAN or DataStream.LITTLE_ENDIAN (the default).\n  */\nvar DataStream = function(arrayBuffer, byteOffset, endianness) {\n  this._byteOffset = byteOffset || 0;\n  if (arrayBuffer instanceof ArrayBuffer) {\n    this.buffer = arrayBuffer;\n  } else if (typeof arrayBuffer == \"object\") {\n    this.dataView = arrayBuffer;\n    if (byteOffset) {\n      this._byteOffset += byteOffset;\n    }\n  } else {\n    this.buffer = new ArrayBuffer(arrayBuffer || 0);\n  }\n  this.position = 0;\n  this.endianness = endianness == null ? DataStream.LITTLE_ENDIAN : endianness;\n};\nDataStream.prototype = {};\n\nDataStream.prototype.getPosition = function() {\n  return this.position;\n}\n\n/**\n  Internal function to resize the DataStream buffer when required.\n  @param {number} extra Number of bytes to add to the buffer allocation.\n  @return {null}\n  */\nDataStream.prototype._realloc = function(extra) {\n  if (!this._dynamicSize) {\n    return;\n  }\n  var req = this._byteOffset + this.position + extra;\n  var blen = this._buffer.byteLength;\n  if (req <= blen) {\n    if (req > this._byteLength) {\n      this._byteLength = req;\n    }\n    return;\n  }\n  if (blen < 1) {\n    blen = 1;\n  }\n  while (req > blen) {\n    blen *= 2;\n  }\n  var buf = new ArrayBuffer(blen);\n  var src = new Uint8Array(this._buffer);\n  var dst = new Uint8Array(buf, 0, src.length);\n  dst.set(src);\n  this.buffer = buf;\n  this._byteLength = req;\n};\n\n/**\n  Internal function to trim the DataStream buffer when required.\n  Used for stripping out the extra bytes from the backing buffer when\n  the virtual byteLength is smaller than the buffer byteLength (happens after\n  growing the buffer with writes and not filling the extra space completely).\n\n  @return {null}\n  */\nDataStream.prototype._trimAlloc = function() {\n  if (this._byteLength == this._buffer.byteLength) {\n    return;\n  }\n  var buf = new ArrayBuffer(this._byteLength);\n  var dst = new Uint8Array(buf);\n  var src = new Uint8Array(this._buffer, 0, dst.length);\n  dst.set(src);\n  this.buffer = buf;\n};\n\n\n/**\n  Big-endian const to use as default endianness.\n  @type {boolean}\n  */\nDataStream.BIG_ENDIAN = false;\n\n/**\n  Little-endian const to use as default endianness.\n  @type {boolean}\n  */\nDataStream.LITTLE_ENDIAN = true;\n\n/**\n  Virtual byte length of the DataStream backing buffer.\n  Updated to be max of original buffer size and last written size.\n  If dynamicSize is false is set to buffer size.\n  @type {number}\n  */\nDataStream.prototype._byteLength = 0;\n\n/**\n  Returns the byte length of the DataStream object.\n  @type {number}\n  */\nObject.defineProperty(DataStream.prototype, 'byteLength',\n  { get: function() {\n    return this._byteLength - this._byteOffset;\n  }});\n\n/**\n  Set/get the backing ArrayBuffer of the DataStream object.\n  The setter updates the DataView to point to the new buffer.\n  @type {Object}\n  */\nObject.defineProperty(DataStream.prototype, 'buffer',\n  { get: function() {\n      this._trimAlloc();\n      return this._buffer;\n    },\n    set: function(v) {\n      this._buffer = v;\n      this._dataView = new DataView(this._buffer, this._byteOffset);\n      this._byteLength = this._buffer.byteLength;\n    } });\n\n/**\n  Set/get the byteOffset of the DataStream object.\n  The setter updates the DataView to point to the new byteOffset.\n  @type {number}\n  */\nObject.defineProperty(DataStream.prototype, 'byteOffset',\n  { get: function() {\n      return this._byteOffset;\n    },\n    set: function(v) {\n      this._byteOffset = v;\n      this._dataView = new DataView(this._buffer, this._byteOffset);\n      this._byteLength = this._buffer.byteLength;\n    } });\n\n/**\n  Set/get the backing DataView of the DataStream object.\n  The setter updates the buffer and byteOffset to point to the DataView values.\n  @type {Object}\n  */\nObject.defineProperty(DataStream.prototype, 'dataView',\n  { get: function() {\n      return this._dataView;\n    },\n    set: function(v) {\n      this._byteOffset = v.byteOffset;\n      this._buffer = v.buffer;\n      this._dataView = new DataView(this._buffer, this._byteOffset);\n      this._byteLength = this._byteOffset + v.byteLength;\n    } });\n\n/**\n  Sets the DataStream read/write position to given position.\n  Clamps between 0 and DataStream length.\n\n  @param {number} pos Position to seek to.\n  @return {null}\n  */\nDataStream.prototype.seek = function(pos) {\n  var npos = Math.max(0, Math.min(this.byteLength, pos));\n  this.position = (isNaN(npos) || !isFinite(npos)) ? 0 : npos;\n};\n\n/**\n  Returns true if the DataStream seek pointer is at the end of buffer and\n  there's no more data to read.\n\n  @return {boolean} True if the seek pointer is at the end of the buffer.\n  */\nDataStream.prototype.isEof = function() {\n  return (this.position >= this._byteLength);\n};\n\n\n/**\n  Maps a Uint8Array into the DataStream buffer.\n\n  Nice for quickly reading in data.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Uint8Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapUint8Array = function(length) {\n  this._realloc(length * 1);\n  var arr = new Uint8Array(this._buffer, this.byteOffset+this.position, length);\n  this.position += length * 1;\n  return arr;\n};\n\n\n/**\n  Reads an Int32Array of desired length and endianness from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Int32Array.\n */\nDataStream.prototype.readInt32Array = function(length, e) {\n  length = length == null ? (this.byteLength-this.position / 4) : length;\n  var arr = new Int32Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n/**\n  Reads an Int16Array of desired length and endianness from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Int16Array.\n */\nDataStream.prototype.readInt16Array = function(length, e) {\n  length = length == null ? (this.byteLength-this.position / 2) : length;\n  var arr = new Int16Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n/**\n  Reads an Int8Array of desired length from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Int8Array.\n */\nDataStream.prototype.readInt8Array = function(length) {\n  length = length == null ? (this.byteLength-this.position) : length;\n  var arr = new Int8Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n/**\n  Reads a Uint32Array of desired length and endianness from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Uint32Array.\n */\nDataStream.prototype.readUint32Array = function(length, e) {\n  length = length == null ? (this.byteLength-this.position / 4) : length;\n  var arr = new Uint32Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n/**\n  Reads a Uint16Array of desired length and endianness from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Uint16Array.\n */\nDataStream.prototype.readUint16Array = function(length, e) {\n  length = length == null ? (this.byteLength-this.position / 2) : length;\n  var arr = new Uint16Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n/**\n  Reads a Uint8Array of desired length from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Uint8Array.\n */\nDataStream.prototype.readUint8Array = function(length) {\n  length = length == null ? (this.byteLength-this.position) : length;\n  var arr = new Uint8Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n/**\n  Reads a Float64Array of desired length and endianness from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Float64Array.\n */\nDataStream.prototype.readFloat64Array = function(length, e) {\n  length = length == null ? (this.byteLength-this.position / 8) : length;\n  var arr = new Float64Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n/**\n  Reads a Float32Array of desired length and endianness from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Float32Array.\n */\nDataStream.prototype.readFloat32Array = function(length, e) {\n  length = length == null ? (this.byteLength-this.position / 4) : length;\n  var arr = new Float32Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n\n/**\n  Reads a 32-bit int from the DataStream with the desired endianness.\n\n  @param {?boolean} e Endianness of the number.\n  @return {number} The read number.\n */\nDataStream.prototype.readInt32 = function(e) {\n  var v = this._dataView.getInt32(this.position, e == null ? this.endianness : e);\n  this.position += 4;\n  return v;\n};\n\n/**\n  Reads a 16-bit int from the DataStream with the desired endianness.\n\n  @param {?boolean} e Endianness of the number.\n  @return {number} The read number.\n */\nDataStream.prototype.readInt16 = function(e) {\n  var v = this._dataView.getInt16(this.position, e == null ? this.endianness : e);\n  this.position += 2;\n  return v;\n};\n\n/**\n  Reads an 8-bit int from the DataStream.\n\n  @return {number} The read number.\n */\nDataStream.prototype.readInt8 = function() {\n  var v = this._dataView.getInt8(this.position);\n  this.position += 1;\n  return v;\n};\n\n/**\n  Reads a 32-bit unsigned int from the DataStream with the desired endianness.\n\n  @param {?boolean} e Endianness of the number.\n  @return {number} The read number.\n */\nDataStream.prototype.readUint32 = function(e) {\n  var v = this._dataView.getUint32(this.position, e == null ? this.endianness : e);\n  this.position += 4;\n  return v;\n};\n\n/**\n  Reads a 16-bit unsigned int from the DataStream with the desired endianness.\n\n  @param {?boolean} e Endianness of the number.\n  @return {number} The read number.\n */\nDataStream.prototype.readUint16 = function(e) {\n  var v = this._dataView.getUint16(this.position, e == null ? this.endianness : e);\n  this.position += 2;\n  return v;\n};\n\n/**\n  Reads an 8-bit unsigned int from the DataStream.\n\n  @return {number} The read number.\n */\nDataStream.prototype.readUint8 = function() {\n  var v = this._dataView.getUint8(this.position);\n  this.position += 1;\n  return v;\n};\n\n/**\n  Reads a 32-bit float from the DataStream with the desired endianness.\n\n  @param {?boolean} e Endianness of the number.\n  @return {number} The read number.\n */\nDataStream.prototype.readFloat32 = function(e) {\n  var v = this._dataView.getFloat32(this.position, e == null ? this.endianness : e);\n  this.position += 4;\n  return v;\n};\n\n/**\n  Reads a 64-bit float from the DataStream with the desired endianness.\n\n  @param {?boolean} e Endianness of the number.\n  @return {number} The read number.\n */\nDataStream.prototype.readFloat64 = function(e) {\n  var v = this._dataView.getFloat64(this.position, e == null ? this.endianness : e);\n  this.position += 8;\n  return v;\n};\n\n/**\n  Native endianness. Either DataStream.BIG_ENDIAN or DataStream.LITTLE_ENDIAN\n  depending on the platform endianness.\n\n  @type {boolean}\n */\nDataStream.endianness = new Int8Array(new Int16Array([1]).buffer)[0] > 0;\n\n/**\n  Copies byteLength bytes from the src buffer at srcOffset to the\n  dst buffer at dstOffset.\n\n  @param {Object} dst Destination ArrayBuffer to write to.\n  @param {number} dstOffset Offset to the destination ArrayBuffer.\n  @param {Object} src Source ArrayBuffer to read from.\n  @param {number} srcOffset Offset to the source ArrayBuffer.\n  @param {number} byteLength Number of bytes to copy.\n */\nDataStream.memcpy = function(dst, dstOffset, src, srcOffset, byteLength) {\n  var dstU8 = new Uint8Array(dst, dstOffset, byteLength);\n  var srcU8 = new Uint8Array(src, srcOffset, byteLength);\n  dstU8.set(srcU8);\n};\n\n/**\n  Converts array to native endianness in-place.\n\n  @param {Object} array Typed array to convert.\n  @param {boolean} arrayIsLittleEndian True if the data in the array is\n                                       little-endian. Set false for big-endian.\n  @return {Object} The converted typed array.\n */\nDataStream.arrayToNative = function(array, arrayIsLittleEndian) {\n  if (arrayIsLittleEndian == this.endianness) {\n    return array;\n  } else {\n    return this.flipArrayEndianness(array);\n  }\n};\n\n/**\n  Converts native endianness array to desired endianness in-place.\n\n  @param {Object} array Typed array to convert.\n  @param {boolean} littleEndian True if the converted array should be\n                                little-endian. Set false for big-endian.\n  @return {Object} The converted typed array.\n */\nDataStream.nativeToEndian = function(array, littleEndian) {\n  if (this.endianness == littleEndian) {\n    return array;\n  } else {\n    return this.flipArrayEndianness(array);\n  }\n};\n\n/**\n  Flips typed array endianness in-place.\n\n  @param {Object} array Typed array to flip.\n  @return {Object} The converted typed array.\n */\nDataStream.flipArrayEndianness = function(array) {\n  var u8 = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);\n  for (var i=0; i<array.byteLength; i+=array.BYTES_PER_ELEMENT) {\n    for (var j=i+array.BYTES_PER_ELEMENT-1, k=i; j>k; j--, k++) {\n      var tmp = u8[k];\n      u8[k] = u8[j];\n      u8[j] = tmp;\n    }\n  }\n  return array;\n};\n\n/**\n  Seek position where DataStream#readStruct ran into a problem.\n  Useful for debugging struct parsing.\n\n  @type {number}\n */\nDataStream.prototype.failurePosition = 0;\n\nString.fromCharCodeUint8 = function(uint8arr) {\n    var arr = [];\n    for (var i = 0; i < uint8arr.length; i++) {\n      arr[i] = uint8arr[i];\n    }\n    return String.fromCharCode.apply(null, arr);\n}\n/**\n  Read a string of desired length and encoding from the DataStream.\n\n  @param {number} length The length of the string to read in bytes.\n  @param {?string} encoding The encoding of the string data in the DataStream.\n                            Defaults to ASCII.\n  @return {string} The read string.\n */\nDataStream.prototype.readString = function(length, encoding) {\n  if (encoding == null || encoding == \"ASCII\") {\n    return String.fromCharCodeUint8.apply(null, [this.mapUint8Array(length == null ? this.byteLength-this.position : length)]);\n  } else {\n    return (new TextDecoder(encoding)).decode(this.mapUint8Array(length));\n  }\n};\n\n/**\n  Read null-terminated string of desired length from the DataStream. Truncates\n  the returned string so that the null byte is not a part of it.\n\n  @param {?number} length The length of the string to read.\n  @return {string} The read string.\n */\nDataStream.prototype.readCString = function(length) {\n  var blen = this.byteLength-this.position;\n  var u8 = new Uint8Array(this._buffer, this._byteOffset + this.position);\n  var len = blen;\n  if (length != null) {\n    len = Math.min(length, blen);\n  }\n  for (var i = 0; i < len && u8[i] !== 0; i++); // find first zero byte\n  var s = String.fromCharCodeUint8.apply(null, [this.mapUint8Array(i)]);\n  if (length != null) {\n    this.position += len-i;\n  } else if (i != blen) {\n    this.position += 1; // trailing zero if not at end of buffer\n  }\n  return s;\n};\n\n/* \n   TODO: fix endianness for 24/64-bit fields\n   TODO: check range/support for 64-bits numbers in JavaScript\n*/\nvar MAX_SIZE = Math.pow(2, 32);\n\nDataStream.prototype.readInt64 = function () {\n  return (this.readInt32()*MAX_SIZE)+this.readUint32();\n}\nDataStream.prototype.readUint64 = function () {\n\treturn (this.readUint32()*MAX_SIZE)+this.readUint32();\n}\n\nDataStream.prototype.readInt64 = function () {\n  return (this.readUint32()*MAX_SIZE)+this.readUint32();\n}\n\nDataStream.prototype.readUint24 = function () {\n\treturn (this.readUint8()<<16)+(this.readUint8()<<8)+this.readUint8();\n}\n\nif (true) {\n  exports.DataStream = DataStream;  \n}\n// file:src/DataStream-write.js\n/**\n  Saves the DataStream contents to the given filename.\n  Uses Chrome's anchor download property to initiate download.\n \n  @param {string} filename Filename to save as.\n  @return {null}\n  */\nDataStream.prototype.save = function(filename) {\n  var blob = new Blob([this.buffer]);\n  if (window.URL && URL.createObjectURL) {\n      var url = window.URL.createObjectURL(blob);\n      var a = document.createElement('a');\n      // Required in Firefox:\n      document.body.appendChild(a);\n      a.setAttribute('href', url);\n      a.setAttribute('download', filename);\n      // Required in Firefox:\n      a.setAttribute('target', '_self');\n      a.click();\n      window.URL.revokeObjectURL(url);\n  } else {\n      throw(\"DataStream.save: Can't create object URL.\");\n  }\n};\n\n/**\n  Whether to extend DataStream buffer when trying to write beyond its size.\n  If set, the buffer is reallocated to twice its current size until the\n  requested write fits the buffer.\n  @type {boolean}\n  */\nDataStream.prototype._dynamicSize = true;\nObject.defineProperty(DataStream.prototype, 'dynamicSize',\n  { get: function() {\n      return this._dynamicSize;\n    },\n    set: function(v) {\n      if (!v) {\n        this._trimAlloc();\n      }\n      this._dynamicSize = v;\n    } });\n\n/**\n  Internal function to trim the DataStream buffer when required.\n  Used for stripping out the first bytes when not needed anymore.\n\n  @return {null}\n  */\nDataStream.prototype.shift = function(offset) {\n  var buf = new ArrayBuffer(this._byteLength-offset);\n  var dst = new Uint8Array(buf);\n  var src = new Uint8Array(this._buffer, offset, dst.length);\n  dst.set(src);\n  this.buffer = buf;\n  this.position -= offset;\n};\n\n/**\n  Writes an Int32Array of specified endianness to the DataStream.\n\n  @param {Object} arr The array to write.\n  @param {?boolean} e Endianness of the data to write.\n */\nDataStream.prototype.writeInt32Array = function(arr, e) {\n  this._realloc(arr.length * 4);\n  if (arr instanceof Int32Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapInt32Array(arr.length, e);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeInt32(arr[i], e);\n    }\n  }\n};\n\n/**\n  Writes an Int16Array of specified endianness to the DataStream.\n\n  @param {Object} arr The array to write.\n  @param {?boolean} e Endianness of the data to write.\n */\nDataStream.prototype.writeInt16Array = function(arr, e) {\n  this._realloc(arr.length * 2);\n  if (arr instanceof Int16Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapInt16Array(arr.length, e);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeInt16(arr[i], e);\n    }\n  }\n};\n\n/**\n  Writes an Int8Array to the DataStream.\n\n  @param {Object} arr The array to write.\n */\nDataStream.prototype.writeInt8Array = function(arr) {\n  this._realloc(arr.length * 1);\n  if (arr instanceof Int8Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapInt8Array(arr.length);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeInt8(arr[i]);\n    }\n  }\n};\n\n/**\n  Writes a Uint32Array of specified endianness to the DataStream.\n\n  @param {Object} arr The array to write.\n  @param {?boolean} e Endianness of the data to write.\n */\nDataStream.prototype.writeUint32Array = function(arr, e) {\n  this._realloc(arr.length * 4);\n  if (arr instanceof Uint32Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapUint32Array(arr.length, e);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeUint32(arr[i], e);\n    }\n  }\n};\n\n/**\n  Writes a Uint16Array of specified endianness to the DataStream.\n\n  @param {Object} arr The array to write.\n  @param {?boolean} e Endianness of the data to write.\n */\nDataStream.prototype.writeUint16Array = function(arr, e) {\n  this._realloc(arr.length * 2);\n  if (arr instanceof Uint16Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapUint16Array(arr.length, e);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeUint16(arr[i], e);\n    }\n  }\n};\n\n/**\n  Writes a Uint8Array to the DataStream.\n\n  @param {Object} arr The array to write.\n */\nDataStream.prototype.writeUint8Array = function(arr) {\n  this._realloc(arr.length * 1);\n  if (arr instanceof Uint8Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapUint8Array(arr.length);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeUint8(arr[i]);\n    }\n  }\n};\n\n/**\n  Writes a Float64Array of specified endianness to the DataStream.\n\n  @param {Object} arr The array to write.\n  @param {?boolean} e Endianness of the data to write.\n */\nDataStream.prototype.writeFloat64Array = function(arr, e) {\n  this._realloc(arr.length * 8);\n  if (arr instanceof Float64Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapFloat64Array(arr.length, e);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeFloat64(arr[i], e);\n    }\n  }\n};\n\n/**\n  Writes a Float32Array of specified endianness to the DataStream.\n\n  @param {Object} arr The array to write.\n  @param {?boolean} e Endianness of the data to write.\n */\nDataStream.prototype.writeFloat32Array = function(arr, e) {\n  this._realloc(arr.length * 4);\n  if (arr instanceof Float32Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapFloat32Array(arr.length, e);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeFloat32(arr[i], e);\n    }\n  }\n};\n\n\n/**\n  Writes a 32-bit int to the DataStream with the desired endianness.\n\n  @param {number} v Number to write.\n  @param {?boolean} e Endianness of the number.\n */\nDataStream.prototype.writeInt32 = function(v, e) {\n  this._realloc(4);\n  this._dataView.setInt32(this.position, v, e == null ? this.endianness : e);\n  this.position += 4;\n};\n\n/**\n  Writes a 16-bit int to the DataStream with the desired endianness.\n\n  @param {number} v Number to write.\n  @param {?boolean} e Endianness of the number.\n */\nDataStream.prototype.writeInt16 = function(v, e) {\n  this._realloc(2);\n  this._dataView.setInt16(this.position, v, e == null ? this.endianness : e);\n  this.position += 2;\n};\n\n/**\n  Writes an 8-bit int to the DataStream.\n\n  @param {number} v Number to write.\n */\nDataStream.prototype.writeInt8 = function(v) {\n  this._realloc(1);\n  this._dataView.setInt8(this.position, v);\n  this.position += 1;\n};\n\n/**\n  Writes a 32-bit unsigned int to the DataStream with the desired endianness.\n\n  @param {number} v Number to write.\n  @param {?boolean} e Endianness of the number.\n */\nDataStream.prototype.writeUint32 = function(v, e) {\n  this._realloc(4);\n  this._dataView.setUint32(this.position, v, e == null ? this.endianness : e);\n  this.position += 4;\n};\n\n/**\n  Writes a 16-bit unsigned int to the DataStream with the desired endianness.\n\n  @param {number} v Number to write.\n  @param {?boolean} e Endianness of the number.\n */\nDataStream.prototype.writeUint16 = function(v, e) {\n  this._realloc(2);\n  this._dataView.setUint16(this.position, v, e == null ? this.endianness : e);\n  this.position += 2;\n};\n\n/**\n  Writes an 8-bit unsigned  int to the DataStream.\n\n  @param {number} v Number to write.\n */\nDataStream.prototype.writeUint8 = function(v) {\n  this._realloc(1);\n  this._dataView.setUint8(this.position, v);\n  this.position += 1;\n};\n\n/**\n  Writes a 32-bit float to the DataStream with the desired endianness.\n\n  @param {number} v Number to write.\n  @param {?boolean} e Endianness of the number.\n */\nDataStream.prototype.writeFloat32 = function(v, e) {\n  this._realloc(4);\n  this._dataView.setFloat32(this.position, v, e == null ? this.endianness : e);\n  this.position += 4;\n};\n\n/**\n  Writes a 64-bit float to the DataStream with the desired endianness.\n\n  @param {number} v Number to write.\n  @param {?boolean} e Endianness of the number.\n */\nDataStream.prototype.writeFloat64 = function(v, e) {\n  this._realloc(8);\n  this._dataView.setFloat64(this.position, v, e == null ? this.endianness : e);\n  this.position += 8;\n};\n\n/**\n  Write a UCS-2 string of desired endianness to the DataStream. The\n  lengthOverride argument lets you define the number of characters to write.\n  If the string is shorter than lengthOverride, the extra space is padded with\n  zeroes.\n\n  @param {string} str The string to write.\n  @param {?boolean} endianness The endianness to use for the written string data.\n  @param {?number} lengthOverride The number of characters to write.\n */\nDataStream.prototype.writeUCS2String = function(str, endianness, lengthOverride) {\n  if (lengthOverride == null) {\n    lengthOverride = str.length;\n  }\n  for (var i = 0; i < str.length && i < lengthOverride; i++) {\n    this.writeUint16(str.charCodeAt(i), endianness);\n  }\n  for (; i<lengthOverride; i++) {\n    this.writeUint16(0);\n  }\n};\n\n/**\n  Writes a string of desired length and encoding to the DataStream.\n\n  @param {string} s The string to write.\n  @param {?string} encoding The encoding for the written string data.\n                            Defaults to ASCII.\n  @param {?number} length The number of characters to write.\n */\nDataStream.prototype.writeString = function(s, encoding, length) {\n  var i = 0;\n  if (encoding == null || encoding == \"ASCII\") {\n    if (length != null) {\n      var len = Math.min(s.length, length);\n      for (i=0; i<len; i++) {\n        this.writeUint8(s.charCodeAt(i));\n      }\n      for (; i<length; i++) {\n        this.writeUint8(0);\n      }\n    } else {\n      for (i=0; i<s.length; i++) {\n        this.writeUint8(s.charCodeAt(i));\n      }\n    }\n  } else {\n    this.writeUint8Array((new TextEncoder(encoding)).encode(s.substring(0, length)));\n  }\n};\n\n/**\n  Writes a null-terminated string to DataStream and zero-pads it to length\n  bytes. If length is not given, writes the string followed by a zero.\n  If string is longer than length, the written part of the string does not have\n  a trailing zero.\n\n  @param {string} s The string to write.\n  @param {?number} length The number of characters to write.\n */\nDataStream.prototype.writeCString = function(s, length) {\n  var i = 0;\n  if (length != null) {\n    var len = Math.min(s.length, length);\n    for (i=0; i<len; i++) {\n      this.writeUint8(s.charCodeAt(i));\n    }\n    for (; i<length; i++) {\n      this.writeUint8(0);\n    }\n  } else {\n    for (i=0; i<s.length; i++) {\n      this.writeUint8(s.charCodeAt(i));\n    }\n    this.writeUint8(0);\n  }\n};\n\n/**\n  Writes a struct to the DataStream. Takes a structDefinition that gives the\n  types and a struct object that gives the values. Refer to readStruct for the\n  structure of structDefinition.\n\n  @param {Object} structDefinition Type definition of the struct.\n  @param {Object} struct The struct data object.\n  */\nDataStream.prototype.writeStruct = function(structDefinition, struct) {\n  for (var i = 0; i < structDefinition.length; i+=2) {\n    var t = structDefinition[i+1];\n    this.writeType(t, struct[structDefinition[i]], struct);\n  }\n};\n\n/**\n  Writes object v of type t to the DataStream.\n\n  @param {Object} t Type of data to write.\n  @param {Object} v Value of data to write.\n  @param {Object} struct Struct to pass to write callback functions.\n  */\nDataStream.prototype.writeType = function(t, v, struct) {\n  var tp;\n  if (typeof t == \"function\") {\n    return t(this, v);\n  } else if (typeof t == \"object\" && !(t instanceof Array)) {\n    return t.set(this, v, struct);\n  }\n  var lengthOverride = null;\n  var charset = \"ASCII\";\n  var pos = this.position;\n  if (typeof(t) == 'string' && /:/.test(t)) {\n    tp = t.split(\":\");\n    t = tp[0];\n    lengthOverride = parseInt(tp[1]);\n  }\n  if (typeof t == 'string' && /,/.test(t)) {\n    tp = t.split(\",\");\n    t = tp[0];\n    charset = parseInt(tp[1]);\n  }\n\n  switch(t) {\n    case 'uint8':\n      this.writeUint8(v);\n      break;\n    case 'int8':\n      this.writeInt8(v);\n      break;\n\n    case 'uint16':\n      this.writeUint16(v, this.endianness);\n      break;\n    case 'int16':\n      this.writeInt16(v, this.endianness);\n      break;\n    case 'uint32':\n      this.writeUint32(v, this.endianness);\n      break;\n    case 'int32':\n      this.writeInt32(v, this.endianness);\n      break;\n    case 'float32':\n      this.writeFloat32(v, this.endianness);\n      break;\n    case 'float64':\n      this.writeFloat64(v, this.endianness);\n      break;\n\n    case 'uint16be':\n      this.writeUint16(v, DataStream.BIG_ENDIAN);\n      break;\n    case 'int16be':\n      this.writeInt16(v, DataStream.BIG_ENDIAN);\n      break;\n    case 'uint32be':\n      this.writeUint32(v, DataStream.BIG_ENDIAN);\n      break;\n    case 'int32be':\n      this.writeInt32(v, DataStream.BIG_ENDIAN);\n      break;\n    case 'float32be':\n      this.writeFloat32(v, DataStream.BIG_ENDIAN);\n      break;\n    case 'float64be':\n      this.writeFloat64(v, DataStream.BIG_ENDIAN);\n      break;\n\n    case 'uint16le':\n      this.writeUint16(v, DataStream.LITTLE_ENDIAN);\n      break;\n    case 'int16le':\n      this.writeInt16(v, DataStream.LITTLE_ENDIAN);\n      break;\n    case 'uint32le':\n      this.writeUint32(v, DataStream.LITTLE_ENDIAN);\n      break;\n    case 'int32le':\n      this.writeInt32(v, DataStream.LITTLE_ENDIAN);\n      break;\n    case 'float32le':\n      this.writeFloat32(v, DataStream.LITTLE_ENDIAN);\n      break;\n    case 'float64le':\n      this.writeFloat64(v, DataStream.LITTLE_ENDIAN);\n      break;\n\n    case 'cstring':\n      this.writeCString(v, lengthOverride);\n      break;\n\n    case 'string':\n      this.writeString(v, charset, lengthOverride);\n      break;\n\n    case 'u16string':\n      this.writeUCS2String(v, this.endianness, lengthOverride);\n      break;\n\n    case 'u16stringle':\n      this.writeUCS2String(v, DataStream.LITTLE_ENDIAN, lengthOverride);\n      break;\n\n    case 'u16stringbe':\n      this.writeUCS2String(v, DataStream.BIG_ENDIAN, lengthOverride);\n      break;\n\n    default:\n      if (t.length == 3) {\n        var ta = t[1];\n        for (var i=0; i<v.length; i++) {\n          this.writeType(ta, v[i]);\n        }\n        break;\n      } else {\n        this.writeStruct(t, v);\n        break;\n      }\n  }\n  if (lengthOverride != null) {\n    this.position = pos;\n    this._realloc(lengthOverride);\n    this.position = pos + lengthOverride;\n  }\n};\n\n\nDataStream.prototype.writeUint64 = function (v) {\n\tvar h = Math.floor(v / MAX_SIZE);\n\tthis.writeUint32(h);\n\tthis.writeUint32(v & 0xFFFFFFFF);\n}\n\nDataStream.prototype.writeUint24 = function (v) {\n\tthis.writeUint8((v & 0x00FF0000)>>16);\n\tthis.writeUint8((v & 0x0000FF00)>>8);\n\tthis.writeUint8((v & 0x000000FF));\n}\n\nDataStream.prototype.adjustUint32 = function(position, value) {\n\tvar pos = this.position;\n\tthis.seek(position);\n\tthis.writeUint32(value);\n\tthis.seek(pos);\n}\n// file:src/DataStream-map.js\n/**\n  Maps an Int32Array into the DataStream buffer, swizzling it to native\n  endianness in-place. The current offset from the start of the buffer needs to\n  be a multiple of element size, just like with typed array views.\n\n  Nice for quickly reading in data. Warning: potentially modifies the buffer\n  contents.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Int32Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapInt32Array = function(length, e) {\n  this._realloc(length * 4);\n  var arr = new Int32Array(this._buffer, this.byteOffset+this.position, length);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += length * 4;\n  return arr;\n};\n\n/**\n  Maps an Int16Array into the DataStream buffer, swizzling it to native\n  endianness in-place. The current offset from the start of the buffer needs to\n  be a multiple of element size, just like with typed array views.\n\n  Nice for quickly reading in data. Warning: potentially modifies the buffer\n  contents.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Int16Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapInt16Array = function(length, e) {\n  this._realloc(length * 2);\n  var arr = new Int16Array(this._buffer, this.byteOffset+this.position, length);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += length * 2;\n  return arr;\n};\n\n/**\n  Maps an Int8Array into the DataStream buffer.\n\n  Nice for quickly reading in data.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Int8Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapInt8Array = function(length) {\n  this._realloc(length * 1);\n  var arr = new Int8Array(this._buffer, this.byteOffset+this.position, length);\n  this.position += length * 1;\n  return arr;\n};\n\n/**\n  Maps a Uint32Array into the DataStream buffer, swizzling it to native\n  endianness in-place. The current offset from the start of the buffer needs to\n  be a multiple of element size, just like with typed array views.\n\n  Nice for quickly reading in data. Warning: potentially modifies the buffer\n  contents.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Uint32Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapUint32Array = function(length, e) {\n  this._realloc(length * 4);\n  var arr = new Uint32Array(this._buffer, this.byteOffset+this.position, length);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += length * 4;\n  return arr;\n};\n\n/**\n  Maps a Uint16Array into the DataStream buffer, swizzling it to native\n  endianness in-place. The current offset from the start of the buffer needs to\n  be a multiple of element size, just like with typed array views.\n\n  Nice for quickly reading in data. Warning: potentially modifies the buffer\n  contents.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Uint16Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapUint16Array = function(length, e) {\n  this._realloc(length * 2);\n  var arr = new Uint16Array(this._buffer, this.byteOffset+this.position, length);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += length * 2;\n  return arr;\n};\n\n/**\n  Maps a Float64Array into the DataStream buffer, swizzling it to native\n  endianness in-place. The current offset from the start of the buffer needs to\n  be a multiple of element size, just like with typed array views.\n\n  Nice for quickly reading in data. Warning: potentially modifies the buffer\n  contents.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Float64Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapFloat64Array = function(length, e) {\n  this._realloc(length * 8);\n  var arr = new Float64Array(this._buffer, this.byteOffset+this.position, length);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += length * 8;\n  return arr;\n};\n\n/**\n  Maps a Float32Array into the DataStream buffer, swizzling it to native\n  endianness in-place. The current offset from the start of the buffer needs to\n  be a multiple of element size, just like with typed array views.\n\n  Nice for quickly reading in data. Warning: potentially modifies the buffer\n  contents.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Float32Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapFloat32Array = function(length, e) {\n  this._realloc(length * 4);\n  var arr = new Float32Array(this._buffer, this.byteOffset+this.position, length);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += length * 4;\n  return arr;\n};\n// file:src/buffer.js\n/**\n * MultiBufferStream is a class that acts as a SimpleStream for parsing \n * It holds several, possibly non-contiguous ArrayBuffer objects, each with a fileStart property \n * containing the offset for the buffer data in an original/virtual file \n *\n * It inherits also from DataStream for all read/write/alloc operations\n */\n\n/**\n * Constructor\n */\nvar MultiBufferStream = function(buffer) {\n\t/* List of ArrayBuffers, with a fileStart property, sorted in fileStart order and non overlapping */\n\tthis.buffers = [];\t\n\tthis.bufferIndex = -1;\n\tif (buffer) {\n\t\tthis.insertBuffer(buffer);\n\t\tthis.bufferIndex = 0;\n\t}\n}\nMultiBufferStream.prototype = new DataStream(new ArrayBuffer(), 0, DataStream.BIG_ENDIAN);\n\n/************************************************************************************\n  Methods for the managnement of the buffers (insertion, removal, concatenation, ...)\n ***********************************************************************************/\n\nMultiBufferStream.prototype.initialized = function() {\n\tvar firstBuffer;\n\tif (this.bufferIndex > -1) {\n\t\treturn true;\n\t} else if (this.buffers.length > 0) {\n\t\tfirstBuffer = this.buffers[0];\n\t\tif (firstBuffer.fileStart === 0) {\n\t\t\tthis.buffer = firstBuffer;\n\t\t\tthis.bufferIndex = 0;\n\t\t\tLog.debug(\"MultiBufferStream\", \"Stream ready for parsing\");\n\t\t\treturn true;\n\t\t} else {\n\t\t\tLog.warn(\"MultiBufferStream\", \"The first buffer should have a fileStart of 0\");\n\t\t\tthis.logBufferLevel();\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\tLog.warn(\"MultiBufferStream\", \"No buffer to start parsing from\");\n\t\tthis.logBufferLevel();\n\t\treturn false;\n\t}\t\t\t\n}\n\n/**\n * helper functions to concatenate two ArrayBuffer objects\n * @param  {ArrayBuffer} buffer1 \n * @param  {ArrayBuffer} buffer2 \n * @return {ArrayBuffer} the concatenation of buffer1 and buffer2 in that order\n */\nArrayBuffer.concat = function(buffer1, buffer2) {\n  Log.debug(\"ArrayBuffer\", \"Trying to create a new buffer of size: \"+(buffer1.byteLength + buffer2.byteLength));\n  var tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n  tmp.set(new Uint8Array(buffer1), 0);\n  tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n  return tmp.buffer;\n};\n\n/**\n * Reduces the size of a given buffer, but taking the part between offset and offset+newlength\n * @param  {ArrayBuffer} buffer    \n * @param  {Number}      offset    the start of new buffer\n * @param  {Number}      newLength the length of the new buffer\n * @return {ArrayBuffer}           the new buffer\n */\nMultiBufferStream.prototype.reduceBuffer = function(buffer, offset, newLength) {\n\tvar smallB;\n\tsmallB = new Uint8Array(newLength);\n\tsmallB.set(new Uint8Array(buffer, offset, newLength));\n\tsmallB.buffer.fileStart = buffer.fileStart+offset;\n\tsmallB.buffer.usedBytes = 0;\n\treturn smallB.buffer;\t\n}\n\n/**\n * Inserts the new buffer in the sorted list of buffers,\n *  making sure, it is not overlapping with existing ones (possibly reducing its size).\n *  if the new buffer overrides/replaces the 0-th buffer (for instance because it is bigger), \n *  updates the DataStream buffer for parsing \n*/\nMultiBufferStream.prototype.insertBuffer = function(ab) {\t\n\tvar to_add = true;\n\t/* TODO: improve insertion if many buffers */\n\tfor (var i = 0; i < this.buffers.length; i++) {\n\t\tvar b = this.buffers[i];\n\t\tif (ab.fileStart <= b.fileStart) {\n\t\t\t/* the insertion position is found */\n\t\t\tif (ab.fileStart === b.fileStart) {\n\t\t\t\t/* The new buffer overlaps with an existing buffer */\n\t\t\t\tif (ab.byteLength >  b.byteLength) {\n\t\t\t\t\t/* the new buffer is bigger than the existing one\n\t\t\t\t\t   remove the existing buffer and try again to insert \n\t\t\t\t\t   the new buffer to check overlap with the next ones */\n\t\t\t\t\tthis.buffers.splice(i, 1);\n\t\t\t\t\ti--; \n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\t/* the new buffer is smaller than the existing one, just drop it */\n\t\t\t\t\tLog.warn(\"MultiBufferStream\", \"Buffer (fileStart: \"+ab.fileStart+\" - Length: \"+ab.byteLength+\") already appended, ignoring\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/* The beginning of the new buffer is not overlapping with an existing buffer\n\t\t\t\t   let's check the end of it */\n\t\t\t\tif (ab.fileStart + ab.byteLength <= b.fileStart) {\n\t\t\t\t\t/* no overlap, we can add it as is */\n\t\t\t\t} else {\n\t\t\t\t\t/* There is some overlap, cut the new buffer short, and add it*/\n\t\t\t\t\tab = this.reduceBuffer(ab, 0, b.fileStart - ab.fileStart);\n\t\t\t\t}\n\t\t\t\tLog.debug(\"MultiBufferStream\", \"Appending new buffer (fileStart: \"+ab.fileStart+\" - Length: \"+ab.byteLength+\")\");\n\t\t\t\tthis.buffers.splice(i, 0, ab);\n\t\t\t\t/* if this new buffer is inserted in the first place in the list of the buffer, \n\t\t\t\t   and the DataStream is initialized, make it the buffer used for parsing */\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tthis.buffer = ab;\n\t\t\t\t}\n\t\t\t}\n\t\t\tto_add = false;\n\t\t\tbreak;\n\t\t} else if (ab.fileStart < b.fileStart + b.byteLength) {\n\t\t\t/* the new buffer overlaps its beginning with the end of the current buffer */\n\t\t\tvar offset = b.fileStart + b.byteLength - ab.fileStart;\n\t\t\tvar newLength = ab.byteLength - offset;\n\t\t\tif (newLength > 0) {\n\t\t\t\t/* the new buffer is bigger than the current overlap, drop the overlapping part and try again inserting the remaining buffer */\n\t\t\t\tab = this.reduceBuffer(ab, offset, newLength);\n\t\t\t} else {\n\t\t\t\t/* the content of the new buffer is entirely contained in the existing buffer, drop it entirely */\n\t\t\t\tto_add = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t/* if the buffer has not been added, we can add it at the end */\n\tif (to_add) {\n\t\tLog.debug(\"MultiBufferStream\", \"Appending new buffer (fileStart: \"+ab.fileStart+\" - Length: \"+ab.byteLength+\")\");\n\t\tthis.buffers.push(ab);\n\t\t/* if this new buffer is inserted in the first place in the list of the buffer, \n\t\t   and the DataStream is initialized, make it the buffer used for parsing */\n\t\tif (i === 0) {\n\t\t\tthis.buffer = ab;\n\t\t}\n\t}\n}\n\n/**\n * Displays the status of the buffers (number and used bytes)\n * @param  {Object} info callback method for display\n */\nMultiBufferStream.prototype.logBufferLevel = function(info) {\n\tvar i;\n\tvar buffer;\n\tvar used, total;\n\tvar ranges = [];\n\tvar range;\n\tvar bufferedString = \"\";\n\tused = 0;\n\ttotal = 0;\n\tfor (i = 0; i < this.buffers.length; i++) {\n\t\tbuffer = this.buffers[i];\n\t\tif (i === 0) {\n\t\t\trange = {};\n\t\t\tranges.push(range);\n\t\t\trange.start = buffer.fileStart;\n\t\t\trange.end = buffer.fileStart+buffer.byteLength;\n\t\t\tbufferedString += \"[\"+range.start+\"-\";\n\t\t} else if (range.end === buffer.fileStart) {\n\t\t\trange.end = buffer.fileStart+buffer.byteLength;\n\t\t} else {\n\t\t\trange = {};\n\t\t\trange.start = buffer.fileStart;\n\t\t\tbufferedString += (ranges[ranges.length-1].end-1)+\"], [\"+range.start+\"-\";\n\t\t\trange.end = buffer.fileStart+buffer.byteLength;\n\t\t\tranges.push(range);\n\t\t}\n\t\tused += buffer.usedBytes;\n\t\ttotal += buffer.byteLength;\n\t}\n\tif (ranges.length > 0) {\n\t\tbufferedString += (range.end-1)+\"]\";\n\t}\n\tvar log = (info ? Log.info : Log.debug)\n\tif (this.buffers.length === 0) {\n\t\tlog(\"MultiBufferStream\", \"No more buffer in memory\");\n\t} else {\n\t\tlog(\"MultiBufferStream\", \"\"+this.buffers.length+\" stored buffer(s) (\"+used+\"/\"+total+\" bytes), continuous ranges: \"+bufferedString);\n\t}\n}\n\nMultiBufferStream.prototype.cleanBuffers = function () {\n\tvar i;\n\tvar buffer;\n\tfor (i = 0; i < this.buffers.length; i++) {\n\t\tbuffer = this.buffers[i];\n\t\tif (buffer.usedBytes === buffer.byteLength) {\n\t\t\tLog.debug(\"MultiBufferStream\", \"Removing buffer #\"+i);\n\t\t\tthis.buffers.splice(i, 1);\n\t\t\ti--;\n\t\t}\n\t}\n}\n\nMultiBufferStream.prototype.mergeNextBuffer = function() {\n\tvar next_buffer;\n\tif (this.bufferIndex+1 < this.buffers.length) {\n\t\tnext_buffer = this.buffers[this.bufferIndex+1];\n\t\tif (next_buffer.fileStart === this.buffer.fileStart + this.buffer.byteLength) {\n\t\t\tvar oldLength = this.buffer.byteLength;\n\t\t\tvar oldUsedBytes = this.buffer.usedBytes;\n\t\t\tvar oldFileStart = this.buffer.fileStart;\n\t\t\tthis.buffers[this.bufferIndex] = ArrayBuffer.concat(this.buffer, next_buffer);\n\t\t\tthis.buffer = this.buffers[this.bufferIndex];\n\t\t\tthis.buffers.splice(this.bufferIndex+1, 1);\n\t\t\tthis.buffer.usedBytes = oldUsedBytes; /* TODO: should it be += ? */\n\t\t\tthis.buffer.fileStart = oldFileStart;\n\t\t\tLog.debug(\"ISOFile\", \"Concatenating buffer for box parsing (length: \"+oldLength+\"->\"+this.buffer.byteLength+\")\");\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\n\n\n/*************************************************************************\n  Seek-related functions\n *************************************************************************/\n\n/**\n * Finds the buffer that holds the given file position\n * @param  {Boolean} fromStart    indicates if the search should start from the current buffer (false) \n *                                or from the first buffer (true)\n * @param  {Number}  filePosition position in the file to seek to\n * @param  {Boolean} markAsUsed   indicates if the bytes in between the current position and the seek position \n *                                should be marked as used for garbage collection\n * @return {Number}               the index of the buffer holding the seeked file position, -1 if not found.\n */\nMultiBufferStream.prototype.findPosition = function(fromStart, filePosition, markAsUsed) {\n\tvar i;\n\tvar abuffer = null;\n\tvar index = -1;\n\n\t/* find the buffer with the largest position smaller than the given position */\n\tif (fromStart === true) {\n\t   /* the reposition can be in the past, we need to check from the beginning of the list of buffers */\n\t\ti = 0;\n\t} else {\n\t\ti = this.bufferIndex;\n\t}\n\n\twhile (i < this.buffers.length) {\n\t\tabuffer = this.buffers[i];\n\t\tif (abuffer.fileStart <= filePosition) {\n\t\t\tindex = i;\n\t\t\tif (markAsUsed) {\n\t\t\t\tif (abuffer.fileStart + abuffer.byteLength <= filePosition) {\n\t\t\t\t\tabuffer.usedBytes = abuffer.byteLength;\t\n\t\t\t\t} else {\n\t\t\t\t\tabuffer.usedBytes = filePosition - abuffer.fileStart;\n\t\t\t\t}\t\t\n\t\t\t\tthis.logBufferLevel();\t\n\t\t\t}\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\n\tif (index !== -1) {\n\t\tabuffer = this.buffers[index];\n\t\tif (abuffer.fileStart + abuffer.byteLength >= filePosition) {\t\t\t\n\t\t\tLog.debug(\"MultiBufferStream\", \"Found position in existing buffer #\"+index);\n\t\t\treturn index;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t} else {\n\t\treturn -1;\n\t}\n}\n\n/**\n * Finds the largest file position contained in a buffer or in the next buffers if they are contiguous (no gap)\n * starting from the given buffer index or from the current buffer if the index is not given\n *\n * @param  {Number} inputindex Index of the buffer to start from\n * @return {Number}            The largest file position found in the buffers\n */\nMultiBufferStream.prototype.findEndContiguousBuf = function(inputindex) {\n\tvar i;\n\tvar currentBuf;\n\tvar nextBuf;\n\tvar index = (inputindex !== undefined ? inputindex : this.bufferIndex);\n\tcurrentBuf = this.buffers[index];\n\t/* find the end of the contiguous range of data */\n\tif (this.buffers.length > index+1) {\n\t\tfor (i = index+1; i < this.buffers.length; i++) {\n\t\t\tnextBuf = this.buffers[i];\n\t\t\tif (nextBuf.fileStart === currentBuf.fileStart + currentBuf.byteLength) {\n\t\t\t\tcurrentBuf = nextBuf;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t/* return the position of last byte in the file that we have */\n\treturn currentBuf.fileStart + currentBuf.byteLength;\n}\n\n/**\n * Returns the largest file position contained in the buffers, larger than the given position\n * @param  {Number} pos the file position to start from\n * @return {Number}     the largest position in the current buffer or in the buffer and the next contiguous \n *                      buffer that holds the given position\n */\nMultiBufferStream.prototype.getEndFilePositionAfter = function(pos) {\n\tvar index = this.findPosition(true, pos, false);\n\tif (index !== -1) {\n\t\treturn this.findEndContiguousBuf(index);\n\t} else {\n\t\treturn pos;\n\t}\n}\n\n/*************************************************************************\n  Garbage collection related functions\n *************************************************************************/\n\n/**\n * Marks a given number of bytes as used in the current buffer for garbage collection\n * @param {Number} nbBytes \n */\nMultiBufferStream.prototype.addUsedBytes = function(nbBytes) {\n\tthis.buffer.usedBytes += nbBytes;\n\tthis.logBufferLevel();\n}\n\n/**\n * Marks the entire current buffer as used, ready for garbage collection\n */\nMultiBufferStream.prototype.setAllUsedBytes = function() {\n\tthis.buffer.usedBytes = this.buffer.byteLength;\n\tthis.logBufferLevel();\n}\n\n/*************************************************************************\n  Common API between MultiBufferStream and SimpleStream\n *************************************************************************/\n\n/**\n * Tries to seek to a given file position\n * if possible, repositions the parsing from there and returns true \n * if not possible, does not change anything and returns false \n * @param  {Number}  filePosition position in the file to seek to\n * @param  {Boolean} fromStart    indicates if the search should start from the current buffer (false) \n *                                or from the first buffer (true)\n * @param  {Boolean} markAsUsed   indicates if the bytes in between the current position and the seek position \n *                                should be marked as used for garbage collection\n * @return {Boolean}              true if the seek succeeded, false otherwise\n */\nMultiBufferStream.prototype.seek = function(filePosition, fromStart, markAsUsed) {\n\tvar index;\n\tindex = this.findPosition(fromStart, filePosition, markAsUsed);\n\tif (index !== -1) {\n\t\tthis.buffer = this.buffers[index];\n\t\tthis.bufferIndex = index;\n\t\tthis.position = filePosition - this.buffer.fileStart;\n\t\tLog.debug(\"MultiBufferStream\", \"Repositioning parser at buffer position: \"+this.position);\n\t\treturn true;\n\t} else {\n\t\tLog.debug(\"MultiBufferStream\", \"Position \"+filePosition+\" not found in buffered data\");\n\t\treturn false;\n\t}\n}\n\n/**\n * Returns the current position in the file\n * @return {Number} the position in the file\n */\nMultiBufferStream.prototype.getPosition = function() {\n\tif (this.bufferIndex === -1 || this.buffers[this.bufferIndex] === null) {\n\t\tthrow \"Error accessing position in the MultiBufferStream\";\n\t}\n\treturn this.buffers[this.bufferIndex].fileStart+this.position;\n}\n\n/**\n * Returns the length of the current buffer\n * @return {Number} the length of the current buffer\n */\nMultiBufferStream.prototype.getLength = function() {\n\treturn this.byteLength;\n}\n\nMultiBufferStream.prototype.getEndPosition = function() {\n\tif (this.bufferIndex === -1 || this.buffers[this.bufferIndex] === null) {\n\t\tthrow \"Error accessing position in the MultiBufferStream\";\n\t}\n\treturn this.buffers[this.bufferIndex].fileStart+this.byteLength;\n}\n\nif (true) {\n\texports.MultiBufferStream = MultiBufferStream;\n}// file:src/descriptor.js\n/*\n * Copyright (c) 2012-2013. Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nvar MPEG4DescriptorParser = function () {\n\tvar ES_DescrTag \t\t\t= 0x03;\n\tvar DecoderConfigDescrTag \t= 0x04;\n\tvar DecSpecificInfoTag \t\t= 0x05;\n\tvar SLConfigDescrTag \t\t= 0x06;\n\n\tvar descTagToName = [];\n\tdescTagToName[ES_DescrTag] \t\t\t\t= \"ES_Descriptor\";\n\tdescTagToName[DecoderConfigDescrTag] \t= \"DecoderConfigDescriptor\";\n\tdescTagToName[DecSpecificInfoTag] \t\t= \"DecoderSpecificInfo\";\n\tdescTagToName[SLConfigDescrTag] \t\t= \"SLConfigDescriptor\";\n\n\tthis.getDescriptorName = function(tag) {\n\t\treturn descTagToName[tag];\n\t}\n\n\tvar that = this;\n\tvar classes = {};\n\n\tthis.parseOneDescriptor = function (stream) {\n\t\tvar hdrSize = 0;\n\t\tvar size = 0;\n\t\tvar tag;\n\t\tvar desc;\n\t\tvar byteRead;\n\t\ttag = stream.readUint8();\n\t\thdrSize++;\n\t\tbyteRead = stream.readUint8();\n\t\thdrSize++;\n\t\twhile (byteRead & 0x80) {\n\t\t\tsize = (size << 7) + (byteRead & 0x7F);\n\t\t\tbyteRead = stream.readUint8();\n\t\t\thdrSize++;\n\t\t}\n\t\tsize = (size << 7) + (byteRead & 0x7F);\n\t\tLog.debug(\"MPEG4DescriptorParser\", \"Found \"+(descTagToName[tag] || \"Descriptor \"+tag)+\", size \"+size+\" at position \"+stream.getPosition());\n\t\tif (descTagToName[tag]) {\n\t\t\tdesc = new classes[descTagToName[tag]](size);\n\t\t} else {\n\t\t\tdesc = new classes.Descriptor(size);\n\t\t}\n\t\tdesc.parse(stream);\n\t\treturn desc;\n\t}\n\n\tclasses.Descriptor = function(_tag, _size) {\n\t\tthis.tag = _tag;\n\t\tthis.size = _size;\n\t\tthis.descs = [];\n\t}\n\n\tclasses.Descriptor.prototype.parse = function (stream) {\n\t\tthis.data = stream.readUint8Array(this.size);\n\t}\n\n\tclasses.Descriptor.prototype.findDescriptor = function (tag) {\n\t\tfor (var i = 0; i < this.descs.length; i++) {\n\t\t\tif (this.descs[i].tag == tag) {\n\t\t\t\treturn this.descs[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tclasses.Descriptor.prototype.parseRemainingDescriptors = function (stream) {\n\t\tvar start = stream.position;\n\t\twhile (stream.position < start+this.size) {\n\t\t\tvar desc = that.parseOneDescriptor(stream);\n\t\t\tthis.descs.push(desc);\n\t\t}\n\t}\n\n\tclasses.ES_Descriptor = function (size) {\n\t\tclasses.Descriptor.call(this, ES_DescrTag, size);\n\t}\n\n\tclasses.ES_Descriptor.prototype = new classes.Descriptor();\n\n\tclasses.ES_Descriptor.prototype.parse = function(stream) {\n\t\tthis.ES_ID = stream.readUint16();\n\t\tthis.flags = stream.readUint8();\n\t\tthis.size -= 3;\n\t\tif (this.flags & 0x80) {\n\t\t\tthis.dependsOn_ES_ID = stream.readUint16();\n\t\t\tthis.size -= 2;\n\t\t} else {\n\t\t\tthis.dependsOn_ES_ID = 0;\n\t\t}\n\t\tif (this.flags & 0x40) {\n\t\t\tvar l = stream.readUint8();\n\t\t\tthis.URL = stream.readString(l);\n\t\t\tthis.size -= l+1;\n\t\t} else {\n\t\t\tthis.URL = \"\";\n\t\t}\n\t\tif (this.flags & 0x20) {\n\t\t\tthis.OCR_ES_ID = stream.readUint16();\n\t\t\tthis.size -= 2;\n\t\t} else {\n\t\t\tthis.OCR_ES_ID = 0;\n\t\t}\n\t\tthis.parseRemainingDescriptors(stream);\n\t}\n\n\tclasses.ES_Descriptor.prototype.getOTI = function(stream) {\n\t\tvar dcd = this.findDescriptor(DecoderConfigDescrTag);\n\t\tif (dcd) {\n\t\t\treturn dcd.oti;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tclasses.ES_Descriptor.prototype.getAudioConfig = function(stream) {\n\t\tvar dcd = this.findDescriptor(DecoderConfigDescrTag);\n\t\tif (!dcd) return null;\n\t\tvar dsi = dcd.findDescriptor(DecSpecificInfoTag);\n\t\tif (dsi && dsi.data) {\n\t\t\tvar audioObjectType = (dsi.data[0]& 0xF8) >> 3;\n\t\t\tif (audioObjectType === 31 && dsi.data.length >= 2) {\n\t\t\t\taudioObjectType = 32 + ((dsi.data[0] & 0x7) << 3) + ((dsi.data[1] & 0xE0) >> 5);\n\t\t\t}\n\t\t\treturn audioObjectType;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tclasses.DecoderConfigDescriptor = function (size) {\n\t\tclasses.Descriptor.call(this, DecoderConfigDescrTag, size);\n\t}\n\tclasses.DecoderConfigDescriptor.prototype = new classes.Descriptor();\n\n\tclasses.DecoderConfigDescriptor.prototype.parse = function(stream) {\n\t\tthis.oti = stream.readUint8();\n\t\tthis.streamType = stream.readUint8();\n\t\tthis.upStream = ((this.streamType >> 1) & 1) !== 0;\n\t\tthis.streamType = this.streamType >>> 2;\n\t\tthis.bufferSize = stream.readUint24();\n\t\tthis.maxBitrate = stream.readUint32();\n\t\tthis.avgBitrate = stream.readUint32();\n\t\tthis.size -= 13;\n\t\tthis.parseRemainingDescriptors(stream);\n\t}\n\n\tclasses.DecoderSpecificInfo = function (size) {\n\t\tclasses.Descriptor.call(this, DecSpecificInfoTag, size);\n\t}\n\tclasses.DecoderSpecificInfo.prototype = new classes.Descriptor();\n\n\tclasses.SLConfigDescriptor = function (size) {\n\t\tclasses.Descriptor.call(this, SLConfigDescrTag, size);\n\t}\n\tclasses.SLConfigDescriptor.prototype = new classes.Descriptor();\n\n\treturn this;\n}\n\nif (true) {\n\texports.MPEG4DescriptorParser = MPEG4DescriptorParser;\n}\n// file:src/box.js\n/*\n * Copyright (c) 2012-2013. Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nvar BoxParser = {\n\tERR_INVALID_DATA : -1,\n\tERR_NOT_ENOUGH_DATA : 0,\n\tOK : 1,\n\n\t// Boxes to be created with default parsing\n\tBASIC_BOXES: [\n\t\t{type: \"mdat\", name: \"MediaDataBox\"},\n\t\t{type: \"idat\", name: \"ItemDataBox\"},\n\t\t{type: \"free\", name: \"FreeSpaceBox\"},\n\t\t{type: \"skip\", name: \"FreeSpaceBox\"},\n\t\t{type: \"meco\", name: \"AdditionalMetadataContainerBox\"},\n\t\t{type: \"strk\", name: \"SubTrackBox\"}\n\t],\n\tFULL_BOXES: [\n\t\t{type: \"hmhd\", name: \"HintMediaHeaderBox\"},\n\t\t{type: \"nmhd\", name: \"NullMediaHeaderBox\"},\n\t\t{type: \"iods\", name: \"ObjectDescriptorBox\"},\n\t\t{type: \"xml \", name: \"XMLBox\"},\n\t\t{type: \"bxml\", name: \"BinaryXMLBox\"},\n\t\t{type: \"ipro\", name: \"ItemProtectionBox\"},\n\t\t{type: \"mere\", name: \"MetaboxRelationBox\"}\n\t],\n\tCONTAINER_BOXES: [\n\t\t[{type: \"moov\", name: \"CompressedMovieBox\"}, [\"trak\", \"pssh\"]],\n\t\t[{type: \"trak\", name: \"TrackBox\"}],\n\t\t[{type: \"edts\", name: \"EditBox\"}],\n\t\t[{type: \"mdia\", name: \"MediaBox\"}],\n\t\t[{type: \"minf\", name: \"MediaInformationBox\"}],\n\t\t[{type: \"dinf\", name: \"DataInformationBox\"}],\n\t\t[{type: \"stbl\", name: \"SampleTableBox\"}, [\"sgpd\", \"sbgp\"]],\n\t\t[{type: \"mvex\", name: \"MovieExtendsBox\"}, [\"trex\"]],\n\t\t[{type: \"moof\", name: \"CompressedMovieFragmentBox\"}, [\"traf\"]],\n\t\t[{type: \"traf\", name: \"TrackFragmentBox\"}, [\"trun\", \"sgpd\", \"sbgp\"]],\n\t\t[{type: \"vttc\", name: \"VTTCueBox\"}],\n\t\t[{type: \"tref\", name: \"TrackReferenceBox\"}],\n\t\t[{type: \"iref\", name: \"ItemReferenceBox\"}],\n\t\t[{type: \"mfra\", name: \"MovieFragmentRandomAccessBox\"}, [\"tfra\"]],\n\t\t[{type: \"meco\", name: \"AdditionalMetadataContainerBox\"}],\n\t\t[{type: \"hnti\", name: \"trackhintinformation\"}],\n\t\t[{type: \"hinf\", name: \"hintstatisticsbox\"}],\n\t\t[{type: \"strk\", name: \"SubTrackBox\"}],\n\t\t[{type: \"strd\", name: \"SubTrackDefinitionBox\"}],\n\t\t[{type: \"sinf\", name: \"ProtectionSchemeInfoBox\"}],\n\t\t[{type: \"rinf\", name: \"RestrictedSchemeInfoBox\"}],\n\t\t[{type: \"schi\", name: \"SchemeInformationBox\"}],\n\t\t[{type: \"trgr\", name: \"TrackGroupBox\"}],\n\t\t[{type: \"udta\", name: \"UserDataBox\"}, [\"kind\"]],\n\t\t[{type: \"iprp\", name: \"ItemPropertiesBox\"}, [\"ipma\"]],\n\t\t[{type: \"ipco\", name: \"ItemPropertyContainerBox\"}],\n\t\t[{type: \"grpl\", name: \"GroupsListBox\"}],\n\t\t[{type: \"j2kH\", name: \"J2KHeaderInfoBox\"}],\n\t\t[{type: \"etyp\", name: \"ExtendedTypeBox\"}, [\"tyco\"]]\n\t],\n\t// Boxes effectively created\n\tboxCodes : [],\n\tfullBoxCodes : [],\n\tcontainerBoxCodes : [],\n\tsampleEntryCodes : {},\n\tsampleGroupEntryCodes: [],\n\ttrackGroupTypes: [],\n\tUUIDBoxes: {},\n\tUUIDs: [],\n\tinitialize: function() {\n\t\tBoxParser.FullBox.prototype = new BoxParser.Box();\n\t\tBoxParser.ContainerBox.prototype = new BoxParser.Box();\n\t\tBoxParser.SampleEntry.prototype = new BoxParser.Box();\n\t\tBoxParser.TrackGroupTypeBox.prototype = new BoxParser.FullBox();\n\n\t\t/* creating constructors for simple boxes */\n\t\tBoxParser.BASIC_BOXES.forEach(function(box) {\n\t\t\tBoxParser.createBoxCtor(box.type, box.name)\n\t\t});\n\t\tBoxParser.FULL_BOXES.forEach(function(box) {\n\t\t\tBoxParser.createFullBoxCtor(box.type, box.name);\n\t\t});\n\t\tBoxParser.CONTAINER_BOXES.forEach(function(boxes) {\n\t\t\tBoxParser.createContainerBoxCtor(boxes[0].type, boxes[0].name, null, boxes[1]);\n\t\t});\n\t},\n\tBox: function(_type, _size, _name, _uuid) {\n\t\tthis.type = _type;\n\t\tthis.box_name = _name;\n\t\tthis.size = _size;\n\t\tthis.uuid = _uuid;\n\t},\n\tFullBox: function(type, size, name, uuid) {\n\t\tBoxParser.Box.call(this, type, size, name, uuid);\n\t\tthis.flags = 0;\n\t\tthis.version = 0;\n\t},\n\tContainerBox: function(type, size, name, uuid) {\n\t\tBoxParser.Box.call(this, type, size, name, uuid);\n\t\tthis.boxes = [];\n\t},\n\tSampleEntry: function(type, size, hdr_size, start) {\n\t\tBoxParser.ContainerBox.call(this, type, size);\n\t\tthis.hdr_size = hdr_size;\n\t\tthis.start = start;\n\t},\n\tSampleGroupEntry: function(type) {\n\t\tthis.grouping_type = type;\n\t},\n\tTrackGroupTypeBox: function(type, size) {\n\t\tBoxParser.FullBox.call(this, type, size);\n\t},\n\tcreateBoxCtor: function(type, name, parseMethod){\n\t\tBoxParser.boxCodes.push(type);\n\t\tBoxParser[type+\"Box\"] = function(size) {\n\t\t\tBoxParser.Box.call(this, type, size, name);\n\t\t}\n\t\tBoxParser[type+\"Box\"].prototype = new BoxParser.Box();\n\t\tif (parseMethod) BoxParser[type+\"Box\"].prototype.parse = parseMethod;\n\t},\n\tcreateFullBoxCtor: function(type, name, parseMethod) {\n\t\t//BoxParser.fullBoxCodes.push(type);\n\t\tBoxParser[type+\"Box\"] = function(size) {\n\t\t\tBoxParser.FullBox.call(this, type, size, name);\n\t\t}\n\t\tBoxParser[type+\"Box\"].prototype = new BoxParser.FullBox();\n\t\tBoxParser[type+\"Box\"].prototype.parse = function(stream) {\n\t\t\tthis.parseFullHeader(stream);\n\t\t\tif (parseMethod) {\n\t\t\t\tparseMethod.call(this, stream);\n\t\t\t}\n\t\t};\n\t},\n\taddSubBoxArrays: function(subBoxNames) {\n\t\tif (subBoxNames) {\n\t\t\tthis.subBoxNames = subBoxNames;\n\t\t\tvar nbSubBoxes = subBoxNames.length;\n\t\t\tfor (var k = 0; k<nbSubBoxes; k++) {\n\t\t\t\tthis[subBoxNames[k]+\"s\"] = [];\n\t\t\t}\n\t\t}\n\t},\n\tcreateContainerBoxCtor: function(type, name, parseMethod, subBoxNames) {\n\t\t//BoxParser.containerBoxCodes.push(type);\n\t\tBoxParser[type+\"Box\"] = function(size) {\n\t\t\tBoxParser.ContainerBox.call(this, type, size, name);\n\t\t\tBoxParser.addSubBoxArrays.call(this, subBoxNames);\n\t\t}\n\t\tBoxParser[type+\"Box\"].prototype = new BoxParser.ContainerBox();\n\t\tif (parseMethod) BoxParser[type+\"Box\"].prototype.parse = parseMethod;\n\t},\n\tcreateMediaSampleEntryCtor: function(mediaType, parseMethod, subBoxNames) {\n\t\tBoxParser.sampleEntryCodes[mediaType] = [];\n\t\tBoxParser[mediaType+\"SampleEntry\"] = function(type, size) {\n\t\t\tBoxParser.SampleEntry.call(this, type, size);\n\t\t\tBoxParser.addSubBoxArrays.call(this, subBoxNames);\n\t\t};\n\t\tBoxParser[mediaType+\"SampleEntry\"].prototype = new BoxParser.SampleEntry();\n\t\tif (parseMethod) BoxParser[mediaType+\"SampleEntry\"].prototype .parse = parseMethod;\n\t},\n\tcreateSampleEntryCtor: function(mediaType, type, parseMethod, subBoxNames) {\n\t\tBoxParser.sampleEntryCodes[mediaType].push(type);\n\t\tBoxParser[type+\"SampleEntry\"] = function(size) {\n\t\t\tBoxParser[mediaType+\"SampleEntry\"].call(this, type, size);\n\t\t\tBoxParser.addSubBoxArrays.call(this, subBoxNames);\n\t\t};\n\t\tBoxParser[type+\"SampleEntry\"].prototype = new BoxParser[mediaType+\"SampleEntry\"]();\n\t\tif (parseMethod) BoxParser[type+\"SampleEntry\"].prototype.parse = parseMethod;\n\t},\n\tcreateEncryptedSampleEntryCtor: function(mediaType, type, parseMethod) {\n\t\tBoxParser.createSampleEntryCtor.call(this, mediaType, type, parseMethod, [\"sinf\"]);\n\t},\n\tcreateSampleGroupCtor: function(type, parseMethod) {\n\t\t//BoxParser.sampleGroupEntryCodes.push(type);\n\t\tBoxParser[type+\"SampleGroupEntry\"] = function(size) {\n\t\t\tBoxParser.SampleGroupEntry.call(this, type, size);\n\t\t}\n\t\tBoxParser[type+\"SampleGroupEntry\"].prototype = new BoxParser.SampleGroupEntry();\n\t\tif (parseMethod) BoxParser[type+\"SampleGroupEntry\"].prototype.parse = parseMethod;\n\t},\n\tcreateTrackGroupCtor: function(type, parseMethod) {\n\t\t//BoxParser.trackGroupTypes.push(type);\n\t\tBoxParser[type+\"TrackGroupTypeBox\"] = function(size) {\n\t\t\tBoxParser.TrackGroupTypeBox.call(this, type, size);\n\t\t}\n\t\tBoxParser[type+\"TrackGroupTypeBox\"].prototype = new BoxParser.TrackGroupTypeBox();\n\t\tif (parseMethod) BoxParser[type+\"TrackGroupTypeBox\"].prototype.parse = parseMethod;\n\t},\n\tcreateUUIDBox: function(uuid, name, isFullBox, isContainerBox, parseMethod) {\n\t\tBoxParser.UUIDs.push(uuid);\n\t\tBoxParser.UUIDBoxes[uuid] = function(size) {\n\t\t\tif (isFullBox) {\n\t\t\t\tBoxParser.FullBox.call(this, \"uuid\", size, name, uuid);\n\t\t\t} else {\n\t\t\t\tif (isContainerBox) {\n\t\t\t\t\tBoxParser.ContainerBox.call(this, \"uuid\", size, name, uuid);\n\t\t\t\t} else {\n\t\t\t\t\tBoxParser.Box.call(this, \"uuid\", size, name, uuid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tBoxParser.UUIDBoxes[uuid].prototype = (isFullBox ? new BoxParser.FullBox() : (isContainerBox ? new BoxParser.ContainerBox() : new BoxParser.Box()));\n\t\tif (parseMethod) {\n\t\t\tif (isFullBox) {\n\t\t\t\tBoxParser.UUIDBoxes[uuid].prototype.parse = function(stream) {\n\t\t\t\t\tthis.parseFullHeader(stream);\n\t\t\t\t\tif (parseMethod) {\n\t\t\t\t\t\tparseMethod.call(this, stream);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tBoxParser.UUIDBoxes[uuid].prototype.parse = parseMethod;\n\t\t\t}\n\t\t}\n\t}\n}\n\nBoxParser.initialize();\n\nBoxParser.TKHD_FLAG_ENABLED    = 0x000001;\nBoxParser.TKHD_FLAG_IN_MOVIE   = 0x000002;\nBoxParser.TKHD_FLAG_IN_PREVIEW = 0x000004;\n\nBoxParser.TFHD_FLAG_BASE_DATA_OFFSET\t= 0x01;\nBoxParser.TFHD_FLAG_SAMPLE_DESC\t\t\t= 0x02;\nBoxParser.TFHD_FLAG_SAMPLE_DUR\t\t\t= 0x08;\nBoxParser.TFHD_FLAG_SAMPLE_SIZE\t\t\t= 0x10;\nBoxParser.TFHD_FLAG_SAMPLE_FLAGS\t\t= 0x20;\nBoxParser.TFHD_FLAG_DUR_EMPTY\t\t\t= 0x10000;\nBoxParser.TFHD_FLAG_DEFAULT_BASE_IS_MOOF= 0x20000;\n\nBoxParser.TRUN_FLAGS_DATA_OFFSET= 0x01;\nBoxParser.TRUN_FLAGS_FIRST_FLAG\t= 0x04;\nBoxParser.TRUN_FLAGS_DURATION\t= 0x100;\nBoxParser.TRUN_FLAGS_SIZE\t\t= 0x200;\nBoxParser.TRUN_FLAGS_FLAGS\t\t= 0x400;\nBoxParser.TRUN_FLAGS_CTS_OFFSET\t= 0x800;\n\nBoxParser.Box.prototype.add = function(name) {\n\treturn this.addBox(new BoxParser[name+\"Box\"]());\n}\n\nBoxParser.Box.prototype.addBox = function(box) {\n\tthis.boxes.push(box);\n\tif (this[box.type+\"s\"]) {\n\t\tthis[box.type+\"s\"].push(box);\n\t} else {\n\t\tthis[box.type] = box;\n\t}\n\treturn box;\n}\n\nBoxParser.Box.prototype.set = function(prop, value) {\n\tthis[prop] = value;\n\treturn this;\n}\n\nBoxParser.Box.prototype.addEntry = function(value, _prop) {\n\tvar prop = _prop || \"entries\";\n\tif (!this[prop]) {\n\t\tthis[prop] = [];\n\t}\n\tthis[prop].push(value);\n\treturn this;\n}\n\nif (true) {\n\texports.BoxParser = BoxParser;\n}\n// file:src/box-parse.js\n/* \n * Copyright (c) Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nBoxParser.parseUUID = function(stream) {\n\treturn BoxParser.parseHex16(stream);\n}\n\nBoxParser.parseHex16 = function(stream) {\n\tvar hex16 = \"\"\n\tfor (var i = 0; i <16; i++) {\n\t\tvar hex = stream.readUint8().toString(16);\n\t\thex16 += (hex.length === 1 ? \"0\"+hex : hex);\n\t}\n\treturn hex16;\n}\n\nBoxParser.parseOneBox = function(stream, headerOnly, parentSize) {\n\tvar box;\n\tvar start = stream.getPosition();\n\tvar hdr_size = 0;\n\tvar diff;\n\tvar uuid;\n\tif (stream.getEndPosition() - start < 8) {\n\t\tLog.debug(\"BoxParser\", \"Not enough data in stream to parse the type and size of the box\");\n\t\treturn { code: BoxParser.ERR_NOT_ENOUGH_DATA };\n\t}\n\tif (parentSize && parentSize < 8) {\n\t\tLog.debug(\"BoxParser\", \"Not enough bytes left in the parent box to parse a new box\");\n\t\treturn { code: BoxParser.ERR_NOT_ENOUGH_DATA };\n\t}\n\tvar size = stream.readUint32();\n\tvar type = stream.readString(4);\n\tvar box_type = type;\n\tLog.debug(\"BoxParser\", \"Found box of type '\"+type+\"' and size \"+size+\" at position \"+start);\n\thdr_size = 8;\n\tif (type == \"uuid\") {\n\t\tif ((stream.getEndPosition() - stream.getPosition() < 16) || (parentSize -hdr_size < 16)) {\n\t\t\tstream.seek(start);\n\t\t\tLog.debug(\"BoxParser\", \"Not enough bytes left in the parent box to parse a UUID box\");\n\t\t\treturn { code: BoxParser.ERR_NOT_ENOUGH_DATA };\n\t\t}\n\t\tuuid = BoxParser.parseUUID(stream);\n\t\thdr_size += 16;\n\t\tbox_type = uuid;\n\t}\n\tif (size == 1) {\n\t\tif ((stream.getEndPosition() - stream.getPosition() < 8) || (parentSize && (parentSize - hdr_size) < 8)) {\n\t\t\tstream.seek(start);\n\t\t\tLog.warn(\"BoxParser\", \"Not enough data in stream to parse the extended size of the \\\"\"+type+\"\\\" box\");\n\t\t\treturn { code: BoxParser.ERR_NOT_ENOUGH_DATA };\n\t\t}\n\t\tsize = stream.readUint64();\n\t\thdr_size += 8;\n\t} else if (size === 0) {\n\t\t/* box extends till the end of file or invalid file */\n\t\tif (parentSize) {\n\t\t\tsize = parentSize;\n\t\t} else {\n\t\t\t/* box extends till the end of file */\n\t\t\tif (type !== \"mdat\") {\n\t\t\t\tLog.error(\"BoxParser\", \"Unlimited box size not supported for type: '\"+type+\"'\");\n\t\t\t\tbox = new BoxParser.Box(type, size);\n\t\t\t\treturn { code: BoxParser.OK, box: box, size: box.size };\n\t\t\t}\n\t\t}\n\t}\n\tif (size !== 0 && size < hdr_size) {\n\t\tLog.error(\"BoxParser\", \"Box of type \"+type+\" has an invalid size \"+size+\" (too small to be a box)\");\n\t\treturn { code: BoxParser.ERR_NOT_ENOUGH_DATA, type: type, size: size, hdr_size: hdr_size, start: start };\n\t}\n\tif (size !== 0 && parentSize && size > parentSize) {\n\t\tLog.error(\"BoxParser\", \"Box of type '\"+type+\"' has a size \"+size+\" greater than its container size \"+parentSize);\n\t\treturn { code: BoxParser.ERR_NOT_ENOUGH_DATA, type: type, size: size, hdr_size: hdr_size, start: start };\n\t}\n\tif (size !== 0 && start + size > stream.getEndPosition()) {\n\t\tstream.seek(start);\n\t\tLog.info(\"BoxParser\", \"Not enough data in stream to parse the entire '\"+type+\"' box\");\n\t\treturn { code: BoxParser.ERR_NOT_ENOUGH_DATA, type: type, size: size, hdr_size: hdr_size, start: start };\n\t}\n\tif (headerOnly) {\n\t\treturn { code: BoxParser.OK, type: type, size: size, hdr_size: hdr_size, start: start };\n\t} else {\n\t\tif (BoxParser[type+\"Box\"]) {\n\t\t\tbox = new BoxParser[type+\"Box\"](size);\n\t\t} else {\n\t\t\tif (type !== \"uuid\") {\n\t\t\t\tLog.warn(\"BoxParser\", \"Unknown box type: '\"+type+\"'\");\n\t\t\t\tbox = new BoxParser.Box(type, size);\n\t\t\t\tbox.has_unparsed_data = true;\n\t\t\t} else {\n\t\t\t\tif (BoxParser.UUIDBoxes[uuid]) {\n\t\t\t\t\tbox = new BoxParser.UUIDBoxes[uuid](size);\n\t\t\t\t} else {\n\t\t\t\t\tLog.warn(\"BoxParser\", \"Unknown uuid type: '\"+uuid+\"'\");\n\t\t\t\t\tbox = new BoxParser.Box(type, size);\n\t\t\t\t\tbox.uuid = uuid;\n\t\t\t\t\tbox.has_unparsed_data = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tbox.hdr_size = hdr_size;\n\t/* recording the position of the box in the input stream */\n\tbox.start = start;\n\tif (box.write === BoxParser.Box.prototype.write && box.type !== \"mdat\") {\n\t\tLog.info(\"BoxParser\", \"'\"+box_type+\"' box writing not yet implemented, keeping unparsed data in memory for later write\");\n\t\tbox.parseDataAndRewind(stream);\n\t}\n\tbox.parse(stream);\n\tdiff = stream.getPosition() - (box.start+box.size);\n\tif (diff < 0) {\n\t\tLog.warn(\"BoxParser\", \"Parsing of box '\"+box_type+\"' did not read the entire indicated box data size (missing \"+(-diff)+\" bytes), seeking forward\");\n\t\tstream.seek(box.start+box.size);\n\t} else if (diff > 0) {\n\t\tLog.error(\"BoxParser\", \"Parsing of box '\"+box_type+\"' read \"+diff+\" more bytes than the indicated box data size, seeking backwards\");\n\t\tif (box.size !== 0) stream.seek(box.start+box.size);\n\t}\n\treturn { code: BoxParser.OK, box: box, size: box.size };\n}\n\nBoxParser.Box.prototype.parse = function(stream) {\n\tif (this.type != \"mdat\") {\n\t\tthis.data = stream.readUint8Array(this.size-this.hdr_size);\n\t} else {\n\t\tif (this.size === 0) {\n\t\t\tstream.seek(stream.getEndPosition());\n\t\t} else {\n\t\t\tstream.seek(this.start+this.size);\n\t\t}\n\t}\n}\n\n/* Used to parse a box without consuming its data, to allow detailled parsing\n   Useful for boxes for which a write method is not yet implemented */\nBoxParser.Box.prototype.parseDataAndRewind = function(stream) {\n\tthis.data = stream.readUint8Array(this.size-this.hdr_size);\n\t// rewinding\n\tstream.position -= this.size-this.hdr_size;\n}\n\nBoxParser.FullBox.prototype.parseDataAndRewind = function(stream) {\n\tthis.parseFullHeader(stream);\n\tthis.data = stream.readUint8Array(this.size-this.hdr_size);\n\t// restore the header size as if the full header had not been parsed\n\tthis.hdr_size -= 4;\n\t// rewinding\n\tstream.position -= this.size-this.hdr_size;\n}\n\nBoxParser.FullBox.prototype.parseFullHeader = function (stream) {\n\tthis.version = stream.readUint8();\n\tthis.flags = stream.readUint24();\n\tthis.hdr_size += 4;\n}\n\nBoxParser.FullBox.prototype.parse = function (stream) {\n\tthis.parseFullHeader(stream);\n\tthis.data = stream.readUint8Array(this.size-this.hdr_size);\n}\n\nBoxParser.ContainerBox.prototype.parse = function(stream) {\n\tvar ret;\n\tvar box;\n\twhile (stream.getPosition() < this.start+this.size) {\n\t\tret = BoxParser.parseOneBox(stream, false, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tbox = ret.box;\n\t\t\t/* store the box in the 'boxes' array to preserve box order (for offset) but also store box in a property for more direct access */\n\t\t\tthis.boxes.push(box);\n\t\t\tif (this.subBoxNames && this.subBoxNames.indexOf(box.type) != -1) {\n\t\t\t\tthis[this.subBoxNames[this.subBoxNames.indexOf(box.type)]+\"s\"].push(box);\n\t\t\t} else {\n\t\t\t\tvar box_type = box.type !== \"uuid\" ? box.type : box.uuid;\n\t\t\t\tif (this[box_type]) {\n\t\t\t\t\tLog.warn(\"Box of type \"+box_type+\" already stored in field of this type\");\n\t\t\t\t} else {\n\t\t\t\t\tthis[box_type] = box;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nBoxParser.Box.prototype.parseLanguage = function(stream) {\n\tthis.language = stream.readUint16();\n\tvar chars = [];\n\tchars[0] = (this.language>>10)&0x1F;\n\tchars[1] = (this.language>>5)&0x1F;\n\tchars[2] = (this.language)&0x1F;\n\tthis.languageString = String.fromCharCode(chars[0]+0x60, chars[1]+0x60, chars[2]+0x60);\n}\n\n// file:src/parsing/sampleentries/sampleentry.js\nBoxParser.SAMPLE_ENTRY_TYPE_VISUAL \t\t= \"Visual\";\nBoxParser.SAMPLE_ENTRY_TYPE_AUDIO \t\t= \"Audio\";\nBoxParser.SAMPLE_ENTRY_TYPE_HINT \t\t= \"Hint\";\nBoxParser.SAMPLE_ENTRY_TYPE_METADATA \t= \"Metadata\";\nBoxParser.SAMPLE_ENTRY_TYPE_SUBTITLE \t= \"Subtitle\";\nBoxParser.SAMPLE_ENTRY_TYPE_SYSTEM \t\t= \"System\";\nBoxParser.SAMPLE_ENTRY_TYPE_TEXT \t\t= \"Text\";\n\nBoxParser.SampleEntry.prototype.parseHeader = function(stream) {\n\tstream.readUint8Array(6);\n\tthis.data_reference_index = stream.readUint16();\n\tthis.hdr_size += 8;\n}\n\nBoxParser.SampleEntry.prototype.parse = function(stream) {\n\tthis.parseHeader(stream);\n\tthis.data = stream.readUint8Array(this.size - this.hdr_size);\n}\n\nBoxParser.SampleEntry.prototype.parseDataAndRewind = function(stream) {\n\tthis.parseHeader(stream);\n\tthis.data = stream.readUint8Array(this.size - this.hdr_size);\n\t// restore the header size as if the sample entry header had not been parsed\n\tthis.hdr_size -= 8;\n\t// rewinding\n\tstream.position -= this.size-this.hdr_size;\n}\n\nBoxParser.SampleEntry.prototype.parseFooter = function(stream) {\n\tBoxParser.ContainerBox.prototype.parse.call(this, stream);\n}\n\n// Base SampleEntry types with default parsing\nBoxParser.createMediaSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_HINT);\nBoxParser.createMediaSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_METADATA);\nBoxParser.createMediaSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SUBTITLE);\nBoxParser.createMediaSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SYSTEM);\nBoxParser.createMediaSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_TEXT);\n\n//Base SampleEntry types for Audio and Video with specific parsing\nBoxParser.createMediaSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, function(stream) {\n\tvar compressorname_length;\n\tthis.parseHeader(stream);\n\tstream.readUint16();\n\tstream.readUint16();\n\tstream.readUint32Array(3);\n\tthis.width = stream.readUint16();\n\tthis.height = stream.readUint16();\n\tthis.horizresolution = stream.readUint32();\n\tthis.vertresolution = stream.readUint32();\n\tstream.readUint32();\n\tthis.frame_count = stream.readUint16();\n\tcompressorname_length = Math.min(31, stream.readUint8());\n\tthis.compressorname = stream.readString(compressorname_length);\n\tif (compressorname_length < 31) {\n\t\tstream.readString(31 - compressorname_length);\n\t}\n\tthis.depth = stream.readUint16();\n\tstream.readUint16();\n\tthis.parseFooter(stream);\n});\n\nBoxParser.createMediaSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, function(stream) {\n\tthis.parseHeader(stream);\n\tstream.readUint32Array(2);\n\tthis.channel_count = stream.readUint16();\n\tthis.samplesize = stream.readUint16();\n\tstream.readUint16();\n\tstream.readUint16();\n\tthis.samplerate = (stream.readUint32()/(1<<16));\n\tthis.parseFooter(stream);\n});\n\n// Sample entries inheriting from Audio and Video\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"avc1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"avc2\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"avc3\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"avc4\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"av01\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"dav1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"hvc1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"hev1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"hvt1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"lhe1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"dvh1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"dvhe\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"vvc1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"vvi1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"vvs1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"vvcN\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"vp08\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"vp09\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"avs3\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"j2ki\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"mjp2\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"mjpg\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL,\t\"uncv\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"mp4a\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"ac-3\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"ac-4\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"ec-3\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"Opus\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"mha1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"mha2\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"mhm1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"mhm2\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"fLaC\");\n\n// Encrypted sample entries\nBoxParser.createEncryptedSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \t\"encv\");\nBoxParser.createEncryptedSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"enca\");\nBoxParser.createEncryptedSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SUBTITLE, \t\"encu\");\nBoxParser.createEncryptedSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SYSTEM, \t\"encs\");\nBoxParser.createEncryptedSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_TEXT, \t\t\"enct\");\nBoxParser.createEncryptedSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_METADATA, \t\"encm\");\n// file:src/parsing/a1lx.js\nBoxParser.createBoxCtor(\"a1lx\", \"AV1LayeredImageIndexingProperty\", function(stream) {\n\tvar large_size = stream.readUint8() & 1;\n\tvar FieldLength = ((large_size & 1) + 1) * 16;\n\tthis.layer_size = [];\n\tfor (var i = 0; i < 3; i++) {\n\t\tif (FieldLength == 16) {\n\t\t\tthis.layer_size[i] = stream.readUint16();\n\t\t} else {\n\t\t\tthis.layer_size[i] = stream.readUint32();\n\t\t}\n\t}\n});// file:src/parsing/a1op.js\nBoxParser.createBoxCtor(\"a1op\", \"OperatingPointSelectorProperty\", function(stream) {\n\tthis.op_index = stream.readUint8();\n});// file:src/parsing/auxC.js\nBoxParser.createFullBoxCtor(\"auxC\", \"AuxiliaryTypeProperty\", function(stream) {\n\tthis.aux_type = stream.readCString();\n\tvar aux_subtype_length = this.size - this.hdr_size - (this.aux_type.length + 1);\n\tthis.aux_subtype = stream.readUint8Array(aux_subtype_length);\n});// file:src/parsing/av1C.js\nBoxParser.createBoxCtor(\"av1C\", \"AV1CodecConfigurationBox\", function(stream) {\n\tvar i;\n\tvar toparse;\n\tvar tmp = stream.readUint8();\n\tif ((tmp >> 7 & 0x1) !== 1) {\n\t\tLog.error(\"av1C marker problem\");\n\t\treturn;\n\t}\n\tthis.version = tmp & 0x7F;\n\tif (this.version !== 1) {\n\t\tLog.error(\"av1C version \"+this.version+\" not supported\");\n\t\treturn;\n\t}\n\ttmp = stream.readUint8();\n\tthis.seq_profile = (tmp >> 5) & 0x7;\n\tthis.seq_level_idx_0 = tmp & 0x1F;\n\ttmp = stream.readUint8();\n\tthis.seq_tier_0 = (tmp >> 7) & 0x1;\n\tthis.high_bitdepth = (tmp >> 6) & 0x1;\n\tthis.twelve_bit = (tmp >> 5) & 0x1;\n\tthis.monochrome = (tmp >> 4) & 0x1;\n\tthis.chroma_subsampling_x = (tmp >> 3) & 0x1;\n\tthis.chroma_subsampling_y = (tmp >> 2) & 0x1;\n\tthis.chroma_sample_position = (tmp & 0x3);\n\ttmp = stream.readUint8();\n\tthis.reserved_1 = (tmp >> 5) & 0x7;\n\tif (this.reserved_1 !== 0) {\n\t\tLog.error(\"av1C reserved_1 parsing problem\");\n\t\treturn;\n\t}\n\tthis.initial_presentation_delay_present = (tmp >> 4) & 0x1;\n\tif (this.initial_presentation_delay_present === 1) {\n\t\tthis.initial_presentation_delay_minus_one = (tmp & 0xF);\n\t} else {\n\t\tthis.reserved_2 = (tmp & 0xF);\n\t\tif (this.reserved_2 !== 0) {\n\t\t\tLog.error(\"av1C reserved_2 parsing problem\");\n\t\t\treturn;\n\t\t}\n\t}\n\n\tvar configOBUs_length = this.size - this.hdr_size - 4;\n\tthis.configOBUs = stream.readUint8Array(configOBUs_length);\n});\n\n// file:src/parsing/avcC.js\nfunction printPS(ps) {\n\tvar str = \"<table class='inner-table'>\";\n\tstr += \"<thead><tr><th>length</th><th>nalu_data</th></tr></thead>\";\n\tstr += \"<tbody>\";\n\n\tfor (var i=0; i < ps.length; i++) {\n\t\tvar nalu = ps[i];\n\t\tstr += \"<tr>\";\n\t\tstr += \"<td>\"+nalu.length+\"</td>\";\n\t\tstr += \"<td>\";\n\t\tstr += nalu.nalu.reduce(function(str, byte) {\n\t\t\treturn str + byte.toString(16).padStart(2, \"0\");\n\t\t}, \"0x\");\n\t\tstr += \"</td></tr>\";\n\t}\n\tstr += \"</tbody></table>\";\n\treturn str;\n}\n\nBoxParser.createBoxCtor(\"avcC\", \"AVCConfigurationBox\", function(stream) {\n\tvar i;\n\tvar toparse;\n\tthis.configurationVersion = stream.readUint8();\n\tthis.AVCProfileIndication = stream.readUint8();\n\tthis.profile_compatibility = stream.readUint8();\n\tthis.AVCLevelIndication = stream.readUint8();\n\tthis.lengthSizeMinusOne = (stream.readUint8() & 0x3);\n\tthis.nb_SPS_nalus = (stream.readUint8() & 0x1F);\n\ttoparse = this.size - this.hdr_size - 6;\n\tthis.SPS = [];\n\tthis.SPS.toString = function () {\n\t\treturn printPS(this);\n\t}\n\tfor (i = 0; i < this.nb_SPS_nalus; i++) {\n\t\tthis.SPS[i] = {};\n\t\tthis.SPS[i].length = stream.readUint16();\n\t\tthis.SPS[i].nalu = stream.readUint8Array(this.SPS[i].length);\n\t\ttoparse -= 2+this.SPS[i].length;\n\t}\n\tthis.nb_PPS_nalus = stream.readUint8();\n\ttoparse--;\n\tthis.PPS = [];\n\tthis.PPS.toString = function () {\n\t\treturn printPS(this);\n\t}\n\tfor (i = 0; i < this.nb_PPS_nalus; i++) {\n\t\tthis.PPS[i] = {};\n\t\tthis.PPS[i].length = stream.readUint16();\n\t\tthis.PPS[i].nalu = stream.readUint8Array(this.PPS[i].length);\n\t\ttoparse -= 2+this.PPS[i].length;\n\t}\n\tif (toparse>0) {\n\t\tthis.ext = stream.readUint8Array(toparse);\n\t}\n});\n\n// file:src/parsing/btrt.js\nBoxParser.createBoxCtor(\"btrt\", \"BitRateBox\", function(stream) {\n\tthis.bufferSizeDB = stream.readUint32();\n\tthis.maxBitrate = stream.readUint32();\n\tthis.avgBitrate = stream.readUint32();\n});\n\n// file:src/parsing/ccst.js\nBoxParser.createFullBoxCtor(\"ccst\", \"CodingConstraintsBox\", function(stream) {\n\tvar flags = stream.readUint8();\n\tthis.all_ref_pics_intra = ((flags & 0x80) == 0x80);\n\tthis.intra_pred_used = ((flags & 0x40) == 0x40);\n\tthis.max_ref_per_pic = ((flags & 0x3f) >> 2);\n\tstream.readUint24();\n});\n\n// file:src/parsing/cdef.js\nBoxParser.createBoxCtor(\"cdef\", \"ComponentDefinitionBox\", function(stream) {\n    var i;\n    this.channel_count = stream.readUint16();\n    this.channel_indexes = [];\n    this.channel_types = [];\n    this.channel_associations = [];\n    for (i = 0; i < this.channel_count; i++) {\n        this.channel_indexes.push(stream.readUint16());\n        this.channel_types.push(stream.readUint16());\n        this.channel_associations.push(stream.readUint16());\n    }\n});\n\n// file:src/parsing/clap.js\nBoxParser.createBoxCtor(\"clap\", \"CleanApertureBox\", function(stream) {\n\tthis.cleanApertureWidthN = stream.readUint32();\n\tthis.cleanApertureWidthD = stream.readUint32();\n\tthis.cleanApertureHeightN = stream.readUint32();\n\tthis.cleanApertureHeightD = stream.readUint32();\n\tthis.horizOffN = stream.readUint32();\n\tthis.horizOffD = stream.readUint32();\n\tthis.vertOffN = stream.readUint32();\n\tthis.vertOffD = stream.readUint32();\n});// file:src/parsing/clli.js\nBoxParser.createBoxCtor(\"clli\", \"ContentLightLevelBox\", function(stream) {\n\tthis.max_content_light_level = stream.readUint16();\n    this.max_pic_average_light_level = stream.readUint16();\n});\n\n// file:src/parsing/cmex.js\nBoxParser.createFullBoxCtor(\"cmex\", \"CameraExtrinsicMatrixProperty\", function(stream) {\n\tif (this.flags & 0x1) {\n\t\tthis.pos_x = stream.readInt32();\n\t}\n\tif (this.flags & 0x2) {\n\t\tthis.pos_y = stream.readInt32();\n\t}\n\tif (this.flags & 0x4) {\n\t\tthis.pos_z = stream.readInt32();\n\t}\n\tif (this.flags & 0x8) {\n\t\tif (this.version == 0) {\n\t\t\tif (this.flags & 0x10) {\n\t\t\t\tthis.quat_x = stream.readInt32();\n\t\t\t\tthis.quat_y = stream.readInt32();\n\t\t\t\tthis.quat_z = stream.readInt32();\n\t\t\t} else {\n\t\t\t\tthis.quat_x = stream.readInt16();\n\t\t\t\tthis.quat_y = stream.readInt16();\n\t\t\t\tthis.quat_z = stream.readInt16();\n\t\t\t}\n\t\t} else if (this.version == 1) {\n\t\t\t//ViewpointGlobalCoordinateSysRotationStruct rot;\n\t\t}\n\t}\n\tif (this.flags & 0x20) {\n\t\tthis.id = stream.readUint32();\n\t}\n});\n// file:src/parsing/cmin.js\nBoxParser.createFullBoxCtor(\"cmin\", \"CameraIntrinsicMatrixProperty\", function(stream) {\n\tthis.focal_length_x = stream.readInt32();\n\tthis.principal_point_x = stream.readInt32();\n\tthis.principal_point_y = stream.readInt32();\n\tif (this.flags & 0x1) {\n\t\tthis.focal_length_y = stream.readInt32();\n\t\tthis.skew_factor = stream.readInt32();\n\t}\n});// file:src/parsing/cmpd.js\nBoxParser.createBoxCtor(\"cmpd\", \"ComponentDefinitionBox\", function(stream) {\n\tthis.component_count = stream.readUint32();\n\tthis.component_types = [];\n\tthis.component_type_urls = [];\n\tfor (i = 0; i < this.component_count; i++) {\n\t\tvar component_type = stream.readUint16();\n\t\tthis.component_types.push(component_type);\n\t\tif (component_type >= 0x8000) {\n\t\t\tthis.component_type_urls.push(stream.readCString());\n\t\t}\n\t}\n});// file:src/parsing/co64.js\nBoxParser.createFullBoxCtor(\"co64\", \"ChunkLargeOffsetBox\", function(stream) {\n\tvar entry_count;\n\tvar i;\n\tentry_count = stream.readUint32();\n\tthis.chunk_offsets = [];\n\tif (this.version === 0) {\n\t\tfor(i=0; i<entry_count; i++) {\n\t\t\tthis.chunk_offsets.push(stream.readUint64());\n\t\t}\n\t}\n});\n\n// file:src/parsing/CoLL.js\nBoxParser.createFullBoxCtor(\"CoLL\", \"ContentLightLevelBox\", function(stream) {\n\tthis.maxCLL = stream.readUint16();\n    this.maxFALL = stream.readUint16();\n});\n\n// file:src/parsing/colr.js\nBoxParser.createBoxCtor(\"colr\", \"ColourInformationBox\", function(stream) {\n\tthis.colour_type = stream.readString(4);\n\tif (this.colour_type === 'nclx') {\n\t\tthis.colour_primaries = stream.readUint16();\n\t\tthis.transfer_characteristics = stream.readUint16();\n\t\tthis.matrix_coefficients = stream.readUint16();\n\t\tvar tmp = stream.readUint8();\n\t\tthis.full_range_flag = tmp >> 7;\n\t} else if (this.colour_type === 'rICC') {\n\t\tthis.ICC_profile = stream.readUint8Array(this.size - 4);\n\t} else if (this.colour_type === 'prof') {\n\t\tthis.ICC_profile = stream.readUint8Array(this.size - 4);\n\t}\n});// file:src/parsing/cprt.js\nBoxParser.createFullBoxCtor(\"cprt\", \"CopyrightBox\", function (stream) {\n\tthis.parseLanguage(stream);\n\tthis.notice = stream.readCString();\n});\n\n// file:src/parsing/cslg.js\nBoxParser.createFullBoxCtor(\"cslg\", \"CompositionToDecodeBox\", function(stream) {\n\tvar entry_count;\n\tif (this.version === 0) {\n\t\tthis.compositionToDTSShift = stream.readInt32(); /* signed */\n\t\tthis.leastDecodeToDisplayDelta = stream.readInt32(); /* signed */\n\t\tthis.greatestDecodeToDisplayDelta = stream.readInt32(); /* signed */\n\t\tthis.compositionStartTime = stream.readInt32(); /* signed */\n\t\tthis.compositionEndTime = stream.readInt32(); /* signed */\n\t}\n});\n\n// file:src/parsing/ctts.js\nBoxParser.createFullBoxCtor(\"ctts\", \"CompositionOffsetBox\", function(stream) {\n\tvar entry_count;\n\tvar i;\n\tentry_count = stream.readUint32();\n\tthis.sample_counts = [];\n\tthis.sample_offsets = [];\n\tif (this.version === 0) {\n\t\tfor(i=0; i<entry_count; i++) {\n\t\t\tthis.sample_counts.push(stream.readUint32());\n\t\t\t/* some files are buggy and declare version=0 while using signed offsets.\n\t\t\t   The likelyhood of using the most significant bit in a 32-bits time offset is very low,\n\t\t\t   so using signed value here as well */\n\t\t\t   var value = stream.readInt32();\n\t\t\t   if (value < 0) {\n\t\t\t   \t\tLog.warn(\"BoxParser\", \"ctts box uses negative values without using version 1\");\n\t\t\t   }\n\t\t\tthis.sample_offsets.push(value);\n\t\t}\n\t} else if (this.version == 1) {\n\t\tfor(i=0; i<entry_count; i++) {\n\t\t\tthis.sample_counts.push(stream.readUint32());\n\t\t\tthis.sample_offsets.push(stream.readInt32()); /* signed */\n\t\t}\n\t}\n});\n\n// file:src/parsing/dac3.js\nBoxParser.createBoxCtor(\"dac3\", \"AC3SpecificBox\", function(stream) {\n\tvar tmp_byte1 = stream.readUint8();\n\tvar tmp_byte2 = stream.readUint8();\n\tvar tmp_byte3 = stream.readUint8();\n\tthis.fscod = tmp_byte1 >> 6;\n\tthis.bsid  = ((tmp_byte1 >> 1) & 0x1F);\n\tthis.bsmod = ((tmp_byte1 & 0x1) <<  2) | ((tmp_byte2 >> 6) & 0x3);\n\tthis.acmod = ((tmp_byte2 >> 3) & 0x7);\n\tthis.lfeon = ((tmp_byte2 >> 2) & 0x1);\n\tthis.bit_rate_code = (tmp_byte2 & 0x3) | ((tmp_byte3 >> 5) & 0x7);\n});\n\n// file:src/parsing/dec3.js\nBoxParser.createBoxCtor(\"dec3\", \"EC3SpecificBox\", function(stream) {\n\tvar tmp_16 = stream.readUint16();\n\tthis.data_rate = tmp_16 >> 3;\n\tthis.num_ind_sub = tmp_16 & 0x7;\n\tthis.ind_subs = [];\n\tfor (var i = 0; i < this.num_ind_sub+1; i++) {\n\t\tvar ind_sub = {};\n\t\tthis.ind_subs.push(ind_sub);\n\t\tvar tmp_byte1 = stream.readUint8();\n\t\tvar tmp_byte2 = stream.readUint8();\n\t\tvar tmp_byte3 = stream.readUint8();\n\t\tind_sub.fscod = tmp_byte1 >> 6;\n\t\tind_sub.bsid  = ((tmp_byte1 >> 1) & 0x1F);\n\t\tind_sub.bsmod = ((tmp_byte1 & 0x1) << 4) | ((tmp_byte2 >> 4) & 0xF);\n\t\tind_sub.acmod = ((tmp_byte2 >> 1) & 0x7);\n\t\tind_sub.lfeon = (tmp_byte2 & 0x1);\n\t\tind_sub.num_dep_sub = ((tmp_byte3 >> 1) & 0xF);\n\t\tif (ind_sub.num_dep_sub > 0) {\n\t\t\tind_sub.chan_loc = ((tmp_byte3 & 0x1) << 8) | stream.readUint8();\n\t\t}\n\t}\n});\n\n// file:src/parsing/dfLa.js\nBoxParser.createFullBoxCtor(\"dfLa\", \"FLACSpecificBox\", function(stream) {\n    var BLOCKTYPE_MASK = 0x7F;\n    var LASTMETADATABLOCKFLAG_MASK = 0x80;\n\n    var boxesFound = [];\n    var knownBlockTypes = [\n        \"STREAMINFO\",\n        \"PADDING\",\n        \"APPLICATION\",\n        \"SEEKTABLE\",\n        \"VORBIS_COMMENT\",\n        \"CUESHEET\",\n        \"PICTURE\",\n        \"RESERVED\"\n    ];\n\n    // for (i=0; ; i++) { // to end of box\n    do {\n        var flagAndType = stream.readUint8();\n\n        var type = Math.min(\n            (flagAndType & BLOCKTYPE_MASK),\n            (knownBlockTypes.length - 1)\n        );\n\n        // if this is a STREAMINFO block, read the true samplerate since this\n        // can be different to the AudioSampleEntry samplerate.\n        if (!(type)) {\n            // read past all the other stuff\n            stream.readUint8Array(13);\n\n            // extract samplerate\n            this.samplerate = (stream.readUint32() >> 12);\n\n            // read to end of STREAMINFO\n            stream.readUint8Array(20);\n        } else {\n            // not interested in other block types so just discard length bytes\n            stream.readUint8Array(stream.readUint24());\n        }\n\n        boxesFound.push(knownBlockTypes[type]);\n\n        if (!!(flagAndType & LASTMETADATABLOCKFLAG_MASK)) {\n            break;\n        }\n    } while (true);\n\n    this.numMetadataBlocks =\n        boxesFound.length + \" (\" + boxesFound.join(\", \") + \")\";\n});\n// file:src/parsing/dimm.js\nBoxParser.createBoxCtor(\"dimm\", \"hintimmediateBytesSent\", function(stream) {\n\tthis.bytessent = stream.readUint64();\n});\n\n// file:src/parsing/dmax.js\nBoxParser.createBoxCtor(\"dmax\", \"hintlongestpacket\", function(stream) {\n\tthis.time = stream.readUint32();\n});\n\n// file:src/parsing/dmed.js\nBoxParser.createBoxCtor(\"dmed\", \"hintmediaBytesSent\", function(stream) {\n\tthis.bytessent = stream.readUint64();\n});\n\n// file:src/parsing/dOps.js\nBoxParser.createBoxCtor(\"dOps\", \"OpusSpecificBox\", function(stream) {\n\tthis.Version = stream.readUint8();\n\tthis.OutputChannelCount = stream.readUint8();\n\tthis.PreSkip = stream.readUint16();\n\tthis.InputSampleRate = stream.readUint32();\n\tthis.OutputGain = stream.readInt16();\n\tthis.ChannelMappingFamily = stream.readUint8();\n\tif (this.ChannelMappingFamily !== 0) {\n\t\tthis.StreamCount = stream.readUint8();\n\t\tthis.CoupledCount = stream.readUint8();\n\t\tthis.ChannelMapping = [];\n\t\tfor (var i = 0; i < this.OutputChannelCount; i++) {\n\t\t\tthis.ChannelMapping[i] = stream.readUint8();\n\t\t}\n\t}\n});\n\n// file:src/parsing/dref.js\nBoxParser.createFullBoxCtor(\"dref\", \"DataReferenceBox\", function(stream) {\n\tvar ret;\n\tvar box;\n\tthis.entries = [];\n\tvar entry_count = stream.readUint32();\n\tfor (var i = 0; i < entry_count; i++) {\n\t\tret = BoxParser.parseOneBox(stream, false, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tbox = ret.box;\n\t\t\tthis.entries.push(box);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n});\n\n// file:src/parsing/drep.js\nBoxParser.createBoxCtor(\"drep\", \"hintrepeatedBytesSent\", function(stream) {\n\tthis.bytessent = stream.readUint64();\n});\n\n// file:src/parsing/elng.js\nBoxParser.createFullBoxCtor(\"elng\", \"ExtendedLanguageBox\", function(stream) {\n\tthis.extended_language = stream.readString(this.size-this.hdr_size);\n});\n\n// file:src/parsing/elst.js\nBoxParser.createFullBoxCtor(\"elst\", \"EditListBox\", function(stream) {\n\tthis.entries = [];\n\tvar entry_count = stream.readUint32();\n\tfor (var i = 0; i < entry_count; i++) {\n\t\tvar entry = {};\n\t\tthis.entries.push(entry);\n\t\tif (this.version === 1) {\n\t\t\tentry.segment_duration = stream.readUint64();\n\t\t\tentry.media_time = stream.readInt64();\n\t\t} else {\n\t\t\tentry.segment_duration = stream.readUint32();\n\t\t\tentry.media_time = stream.readInt32();\n\t\t}\n\t\tentry.media_rate_integer = stream.readInt16();\n\t\tentry.media_rate_fraction = stream.readInt16();\n\t}\n});\n\n// file:src/parsing/emsg.js\nBoxParser.createFullBoxCtor(\"emsg\", \"EventMessageBox\", function(stream) {\n\tif (this.version == 1) {\n\t\tthis.timescale \t\t\t\t\t= stream.readUint32();\n\t\tthis.presentation_time \t\t\t= stream.readUint64();\n\t\tthis.event_duration\t\t\t \t= stream.readUint32();\n\t\tthis.id \t\t\t\t\t\t= stream.readUint32();\n\t\tthis.scheme_id_uri \t\t\t\t= stream.readCString();\n\t\tthis.value \t\t\t\t\t\t= stream.readCString();\n\t} else {\n\t\tthis.scheme_id_uri \t\t\t\t= stream.readCString();\n\t\tthis.value \t\t\t\t\t\t= stream.readCString();\n\t\tthis.timescale \t\t\t\t\t= stream.readUint32();\n\t\tthis.presentation_time_delta \t= stream.readUint32();\n\t\tthis.event_duration\t\t\t \t= stream.readUint32();\n\t\tthis.id \t\t\t\t\t\t= stream.readUint32();\n\t}\n\tvar message_size = this.size - this.hdr_size - (4*4 + (this.scheme_id_uri.length+1) + (this.value.length+1));\n\tif (this.version == 1) {\n\t\tmessage_size -= 4;\n\t}\n\tthis.message_data = stream.readUint8Array(message_size);\n});\n\n// file:src/parsing/EntityToGroup.js\n// ISO/IEC 14496-12:2022 Section 8.18.3 Entity to group box\nBoxParser.createEntityToGroupCtor = function(type, parseMethod) {\n    BoxParser[type+\"Box\"] = function(size) {\n        BoxParser.FullBox.call(this, type, size);\n    }\n    BoxParser[type+\"Box\"].prototype = new BoxParser.FullBox();\n    BoxParser[type+\"Box\"].prototype.parse = function(stream) {\n        this.parseFullHeader(stream);\n        if (parseMethod) {\n            parseMethod.call(this, stream);\n        } else {\n            this.group_id = stream.readUint32();\n            this.num_entities_in_group = stream.readUint32();\n            this.entity_ids = [];\n            for (i = 0; i < this.num_entities_in_group; i++) {\n                var entity_id = stream.readUint32();\n                this.entity_ids.push(entity_id);\n            }\n        }\n    };\n};\n\n// Auto exposure bracketing (ISO/IEC 23008-12:2022 Section 6.8.6.2.1)\nBoxParser.createEntityToGroupCtor(\"aebr\");\n\n// Flash exposure bracketing (ISO/IEC 23008-12:2022 Section 6.8.6.5.1)\nBoxParser.createEntityToGroupCtor(\"afbr\");\n\n// Album collection (ISO/IEC 23008-12:2022 Section 6.8.7.1)\nBoxParser.createEntityToGroupCtor(\"albc\");\n\n// Alternative entity (ISO/IEC 14496-12:2022 Section 8.18.3.1)\nBoxParser.createEntityToGroupCtor(\"altr\");\n\n// Burst image entity group (ISO/IEC 23008-12:2022 Section 6.8.2.2)\nBoxParser.createEntityToGroupCtor(\"brst\");\n\n// Depth of field bracketing (ISO/IEC 23008-12:2022 Section 6.8.6.6.1)\nBoxParser.createEntityToGroupCtor(\"dobr\");\n\n// Equivalent entity (ISO/IEC 23008-12:2022 Section 6.8.1.1)\nBoxParser.createEntityToGroupCtor(\"eqiv\");\n\n// Favourites collection (ISO/IEC 23008-12:2022 Section 6.8.7.2)\nBoxParser.createEntityToGroupCtor(\"favc\");\n\n// Focus bracketing (ISO/IEC 23008-12:2022 Section 6.8.6.4.1)\nBoxParser.createEntityToGroupCtor(\"fobr\");\n\n// Audio to image entity group (ISO/IEC 23008-12:2022 Section 6.8.4)\nBoxParser.createEntityToGroupCtor(\"iaug\");\n\n// Panorama (ISO/IEC 23008-12:2022 Section 6.8.8.1)\nBoxParser.createEntityToGroupCtor(\"pano\");\n\n// Slideshow (ISO/IEC 23008-12:2022 Section 6.8.9.1)\nBoxParser.createEntityToGroupCtor(\"slid\");\n\n// Stereo pair (ISO/IEC 23008-12:2022 Section 6.8.5)\nBoxParser.createEntityToGroupCtor(\"ster\");\n\n// Time-synchronised capture entity group (ISO/IEC 23008-12:2022 Section 6.8.3)\nBoxParser.createEntityToGroupCtor(\"tsyn\");\n\n// White balance bracketing (ISO/IEC 23008-12:2022 Section 6.8.6.3.1)\nBoxParser.createEntityToGroupCtor(\"wbbr\");\n\n// Alternative entity (ISO/IEC 23008-12:2022 AMD1 Section 6.8.10)\nBoxParser.createEntityToGroupCtor(\"prgr\");\n\n// Image Pyramid entity group (ISO/IEC 23008-12:20xx Section 6.8.11)\nBoxParser.createEntityToGroupCtor(\"pymd\", function(stream) {\n    this.group_id = stream.readUint32();\n    this.num_entities_in_group = stream.readUint32();\n    this.entity_ids = [];\n    for (var i = 0; i < this.num_entities_in_group; i++) {\n        var entity_id = stream.readUint32();\n        this.entity_ids.push(entity_id);\n    }\n    \n    this.tile_size_x = stream.readUint16();\n    this.tile_size_y = stream.readUint16();\n    this.layer_binning = [];\n    this.tiles_in_layer_column_minus1 = [];\n    this.tiles_in_layer_row_minus1 = [];\n    for (i = 0; i < this.num_entities_in_group; i++) {\n        this.layer_binning[i] = stream.readUint16();\n        this.tiles_in_layer_row_minus1[i] = stream.readUint16();\n        this.tiles_in_layer_column_minus1[i] = stream.readUint16();\n    }\n});\n\n// file:src/parsing/esds.js\nBoxParser.createFullBoxCtor(\"esds\", \"ElementaryStreamDescriptorBox\", function(stream) {\n\tvar esd_data = stream.readUint8Array(this.size-this.hdr_size);\n\tif (typeof MPEG4DescriptorParser !== \"undefined\") {\n\t\tvar esd_parser = new MPEG4DescriptorParser();\n\t\tthis.esd = esd_parser.parseOneDescriptor(new DataStream(esd_data.buffer, 0, DataStream.BIG_ENDIAN));\n\t}\n});\n\n// file:src/parsing/fiel.js\nBoxParser.createBoxCtor(\"fiel\", \"FieldHandlingBox\", function(stream) {\n\tthis.fieldCount = stream.readUint8();\n\tthis.fieldOrdering = stream.readUint8();\n});\n\n// file:src/parsing/frma.js\nBoxParser.createBoxCtor(\"frma\", \"OriginalFormatBox\", function(stream) {\n\tthis.data_format = stream.readString(4);\n});\n\n// file:src/parsing/ftyp.js\nBoxParser.createBoxCtor(\"ftyp\", \"FileTypeBox\", function(stream) {\n\tvar toparse = this.size - this.hdr_size;\n\tthis.major_brand = stream.readString(4);\n\tthis.minor_version = stream.readUint32();\n\ttoparse -= 8;\n\tthis.compatible_brands = [];\n\tvar i = 0;\n\twhile (toparse>=4) {\n\t\tthis.compatible_brands[i] = stream.readString(4);\n\t\ttoparse -= 4;\n\t\ti++;\n\t}\n});\n\n// file:src/parsing/hdlr.js\nBoxParser.createFullBoxCtor(\"hdlr\", \"HandlerBox\", function(stream) {\n\tif (this.version === 0) {\n\t\tstream.readUint32();\n\t\tthis.handler = stream.readString(4);\n\t\tstream.readUint32Array(3);\n\t\tthis.name = stream.readString(this.size-this.hdr_size-20);\n\t\tif (this.name[this.name.length-1]==='\\0') {\n\t\t\tthis.name = this.name.slice(0,-1);\n\t\t}\n\t}\n});\n\n// file:src/parsing/hvcC.js\nBoxParser.createBoxCtor(\"hvcC\", \"HEVCConfigurationBox\", function(stream) {\n\tvar i, j;\n\tvar nb_nalus;\n\tvar length;\n\tvar tmp_byte;\n\tthis.configurationVersion = stream.readUint8();\n\ttmp_byte = stream.readUint8();\n\tthis.general_profile_space = tmp_byte >> 6;\n\tthis.general_tier_flag = (tmp_byte & 0x20) >> 5;\n\tthis.general_profile_idc = (tmp_byte & 0x1F);\n\tthis.general_profile_compatibility = stream.readUint32();\n\tthis.general_constraint_indicator = stream.readUint8Array(6);\n\tthis.general_level_idc = stream.readUint8();\n\tthis.min_spatial_segmentation_idc = stream.readUint16() & 0xFFF;\n\tthis.parallelismType = (stream.readUint8() & 0x3);\n\tthis.chroma_format_idc = (stream.readUint8() & 0x3);\n\tthis.bit_depth_luma_minus8 = (stream.readUint8() & 0x7);\n\tthis.bit_depth_chroma_minus8 = (stream.readUint8() & 0x7);\n\tthis.avgFrameRate = stream.readUint16();\n\ttmp_byte = stream.readUint8();\n\tthis.constantFrameRate = (tmp_byte >> 6);\n\tthis.numTemporalLayers = (tmp_byte & 0XD) >> 3;\n\tthis.temporalIdNested = (tmp_byte & 0X4) >> 2;\n\tthis.lengthSizeMinusOne = (tmp_byte & 0X3);\n\n\tthis.nalu_arrays = [];\n\tthis.nalu_arrays.toString = function () {\n\t\tvar str = \"<table class='inner-table'>\";\n\t\tstr += \"<thead><tr><th>completeness</th><th>nalu_type</th><th>nalu_data</th></tr></thead>\";\n\t\tstr += \"<tbody>\";\n\n\t\tfor (var i=0; i<this.length; i++) {\n\t\t\tvar nalu_array = this[i];\n\t\t\tstr += \"<tr>\";\n\t\t\tstr += \"<td rowspan='\"+nalu_array.length+\"'>\"+nalu_array.completeness+\"</td>\";\n\t\t\tstr += \"<td rowspan='\"+nalu_array.length+\"'>\"+nalu_array.nalu_type+\"</td>\";\n\t\t\tfor (var j=0; j<nalu_array.length; j++) {\n\t\t\t\tvar nalu = nalu_array[j];\n\t\t\t\tif (j !== 0) str += \"<tr>\";\n\t\t\t\tstr += \"<td>\";\n\t\t\t\tstr += nalu.data.reduce(function(str, byte) {\n\t\t\t\t\treturn str + byte.toString(16).padStart(2, \"0\");\n\t\t\t\t}, \"0x\");\n\t\t\t\tstr += \"</td></tr>\";\n\t\t\t}\n\t\t}\n\t\tstr += \"</tbody></table>\";\n\t\treturn str;\n\t}\n\tvar numOfArrays = stream.readUint8();\n\tfor (i = 0; i < numOfArrays; i++) {\n\t\tvar nalu_array = [];\n\t\tthis.nalu_arrays.push(nalu_array);\n\t\ttmp_byte = stream.readUint8()\n\t\tnalu_array.completeness = (tmp_byte & 0x80) >> 7;\n\t\tnalu_array.nalu_type = tmp_byte & 0x3F;\n\t\tvar numNalus = stream.readUint16();\n\t\tfor (j = 0; j < numNalus; j++) {\n\t\t\tvar nalu = {}\n\t\t\tnalu_array.push(nalu);\n\t\t\tlength = stream.readUint16();\n\t\t\tnalu.data   = stream.readUint8Array(length);\n\t\t}\n\t}\n});\n\n// file:src/parsing/iinf.js\nBoxParser.createFullBoxCtor(\"iinf\", \"ItemInfoBox\", function(stream) {\n\tvar ret;\n\tif (this.version === 0) {\n\t\tthis.entry_count = stream.readUint16();\n\t} else {\n\t\tthis.entry_count = stream.readUint32();\n\t}\n\tthis.item_infos = [];\n\tfor (var i = 0; i < this.entry_count; i++) {\n\t\tret = BoxParser.parseOneBox(stream, false, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tif (ret.box.type !== \"infe\") {\n\t\t\t\tLog.error(\"BoxParser\", \"Expected 'infe' box, got \"+ret.box.type);\n\t\t\t}\n\t\t\tthis.item_infos[i] = ret.box;\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n});\n\n// file:src/parsing/iloc.js\nBoxParser.createFullBoxCtor(\"iloc\", \"ItemLocationBox\", function(stream) {\n\tvar byte;\n\tbyte = stream.readUint8();\n\tthis.offset_size = (byte >> 4) & 0xF;\n\tthis.length_size = byte & 0xF;\n\tbyte = stream.readUint8();\n\tthis.base_offset_size = (byte >> 4) & 0xF;\n\tif (this.version === 1 || this.version === 2) {\n\t\tthis.index_size = byte & 0xF;\n\t} else {\n\t\tthis.index_size = 0;\n\t\t// reserved = byte & 0xF;\n\t}\n\tthis.items = [];\n\tvar item_count = 0;\n\tif (this.version < 2) {\n\t\titem_count = stream.readUint16();\n\t} else if (this.version === 2) {\n\t\titem_count = stream.readUint32();\n\t} else {\n\t\tthrow \"version of iloc box not supported\";\n\t}\n\tfor (var i = 0; i < item_count; i++) {\n\t\tvar item = {};\n\t\tthis.items.push(item);\n\t\tif (this.version < 2) {\n\t\t\titem.item_ID = stream.readUint16();\n\t\t} else if (this.version === 2) {\n\t\t\titem.item_ID = stream.readUint32();\n\t\t} else {\n\t\t\tthrow \"version of iloc box not supported\";\n\t\t}\n\t\tif (this.version === 1 || this.version === 2) {\n\t\t\titem.construction_method = (stream.readUint16() & 0xF);\n\t\t} else {\n\t\t\titem.construction_method = 0;\n\t\t}\n\t\titem.data_reference_index = stream.readUint16();\n\t\tswitch(this.base_offset_size) {\n\t\t\tcase 0:\n\t\t\t\titem.base_offset = 0;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\titem.base_offset = stream.readUint32();\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\titem.base_offset = stream.readUint64();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow \"Error reading base offset size\";\n\t\t}\n\t\tvar extent_count = stream.readUint16();\n\t\titem.extents = [];\n\t\tfor (var j=0; j < extent_count; j++) {\n\t\t\tvar extent = {};\n\t\t\titem.extents.push(extent);\n\t\t\tif (this.version === 1 || this.version === 2) {\n\t\t\t\tswitch(this.index_size) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\textent.extent_index = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\textent.extent_index = stream.readUint32();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 8:\n\t\t\t\t\t\textent.extent_index = stream.readUint64();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow \"Error reading extent index\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tswitch(this.offset_size) {\n\t\t\t\tcase 0:\n\t\t\t\t\textent.extent_offset = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\textent.extent_offset = stream.readUint32();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\textent.extent_offset = stream.readUint64();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow \"Error reading extent index\";\n\t\t\t}\n\t\t\tswitch(this.length_size) {\n\t\t\t\tcase 0:\n\t\t\t\t\textent.extent_length = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\textent.extent_length = stream.readUint32();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\textent.extent_length = stream.readUint64();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow \"Error reading extent index\";\n\t\t\t}\n\t\t}\n\t}\n});\n\n// file:src/parsing/imir.js\nBoxParser.createBoxCtor(\"imir\", \"ImageMirror\", function(stream) {\n\tvar tmp = stream.readUint8();\n\tthis.reserved = tmp >> 7;\n\tthis.axis = tmp & 1;\n});// file:src/parsing/infe.js\nBoxParser.createFullBoxCtor(\"infe\", \"ItemInfoEntry\", function(stream) {\n\tif (this.version === 0 || this.version === 1) {\n\t\tthis.item_ID = stream.readUint16();\n\t\tthis.item_protection_index = stream.readUint16();\n\t\tthis.item_name = stream.readCString();\n\t\tthis.content_type = stream.readCString();\n\t\tthis.content_encoding = stream.readCString();\n\t}\n\tif (this.version === 1) {\n\t\tthis.extension_type = stream.readString(4);\n\t\tLog.warn(\"BoxParser\", \"Cannot parse extension type\");\n\t\tstream.seek(this.start+this.size);\n\t\treturn;\n\t}\n\tif (this.version >= 2) {\n\t\tif (this.version === 2) {\n\t\t\tthis.item_ID = stream.readUint16();\n\t\t} else if (this.version === 3) {\n\t\t\tthis.item_ID = stream.readUint32();\n\t\t}\n\t\tthis.item_protection_index = stream.readUint16();\n\t\tthis.item_type = stream.readString(4);\n\t\tthis.item_name = stream.readCString();\n\t\tif (this.item_type === \"mime\") {\n\t\t\tthis.content_type = stream.readCString();\n\t\t\tthis.content_encoding = stream.readCString();\n\t\t} else if (this.item_type === \"uri \") {\n\t\t\tthis.item_uri_type = stream.readCString();\n\t\t}\n\t}\n});\n// file:src/parsing/ipma.js\nBoxParser.createFullBoxCtor(\"ipma\", \"ItemPropertyAssociationBox\", function(stream) {\n\tvar i, j;\n\tentry_count = stream.readUint32();\n\tthis.associations = [];\n\tfor(i=0; i<entry_count; i++) {\n\t\tvar item_assoc = {};\n\t\tthis.associations.push(item_assoc);\n\t\tif (this.version < 1) {\n\t\t\titem_assoc.id = stream.readUint16();\n\t\t} else {\n\t\t\titem_assoc.id = stream.readUint32();\n\t\t}\n\t\tvar association_count = stream.readUint8();\n\t\titem_assoc.props = [];\n\t\tfor (j = 0; j < association_count; j++) {\n\t\t\tvar tmp = stream.readUint8();\n\t\t\tvar p = {};\n\t\t\titem_assoc.props.push(p);\n\t\t\tp.essential = ((tmp & 0x80) >> 7) === 1;\n\t\t\tif (this.flags & 0x1) {\n\t\t\t\tp.property_index = (tmp & 0x7F) << 8 | stream.readUint8();\n\t\t\t} else {\n\t\t\t\tp.property_index = (tmp & 0x7F);\n\t\t\t}\n\t\t}\n\t}\n});\n\n// file:src/parsing/iref.js\nBoxParser.createFullBoxCtor(\"iref\", \"ItemReferenceBox\", function(stream) {\n\tvar ret;\n\tvar entryCount;\n\tvar box;\n\tthis.references = [];\n\n\twhile (stream.getPosition() < this.start+this.size) {\n\t\tret = BoxParser.parseOneBox(stream, true, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tif (this.version === 0) {\n\t\t\t\tbox = new BoxParser.SingleItemTypeReferenceBox(ret.type, ret.size, ret.hdr_size, ret.start);\n\t\t\t} else {\n\t\t\t\tbox = new BoxParser.SingleItemTypeReferenceBoxLarge(ret.type, ret.size, ret.hdr_size, ret.start);\n\t\t\t}\n\t\t\tif (box.write === BoxParser.Box.prototype.write && box.type !== \"mdat\") {\n\t\t\t\tLog.warn(\"BoxParser\", box.type+\" box writing not yet implemented, keeping unparsed data in memory for later write\");\n\t\t\t\tbox.parseDataAndRewind(stream);\n\t\t\t}\n\t\t\tbox.parse(stream);\n\t\t\tthis.references.push(box);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n});\n// file:src/parsing/irot.js\nBoxParser.createBoxCtor(\"irot\", \"ImageRotation\", function(stream) {\n\tthis.angle = stream.readUint8() & 0x3;\n});\n\n// file:src/parsing/ispe.js\nBoxParser.createFullBoxCtor(\"ispe\", \"ImageSpatialExtentsProperty\", function(stream) {\n\tthis.image_width = stream.readUint32();\n\tthis.image_height = stream.readUint32();\n});// file:src/parsing/kind.js\nBoxParser.createFullBoxCtor(\"kind\", \"KindBox\", function(stream) {\n\tthis.schemeURI = stream.readCString();\n\tthis.value = stream.readCString();\n});\n// file:src/parsing/leva.js\nBoxParser.createFullBoxCtor(\"leva\", \"LevelAssignmentBox\", function(stream) {\n\tvar count = stream.readUint8();\n\tthis.levels = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tvar level = {};\n\t\tthis.levels[i] = level;\n\t\tlevel.track_ID = stream.readUint32();\n\t\tvar tmp_byte = stream.readUint8();\n\t\tlevel.padding_flag = tmp_byte >> 7;\n\t\tlevel.assignment_type = tmp_byte & 0x7F;\n\t\tswitch (level.assignment_type) {\n\t\t\tcase 0:\n\t\t\t\tlevel.grouping_type = stream.readString(4);\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tlevel.grouping_type = stream.readString(4);\n\t\t\t\tlevel.grouping_type_parameter = stream.readUint32();\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tlevel.sub_track_id = stream.readUint32();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tLog.warn(\"BoxParser\", \"Unknown leva assignement type\");\n\t\t}\n\t}\n});\n\n// file:src/parsing/lhvC.js\nBoxParser.createBoxCtor(\"lhvC\", \"LHEVCConfigurationBox\", function(stream) {\n\tvar i, j;\n\tvar tmp_byte;\n\tthis.configurationVersion = stream.readUint8();\n\tthis.min_spatial_segmentation_idc = stream.readUint16() & 0xFFF;\n\tthis.parallelismType = (stream.readUint8() & 0x3);\n\ttmp_byte = stream.readUint8();\n\tthis.numTemporalLayers = (tmp_byte & 0XD) >> 3;\n\tthis.temporalIdNested = (tmp_byte & 0X4) >> 2;\n\tthis.lengthSizeMinusOne = (tmp_byte & 0X3);\n\n\tthis.nalu_arrays = [];\n\tthis.nalu_arrays.toString = function () {\n\t\tvar str = \"<table class='inner-table'>\";\n\t\tstr += \"<thead><tr><th>completeness</th><th>nalu_type</th><th>nalu_data</th></tr></thead>\";\n\t\tstr += \"<tbody>\";\n\n\t\tfor (var i=0; i<this.length; i++) {\n\t\t\tvar nalu_array = this[i];\n\t\t\tstr += \"<tr>\";\n\t\t\tstr += \"<td rowspan='\"+nalu_array.length+\"'>\"+nalu_array.completeness+\"</td>\";\n\t\t\tstr += \"<td rowspan='\"+nalu_array.length+\"'>\"+nalu_array.nalu_type+\"</td>\";\n\t\t\tfor (var j=0; j<nalu_array.length; j++) {\n\t\t\t\tvar nalu = nalu_array[j];\n\t\t\t\tif (j !== 0) str += \"<tr>\";\n\t\t\t\tstr += \"<td>\";\n\t\t\t\tstr += nalu.data.reduce(function(str, byte) {\n\t\t\t\t\treturn str + byte.toString(16).padStart(2, \"0\");\n\t\t\t\t}, \"0x\");\n\t\t\t\tstr += \"</td></tr>\";\n\t\t\t}\n\t\t}\n\t\tstr += \"</tbody></table>\";\n\t\treturn str;\n\t}\n\tvar numOfArrays = stream.readUint8();\n\tfor (i = 0; i < numOfArrays; i++) {\n\t\tvar nalu_array = [];\n\t\tthis.nalu_arrays.push(nalu_array);\n\t\ttmp_byte = stream.readUint8()\n\t\tnalu_array.completeness = (tmp_byte & 0x80) >> 7;\n\t\tnalu_array.nalu_type = tmp_byte & 0x3F;\n\t\tvar numNalus = stream.readUint16();\n\t\tfor (j = 0; j < numNalus; j++) {\n\t\t\tvar nalu = {}\n\t\t\tnalu_array.push(nalu);\n\t\t\tvar length = stream.readUint16();\n\t\t\tnalu.data  = stream.readUint8Array(length);\n\t\t}\n\t}\n});\n\n// file:src/parsing/lsel.js\nBoxParser.createBoxCtor(\"lsel\", \"LayerSelectorProperty\", function(stream) {\n\tthis.layer_id = stream.readUint16();\n});// file:src/parsing/maxr.js\nBoxParser.createBoxCtor(\"maxr\", \"hintmaxrate\", function(stream) {\n\tthis.period = stream.readUint32();\n\tthis.bytes = stream.readUint32();\n});\n\n// file:src/parsing/mdcv.js\nfunction ColorPoint(x, y) {\n    this.x = x;\n    this.y = y;\n}\n\nColorPoint.prototype.toString = function() {\n    return \"(\"+this.x+\",\"+this.y+\")\";\n}\n\nBoxParser.createBoxCtor(\"mdcv\", \"MasteringDisplayColourVolumeBox\", function(stream) {\n    this.display_primaries = [];\n    this.display_primaries[0] = new ColorPoint(stream.readUint16(),stream.readUint16());\n    this.display_primaries[1] = new ColorPoint(stream.readUint16(),stream.readUint16());\n    this.display_primaries[2] = new ColorPoint(stream.readUint16(),stream.readUint16());\n    this.white_point = new ColorPoint(stream.readUint16(),stream.readUint16());\n    this.max_display_mastering_luminance = stream.readUint32();\n    this.min_display_mastering_luminance = stream.readUint32();\n});\n\n// file:src/parsing/mdhd.js\nBoxParser.createFullBoxCtor(\"mdhd\", \"MediaHeaderBox\", function(stream) {\n\tif (this.version == 1) {\n\t\tthis.creation_time = stream.readUint64();\n\t\tthis.modification_time = stream.readUint64();\n\t\tthis.timescale = stream.readUint32();\n\t\tthis.duration = stream.readUint64();\n\t} else {\n\t\tthis.creation_time = stream.readUint32();\n\t\tthis.modification_time = stream.readUint32();\n\t\tthis.timescale = stream.readUint32();\n\t\tthis.duration = stream.readUint32();\n\t}\n\tthis.parseLanguage(stream);\n\tstream.readUint16();\n});\n\n// file:src/parsing/mehd.js\nBoxParser.createFullBoxCtor(\"mehd\", \"MovieExtendsHeaderBox\", function(stream) {\n\tif (this.flags & 0x1) {\n\t\tLog.warn(\"BoxParser\", \"mehd box incorrectly uses flags set to 1, converting version to 1\");\n\t\tthis.version = 1;\n\t}\n\tif (this.version == 1) {\n\t\tthis.fragment_duration = stream.readUint64();\n\t} else {\n\t\tthis.fragment_duration = stream.readUint32();\n\t}\n});\n\n// file:src/parsing/meta.js\nBoxParser.createFullBoxCtor(\"meta\", \"MetaBox\", function(stream) {\n\tthis.boxes = [];\n\tBoxParser.ContainerBox.prototype.parse.call(this, stream);\n});\n// file:src/parsing/mfhd.js\nBoxParser.createFullBoxCtor(\"mfhd\", \"MovieFragmentHeaderBox\", function(stream) {\n\tthis.sequence_number = stream.readUint32();\n});\n\n// file:src/parsing/mfro.js\nBoxParser.createFullBoxCtor(\"mfro\", \"MovieFragmentRandomAccessOffsetBox\", function(stream) {\n\tthis._size = stream.readUint32();\n});\n\n// file:src/parsing/mskC.js\nBoxParser.createFullBoxCtor(\"mskC\", \"MaskConfigurationProperty\", function(stream) {\n    this.bits_per_pixel = stream.readUint8();\n});\n\n// file:src/parsing/mvhd.js\nBoxParser.createFullBoxCtor(\"mvhd\", \"MovieHeaderBox\", function(stream) {\n\tif (this.version == 1) {\n\t\tthis.creation_time = stream.readUint64();\n\t\tthis.modification_time = stream.readUint64();\n\t\tthis.timescale = stream.readUint32();\n\t\tthis.duration = stream.readUint64();\n\t} else {\n\t\tthis.creation_time = stream.readUint32();\n\t\tthis.modification_time = stream.readUint32();\n\t\tthis.timescale = stream.readUint32();\n\t\tthis.duration = stream.readUint32();\n\t}\n\tthis.rate = stream.readUint32();\n\tthis.volume = stream.readUint16()>>8;\n\tstream.readUint16();\n\tstream.readUint32Array(2);\n\tthis.matrix = stream.readUint32Array(9);\n\tstream.readUint32Array(6);\n\tthis.next_track_id = stream.readUint32();\n});\n// file:src/parsing/npck.js\nBoxParser.createBoxCtor(\"npck\", \"hintPacketsSent\", function(stream) {\n\tthis.packetssent = stream.readUint32();\n});\n\n// file:src/parsing/nump.js\nBoxParser.createBoxCtor(\"nump\", \"hintPacketsSent\", function(stream) {\n\tthis.packetssent = stream.readUint64();\n});\n\n// file:src/parsing/padb.js\nBoxParser.createFullBoxCtor(\"padb\", \"PaddingBitsBox\", function(stream) {\n\tvar sample_count = stream.readUint32();\n\tthis.padbits = [];\n\tfor (var i = 0; i < Math.floor((sample_count+1)/2); i++) {\n\t\tthis.padbits = stream.readUint8();\n\t}\n});\n\n// file:src/parsing/pasp.js\nBoxParser.createBoxCtor(\"pasp\", \"PixelAspectRatioBox\", function(stream) {\n\tthis.hSpacing = stream.readUint32();\n\tthis.vSpacing = stream.readUint32();\n});// file:src/parsing/payl.js\nBoxParser.createBoxCtor(\"payl\", \"CuePayloadBox\", function(stream) {\n\tthis.text = stream.readString(this.size - this.hdr_size);\n});\n\n// file:src/parsing/payt.js\nBoxParser.createBoxCtor(\"payt\", \"hintpayloadID\", function(stream) {\n\tthis.payloadID = stream.readUint32();\n\tvar count = stream.readUint8();\n\tthis.rtpmap_string = stream.readString(count);\n});\n\n// file:src/parsing/pdin.js\nBoxParser.createFullBoxCtor(\"pdin\", \"ProgressiveDownloadInfoBox\", function(stream) {\n\tvar count = (this.size - this.hdr_size)/8;\n\tthis.rate = [];\n\tthis.initial_delay = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tthis.rate[i] = stream.readUint32();\n\t\tthis.initial_delay[i] = stream.readUint32();\n\t}\n});\n\n// file:src/parsing/pitm.js\nBoxParser.createFullBoxCtor(\"pitm\", \"PrimaryItemBox\", function(stream) {\n\tif (this.version === 0) {\n\t\tthis.item_id = stream.readUint16();\n\t} else {\n\t\tthis.item_id = stream.readUint32();\n\t}\n});\n\n// file:src/parsing/pixi.js\nBoxParser.createFullBoxCtor(\"pixi\", \"PixelInformationProperty\", function(stream) {\n\tvar i;\n\tthis.num_channels = stream.readUint8();\n\tthis.bits_per_channels = [];\n\tfor (i = 0; i < this.num_channels; i++) {\n\t\tthis.bits_per_channels[i] = stream.readUint8();\n\t}\n});\n\n// file:src/parsing/pmax.js\nBoxParser.createBoxCtor(\"pmax\", \"hintlargestpacket\", function(stream) {\n\tthis.bytes = stream.readUint32();\n});\n\n// file:src/parsing/prdi.js\nBoxParser.createFullBoxCtor(\"prdi\", \"ProgressiveDerivedImageItemInformationProperty\", function(stream) {\n\tthis.step_count = stream.readUint16();\n\tthis.item_count = [];\n\tif (this.flags & 0x2) {\n\t\tfor (var i = 0; i < this.step_count; i++) {\n\t\t\tthis.item_count[i] = stream.readUint16();\n\t\t}\n\t}\n});// file:src/parsing/prft.js\nBoxParser.createFullBoxCtor(\"prft\", \"ProducerReferenceTimeBox\", function(stream) {\n\tthis.ref_track_id = stream.readUint32();\n\tthis.ntp_timestamp = stream.readUint64();\n\tif (this.version === 0) {\n\t\tthis.media_time = stream.readUint32();\n\t} else {\n\t\tthis.media_time = stream.readUint64();\n\t}\n});\n\n// file:src/parsing/pssh.js\nBoxParser.createFullBoxCtor(\"pssh\", \"ProtectionSystemSpecificHeaderBox\", function(stream) {\n\tthis.system_id = BoxParser.parseHex16(stream);\n\tif (this.version > 0) {\n\t\tvar count = stream.readUint32();\n\t\tthis.kid = [];\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tthis.kid[i] = BoxParser.parseHex16(stream);\n\t\t}\n\t}\n\tvar datasize = stream.readUint32();\n\tif (datasize > 0) {\n\t\tthis.data = stream.readUint8Array(datasize);\n\t}\n});\n\n// file:src/parsing/qt/clef.js\nBoxParser.createFullBoxCtor(\"clef\", \"TrackCleanApertureDimensionsBox\", function(stream) {\n\tthis.width = stream.readUint32();\n\tthis.height = stream.readUint32();\n});// file:src/parsing/qt/enof.js\nBoxParser.createFullBoxCtor(\"enof\", \"TrackEncodedPixelsDimensionsBox\", function(stream) {\n\tthis.width = stream.readUint32();\n\tthis.height = stream.readUint32();\n});// file:src/parsing/qt/prof.js\nBoxParser.createFullBoxCtor(\"prof\", \"TrackProductionApertureDimensionsBox\", function(stream) {\n\tthis.width = stream.readUint32();\n\tthis.height = stream.readUint32();\n});// file:src/parsing/qt/tapt.js\nBoxParser.createContainerBoxCtor(\"tapt\", \"TrackApertureModeDimensionsBox\", null, [ \"clef\", \"prof\", \"enof\"]);// file:src/parsing/rtp.js\nBoxParser.createBoxCtor(\"rtp \", \"rtpmoviehintinformation\", function(stream) {\n\tthis.descriptionformat = stream.readString(4);\n\tthis.sdptext = stream.readString(this.size - this.hdr_size - 4);\n});\n\n// file:src/parsing/saio.js\nBoxParser.createFullBoxCtor(\"saio\", \"SampleAuxiliaryInformationOffsetsBox\", function(stream) {\n\tif (this.flags & 0x1) {\n\t\tthis.aux_info_type = stream.readString(4);\n\t\tthis.aux_info_type_parameter = stream.readUint32();\n\t}\n\tvar count = stream.readUint32();\n\tthis.offset = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tif (this.version === 0) {\n\t\t\tthis.offset[i] = stream.readUint32();\n\t\t} else {\n\t\t\tthis.offset[i] = stream.readUint64();\n\t\t}\n\t}\n});\n// file:src/parsing/saiz.js\nBoxParser.createFullBoxCtor(\"saiz\", \"SampleAuxiliaryInformationSizesBox\", function(stream) {\n\tif (this.flags & 0x1) {\n\t\tthis.aux_info_type = stream.readString(4);\n\t\tthis.aux_info_type_parameter = stream.readUint32();\n\t}\n\tthis.default_sample_info_size = stream.readUint8();\n\tthis.sample_count = stream.readUint32();\n\tthis.sample_info_size = [];\n\tif (this.default_sample_info_size === 0) {\n\t\tfor (var i = 0; i < this.sample_count; i++) {\n\t\t\tthis.sample_info_size[i] = stream.readUint8();\n\t\t}\n\t}\n});\n\n// file:src/parsing/sampleentries/mett.js\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_METADATA, \"mett\", function(stream) {\n\tthis.parseHeader(stream);\n\tthis.content_encoding = stream.readCString();\n\tthis.mime_format = stream.readCString();\n\tthis.parseFooter(stream);\n});\n\n// file:src/parsing/sampleentries/metx.js\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_METADATA, \"metx\", function(stream) {\n\tthis.parseHeader(stream);\n\tthis.content_encoding = stream.readCString();\n\tthis.namespace = stream.readCString();\n\tthis.schema_location = stream.readCString();\n\tthis.parseFooter(stream);\n});\n\n// file:src/parsing/sampleentries/sbtt.js\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SUBTITLE, \"sbtt\", function(stream) {\n\tthis.parseHeader(stream);\n\tthis.content_encoding = stream.readCString();\n\tthis.mime_format = stream.readCString();\n\tthis.parseFooter(stream);\n});\n\n// file:src/parsing/sampleentries/stpp.js\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SUBTITLE, \"stpp\", function(stream) {\n\tthis.parseHeader(stream);\n\tthis.namespace = stream.readCString();\n\tthis.schema_location = stream.readCString();\n\tthis.auxiliary_mime_types = stream.readCString();\n\tthis.parseFooter(stream);\n});\n\n// file:src/parsing/sampleentries/stxt.js\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SUBTITLE, \"stxt\", function(stream) {\n\tthis.parseHeader(stream);\n\tthis.content_encoding = stream.readCString();\n\tthis.mime_format = stream.readCString();\n\tthis.parseFooter(stream);\n});\n\n// file:src/parsing/sampleentries/tx3g.js\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SUBTITLE, \"tx3g\", function(stream) {\n\tthis.parseHeader(stream);\n\tthis.displayFlags = stream.readUint32();\n\tthis.horizontal_justification = stream.readInt8();\n\tthis.vertical_justification = stream.readInt8();\n\tthis.bg_color_rgba = stream.readUint8Array(4);\n\tthis.box_record = stream.readInt16Array(4);\n\tthis.style_record = stream.readUint8Array(12);\n\tthis.parseFooter(stream);\n});\n// file:src/parsing/sampleentries/wvtt.js\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_METADATA, \"wvtt\", function(stream) {\n\tthis.parseHeader(stream);\n\tthis.parseFooter(stream);\n});\n\n// file:src/parsing/samplegroups/alst.js\nBoxParser.createSampleGroupCtor(\"alst\", function(stream) {\n\tvar i;\n\tvar roll_count = stream.readUint16();\n\tthis.first_output_sample = stream.readUint16();\n\tthis.sample_offset = [];\n\tfor (i = 0; i < roll_count; i++) {\n\t\tthis.sample_offset[i] = stream.readUint32();\n\t}\n\tvar remaining = this.description_length - 4 - 4*roll_count;\n\tthis.num_output_samples = [];\n\tthis.num_total_samples = [];\n\tfor (i = 0; i < remaining/4; i++) {\n\t\tthis.num_output_samples[i] = stream.readUint16();\n\t\tthis.num_total_samples[i] = stream.readUint16();\n\t}\n});\n\n// file:src/parsing/samplegroups/avll.js\nBoxParser.createSampleGroupCtor(\"avll\", function(stream) {\n\tthis.layerNumber = stream.readUint8();\n\tthis.accurateStatisticsFlag = stream.readUint8();\n\tthis.avgBitRate = stream.readUint16();\n\tthis.avgFrameRate = stream.readUint16();\n});\n\n// file:src/parsing/samplegroups/avss.js\nBoxParser.createSampleGroupCtor(\"avss\", function(stream) {\n\tthis.subSequenceIdentifier = stream.readUint16();\n\tthis.layerNumber = stream.readUint8();\n\tvar tmp_byte = stream.readUint8();\n\tthis.durationFlag = tmp_byte >> 7;\n\tthis.avgRateFlag = (tmp_byte >> 6) & 0x1;\n\tif (this.durationFlag) {\n\t\tthis.duration = stream.readUint32();\n\t}\n\tif (this.avgRateFlag) {\n\t\tthis.accurateStatisticsFlag = stream.readUint8();\n\t\tthis.avgBitRate = stream.readUint16();\n\t\tthis.avgFrameRate = stream.readUint16();\n\t}\n\tthis.dependency = [];\n\tvar numReferences = stream.readUint8();\n\tfor (var i = 0; i < numReferences; i++) {\n\t\tvar dependencyInfo = {};\n\t\tthis.dependency.push(dependencyInfo);\n\t\tdependencyInfo.subSeqDirectionFlag = stream.readUint8();\n\t\tdependencyInfo.layerNumber = stream.readUint8();\n\t\tdependencyInfo.subSequenceIdentifier = stream.readUint16();\n\t}\n});\n\n// file:src/parsing/samplegroups/dtrt.js\nBoxParser.createSampleGroupCtor(\"dtrt\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/samplegroups/mvif.js\nBoxParser.createSampleGroupCtor(\"mvif\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/samplegroups/prol.js\nBoxParser.createSampleGroupCtor(\"prol\", function(stream) {\n\tthis.roll_distance = stream.readInt16();\n});\n\n// file:src/parsing/samplegroups/rap.js\nBoxParser.createSampleGroupCtor(\"rap \", function(stream) {\n\tvar tmp_byte = stream.readUint8();\n\tthis.num_leading_samples_known = tmp_byte >> 7;\n\tthis.num_leading_samples = tmp_byte & 0x7F;\n});\n\n// file:src/parsing/samplegroups/rash.js\nBoxParser.createSampleGroupCtor(\"rash\", function(stream) {\n\tthis.operation_point_count = stream.readUint16();\n\tif (this.description_length !== 2+(this.operation_point_count === 1?2:this.operation_point_count*6)+9) {\n\t\tLog.warn(\"BoxParser\", \"Mismatch in \"+this.grouping_type+\" sample group length\");\n\t\tthis.data =  stream.readUint8Array(this.description_length-2);\n\t} else {\n\t\tif (this.operation_point_count === 1) {\n\t\t\tthis.target_rate_share = stream.readUint16();\n\t\t} else {\n\t\t\tthis.target_rate_share = [];\n\t\t\tthis.available_bitrate = [];\n\t\t\tfor (var i = 0; i < this.operation_point_count; i++) {\n\t\t\t\tthis.available_bitrate[i] = stream.readUint32();\n\t\t\t\tthis.target_rate_share[i] = stream.readUint16();\n\t\t\t}\n\t\t}\n\t\tthis.maximum_bitrate = stream.readUint32();\n\t\tthis.minimum_bitrate = stream.readUint32();\n\t\tthis.discard_priority = stream.readUint8();\n\t}\n});\n\n// file:src/parsing/samplegroups/roll.js\nBoxParser.createSampleGroupCtor(\"roll\", function(stream) {\n\tthis.roll_distance = stream.readInt16();\n});\n\n// file:src/parsing/samplegroups/samplegroup.js\nBoxParser.SampleGroupEntry.prototype.parse = function(stream) {\n\tLog.warn(\"BoxParser\", \"Unknown Sample Group type: \"+this.grouping_type);\n\tthis.data =  stream.readUint8Array(this.description_length);\n}\n\n// file:src/parsing/samplegroups/scif.js\nBoxParser.createSampleGroupCtor(\"scif\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/samplegroups/scnm.js\nBoxParser.createSampleGroupCtor(\"scnm\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/samplegroups/seig.js\nBoxParser.createSampleGroupCtor(\"seig\", function(stream) {\n\tthis.reserved = stream.readUint8();\n\tvar tmp = stream.readUint8();\n\tthis.crypt_byte_block = tmp >> 4;\n\tthis.skip_byte_block = tmp & 0xF;\n\tthis.isProtected = stream.readUint8();\n\tthis.Per_Sample_IV_Size = stream.readUint8();\n\tthis.KID = BoxParser.parseHex16(stream);\n\tthis.constant_IV_size = 0;\n\tthis.constant_IV = 0;\n\tif (this.isProtected === 1 && this.Per_Sample_IV_Size === 0) {\n\t\tthis.constant_IV_size = stream.readUint8();\n\t\tthis.constant_IV = stream.readUint8Array(this.constant_IV_size);\n\t}\n});\n\n// file:src/parsing/samplegroups/stsa.js\nBoxParser.createSampleGroupCtor(\"stsa\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/samplegroups/sync.js\nBoxParser.createSampleGroupCtor(\"sync\", function(stream) {\n\tvar tmp_byte = stream.readUint8();\n\tthis.NAL_unit_type = tmp_byte & 0x3F;\n});\n\n// file:src/parsing/samplegroups/tele.js\nBoxParser.createSampleGroupCtor(\"tele\", function(stream) {\n\tvar tmp_byte = stream.readUint8();\n\tthis.level_independently_decodable = tmp_byte >> 7;\n});\n\n// file:src/parsing/samplegroups/tsas.js\nBoxParser.createSampleGroupCtor(\"tsas\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/samplegroups/tscl.js\nBoxParser.createSampleGroupCtor(\"tscl\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/samplegroups/vipr.js\nBoxParser.createSampleGroupCtor(\"vipr\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/sbgp.js\nBoxParser.createFullBoxCtor(\"sbgp\", \"SampleToGroupBox\", function(stream) {\n\tthis.grouping_type = stream.readString(4);\n\tif (this.version === 1) {\n\t\tthis.grouping_type_parameter = stream.readUint32();\n\t} else {\n\t\tthis.grouping_type_parameter = 0;\n\t}\n\tthis.entries = [];\n\tvar entry_count = stream.readUint32();\n\tfor (var i = 0; i < entry_count; i++) {\n\t\tvar entry = {};\n\t\tthis.entries.push(entry);\n\t\tentry.sample_count = stream.readInt32();\n\t\tentry.group_description_index = stream.readInt32();\n\t}\n});\n\n// file:src/parsing/sbpm.js\nfunction Pixel(row, col) {\n\tthis.bad_pixel_row = row;\n\tthis.bad_pixel_column = col;\n}\n\nPixel.prototype.toString = function pixelToString() {\n\treturn \"[row: \" + this.bad_pixel_row + \", column: \" + this.bad_pixel_column + \"]\";\n}\n\nBoxParser.createFullBoxCtor(\"sbpm\", \"SensorBadPixelsMapBox\", function(stream) {\n\tvar i;\n\tthis.component_count = stream.readUint16();\n    this.component_index = [];\n    for (i = 0; i < this.component_count; i++) {\n        this.component_index.push(stream.readUint16());\n    }\n\tvar flags = stream.readUint8();\n\tthis.correction_applied = (0x80 == (flags & 0x80));\n\tthis.num_bad_rows = stream.readUint32();\n\tthis.num_bad_cols = stream.readUint32();\n\tthis.num_bad_pixels = stream.readUint32();\n\tthis.bad_rows = [];\n\tthis.bad_columns = [];\n\tthis.bad_pixels = [];\n\tfor (i = 0; i < this.num_bad_rows; i++) {\n\t\tthis.bad_rows.push(stream.readUint32());\n\t}\n\tfor (i = 0; i < this.num_bad_cols; i++) {\n\t\tthis.bad_columns.push(stream.readUint32());\n\t}\n\tfor (i = 0; i < this.num_bad_pixels; i++) {\n\t\tvar row = stream.readUint32();\n\t\tvar col = stream.readUint32();\n\t\tthis.bad_pixels.push(new Pixel(row, col));\n\t}\n});\n\n// file:src/parsing/schm.js\nBoxParser.createFullBoxCtor(\"schm\", \"SchemeTypeBox\", function(stream) {\n\tthis.scheme_type = stream.readString(4);\n\tthis.scheme_version = stream.readUint32();\n\tif (this.flags & 0x000001) {\n\t\tthis.scheme_uri = stream.readString(this.size - this.hdr_size - 8);\n\t}\n});\n\n// file:src/parsing/sdp.js\nBoxParser.createBoxCtor(\"sdp \", \"rtptracksdphintinformation\", function(stream) {\n\tthis.sdptext = stream.readString(this.size - this.hdr_size);\n});\n\n// file:src/parsing/sdtp.js\nBoxParser.createFullBoxCtor(\"sdtp\", \"SampleDependencyTypeBox\", function(stream) {\n\tvar tmp_byte;\n\tvar count = (this.size - this.hdr_size);\n\tthis.is_leading = [];\n\tthis.sample_depends_on = [];\n\tthis.sample_is_depended_on = [];\n\tthis.sample_has_redundancy = [];\n\tfor (var i = 0; i < count; i++) {\n\t\ttmp_byte = stream.readUint8();\n\t\tthis.is_leading[i] = tmp_byte >> 6;\n\t\tthis.sample_depends_on[i] = (tmp_byte >> 4) & 0x3;\n\t\tthis.sample_is_depended_on[i] = (tmp_byte >> 2) & 0x3;\n\t\tthis.sample_has_redundancy[i] = tmp_byte & 0x3;\n\t}\n});\n\n// file:src/parsing/senc.js\n// Cannot be fully parsed because Per_Sample_IV_Size needs to be known\r\nBoxParser.createFullBoxCtor(\"senc\", \"SampleEncryptionBox\" /*, function(stream) {\r\n\tthis.parseFullHeader(stream);\r\n\tvar sample_count = stream.readUint32();\r\n\tthis.samples = [];\r\n\tfor (var i = 0; i < sample_count; i++) {\r\n\t\tvar sample = {};\r\n\t\t// tenc.default_Per_Sample_IV_Size or seig.Per_Sample_IV_Size\r\n\t\tsample.InitializationVector = this.readUint8Array(Per_Sample_IV_Size*8);\r\n\t\tif (this.flags & 0x2) {\r\n\t\t\tsample.subsamples = [];\r\n\t\t\tsubsample_count = stream.readUint16();\r\n\t\t\tfor (var j = 0; j < subsample_count; j++) {\r\n\t\t\t\tvar subsample = {};\r\n\t\t\t\tsubsample.BytesOfClearData = stream.readUint16();\r\n\t\t\t\tsubsample.BytesOfProtectedData = stream.readUint32();\r\n\t\t\t\tsample.subsamples.push(subsample);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// TODO\r\n\t\tthis.samples.push(sample);\r\n\t}\r\n}*/);\r\n// file:src/parsing/sgpd.js\nBoxParser.createFullBoxCtor(\"sgpd\", \"SampleGroupDescriptionBox\", function(stream) {\n\tthis.grouping_type = stream.readString(4);\n\tLog.debug(\"BoxParser\", \"Found Sample Groups of type \"+this.grouping_type);\n\tif (this.version === 1) {\n\t\tthis.default_length = stream.readUint32();\n\t} else {\n\t\tthis.default_length = 0;\n\t}\n\tif (this.version >= 2) {\n\t\tthis.default_group_description_index = stream.readUint32();\n\t}\n\tthis.entries = [];\n\tvar entry_count = stream.readUint32();\n\tfor (var i = 0; i < entry_count; i++) {\n\t\tvar entry;\n\t\tif (BoxParser[this.grouping_type+\"SampleGroupEntry\"]) {\n\t\t\tentry = new BoxParser[this.grouping_type+\"SampleGroupEntry\"](this.grouping_type);\n\t\t}  else {\n\t\t\tentry = new BoxParser.SampleGroupEntry(this.grouping_type);\n\t\t}\n\t\tthis.entries.push(entry);\n\t\tif (this.version === 1) {\n\t\t\tif (this.default_length === 0) {\n\t\t\t\tentry.description_length = stream.readUint32();\n\t\t\t} else {\n\t\t\t\tentry.description_length = this.default_length;\n\t\t\t}\n\t\t} else {\n\t\t\tentry.description_length = this.default_length;\n\t\t}\n\t\tif (entry.write === BoxParser.SampleGroupEntry.prototype.write) {\n\t\t\tLog.info(\"BoxParser\", \"SampleGroup for type \"+this.grouping_type+\" writing not yet implemented, keeping unparsed data in memory for later write\");\n\t\t\t// storing data\n\t\t\tentry.data = stream.readUint8Array(entry.description_length);\n\t\t\t// rewinding\n\t\t\tstream.position -= entry.description_length;\n\t\t}\n\t\tentry.parse(stream);\n\t}\n});\n\n// file:src/parsing/sidx.js\nBoxParser.createFullBoxCtor(\"sidx\", \"CompressedSegmentIndexBox\", function(stream) {\n\tthis.reference_ID = stream.readUint32();\n\tthis.timescale = stream.readUint32();\n\tif (this.version === 0) {\n\t\tthis.earliest_presentation_time = stream.readUint32();\n\t\tthis.first_offset = stream.readUint32();\n\t} else {\n\t\tthis.earliest_presentation_time = stream.readUint64();\n\t\tthis.first_offset = stream.readUint64();\n\t}\n\tstream.readUint16();\n\tthis.references = [];\n\tvar count = stream.readUint16();\n\tfor (var i = 0; i < count; i++) {\n\t\tvar ref = {};\n\t\tthis.references.push(ref);\n\t\tvar tmp_32 = stream.readUint32();\n\t\tref.reference_type = (tmp_32 >> 31) & 0x1;\n\t\tref.referenced_size = tmp_32 & 0x7FFFFFFF;\n\t\tref.subsegment_duration = stream.readUint32();\n\t\ttmp_32 = stream.readUint32();\n\t\tref.starts_with_SAP = (tmp_32 >> 31) & 0x1;\n\t\tref.SAP_type = (tmp_32 >> 28) & 0x7;\n\t\tref.SAP_delta_time = tmp_32 & 0xFFFFFFF;\n\t}\n});\n\n// file:src/parsing/singleitemtypereference.js\nBoxParser.SingleItemTypeReferenceBox = function(type, size, hdr_size, start) {\n\tBoxParser.Box.call(this, type, size);\n\tthis.hdr_size = hdr_size;\n\tthis.start = start;\n}\nBoxParser.SingleItemTypeReferenceBox.prototype = new BoxParser.Box();\nBoxParser.SingleItemTypeReferenceBox.prototype.parse = function(stream) {\n\tthis.from_item_ID = stream.readUint16();\n\tvar count =  stream.readUint16();\n\tthis.references = [];\n\tfor(var i = 0; i < count; i++) {\n\t\tthis.references[i] = {};\n\t\tthis.references[i].to_item_ID = stream.readUint16();\n\t}\n}\n\n// file:src/parsing/singleitemtypereferencelarge.js\nBoxParser.SingleItemTypeReferenceBoxLarge = function(type, size, hdr_size, start) {\n\tBoxParser.Box.call(this, type, size);\n\tthis.hdr_size = hdr_size;\n\tthis.start = start;\n}\nBoxParser.SingleItemTypeReferenceBoxLarge.prototype = new BoxParser.Box();\nBoxParser.SingleItemTypeReferenceBoxLarge.prototype.parse = function(stream) {\n\tthis.from_item_ID = stream.readUint32();\n\tvar count =  stream.readUint16();\n\tthis.references = [];\n\tfor(var i = 0; i < count; i++) {\n\t\tthis.references[i] = {};\n\t\tthis.references[i].to_item_ID = stream.readUint32();\n\t}\n}\n\n// file:src/parsing/SmDm.js\nBoxParser.createFullBoxCtor(\"SmDm\", \"SMPTE2086MasteringDisplayMetadataBox\", function(stream) {\n\tthis.primaryRChromaticity_x = stream.readUint16();\n    this.primaryRChromaticity_y = stream.readUint16();\n    this.primaryGChromaticity_x = stream.readUint16();\n    this.primaryGChromaticity_y = stream.readUint16();\n    this.primaryBChromaticity_x = stream.readUint16();\n    this.primaryBChromaticity_y = stream.readUint16();\n    this.whitePointChromaticity_x = stream.readUint16();\n    this.whitePointChromaticity_y = stream.readUint16();\n    this.luminanceMax = stream.readUint32();\n    this.luminanceMin = stream.readUint32();\n});\n\n// file:src/parsing/smhd.js\nBoxParser.createFullBoxCtor(\"smhd\", \"SoundMediaHeaderBox\", function(stream) {\n\tthis.balance = stream.readUint16();\n\tstream.readUint16();\n});\n\n// file:src/parsing/ssix.js\nBoxParser.createFullBoxCtor(\"ssix\", \"CompressedSubsegmentIndexBox\", function(stream) {\n\tthis.subsegments = [];\n\tvar subsegment_count = stream.readUint32();\n\tfor (var i = 0; i < subsegment_count; i++) {\n\t\tvar subsegment = {};\n\t\tthis.subsegments.push(subsegment);\n\t\tsubsegment.ranges = [];\n\t\tvar range_count = stream.readUint32();\n\t\tfor (var j = 0; j < range_count; j++) {\n\t\t\tvar range = {};\n\t\t\tsubsegment.ranges.push(range);\n\t\t\trange.level = stream.readUint8();\n\t\t\trange.range_size = stream.readUint24();\n\t\t}\n\t}\n});\n\n// file:src/parsing/stco.js\nBoxParser.createFullBoxCtor(\"stco\", \"ChunkOffsetBox\", function(stream) {\n\tvar entry_count;\n\tentry_count = stream.readUint32();\n\tthis.chunk_offsets = [];\n\tif (this.version === 0) {\n\t\tfor (var i = 0; i < entry_count; i++) {\n\t\t\tthis.chunk_offsets.push(stream.readUint32());\n\t\t}\n\t}\n});\n\n// file:src/parsing/stdp.js\nBoxParser.createFullBoxCtor(\"stdp\", \"DegradationPriorityBox\", function(stream) {\n\tvar count = (this.size - this.hdr_size)/2;\n\tthis.priority = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tthis.priority[i] = stream.readUint16();\n\t}\n});\n\n// file:src/parsing/sthd.js\nBoxParser.createFullBoxCtor(\"sthd\", \"SubtitleMediaHeaderBox\");\n\n// file:src/parsing/stri.js\nBoxParser.createFullBoxCtor(\"stri\", \"SubTrackInformationBox\", function(stream) {\n\tthis.switch_group = stream.readUint16();\n\tthis.alternate_group = stream.readUint16();\n\tthis.sub_track_id = stream.readUint32();\n\tvar count = (this.size - this.hdr_size - 8)/4;\n\tthis.attribute_list = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tthis.attribute_list[i] = stream.readUint32();\n\t}\n});\n\n// file:src/parsing/stsc.js\nBoxParser.createFullBoxCtor(\"stsc\", \"SampleToChunkBox\", function(stream) {\n\tvar entry_count;\n\tvar i;\n\tentry_count = stream.readUint32();\n\tthis.first_chunk = [];\n\tthis.samples_per_chunk = [];\n\tthis.sample_description_index = [];\n\tif (this.version === 0) {\n\t\tfor(i=0; i<entry_count; i++) {\n\t\t\tthis.first_chunk.push(stream.readUint32());\n\t\t\tthis.samples_per_chunk.push(stream.readUint32());\n\t\t\tthis.sample_description_index.push(stream.readUint32());\n\t\t}\n\t}\n});\n\n// file:src/parsing/stsd.js\nBoxParser.createFullBoxCtor(\"stsd\", \"SampleDescriptionBox\", function(stream) {\n\tvar i;\n\tvar ret;\n\tvar entryCount;\n\tvar box;\n\tthis.entries = [];\n\tentryCount = stream.readUint32();\n\tfor (i = 1; i <= entryCount; i++) {\n\t\tret = BoxParser.parseOneBox(stream, true, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tif (BoxParser[ret.type+\"SampleEntry\"]) {\n\t\t\t\tbox = new BoxParser[ret.type+\"SampleEntry\"](ret.size);\n\t\t\t\tbox.hdr_size = ret.hdr_size;\n\t\t\t\tbox.start = ret.start;\n\t\t\t} else {\n\t\t\t\tLog.warn(\"BoxParser\", \"Unknown sample entry type: \"+ret.type);\n\t\t\t\tbox = new BoxParser.SampleEntry(ret.type, ret.size, ret.hdr_size, ret.start);\n\t\t\t}\n\t\t\tif (box.write === BoxParser.SampleEntry.prototype.write) {\n\t\t\t\tLog.info(\"BoxParser\", \"SampleEntry \"+box.type+\" box writing not yet implemented, keeping unparsed data in memory for later write\");\n\t\t\t\tbox.parseDataAndRewind(stream);\n\t\t\t}\n\t\t\tbox.parse(stream);\n\t\t\tthis.entries.push(box);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n});\n\n// file:src/parsing/stsg.js\nBoxParser.createFullBoxCtor(\"stsg\", \"SubTrackSampleGroupBox\", function(stream) {\n\tthis.grouping_type = stream.readUint32();\n\tvar count = stream.readUint16();\n\tthis.group_description_index = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tthis.group_description_index[i] = stream.readUint32();\n\t}\n});\n\n// file:src/parsing/stsh.js\nBoxParser.createFullBoxCtor(\"stsh\", \"ShadowSyncSampleBox\", function(stream) {\n\tvar entry_count;\n\tvar i;\n\tentry_count = stream.readUint32();\n\tthis.shadowed_sample_numbers = [];\n\tthis.sync_sample_numbers = [];\n\tif (this.version === 0) {\n\t\tfor(i=0; i<entry_count; i++) {\n\t\t\tthis.shadowed_sample_numbers.push(stream.readUint32());\n\t\t\tthis.sync_sample_numbers.push(stream.readUint32());\n\t\t}\n\t}\n});\n\n// file:src/parsing/stss.js\nBoxParser.createFullBoxCtor(\"stss\", \"SyncSampleBox\", function(stream) {\n\tvar i;\n\tvar entry_count;\n\tentry_count = stream.readUint32();\n\tif (this.version === 0) {\n\t\tthis.sample_numbers = [];\n\t\tfor(i=0; i<entry_count; i++) {\n\t\t\tthis.sample_numbers.push(stream.readUint32());\n\t\t}\n\t}\n});\n\n// file:src/parsing/stsz.js\nBoxParser.createFullBoxCtor(\"stsz\", \"SampleSizeBox\", function(stream) {\n\tvar i;\n\tthis.sample_sizes = [];\n\tif (this.version === 0) {\n\t\tthis.sample_size = stream.readUint32();\n\t\tthis.sample_count = stream.readUint32();\n\t\tfor (i = 0; i < this.sample_count; i++) {\n\t\t\tif (this.sample_size === 0) {\n\t\t\t\tthis.sample_sizes.push(stream.readUint32());\n\t\t\t} else {\n\t\t\t\tthis.sample_sizes[i] = this.sample_size;\n\t\t\t}\n\t\t}\n\t}\n});\n\n// file:src/parsing/stts.js\nBoxParser.createFullBoxCtor(\"stts\", \"TimeToSampleBox\", function(stream) {\n\tvar entry_count;\n\tvar i;\n\tvar delta;\n\tentry_count = stream.readUint32();\n\tthis.sample_counts = [];\n\tthis.sample_deltas = [];\n\tif (this.version === 0) {\n\t\tfor(i=0; i<entry_count; i++) {\n\t\t\tthis.sample_counts.push(stream.readUint32());\n\t\t\tdelta = stream.readInt32();\n\t\t\tif (delta < 0) {\n\t\t\t\tLog.warn(\"BoxParser\", \"File uses negative stts sample delta, using value 1 instead, sync may be lost!\");\n\t\t\t\tdelta = 1;\n\t\t\t}\n\t\t\tthis.sample_deltas.push(delta);\n\t\t}\n\t}\n});\n\n// file:src/parsing/stvi.js\nBoxParser.createFullBoxCtor(\"stvi\", \"StereoVideoBox\", function(stream) {\n\tvar tmp32 = stream.readUint32();\n\tthis.single_view_allowed = tmp32 & 0x3;\n\tthis.stereo_scheme = stream.readUint32();\n\tvar length = stream.readUint32();\n\tthis.stereo_indication_type = stream.readString(length);\n\tvar ret;\n\tvar box;\n\tthis.boxes = [];\n\twhile (stream.getPosition() < this.start+this.size) {\n\t\tret = BoxParser.parseOneBox(stream, false, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tbox = ret.box;\n\t\t\tthis.boxes.push(box);\n\t\t\tthis[box.type] = box;\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n});\n\n// file:src/parsing/styp.js\nBoxParser.createBoxCtor(\"styp\", \"SegmentTypeBox\", function(stream) {\n\tBoxParser.ftypBox.prototype.parse.call(this, stream);\n});\n\n// file:src/parsing/stz2.js\nBoxParser.createFullBoxCtor(\"stz2\", \"CompactSampleSizeBox\", function(stream) {\n\tvar i;\n\tvar sample_size;\n\tvar sample_count;\n\tthis.sample_sizes = [];\n\tif (this.version === 0) {\n\t\tthis.reserved = stream.readUint24();\n\t\tthis.field_size = stream.readUint8();\n\t\tsample_count = stream.readUint32();\n\t\tif (this.field_size === 4) {\n\t\t\tfor (i = 0; i < sample_count; i+=2) {\n\t\t\t\tvar tmp = stream.readUint8();\n\t\t\t\tthis.sample_sizes[i] = (tmp >> 4) & 0xF;\n\t\t\t\tthis.sample_sizes[i+1] = tmp & 0xF;\n\t\t\t}\n\t\t} else if (this.field_size === 8) {\n\t\t\tfor (i = 0; i < sample_count; i++) {\n\t\t\t\tthis.sample_sizes[i] = stream.readUint8();\n\t\t\t}\n\t\t} else if (this.field_size === 16) {\n\t\t\tfor (i = 0; i < sample_count; i++) {\n\t\t\t\tthis.sample_sizes[i] = stream.readUint16();\n\t\t\t}\n\t\t} else {\n\t\t\tLog.error(\"BoxParser\", \"Error in length field in stz2 box\");\n\t\t}\n\t}\n});\n\n// file:src/parsing/subs.js\nBoxParser.createFullBoxCtor(\"subs\", \"SubSampleInformationBox\", function(stream) {\n\tvar i,j;\n\tvar entry_count;\n\tvar subsample_count;\n\tentry_count = stream.readUint32();\n\tthis.entries = [];\n\tfor (i = 0; i < entry_count; i++) {\n\t\tvar sampleInfo = {};\n\t\tthis.entries[i] = sampleInfo;\n\t\tsampleInfo.sample_delta = stream.readUint32();\n\t\tsampleInfo.subsamples = [];\n\t\tsubsample_count = stream.readUint16();\n\t\tif (subsample_count>0) {\n\t\t\tfor (j = 0; j < subsample_count; j++) {\n\t\t\t\tvar subsample = {};\n\t\t\t\tsampleInfo.subsamples.push(subsample);\n\t\t\t\tif (this.version == 1) {\n\t\t\t\t\tsubsample.size = stream.readUint32();\n\t\t\t\t} else {\n\t\t\t\t\tsubsample.size = stream.readUint16();\n\t\t\t\t}\n\t\t\t\tsubsample.priority = stream.readUint8();\n\t\t\t\tsubsample.discardable = stream.readUint8();\n\t\t\t\tsubsample.codec_specific_parameters = stream.readUint32();\n\t\t\t}\n\t\t}\n\t}\n});\n\n// file:src/parsing/tenc.js\nBoxParser.createFullBoxCtor(\"tenc\", \"TrackEncryptionBox\", function(stream) {\n\tstream.readUint8(); // reserved\n\tif (this.version === 0) {\n\t\tstream.readUint8();\n\t} else {\n\t\tvar tmp = stream.readUint8();\n\t\tthis.default_crypt_byte_block = (tmp >> 4) & 0xF;\n\t\tthis.default_skip_byte_block = tmp & 0xF;\n\t}\n\tthis.default_isProtected = stream.readUint8();\n\tthis.default_Per_Sample_IV_Size = stream.readUint8();\n\tthis.default_KID = BoxParser.parseHex16(stream);\n\tif (this.default_isProtected === 1 && this.default_Per_Sample_IV_Size === 0) {\n\t\tthis.default_constant_IV_size = stream.readUint8();\n\t\tthis.default_constant_IV = stream.readUint8Array(this.default_constant_IV_size);\n\t}\n});// file:src/parsing/tfdt.js\nBoxParser.createFullBoxCtor(\"tfdt\", \"TrackFragmentBaseMediaDecodeTimeBox\", function(stream) {\n\tif (this.version == 1) {\n\t\tthis.baseMediaDecodeTime = stream.readUint64();\n\t} else {\n\t\tthis.baseMediaDecodeTime = stream.readUint32();\n\t}\n});\n\n// file:src/parsing/tfhd.js\nBoxParser.createFullBoxCtor(\"tfhd\", \"TrackFragmentHeaderBox\", function(stream) {\n\tvar readBytes = 0;\n\tthis.track_id = stream.readUint32();\n\tif (this.size - this.hdr_size > readBytes && (this.flags & BoxParser.TFHD_FLAG_BASE_DATA_OFFSET)) {\n\t\tthis.base_data_offset = stream.readUint64();\n\t\treadBytes += 8;\n\t} else {\n\t\tthis.base_data_offset = 0;\n\t}\n\tif (this.size - this.hdr_size > readBytes && (this.flags & BoxParser.TFHD_FLAG_SAMPLE_DESC)) {\n\t\tthis.default_sample_description_index = stream.readUint32();\n\t\treadBytes += 4;\n\t} else {\n\t\tthis.default_sample_description_index = 0;\n\t}\n\tif (this.size - this.hdr_size > readBytes && (this.flags & BoxParser.TFHD_FLAG_SAMPLE_DUR)) {\n\t\tthis.default_sample_duration = stream.readUint32();\n\t\treadBytes += 4;\n\t} else {\n\t\tthis.default_sample_duration = 0;\n\t}\n\tif (this.size - this.hdr_size > readBytes && (this.flags & BoxParser.TFHD_FLAG_SAMPLE_SIZE)) {\n\t\tthis.default_sample_size = stream.readUint32();\n\t\treadBytes += 4;\n\t} else {\n\t\tthis.default_sample_size = 0;\n\t}\n\tif (this.size - this.hdr_size > readBytes && (this.flags & BoxParser.TFHD_FLAG_SAMPLE_FLAGS)) {\n\t\tthis.default_sample_flags = stream.readUint32();\n\t\treadBytes += 4;\n\t} else {\n\t\tthis.default_sample_flags = 0;\n\t}\n});\n\n// file:src/parsing/tfra.js\nBoxParser.createFullBoxCtor(\"tfra\", \"TrackFragmentRandomAccessBox\", function(stream) {\n\tthis.track_ID = stream.readUint32();\n\tstream.readUint24();\n\tvar tmp_byte = stream.readUint8();\n\tthis.length_size_of_traf_num = (tmp_byte >> 4) & 0x3;\n\tthis.length_size_of_trun_num = (tmp_byte >> 2) & 0x3;\n\tthis.length_size_of_sample_num = (tmp_byte) & 0x3;\n\tthis.entries = [];\n\tvar number_of_entries = stream.readUint32();\n\tfor (var i = 0; i < number_of_entries; i++) {\n\t\tif (this.version === 1) {\n\t\t\tthis.time = stream.readUint64();\n\t\t\tthis.moof_offset = stream.readUint64();\n\t\t} else {\n\t\t\tthis.time = stream.readUint32();\n\t\t\tthis.moof_offset = stream.readUint32();\n\t\t}\n\t\tthis.traf_number = stream[\"readUint\"+(8*(this.length_size_of_traf_num+1))]();\n\t\tthis.trun_number = stream[\"readUint\"+(8*(this.length_size_of_trun_num+1))]();\n\t\tthis.sample_number = stream[\"readUint\"+(8*(this.length_size_of_sample_num+1))]();\n\t}\n});\n\n// file:src/parsing/tkhd.js\nBoxParser.createFullBoxCtor(\"tkhd\", \"TrackHeaderBox\", function(stream) {\n\tif (this.version == 1) {\n\t\tthis.creation_time = stream.readUint64();\n\t\tthis.modification_time = stream.readUint64();\n\t\tthis.track_id = stream.readUint32();\n\t\tstream.readUint32();\n\t\tthis.duration = stream.readUint64();\n\t} else {\n\t\tthis.creation_time = stream.readUint32();\n\t\tthis.modification_time = stream.readUint32();\n\t\tthis.track_id = stream.readUint32();\n\t\tstream.readUint32();\n\t\tthis.duration = stream.readUint32();\n\t}\n\tstream.readUint32Array(2);\n\tthis.layer = stream.readInt16();\n\tthis.alternate_group = stream.readInt16();\n\tthis.volume = stream.readInt16()>>8;\n\tstream.readUint16();\n\tthis.matrix = stream.readInt32Array(9);\n\tthis.width = stream.readUint32();\n\tthis.height = stream.readUint32();\n});\n\n// file:src/parsing/tmax.js\nBoxParser.createBoxCtor(\"tmax\", \"hintmaxrelativetime\", function(stream) {\n\tthis.time = stream.readUint32();\n});\n\n// file:src/parsing/tmin.js\nBoxParser.createBoxCtor(\"tmin\", \"hintminrelativetime\", function(stream) {\n\tthis.time = stream.readUint32();\n});\n\n// file:src/parsing/totl.js\nBoxParser.createBoxCtor(\"totl\", \"hintBytesSent\", function(stream) {\n\tthis.bytessent = stream.readUint32();\n});\n\n// file:src/parsing/tpay.js\nBoxParser.createBoxCtor(\"tpay\", \"hintBytesSent\", function(stream) {\n\tthis.bytessent = stream.readUint32();\n});\n\n// file:src/parsing/tpyl.js\nBoxParser.createBoxCtor(\"tpyl\", \"hintBytesSent\", function(stream) {\n\tthis.bytessent = stream.readUint64();\n});\n\n// file:src/parsing/TrackGroup.js\nBoxParser.TrackGroupTypeBox.prototype.parse = function(stream) {\n\tthis.parseFullHeader(stream);\n\tthis.track_group_id = stream.readUint32();\n}\n\n// file:src/parsing/trackgroups/msrc.js\nBoxParser.createTrackGroupCtor(\"msrc\");// file:src/parsing/TrakReference.js\nBoxParser.TrackReferenceTypeBox = function(type, size, hdr_size, start) {\n\tBoxParser.Box.call(this, type, size);\n\tthis.hdr_size = hdr_size;\n\tthis.start = start;\n}\nBoxParser.TrackReferenceTypeBox.prototype = new BoxParser.Box();\nBoxParser.TrackReferenceTypeBox.prototype.parse = function(stream) {\n\tthis.track_ids = stream.readUint32Array((this.size-this.hdr_size)/4);\n}\n\n// file:src/parsing/tref.js\nBoxParser.trefBox.prototype.parse = function(stream) {\n\tvar ret;\n\tvar box;\n\twhile (stream.getPosition() < this.start+this.size) {\n\t\tret = BoxParser.parseOneBox(stream, true, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tbox = new BoxParser.TrackReferenceTypeBox(ret.type, ret.size, ret.hdr_size, ret.start);\n\t\t\tif (box.write === BoxParser.Box.prototype.write && box.type !== \"mdat\") {\n\t\t\t\tLog.info(\"BoxParser\", \"TrackReference \"+box.type+\" box writing not yet implemented, keeping unparsed data in memory for later write\");\n\t\t\t\tbox.parseDataAndRewind(stream);\n\t\t\t}\n\t\t\tbox.parse(stream);\n\t\t\tthis.boxes.push(box);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n}\n\n// file:src/parsing/trep.js\nBoxParser.createFullBoxCtor(\"trep\", \"TrackExtensionPropertiesBox\", function(stream) {\n\tthis.track_ID = stream.readUint32();\n\tthis.boxes = [];\n\twhile (stream.getPosition() < this.start+this.size) {\n\t\tret = BoxParser.parseOneBox(stream, false, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tbox = ret.box;\n\t\t\tthis.boxes.push(box);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n});\n\n// file:src/parsing/trex.js\nBoxParser.createFullBoxCtor(\"trex\", \"TrackExtendsBox\", function(stream) {\n\tthis.track_id = stream.readUint32();\n\tthis.default_sample_description_index = stream.readUint32();\n\tthis.default_sample_duration = stream.readUint32();\n\tthis.default_sample_size = stream.readUint32();\n\tthis.default_sample_flags = stream.readUint32();\n});\n\n// file:src/parsing/trpy.js\nBoxParser.createBoxCtor(\"trpy\", \"hintBytesSent\", function(stream) {\n\tthis.bytessent = stream.readUint64();\n});\n\n// file:src/parsing/trun.js\nBoxParser.createFullBoxCtor(\"trun\", \"TrackRunBox\", function(stream) {\n\tvar readBytes = 0;\n\tthis.sample_count = stream.readUint32();\n\treadBytes+= 4;\n\tif (this.size - this.hdr_size > readBytes && (this.flags & BoxParser.TRUN_FLAGS_DATA_OFFSET) ) {\n\t\tthis.data_offset = stream.readInt32(); //signed\n\t\treadBytes += 4;\n\t} else {\n\t\tthis.data_offset = 0;\n\t}\n\tif (this.size - this.hdr_size > readBytes && (this.flags & BoxParser.TRUN_FLAGS_FIRST_FLAG) ) {\n\t\tthis.first_sample_flags = stream.readUint32();\n\t\treadBytes += 4;\n\t} else {\n\t\tthis.first_sample_flags = 0;\n\t}\n\tthis.sample_duration = [];\n\tthis.sample_size = [];\n\tthis.sample_flags = [];\n\tthis.sample_composition_time_offset = [];\n\tif (this.size - this.hdr_size > readBytes) {\n\t\tfor (var i = 0; i < this.sample_count; i++) {\n\t\t\tif (this.flags & BoxParser.TRUN_FLAGS_DURATION) {\n\t\t\t\tthis.sample_duration[i] = stream.readUint32();\n\t\t\t}\n\t\t\tif (this.flags & BoxParser.TRUN_FLAGS_SIZE) {\n\t\t\t\tthis.sample_size[i] = stream.readUint32();\n\t\t\t}\n\t\t\tif (this.flags & BoxParser.TRUN_FLAGS_FLAGS) {\n\t\t\t\tthis.sample_flags[i] = stream.readUint32();\n\t\t\t}\n\t\t\tif (this.flags & BoxParser.TRUN_FLAGS_CTS_OFFSET) {\n\t\t\t\tif (this.version === 0) {\n\t\t\t\t\tthis.sample_composition_time_offset[i] = stream.readUint32();\n\t\t\t\t} else {\n\t\t\t\t\tthis.sample_composition_time_offset[i] = stream.readInt32(); //signed\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\n// file:src/parsing/tsel.js\nBoxParser.createFullBoxCtor(\"tsel\", \"TrackSelectionBox\", function(stream) {\n\tthis.switch_group = stream.readUint32();\n\tvar count = (this.size - this.hdr_size - 4)/4;\n\tthis.attribute_list = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tthis.attribute_list[i] = stream.readUint32();\n\t}\n});\n\n// file:src/parsing/txtC.js\nBoxParser.createFullBoxCtor(\"txtC\", \"TextConfigBox\", function(stream) {\n\tthis.config = stream.readCString();\n});\n\n// file:src/parsing/tyco.js\nBoxParser.createBoxCtor(\"tyco\", \"TypeCombinationBox\", function(stream) {\n\tvar count = (this.size - this.hdr_size) / 4;\n\tthis.compatible_brands = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tthis.compatible_brands[i] = stream.readString(4);\n\t}\n});\n\n// file:src/parsing/udes.js\nBoxParser.createFullBoxCtor(\"udes\", \"UserDescriptionProperty\", function(stream) {\n\tthis.lang = stream.readCString();\n\tthis.name = stream.readCString();\n\tthis.description = stream.readCString();\n\tthis.tags = stream.readCString();\n});\n\n// file:src/parsing/uncC.js\nBoxParser.createFullBoxCtor(\"uncC\", \"UncompressedFrameConfigBox\", function(stream) {\n    var i;\n    this.profile = stream.readString(4);\n    if (this.version == 1) {\n        // Nothing - just the profile\n    } else if (this.version == 0) {\n        this.component_count = stream.readUint32();\n        this.component_index = [];\n        this.component_bit_depth_minus_one = [];\n        this.component_format = [];\n        this.component_align_size = [];\n        for (i = 0; i < this.component_count; i++) {\n            this.component_index.push(stream.readUint16());\n            this.component_bit_depth_minus_one.push(stream.readUint8());\n            this.component_format.push(stream.readUint8());\n            this.component_align_size.push(stream.readUint8());\n        }\n        this.sampling_type = stream.readUint8();\n        this.interleave_type = stream.readUint8();\n        this.block_size = stream.readUint8();\n        var flags = stream.readUint8();\n        this.component_little_endian = (flags >> 7) & 0x1;\n        this.block_pad_lsb = (flags >> 6) & 0x1;\n        this.block_little_endian = (flags >> 5) & 0x1;\n        this.block_reversed = (flags >> 4) & 0x1;\n        this.pad_unknown = (flags >> 3) & 0x1;\n        this.pixel_size = stream.readUint32();\n        this.row_align_size = stream.readUint32();\n        this.tile_align_size = stream.readUint32();\n        this.num_tile_cols_minus_one = stream.readUint32();\n        this.num_tile_rows_minus_one = stream.readUint32();\n    }\n});\n\n// file:src/parsing/url.js\nBoxParser.createFullBoxCtor(\"url \", \"DataEntryUrlBox\", function(stream) {\n\tif (this.flags !== 0x000001) {\n\t\tthis.location = stream.readCString();\n\t}\n});\n\n// file:src/parsing/urn.js\nBoxParser.createFullBoxCtor(\"urn \", \"DataEntryUrnBox\", function(stream) {\n\tthis.name = stream.readCString();\n\tif (this.size - this.hdr_size - this.name.length - 1 > 0) {\n\t\tthis.location = stream.readCString();\n\t}\n});\n\n// file:src/parsing/uuid/piff/piffLsm.js\nBoxParser.createUUIDBox(\"a5d40b30e81411ddba2f0800200c9a66\", \"LiveServerManifestBox\", true, false, function(stream) {\n    this.LiveServerManifest = stream.readString(this.size - this.hdr_size)\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&#039;\");\n});// file:src/parsing/uuid/piff/piffPssh.js\nBoxParser.createUUIDBox(\"d08a4f1810f34a82b6c832d8aba183d3\", \"PiffProtectionSystemSpecificHeaderBox\", true, false, function(stream) {\n\tthis.system_id = BoxParser.parseHex16(stream);\n\tvar datasize = stream.readUint32();\n\tif (datasize > 0) {\n\t\tthis.data = stream.readUint8Array(datasize);\n\t}\n});\n\n// file:src/parsing/uuid/piff/piffSenc.js\nBoxParser.createUUIDBox(\"a2394f525a9b4f14a2446c427c648df4\", \"PiffSampleEncryptionBox\", true, false /*, function(stream) {\n\tif (this.flags & 0x1) {\n\t\tthis.AlgorithmID = stream.readUint24();\n\t\tthis.IV_size = stream.readUint8();\n\t\tthis.KID = BoxParser.parseHex16(stream);\n\t}\n\tvar sample_count = stream.readUint32();\n\tthis.samples = [];\n\tfor (var i = 0; i < sample_count; i++) {\n\t\tvar sample = {};\n\t\tsample.InitializationVector = this.readUint8Array(this.IV_size*8);\n\t\tif (this.flags & 0x2) {\n\t\t\tsample.subsamples = [];\n\t\t\tsample.NumberOfEntries = stream.readUint16();\n\t\t\tfor (var j = 0; j < sample.NumberOfEntries; j++) {\n\t\t\t\tvar subsample = {};\n\t\t\t\tsubsample.BytesOfClearData = stream.readUint16();\n\t\t\t\tsubsample.BytesOfProtectedData = stream.readUint32();\n\t\t\t\tsample.subsamples.push(subsample);\n\t\t\t}\n\t\t}\n\t\tthis.samples.push(sample);\n\t}\n}*/);\n// file:src/parsing/uuid/piff/piffTenc.js\nBoxParser.createUUIDBox(\"8974dbce7be74c5184f97148f9882554\", \"PiffTrackEncryptionBox\", true, false, function(stream) {\n\tthis.default_AlgorithmID = stream.readUint24();\n\tthis.default_IV_size = stream.readUint8();\n\tthis.default_KID = BoxParser.parseHex16(stream);\n});// file:src/parsing/uuid/piff/piffTfrf.js\nBoxParser.createUUIDBox(\"d4807ef2ca3946958e5426cb9e46a79f\", \"TfrfBox\", true, false, function(stream) {\n    this.fragment_count = stream.readUint8();\n    this.entries = [];\n\n    for (var i = 0; i < this.fragment_count; i++) {\n        var entry = {};\n        var absolute_time = 0;\n        var absolute_duration = 0;\n\n        if (this.version === 1) {\n            absolute_time = stream.readUint64();\n            absolute_duration = stream.readUint64();\n        } else {\n            absolute_time = stream.readUint32();\n            absolute_duration = stream.readUint32();\n        }\n\n        entry.absolute_time = absolute_time;\n        entry.absolute_duration = absolute_duration;\n\n        this.entries.push(entry);\n    }\n});// file:src/parsing/uuid/piff/piffTfxd.js\nBoxParser.createUUIDBox(\"6d1d9b0542d544e680e2141daff757b2\", \"TfxdBox\", true, false, function(stream) {\n    if (this.version === 1) {\n       this.absolute_time = stream.readUint64();\n       this.duration = stream.readUint64();\n    } else {\n       this.absolute_time = stream.readUint32();\n       this.duration = stream.readUint32();\n    }\n});// file:src/parsing/vmhd.js\nBoxParser.createFullBoxCtor(\"vmhd\", \"VideoMediaHeaderBox\", function(stream) {\n\tthis.graphicsmode = stream.readUint16();\n\tthis.opcolor = stream.readUint16Array(3);\n});\n\n// file:src/parsing/vpcC.js\nBoxParser.createFullBoxCtor(\"vpcC\", \"VPCodecConfigurationRecord\", function (stream) {\n\tvar tmp;\n\tif (this.version === 1) {\n\t\tthis.profile = stream.readUint8();\n\t\tthis.level = stream.readUint8();\n\t\ttmp = stream.readUint8();\n\t\tthis.bitDepth = tmp >> 4;\n\t\tthis.chromaSubsampling = (tmp >> 1) & 0x7;\n\t\tthis.videoFullRangeFlag = tmp & 0x1;\n\t\tthis.colourPrimaries = stream.readUint8();\n\t\tthis.transferCharacteristics = stream.readUint8();\n\t\tthis.matrixCoefficients = stream.readUint8();\n\t\tthis.codecIntializationDataSize = stream.readUint16();\n\t\tthis.codecIntializationData = stream.readUint8Array(this.codecIntializationDataSize);\n\t} else {\n\t\tthis.profile = stream.readUint8();\n\t\tthis.level = stream.readUint8();\n\t\ttmp = stream.readUint8();\n\t\tthis.bitDepth = (tmp >> 4) & 0xF;\n\t\tthis.colorSpace = tmp & 0xF;\n\t\ttmp = stream.readUint8();\n\t\tthis.chromaSubsampling = (tmp >> 4) & 0xF;\n\t\tthis.transferFunction = (tmp >> 1) & 0x7;\n\t\tthis.videoFullRangeFlag = tmp & 0x1;\n\t\tthis.codecIntializationDataSize = stream.readUint16();\n\t\tthis.codecIntializationData = stream.readUint8Array(this.codecIntializationDataSize);\n\t}\n});// file:src/parsing/vttC.js\nBoxParser.createBoxCtor(\"vttC\", \"WebVTTConfigurationBox\", function(stream) {\n\tthis.text = stream.readString(this.size - this.hdr_size);\n});\n\n// file:src/parsing/vvcC.js\nBoxParser.createFullBoxCtor(\"vvcC\", \"VvcConfigurationBox\", function (stream) {\n  var i, j;\n\n  // helper object to simplify extracting individual bits\n  var bitReader = {\n    held_bits: undefined,\n    num_held_bits: 0,\n\n    stream_read_1_bytes: function (strm) {\n      this.held_bits = strm.readUint8();\n      this.num_held_bits = 1 * 8;\n    },\n    stream_read_2_bytes: function (strm) {\n      this.held_bits = strm.readUint16();\n      this.num_held_bits = 2 * 8;\n    },\n\n    extract_bits: function (num_bits) {\n      var ret = (this.held_bits >> (this.num_held_bits - num_bits)) & ((1 << num_bits) - 1);\n      this.num_held_bits -= num_bits;\n      return ret;\n    }\n  };\n\n  // VvcDecoderConfigurationRecord\n  bitReader.stream_read_1_bytes(stream);\n  bitReader.extract_bits(5);  // reserved\n  this.lengthSizeMinusOne = bitReader.extract_bits(2);\n  this.ptl_present_flag = bitReader.extract_bits(1);\n\n  if (this.ptl_present_flag) {\n    bitReader.stream_read_2_bytes(stream);\n    this.ols_idx = bitReader.extract_bits(9);\n    this.num_sublayers = bitReader.extract_bits(3);\n    this.constant_frame_rate = bitReader.extract_bits(2);\n    this.chroma_format_idc = bitReader.extract_bits(2);\n\n    bitReader.stream_read_1_bytes(stream);\n    this.bit_depth_minus8 = bitReader.extract_bits(3);\n    bitReader.extract_bits(5);  // reserved\n\n    // VvcPTLRecord\n    {\n      bitReader.stream_read_2_bytes(stream);\n      bitReader.extract_bits(2);  // reserved\n      this.num_bytes_constraint_info = bitReader.extract_bits(6);\n      this.general_profile_idc = bitReader.extract_bits(7);\n      this.general_tier_flag = bitReader.extract_bits(1);\n\n      this.general_level_idc = stream.readUint8();\n\n      bitReader.stream_read_1_bytes(stream);\n      this.ptl_frame_only_constraint_flag = bitReader.extract_bits(1);\n      this.ptl_multilayer_enabled_flag = bitReader.extract_bits(1);\n\n      this.general_constraint_info = new Uint8Array(this.num_bytes_constraint_info);\n      if (this.num_bytes_constraint_info) {\n        for (i = 0; i < this.num_bytes_constraint_info - 1; i++) {\n          var cnstr1 = bitReader.extract_bits(6);\n          bitReader.stream_read_1_bytes(stream);\n          var cnstr2 = bitReader.extract_bits(2);\n\n          this.general_constraint_info[i] = ((cnstr1 << 2) | cnstr2);\n        }\n        this.general_constraint_info[this.num_bytes_constraint_info - 1] = bitReader.extract_bits(6);\n      } else {\n        //forbidden in spec!\n        bitReader.extract_bits(6);\n      }\n\n      if (this.num_sublayers > 1) {\n        bitReader.stream_read_1_bytes(stream);\n        this.ptl_sublayer_present_mask = 0;\n        for (j = this.num_sublayers - 2; j >= 0; --j) {\n          var val = bitReader.extract_bits(1);\n          this.ptl_sublayer_present_mask |= val << j;\n        }\n        for (j = this.num_sublayers; j <= 8 && this.num_sublayers > 1; ++j) {\n          bitReader.extract_bits(1);  // ptl_reserved_zero_bit\n        }\n\n        this.sublayer_level_idc = [];\n        for (j = this.num_sublayers - 2; j >= 0; --j) {\n          if (this.ptl_sublayer_present_mask & (1 << j)) {\n            this.sublayer_level_idc[j] = stream.readUint8();\n          }\n        }\n      }\n\n      this.ptl_num_sub_profiles = stream.readUint8();\n      this.general_sub_profile_idc = [];\n      if (this.ptl_num_sub_profiles) {\n        for (i = 0; i < this.ptl_num_sub_profiles; i++) {\n          this.general_sub_profile_idc.push(stream.readUint32());\n        }\n      }\n    }  // end VvcPTLRecord\n\n    this.max_picture_width = stream.readUint16();\n    this.max_picture_height = stream.readUint16();\n    this.avg_frame_rate = stream.readUint16();\n  }\n\n  var VVC_NALU_OPI = 12;\n  var VVC_NALU_DEC_PARAM = 13;\n\n  this.nalu_arrays = [];\n  var num_of_arrays = stream.readUint8();\n  for (i = 0; i < num_of_arrays; i++) {\n    var nalu_array = [];\n    this.nalu_arrays.push(nalu_array);\n\n    bitReader.stream_read_1_bytes(stream);\n    nalu_array.completeness = bitReader.extract_bits(1);\n    bitReader.extract_bits(2);  // reserved\n    nalu_array.nalu_type = bitReader.extract_bits(5);\n\n    var numNalus = 1;\n    if (nalu_array.nalu_type != VVC_NALU_DEC_PARAM && nalu_array.nalu_type != VVC_NALU_OPI) {\n      numNalus = stream.readUint16();\n    }\n\n    for (j = 0; j < numNalus; j++) {\n      var len = stream.readUint16();\n      nalu_array.push({\n        data: stream.readUint8Array(len),\n        length: len\n      });\n    }\n  }\n});\n// file:src/parsing/vvnC.js\nBoxParser.createFullBoxCtor(\"vvnC\", \"VvcNALUConfigBox\", function (stream) {\n  // VvcNALUConfigBox\n  var tmp = strm.readUint8();\n  this.lengthSizeMinusOne = (tmp & 0x3);\n});\n// file:src/box-codecs.js\nBoxParser.SampleEntry.prototype.isVideo = function() {\n\treturn false;\n}\n\nBoxParser.SampleEntry.prototype.isAudio = function() {\n\treturn false;\n}\n\nBoxParser.SampleEntry.prototype.isSubtitle = function() {\n\treturn false;\n}\n\nBoxParser.SampleEntry.prototype.isMetadata = function() {\n\treturn false;\n}\n\nBoxParser.SampleEntry.prototype.isHint = function() {\n\treturn false;\n}\n\nBoxParser.SampleEntry.prototype.getCodec = function() {\n\treturn this.type.replace('.','');\n}\n\nBoxParser.SampleEntry.prototype.getWidth = function() {\n\treturn \"\";\n}\n\nBoxParser.SampleEntry.prototype.getHeight = function() {\n\treturn \"\";\n}\n\nBoxParser.SampleEntry.prototype.getChannelCount = function() {\n\treturn \"\";\n}\n\nBoxParser.SampleEntry.prototype.getSampleRate = function() {\n\treturn \"\";\n}\n\nBoxParser.SampleEntry.prototype.getSampleSize = function() {\n\treturn \"\";\n}\n\nBoxParser.VisualSampleEntry.prototype.isVideo = function() {\n\treturn true;\n}\n\nBoxParser.VisualSampleEntry.prototype.getWidth = function() {\n\treturn this.width;\n}\n\nBoxParser.VisualSampleEntry.prototype.getHeight = function() {\n\treturn this.height;\n}\n\nBoxParser.AudioSampleEntry.prototype.isAudio = function() {\n\treturn true;\n}\n\nBoxParser.AudioSampleEntry.prototype.getChannelCount = function() {\n\treturn this.channel_count;\n}\n\nBoxParser.AudioSampleEntry.prototype.getSampleRate = function() {\n\treturn this.samplerate;\n}\n\nBoxParser.AudioSampleEntry.prototype.getSampleSize = function() {\n\treturn this.samplesize;\n}\n\nBoxParser.SubtitleSampleEntry.prototype.isSubtitle = function() {\n\treturn true;\n}\n\nBoxParser.MetadataSampleEntry.prototype.isMetadata = function() {\n\treturn true;\n}\n\n\nBoxParser.decimalToHex = function(d, padding) {\n\tvar hex = Number(d).toString(16);\n\tpadding = typeof (padding) === \"undefined\" || padding === null ? padding = 2 : padding;\n\twhile (hex.length < padding) {\n\t\thex = \"0\" + hex;\n\t}\n\treturn hex;\n}\n\nBoxParser.avc1SampleEntry.prototype.getCodec =\nBoxParser.avc2SampleEntry.prototype.getCodec =\nBoxParser.avc3SampleEntry.prototype.getCodec =\nBoxParser.avc4SampleEntry.prototype.getCodec = function() {\n\tvar baseCodec = BoxParser.SampleEntry.prototype.getCodec.call(this);\n\tif (this.avcC) {\n\t\treturn baseCodec+\".\"+BoxParser.decimalToHex(this.avcC.AVCProfileIndication)+\n\t\t\t\t\t\t  \"\"+BoxParser.decimalToHex(this.avcC.profile_compatibility)+\n\t\t\t\t\t\t  \"\"+BoxParser.decimalToHex(this.avcC.AVCLevelIndication);\n\t} else {\n\t\treturn baseCodec;\n\t}\n}\n\nBoxParser.hev1SampleEntry.prototype.getCodec =\nBoxParser.hvc1SampleEntry.prototype.getCodec = function() {\n\tvar i;\n\tvar baseCodec = BoxParser.SampleEntry.prototype.getCodec.call(this);\n\tif (this.hvcC) {\n\t\tbaseCodec += '.';\n\t\tswitch (this.hvcC.general_profile_space) {\n\t\t\tcase 0:\n\t\t\t\tbaseCodec += '';\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tbaseCodec += 'A';\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tbaseCodec += 'B';\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tbaseCodec += 'C';\n\t\t\t\tbreak;\n\t\t}\n\t\tbaseCodec += this.hvcC.general_profile_idc;\n\t\tbaseCodec += '.';\n\t\tvar val = this.hvcC.general_profile_compatibility;\n\t\tvar reversed = 0;\n\t\tfor (i=0; i<32; i++) {\n\t\t\treversed |= val & 1;\n\t\t\tif (i==31) break;\n\t\t\treversed <<= 1;\n\t\t\tval >>=1;\n\t\t}\n\t\tbaseCodec += BoxParser.decimalToHex(reversed, 0);\n\t\tbaseCodec += '.';\n\t\tif (this.hvcC.general_tier_flag === 0) {\n\t\t\tbaseCodec += 'L';\n\t\t} else {\n\t\t\tbaseCodec += 'H';\n\t\t}\n\t\tbaseCodec += this.hvcC.general_level_idc;\n\t\tvar hasByte = false;\n\t\tvar constraint_string = \"\";\n\t\tfor (i = 5; i >= 0; i--) {\n\t\t\tif (this.hvcC.general_constraint_indicator[i] || hasByte) {\n\t\t\t\tconstraint_string = \".\"+BoxParser.decimalToHex(this.hvcC.general_constraint_indicator[i], 0)+constraint_string;\n\t\t\t\thasByte = true;\n\t\t\t}\n\t\t}\n\t\tbaseCodec += constraint_string;\n\t}\n\treturn baseCodec;\n}\n\nBoxParser.vvc1SampleEntry.prototype.getCodec =\nBoxParser.vvi1SampleEntry.prototype.getCodec = function () {\n\tvar i;\n\tvar baseCodec = BoxParser.SampleEntry.prototype.getCodec.call(this);\n\tif (this.vvcC) {\n\t\tbaseCodec += '.' + this.vvcC.general_profile_idc;\n\t\tif (this.vvcC.general_tier_flag) {\n\t\t\tbaseCodec += '.H';\n\t\t} else {\n\t\t\tbaseCodec += '.L';\n\t\t}\n\t\tbaseCodec += this.vvcC.general_level_idc;\n\n\t\tvar constraint_string = \"\";\n\t\tif (this.vvcC.general_constraint_info) {\n\t\t\tvar bytes = [];\n\t\t\tvar byte = 0;\n\t\t\tbyte |= this.vvcC.ptl_frame_only_constraint << 7;\n\t\t\tbyte |= this.vvcC.ptl_multilayer_enabled << 6;\n\t\t\tvar last_nonzero;\n\t\t\tfor (i = 0; i < this.vvcC.general_constraint_info.length; ++i) {\n\t\t\t\tbyte |= (this.vvcC.general_constraint_info[i] >> 2) & 0x3f;\n\t\t\t\tbytes.push(byte);\n\t\t\t\tif (byte) {\n\t\t\t\t\tlast_nonzero = i;\n\t\t\t\t}\n\n\t\t\t\tbyte = (this.vvcC.general_constraint_info[i] >> 2) & 0x03;\n\t\t\t}\n\n\t\t\tif (last_nonzero === undefined) {\n\t\t\t\tconstraint_string = \".CA\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconstraint_string = \".C\"\n\t\t\t\tvar base32_chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\n\t\t\t\tvar held_bits = 0;\n\t\t\t\tvar num_held_bits = 0;\n\t\t\t\tfor (i = 0; i <= last_nonzero; ++i) {\n\t\t\t\t\theld_bits = (held_bits << 8) | bytes[i];\n\t\t\t\t\tnum_held_bits += 8;\n\n\t\t\t\t\twhile (num_held_bits >= 5) {\n\t\t\t\t\t\tvar val = (held_bits >> (num_held_bits - 5)) & 0x1f;\n\t\t\t\t\t\tconstraint_string += base32_chars[val];\n\n\t\t\t\t\t\tnum_held_bits -= 5;\n\t\t\t\t\t\theld_bits &= (1 << num_held_bits) - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (num_held_bits) {\n\t\t\t\t\theld_bits <<= (5 - num_held_bits);  // right-pad with zeros to 5 bits (is this correct?)\n\t\t\t\t\tconstraint_string += base32_chars[held_bits & 0x1f];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tbaseCodec += constraint_string;\n\t}\n\treturn baseCodec;\n}\n\nBoxParser.mp4aSampleEntry.prototype.getCodec = function() {\n\tvar baseCodec = BoxParser.SampleEntry.prototype.getCodec.call(this);\n\tif (this.esds && this.esds.esd) {\n\t\tvar oti = this.esds.esd.getOTI();\n\t\tvar dsi = this.esds.esd.getAudioConfig();\n\t\treturn baseCodec+\".\"+BoxParser.decimalToHex(oti)+(dsi ? \".\"+dsi: \"\");\n\t} else {\n\t\treturn baseCodec;\n\t}\n}\n\nBoxParser.stxtSampleEntry.prototype.getCodec = function() {\n\tvar baseCodec = BoxParser.SampleEntry.prototype.getCodec.call(this);\n\tif(this.mime_format) {\n\t\treturn baseCodec + \".\" + this.mime_format;\n\t} else {\n\t\treturn baseCodec\n\t}\n}\n\nBoxParser.vp08SampleEntry.prototype.getCodec =\nBoxParser.vp09SampleEntry.prototype.getCodec = function() {\n\tvar baseCodec = BoxParser.SampleEntry.prototype.getCodec.call(this);\n\tvar level = this.vpcC.level;\n\tif (level == 0) {\n\t\tlevel = \"00\";\n\t}\n\tvar bitDepth = this.vpcC.bitDepth;\n\tif (bitDepth == 8) {\n\t\tbitDepth = \"08\";\n\t}\n\treturn baseCodec + \".0\" + this.vpcC.profile + \".\" + level + \".\" + bitDepth;\n}\n\nBoxParser.av01SampleEntry.prototype.getCodec = function() {\n\tvar baseCodec = BoxParser.SampleEntry.prototype.getCodec.call(this);\n\tvar level = this.av1C.seq_level_idx_0;\n\tif (level < 10) {\n\t\tlevel = \"0\" + level;\n\t}\n\tvar bitdepth;\n\tif (this.av1C.seq_profile === 2 && this.av1C.high_bitdepth === 1) {\n\t\tbitdepth = (this.av1C.twelve_bit === 1) ? \"12\" : \"10\";\n\t} else if ( this.av1C.seq_profile <= 2 ) {\n\t\tbitdepth = (this.av1C.high_bitdepth === 1) ? \"10\" : \"08\";\n\t}\n\t// TODO need to parse the SH to find color config\n\treturn baseCodec+\".\"+this.av1C.seq_profile+\".\"+level+(this.av1C.seq_tier_0?\"H\":\"M\")+\".\"+bitdepth;//+\".\"+this.av1C.monochrome+\".\"+this.av1C.chroma_subsampling_x+\"\"+this.av1C.chroma_subsampling_y+\"\"+this.av1C.chroma_sample_position;\n}\n// file:src/box-write.js\n/* \n * Copyright (c) Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nBoxParser.Box.prototype.writeHeader = function(stream, msg) {\n\tthis.size += 8;\n\tif (this.size > MAX_SIZE) {\n\t\tthis.size += 8;\n\t}\n\tif (this.type === \"uuid\") {\n\t\tthis.size += 16;\n\t}\n\tLog.debug(\"BoxWriter\", \"Writing box \"+this.type+\" of size: \"+this.size+\" at position \"+stream.getPosition()+(msg || \"\"));\n\tif (this.size > MAX_SIZE) {\n\t\tstream.writeUint32(1);\n\t} else {\n\t\tthis.sizePosition = stream.getPosition();\n\t\tstream.writeUint32(this.size);\n\t}\n\tstream.writeString(this.type, null, 4);\n\tif (this.type === \"uuid\") {\n\t\tstream.writeUint8Array(this.uuid);\n\t}\n\tif (this.size > MAX_SIZE) {\n\t\tstream.writeUint64(this.size);\n\t} \n}\n\nBoxParser.FullBox.prototype.writeHeader = function(stream) {\n\tthis.size += 4;\n\tBoxParser.Box.prototype.writeHeader.call(this, stream, \" v=\"+this.version+\" f=\"+this.flags);\n\tstream.writeUint8(this.version);\n\tstream.writeUint24(this.flags);\n}\n\nBoxParser.Box.prototype.write = function(stream) {\n\tif (this.type === \"mdat\") {\n\t\t/* TODO: fix this */\n\t\tif (this.data) {\n\t\t\tthis.size = this.data.length;\n\t\t\tthis.writeHeader(stream);\n\t\t\tstream.writeUint8Array(this.data);\n\t\t}\n\t} else {\n\t\tthis.size = (this.data ? this.data.length : 0);\n\t\tthis.writeHeader(stream);\n\t\tif (this.data) {\n\t\t\tstream.writeUint8Array(this.data);\n\t\t}\n\t}\n}\n\nBoxParser.ContainerBox.prototype.write = function(stream) {\n\tthis.size = 0;\n\tthis.writeHeader(stream);\n\tfor (var i=0; i<this.boxes.length; i++) {\n\t\tif (this.boxes[i]) {\n\t\t\tthis.boxes[i].write(stream);\n\t\t\tthis.size += this.boxes[i].size;\n\t\t}\n\t}\n\t/* adjusting the size, now that all sub-boxes are known */\n\tLog.debug(\"BoxWriter\", \"Adjusting box \"+this.type+\" with new size \"+this.size);\n\tstream.adjustUint32(this.sizePosition, this.size);\n}\n\nBoxParser.TrackReferenceTypeBox.prototype.write = function(stream) {\n\tthis.size = this.track_ids.length*4;\n\tthis.writeHeader(stream);\n\tstream.writeUint32Array(this.track_ids);\n}\n\n// file:src/writing/avcC.js\nBoxParser.avcCBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.size = 7;\n\tfor (i = 0; i < this.SPS.length; i++) {\n\t\tthis.size += 2+this.SPS[i].length;\n\t}\n\tfor (i = 0; i < this.PPS.length; i++) {\n\t\tthis.size += 2+this.PPS[i].length;\n\t}\n\tif (this.ext) {\n\t\tthis.size += this.ext.length;\n\t}\n\tthis.writeHeader(stream);\n\tstream.writeUint8(this.configurationVersion);\n\tstream.writeUint8(this.AVCProfileIndication);\n\tstream.writeUint8(this.profile_compatibility);\n\tstream.writeUint8(this.AVCLevelIndication);\n\tstream.writeUint8(this.lengthSizeMinusOne + (63<<2));\n\tstream.writeUint8(this.SPS.length + (7<<5));\n\tfor (i = 0; i < this.SPS.length; i++) {\n\t\tstream.writeUint16(this.SPS[i].length);\n\t\tstream.writeUint8Array(this.SPS[i].nalu);\n\t}\n\tstream.writeUint8(this.PPS.length);\n\tfor (i = 0; i < this.PPS.length; i++) {\n\t\tstream.writeUint16(this.PPS[i].length);\n\t\tstream.writeUint8Array(this.PPS[i].nalu);\n\t}\n\tif (this.ext) {\n\t\tstream.writeUint8Array(this.ext);\n\t}\n}\n\n// file:src/writing/co64.js\nBoxParser.co64Box.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4+8*this.chunk_offsets.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.chunk_offsets.length);\n\tfor(i=0; i<this.chunk_offsets.length; i++) {\n\t\tstream.writeUint64(this.chunk_offsets[i]);\n\t}\n}\n\n// file:src/writing/cslg.js\nBoxParser.cslgBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4*5;\n\tthis.writeHeader(stream);\n\tstream.writeInt32(this.compositionToDTSShift);\n\tstream.writeInt32(this.leastDecodeToDisplayDelta);\n\tstream.writeInt32(this.greatestDecodeToDisplayDelta);\n\tstream.writeInt32(this.compositionStartTime);\n\tstream.writeInt32(this.compositionEndTime);\n}\n\n// file:src/writing/ctts.js\nBoxParser.cttsBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4+8*this.sample_counts.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.sample_counts.length);\n\tfor(i=0; i<this.sample_counts.length; i++) {\n\t\tstream.writeUint32(this.sample_counts[i]);\n\t\tif (this.version === 1) {\n\t\t\tstream.writeInt32(this.sample_offsets[i]); /* signed */\n\t\t} else {\t\t\t\n\t\t\tstream.writeUint32(this.sample_offsets[i]); /* unsigned */\n\t\t}\n\t}\n}\n\n// file:src/writing/dref.js\nBoxParser.drefBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4; //\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.entries.length);\n\tfor (var i = 0; i < this.entries.length; i++) {\n\t\tthis.entries[i].write(stream);\n\t\tthis.size += this.entries[i].size;\n\t}\t\n\t/* adjusting the size, now that all sub-boxes are known */\n\tLog.debug(\"BoxWriter\", \"Adjusting box \"+this.type+\" with new size \"+this.size);\n\tstream.adjustUint32(this.sizePosition, this.size);\n}\n\n// file:src/writing/elng.js\nBoxParser.elngBox.prototype.write = function(stream) {\n\tthis.version = 0;\t\n\tthis.flags = 0;\n\tthis.size = this.extended_language.length;\n\tthis.writeHeader(stream);\n\tstream.writeString(this.extended_language);\n}\n\n// file:src/writing/elst.js\nBoxParser.elstBox.prototype.write = function(stream) {\n\tthis.version = 0;\t\n\tthis.flags = 0;\n\tthis.size = 4+12*this.entries.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.entries.length);\n\tfor (var i = 0; i < this.entries.length; i++) {\n\t\tvar entry = this.entries[i];\n\t\tstream.writeUint32(entry.segment_duration);\n\t\tstream.writeInt32(entry.media_time);\n\t\tstream.writeInt16(entry.media_rate_integer);\n\t\tstream.writeInt16(entry.media_rate_fraction);\n\t}\n}\n\n// file:src/writing/emsg.js\nBoxParser.emsgBox.prototype.write = function(stream) {\n\tthis.version = 0;\t\n\tthis.flags = 0;\n\tthis.size = 4*4+this.message_data.length+(this.scheme_id_uri.length+1)+(this.value.length+1);\n\tthis.writeHeader(stream);\n\tstream.writeCString(this.scheme_id_uri);\n\tstream.writeCString(this.value);\n\tstream.writeUint32(this.timescale);\n\tstream.writeUint32(this.presentation_time_delta);\n\tstream.writeUint32(this.event_duration);\n\tstream.writeUint32(this.id);\n\tstream.writeUint8Array(this.message_data);\n}\n\n// file:src/writing/ftyp.js\nBoxParser.ftypBox.prototype.write = function(stream) {\n\tthis.size = 8+4*this.compatible_brands.length;\n\tthis.writeHeader(stream);\n\tstream.writeString(this.major_brand, null, 4);\n\tstream.writeUint32(this.minor_version);\n\tfor (var i = 0; i < this.compatible_brands.length; i++) {\n\t\tstream.writeString(this.compatible_brands[i], null, 4);\n\t}\n}\n\n// file:src/writing/hdlr.js\nBoxParser.hdlrBox.prototype.write = function(stream) {\n\tthis.size = 5*4+this.name.length+1;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(0);\n\tstream.writeString(this.handler, null, 4);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeCString(this.name);\n}\n\n// file:src/writing/hvcC.js\nBoxParser.hvcCBox.prototype.write = function(stream) {\n    var i,j;\n    this.size = 23;\n\n    for (i = 0; i < this.nalu_arrays.length; i++) {\n      this.size += 3;\n      for (j = 0; j < this.nalu_arrays[i].length; j++) {\n        this.size += 2 + this.nalu_arrays[i][j].data.length;\n      }\n    }\n\n    this.writeHeader(stream);\n\n    stream.writeUint8(this.configurationVersion);\n    stream.writeUint8((this.general_profile_space << 6) +\n                      (this.general_tier_flag << 5) +\n                      this.general_profile_idc);\n    stream.writeUint32(this.general_profile_compatibility);\n    stream.writeUint8Array(this.general_constraint_indicator);\n    stream.writeUint8(this.general_level_idc);\n    stream.writeUint16(this.min_spatial_segmentation_idc + (15<<24));\n    stream.writeUint8(this.parallelismType + (63<<2));\n    stream.writeUint8(this.chroma_format_idc + (63<<2));\n    stream.writeUint8(this.bit_depth_luma_minus8 + (31<<3));\n    stream.writeUint8(this.bit_depth_chroma_minus8 + (31<<3));\n    stream.writeUint16(this.avgFrameRate);\n    stream.writeUint8((this.constantFrameRate<<6) +\n                   (this.numTemporalLayers<<3) +\n                   (this.temporalIdNested<<2) +\n                   this.lengthSizeMinusOne);\n    stream.writeUint8(this.nalu_arrays.length);\n    for (i = 0; i < this.nalu_arrays.length; i++) {\n      // bit(1) array_completeness + bit(1) reserved = 0 + bit(6) nal_unit_type\n      stream.writeUint8((this.nalu_arrays[i].completeness<<7) +\n                         this.nalu_arrays[i].nalu_type);\n      stream.writeUint16(this.nalu_arrays[i].length);\n      for (j = 0; j < this.nalu_arrays[i].length; j++) {\n        stream.writeUint16(this.nalu_arrays[i][j].data.length);\n        stream.writeUint8Array(this.nalu_arrays[i][j].data);\n      }\n    }\n}\n// file:src/writing/kind.js\nBoxParser.kindBox.prototype.write = function(stream) {\n\tthis.version = 0;\t\n\tthis.flags = 0;\n\tthis.size = (this.schemeURI.length+1)+(this.value.length+1);\n\tthis.writeHeader(stream);\n\tstream.writeCString(this.schemeURI);\n\tstream.writeCString(this.value);\n}\n\n// file:src/writing/mdhd.js\nBoxParser.mdhdBox.prototype.write = function(stream) {\n\tthis.size = 4*4+2*2;\n\tthis.flags = 0;\n\tthis.version = 0;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.creation_time);\n\tstream.writeUint32(this.modification_time);\n\tstream.writeUint32(this.timescale);\n\tstream.writeUint32(this.duration);\n\tstream.writeUint16(this.language);\n\tstream.writeUint16(0);\n}\n\n// file:src/writing/mehd.js\nBoxParser.mehdBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.fragment_duration);\n}\n\n// file:src/writing/mfhd.js\nBoxParser.mfhdBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.sequence_number);\n}\n\n// file:src/writing/mvhd.js\nBoxParser.mvhdBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 23*4+2*2;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.creation_time);\n\tstream.writeUint32(this.modification_time);\n\tstream.writeUint32(this.timescale);\n\tstream.writeUint32(this.duration);\n\tstream.writeUint32(this.rate);\n\tstream.writeUint16(this.volume<<8);\n\tstream.writeUint16(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32Array(this.matrix);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(this.next_track_id);\n}\n\n// file:src/writing/sampleentry.js\nBoxParser.SampleEntry.prototype.writeHeader = function(stream) {\n\tthis.size = 8;\n\tBoxParser.Box.prototype.writeHeader.call(this, stream);\n\tstream.writeUint8(0);\n\tstream.writeUint8(0);\n\tstream.writeUint8(0);\n\tstream.writeUint8(0);\n\tstream.writeUint8(0);\n\tstream.writeUint8(0);\n\tstream.writeUint16(this.data_reference_index);\n}\n\nBoxParser.SampleEntry.prototype.writeFooter = function(stream) {\n\tfor (var i=0; i<this.boxes.length; i++) {\n\t\tthis.boxes[i].write(stream);\n\t\tthis.size += this.boxes[i].size;\n\t}\n\tLog.debug(\"BoxWriter\", \"Adjusting box \"+this.type+\" with new size \"+this.size);\n\tstream.adjustUint32(this.sizePosition, this.size);\t\n}\n\nBoxParser.SampleEntry.prototype.write = function(stream) {\n\tthis.writeHeader(stream);\n\tstream.writeUint8Array(this.data);\n\tthis.size += this.data.length;\n\tLog.debug(\"BoxWriter\", \"Adjusting box \"+this.type+\" with new size \"+this.size);\n\tstream.adjustUint32(this.sizePosition, this.size);\t\n}\n\nBoxParser.VisualSampleEntry.prototype.write = function(stream) {\n\tthis.writeHeader(stream);\n\tthis.size += 2*7+6*4+32;\n\tstream.writeUint16(0); \n\tstream.writeUint16(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint16(this.width);\n\tstream.writeUint16(this.height);\n\tstream.writeUint32(this.horizresolution);\n\tstream.writeUint32(this.vertresolution);\n\tstream.writeUint32(0);\n\tstream.writeUint16(this.frame_count);\n\tstream.writeUint8(Math.min(31, this.compressorname.length));\n\tstream.writeString(this.compressorname, null, 31);\n\tstream.writeUint16(this.depth);\n\tstream.writeInt16(-1);\n\tthis.writeFooter(stream);\n}\n\nBoxParser.AudioSampleEntry.prototype.write = function(stream) {\n\tthis.writeHeader(stream);\n\tthis.size += 2*4+3*4;\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint16(this.channel_count);\n\tstream.writeUint16(this.samplesize);\n\tstream.writeUint16(0);\n\tstream.writeUint16(0);\n\tstream.writeUint32(this.samplerate<<16);\n\tthis.writeFooter(stream);\n}\n\nBoxParser.stppSampleEntry.prototype.write = function(stream) {\n\tthis.writeHeader(stream);\n\tthis.size += this.namespace.length+1+\n\t\t\t\t this.schema_location.length+1+\n\t\t\t\t this.auxiliary_mime_types.length+1;\n\tstream.writeCString(this.namespace);\n\tstream.writeCString(this.schema_location);\n\tstream.writeCString(this.auxiliary_mime_types);\n\tthis.writeFooter(stream);\n}\n\n// file:src/writing/samplegroups/samplegroup.js\nBoxParser.SampleGroupEntry.prototype.write = function(stream) {\n\tstream.writeUint8Array(this.data);\n}\n\n// file:src/writing/sbgp.js\nBoxParser.sbgpBox.prototype.write = function(stream) {\n\tthis.version = 1;\t\n\tthis.flags = 0;\n\tthis.size = 12+8*this.entries.length;\n\tthis.writeHeader(stream);\n\tstream.writeString(this.grouping_type, null, 4);\n\tstream.writeUint32(this.grouping_type_parameter);\n\tstream.writeUint32(this.entries.length);\n\tfor (var i = 0; i < this.entries.length; i++) {\n\t\tvar entry = this.entries[i];\n\t\tstream.writeInt32(entry.sample_count);\n\t\tstream.writeInt32(entry.group_description_index);\n\t}\n}\n\n// file:src/writing/sgpd.js\nBoxParser.sgpdBox.prototype.write = function(stream) {\n\tvar i;\n\tvar entry;\n\t// leave version as read\n\t// this.version;\n\tthis.flags = 0;\n\tthis.size = 12;\n\tfor (i = 0; i < this.entries.length; i++) {\n\t\tentry = this.entries[i];\n\t\tif (this.version === 1) {\n\t\t\tif (this.default_length === 0) {\n\t\t\t\tthis.size += 4;\n\t\t\t}\n\t\t\tthis.size += entry.data.length;\n\t\t}\n\t}\n\tthis.writeHeader(stream);\n\tstream.writeString(this.grouping_type, null, 4);\n\tif (this.version === 1) {\n\t\tstream.writeUint32(this.default_length);\n\t}\n\tif (this.version >= 2) {\n\t\tstream.writeUint32(this.default_sample_description_index);\n\t}\n\tstream.writeUint32(this.entries.length);\n\tfor (i = 0; i < this.entries.length; i++) {\n\t\tentry = this.entries[i];\n\t\tif (this.version === 1) {\n\t\t\tif (this.default_length === 0) {\n\t\t\t\tstream.writeUint32(entry.description_length);\n\t\t\t}\n\t\t}\n\t\tentry.write(stream);\n\t}\n}\n\n\n// file:src/writing/sidx.js\nBoxParser.sidxBox.prototype.write = function(stream) {\n\tthis.version = 0;\t\n\tthis.flags = 0;\n\tthis.size = 4*4+2+2+12*this.references.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.reference_ID);\n\tstream.writeUint32(this.timescale);\n\tstream.writeUint32(this.earliest_presentation_time);\n\tstream.writeUint32(this.first_offset);\n\tstream.writeUint16(0);\n\tstream.writeUint16(this.references.length);\n\tfor (var i = 0; i < this.references.length; i++) {\n\t\tvar ref = this.references[i];\n\t\tstream.writeUint32(ref.reference_type << 31 | ref.referenced_size);\n\t\tstream.writeUint32(ref.subsegment_duration);\n\t\tstream.writeUint32(ref.starts_with_SAP << 31 | ref.SAP_type << 28 | ref.SAP_delta_time);\n\t}\n}\n\n// file:src/writing/smhd.js\nBoxParser.smhdBox.prototype.write = function(stream) {\n  var i;\n  this.version = 0;\n  this.flags = 1;\n  this.size = 4;\n  this.writeHeader(stream);\n  stream.writeUint16(this.balance);\n  stream.writeUint16(0);\n}\n// file:src/writing/stco.js\nBoxParser.stcoBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4+4*this.chunk_offsets.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.chunk_offsets.length);\n\tstream.writeUint32Array(this.chunk_offsets);\n}\n\n// file:src/writing/stsc.js\nBoxParser.stscBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4+12*this.first_chunk.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.first_chunk.length);\n\tfor(i=0; i<this.first_chunk.length; i++) {\n\t\tstream.writeUint32(this.first_chunk[i]);\n\t\tstream.writeUint32(this.samples_per_chunk[i]);\n\t\tstream.writeUint32(this.sample_description_index[i]);\n\t}\n}\n\n// file:src/writing/stsd.js\nBoxParser.stsdBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 0;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.entries.length);\n\tthis.size += 4;\n\tfor (i = 0; i < this.entries.length; i++) {\n\t\tthis.entries[i].write(stream);\n\t\tthis.size += this.entries[i].size;\n\t}\n\t/* adjusting the size, now that all sub-boxes are known */\n\tLog.debug(\"BoxWriter\", \"Adjusting box \"+this.type+\" with new size \"+this.size);\n\tstream.adjustUint32(this.sizePosition, this.size);\n}\n\n// file:src/writing/stsh.js\nBoxParser.stshBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4+8*this.shadowed_sample_numbers.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.shadowed_sample_numbers.length);\n\tfor(i=0; i<this.shadowed_sample_numbers.length; i++) {\n\t\tstream.writeUint32(this.shadowed_sample_numbers[i]);\n\t\tstream.writeUint32(this.sync_sample_numbers[i]);\n\t}\n}\n\n// file:src/writing/stss.js\nBoxParser.stssBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4+4*this.sample_numbers.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.sample_numbers.length);\n\tstream.writeUint32Array(this.sample_numbers);\n}\n\n// file:src/writing/stsz.js\nBoxParser.stszBox.prototype.write = function(stream) {\n\tvar i;\n\tvar constant = true;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tif (this.sample_sizes.length > 0) {\n\t\ti = 0;\n\t\twhile (i+1 < this.sample_sizes.length) {\n\t\t\tif (this.sample_sizes[i+1] !==  this.sample_sizes[0]) {\n\t\t\t\tconstant = false;\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconstant = false;\n\t}\n\tthis.size = 8;\n\tif (!constant) {\n\t\tthis.size += 4*this.sample_sizes.length;\n\t}\n\tthis.writeHeader(stream);\n\tif (!constant) {\n\t\tstream.writeUint32(0);\n\t} else {\n\t\tstream.writeUint32(this.sample_sizes[0]);\n\t}\n\tstream.writeUint32(this.sample_sizes.length);\n\tif (!constant) {\n\t\tstream.writeUint32Array(this.sample_sizes);\n\t}\t\n}\n\n// file:src/writing/stts.js\nBoxParser.sttsBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4+8*this.sample_counts.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.sample_counts.length);\n\tfor(i=0; i<this.sample_counts.length; i++) {\n\t\tstream.writeUint32(this.sample_counts[i]);\n\t\tstream.writeUint32(this.sample_deltas[i]);\n\t}\n}\n\n// file:src/writing/tfdt.js\nBoxParser.tfdtBox.prototype.write = function(stream) {\n\tvar UINT32_MAX = Math.pow(2, 32) - 1;\n\t// use version 1 if baseMediaDecodeTime does not fit 32 bits\n\tthis.version = this.baseMediaDecodeTime > UINT32_MAX ? 1 : 0;\n\tthis.flags = 0;\n\tthis.size = 4;\n\tif (this.version === 1) {\n\t\tthis.size += 4;\n\t}\n\tthis.writeHeader(stream);\n\tif (this.version === 1) {\n\t\tstream.writeUint64(this.baseMediaDecodeTime);\n\t} else {\n\t\tstream.writeUint32(this.baseMediaDecodeTime);\n\t}\n}\n\n// file:src/writing/tfhd.js\nBoxParser.tfhdBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.size = 4;\n\tif (this.flags & BoxParser.TFHD_FLAG_BASE_DATA_OFFSET) {\n\t\tthis.size += 8;\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_DESC) {\n\t\tthis.size += 4;\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_DUR) {\n\t\tthis.size += 4;\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_SIZE) {\n\t\tthis.size += 4;\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_FLAGS) {\n\t\tthis.size += 4;\n\t}\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.track_id);\n\tif (this.flags & BoxParser.TFHD_FLAG_BASE_DATA_OFFSET) {\n\t\tstream.writeUint64(this.base_data_offset);\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_DESC) {\n\t\tstream.writeUint32(this.default_sample_description_index);\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_DUR) {\n\t\tstream.writeUint32(this.default_sample_duration);\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_SIZE) {\n\t\tstream.writeUint32(this.default_sample_size);\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_FLAGS) {\n\t\tstream.writeUint32(this.default_sample_flags);\n\t}\n}\n\n// file:src/writing/tkhd.js\nBoxParser.tkhdBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\t//this.flags = 0;\n\tthis.size = 4*18+2*4;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.creation_time);\n\tstream.writeUint32(this.modification_time);\n\tstream.writeUint32(this.track_id);\n\tstream.writeUint32(0);\n\tstream.writeUint32(this.duration);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeInt16(this.layer);\n\tstream.writeInt16(this.alternate_group);\n\tstream.writeInt16(this.volume<<8);\n\tstream.writeUint16(0);\n\tstream.writeInt32Array(this.matrix);\n\tstream.writeUint32(this.width);\n\tstream.writeUint32(this.height);\n}\n\n// file:src/writing/trex.js\nBoxParser.trexBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4*5;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.track_id);\n\tstream.writeUint32(this.default_sample_description_index);\n\tstream.writeUint32(this.default_sample_duration);\n\tstream.writeUint32(this.default_sample_size);\n\tstream.writeUint32(this.default_sample_flags);\n}\n\n// file:src/writing/trun.js\nBoxParser.trunBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.size = 4;\n\tif (this.flags & BoxParser.TRUN_FLAGS_DATA_OFFSET) {\n\t\tthis.size += 4;\n\t}\n\tif (this.flags & BoxParser.TRUN_FLAGS_FIRST_FLAG) {\n\t\tthis.size += 4;\n\t}\n\tif (this.flags & BoxParser.TRUN_FLAGS_DURATION) {\n\t\tthis.size += 4*this.sample_duration.length;\n\t}\n\tif (this.flags & BoxParser.TRUN_FLAGS_SIZE) {\n\t\tthis.size += 4*this.sample_size.length;\n\t}\n\tif (this.flags & BoxParser.TRUN_FLAGS_FLAGS) {\n\t\tthis.size += 4*this.sample_flags.length;\n\t}\n\tif (this.flags & BoxParser.TRUN_FLAGS_CTS_OFFSET) {\n\t\tthis.size += 4*this.sample_composition_time_offset.length;\n\t}\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.sample_count);\n\tif (this.flags & BoxParser.TRUN_FLAGS_DATA_OFFSET) {\n\t\tthis.data_offset_position = stream.getPosition();\n\t\tstream.writeInt32(this.data_offset); //signed\n\t}\n\tif (this.flags & BoxParser.TRUN_FLAGS_FIRST_FLAG) {\n\t\tstream.writeUint32(this.first_sample_flags);\n\t}\n\tfor (var i = 0; i < this.sample_count; i++) {\n\t\tif (this.flags & BoxParser.TRUN_FLAGS_DURATION) {\n\t\t\tstream.writeUint32(this.sample_duration[i]);\n\t\t}\n\t\tif (this.flags & BoxParser.TRUN_FLAGS_SIZE) {\n\t\t\tstream.writeUint32(this.sample_size[i]);\n\t\t}\n\t\tif (this.flags & BoxParser.TRUN_FLAGS_FLAGS) {\n\t\t\tstream.writeUint32(this.sample_flags[i]);\n\t\t}\n\t\tif (this.flags & BoxParser.TRUN_FLAGS_CTS_OFFSET) {\n\t\t\tif (this.version === 0) {\n\t\t\t\tstream.writeUint32(this.sample_composition_time_offset[i]);\n\t\t\t} else {\n\t\t\t\tstream.writeInt32(this.sample_composition_time_offset[i]); //signed\n\t\t\t}\n\t\t}\n\t}\t\t\n}\n\n// file:src/writing/url.js\nBoxParser[\"url Box\"].prototype.write = function(stream) {\n\tthis.version = 0;\t\n\tif (this.location) {\n\t\tthis.flags = 0;\n\t\tthis.size = this.location.length+1;\n\t} else {\n\t\tthis.flags = 0x000001;\n\t\tthis.size = 0;\n\t}\n\tthis.writeHeader(stream);\n\tif (this.location) {\n\t\tstream.writeCString(this.location);\n\t}\n}\n\n// file:src/writing/urn.js\nBoxParser[\"urn Box\"].prototype.write = function(stream) {\n\tthis.version = 0;\t\n\tthis.flags = 0;\n\tthis.size = this.name.length+1+(this.location ? this.location.length+1 : 0);\n\tthis.writeHeader(stream);\n\tstream.writeCString(this.name);\n\tif (this.location) {\n\t\tstream.writeCString(this.location);\n\t}\n}\n\n// file:src/writing/vmhd.js\nBoxParser.vmhdBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 1;\n\tthis.size = 8;\n\tthis.writeHeader(stream);\n\tstream.writeUint16(this.graphicsmode);\n\tstream.writeUint16Array(this.opcolor);\n}\n\n// file:src/box-unpack.js\n/* \n * Copyright (c) Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nBoxParser.cttsBox.prototype.unpack = function(samples) {\n\tvar i, j, k;\n\tk = 0;\n\tfor (i = 0; i < this.sample_counts.length; i++) {\n\t\tfor (j = 0; j < this.sample_counts[i]; j++) {\n\t\t\tsamples[k].pts = samples[k].dts + this.sample_offsets[i];\n\t\t\tk++;\n\t\t}\n\t}\n}\n\nBoxParser.sttsBox.prototype.unpack = function(samples) {\n\tvar i, j, k;\n\tk = 0;\n\tfor (i = 0; i < this.sample_counts.length; i++) {\n\t\tfor (j = 0; j < this.sample_counts[i]; j++) {\n\t\t\tif (k === 0) {\n\t\t\t\tsamples[k].dts = 0;\n\t\t\t} else {\n\t\t\t\tsamples[k].dts = samples[k-1].dts + this.sample_deltas[i];\n\t\t\t}\n\t\t\tk++;\n\t\t}\n\t}\n}\n\nBoxParser.stcoBox.prototype.unpack = function(samples) {\n\tvar i;\n\tfor (i = 0; i < this.chunk_offsets.length; i++) {\n\t\tsamples[i].offset = this.chunk_offsets[i];\n\t}\n}\n\nBoxParser.stscBox.prototype.unpack = function(samples) {\n\tvar i, j, k, l, m;\n\tl = 0;\n\tm = 0;\n\tfor (i = 0; i < this.first_chunk.length; i++) {\n\t\tfor (j = 0; j < (i+1 < this.first_chunk.length ? this.first_chunk[i+1] : Infinity); j++) {\n\t\t\tm++;\n\t\t\tfor (k = 0; k < this.samples_per_chunk[i]; k++) {\n\t\t\t\tif (samples[l]) {\n\t\t\t\t\tsamples[l].description_index = this.sample_description_index[i];\n\t\t\t\t\tsamples[l].chunk_index = m;\n\t\t\t\t} else {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tl++;\n\t\t\t}\t\t\t\n\t\t}\n\t}\n}\n\nBoxParser.stszBox.prototype.unpack = function(samples) {\n\tvar i;\n\tfor (i = 0; i < this.sample_sizes.length; i++) {\n\t\tsamples[i].size = this.sample_sizes[i];\n\t}\n}\n// file:src/box-diff.js\n\nBoxParser.DIFF_BOXES_PROP_NAMES = [ \"boxes\", \"entries\", \"references\", \"subsamples\",\n\t\t\t\t\t \t \"items\", \"item_infos\", \"extents\", \"associations\",\n\t\t\t\t\t \t \"subsegments\", \"ranges\", \"seekLists\", \"seekPoints\",\n\t\t\t\t\t \t \"esd\", \"levels\"];\n\nBoxParser.DIFF_PRIMITIVE_ARRAY_PROP_NAMES = [ \"compatible_brands\", \"matrix\", \"opcolor\", \"sample_counts\", \"sample_deltas\",\n\"first_chunk\", \"samples_per_chunk\", \"sample_sizes\", \"chunk_offsets\", \"sample_offsets\", \"sample_description_index\", \"sample_duration\" ];\n\nBoxParser.boxEqualFields = function(box_a, box_b) {\n\tif (box_a && !box_b) return false;\n\tvar prop;\n\tfor (prop in box_a) {\n\t\tif (BoxParser.DIFF_BOXES_PROP_NAMES.indexOf(prop) > -1) {\n\t\t\tcontinue;\n\t\t// } else if (excluded_fields && excluded_fields.indexOf(prop) > -1) {\n\t\t// \tcontinue;\n\t\t} else if (box_a[prop] instanceof BoxParser.Box || box_b[prop] instanceof BoxParser.Box) {\n\t\t\tcontinue;\n\t\t} else if (typeof box_a[prop] === \"undefined\" || typeof box_b[prop] === \"undefined\") {\n\t\t\tcontinue;\n\t\t} else if (typeof box_a[prop] === \"function\" || typeof box_b[prop] === \"function\") {\n\t\t\tcontinue;\n\t\t} else if (\n\t\t\t(box_a.subBoxNames && box_a.subBoxNames.indexOf(prop.slice(0,4)) > -1) ||\n\t\t\t(box_b.subBoxNames && box_b.subBoxNames.indexOf(prop.slice(0,4)) > -1))  {\n\t\t\tcontinue;\n\t\t} else {\n\t\t\tif (prop === \"data\" || prop === \"start\" || prop === \"size\" || prop === \"creation_time\" || prop === \"modification_time\") {\n\t\t\t\tcontinue;\n\t\t\t} else if (BoxParser.DIFF_PRIMITIVE_ARRAY_PROP_NAMES.indexOf(prop) > -1) {\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\tif (box_a[prop] !== box_b[prop]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nBoxParser.boxEqual = function(box_a, box_b) {\n\tif (!BoxParser.boxEqualFields(box_a, box_b)) {\n\t\treturn false;\n\t}\n\tfor (var j = 0; j < BoxParser.DIFF_BOXES_PROP_NAMES.length; j++) {\n\t\tvar name = BoxParser.DIFF_BOXES_PROP_NAMES[j];\n\t\tif (box_a[name] && box_b[name]) {\n\t\t\tif (!BoxParser.boxEqual(box_a[name], box_b[name])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n// file:src/text-mp4.js\n/* \n * Copyright (c) 2012-2013. Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nvar VTTin4Parser = function() {\t\n}\n\nVTTin4Parser.prototype.parseSample = function(data) {\n\tvar cues, cue;\n\tvar stream = new MP4BoxStream(data.buffer);\n\tcues = [];\n\twhile (!stream.isEos()) {\n\t\tcue = BoxParser.parseOneBox(stream, false);\n\t\tif (cue.code === BoxParser.OK && cue.box.type === \"vttc\") {\n\t\t\tcues.push(cue.box);\n\t\t}\t\t\n\t}\n\treturn cues;\n}\n\nVTTin4Parser.prototype.getText = function (startTime, endTime, data) {\n\tfunction pad(n, width, z) {\n\t  z = z || '0';\n\t  n = n + '';\n\t  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n\t}\n\tfunction secToTimestamp(insec) {\n\t\tvar h = Math.floor(insec/3600);\n\t\tvar m = Math.floor((insec - h*3600)/60);\n\t\tvar s = Math.floor(insec - h*3600 - m*60);\n\t\tvar ms = Math.floor((insec - h*3600 - m*60 - s)*1000);\n\t\treturn \"\"+pad(h, 2)+\":\"+pad(m,2)+\":\"+pad(s, 2)+\".\"+pad(ms, 3);\n\t}\n\tvar cues = this.parseSample(data);\n\tvar string = \"\";\n\tfor (var i = 0; i < cues.length; i++) {\n\t\tvar cueIn4 = cues[i];\n\t\tstring += secToTimestamp(startTime)+\" --> \"+secToTimestamp(endTime)+\"\\r\\n\";\n\t\tstring += cueIn4.payl.text;\n\t}\n\treturn string;\n}\n\nvar XMLSubtitlein4Parser = function() {\t\n}\n\nXMLSubtitlein4Parser.prototype.parseSample = function(sample) {\n\tvar res = {};\t\n\tvar i;\n\tres.resources = [];\n\tvar stream = new MP4BoxStream(sample.data.buffer);\n\tif (!sample.subsamples || sample.subsamples.length === 0) {\n\t\tres.documentString = stream.readString(sample.data.length);\n\t} else {\n\t\tres.documentString = stream.readString(sample.subsamples[0].size);\n\t\tif (sample.subsamples.length > 1) {\n\t\t\tfor (i = 1; i < sample.subsamples.length; i++) {\n\t\t\t\tres.resources[i] = stream.readUint8Array(sample.subsamples[i].size);\n\t\t\t}\n\t\t}\n\t}\n\tif (typeof (DOMParser) !== \"undefined\") {\n\t\tres.document = (new DOMParser()).parseFromString(res.documentString, \"application/xml\");\n\t}\n\treturn res;\n}\n\nvar Textin4Parser = function() {\t\n}\n\nTextin4Parser.prototype.parseSample = function(sample) {\n\tvar textString;\n\tvar stream = new MP4BoxStream(sample.data.buffer);\n\ttextString = stream.readString(sample.data.length);\n\treturn textString;\n}\n\nTextin4Parser.prototype.parseConfig = function(data) {\n\tvar textString;\n\tvar stream = new MP4BoxStream(data.buffer);\n\tstream.readUint32(); // version & flags\n\ttextString = stream.readCString();\n\treturn textString;\n}\n\nif (true) {\n\texports.VTTin4Parser = VTTin4Parser;\n\texports.XMLSubtitlein4Parser = XMLSubtitlein4Parser;\n\texports.Textin4Parser = Textin4Parser;\n}\n// file:src/isofile.js\n/*\n * Copyright (c) 2012-2013. Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nvar ISOFile = function (stream) {\n\t/* MutiBufferStream object used to parse boxes */\n\tthis.stream = stream || new MultiBufferStream();\n\t/* Array of all boxes (in order) found in the file */\n\tthis.boxes = [];\n\t/* Array of all mdats */\n\tthis.mdats = [];\n\t/* Array of all moofs */\n\tthis.moofs = [];\n\t/* Boolean indicating if the file is compatible with progressive parsing (moov first) */\n\tthis.isProgressive = false;\n\t/* Boolean used to fire moov start event only once */\n\tthis.moovStartFound = false;\n\t/* Callback called when the moov parsing starts */\n\tthis.onMoovStart = null;\n\t/* Boolean keeping track of the call to onMoovStart, to avoid double calls */\n\tthis.moovStartSent = false;\n\t/* Callback called when the moov is entirely parsed */\n\tthis.onReady = null;\n\t/* Boolean keeping track of the call to onReady, to avoid double calls */\n\tthis.readySent = false;\n\t/* Callback to call when segments are ready */\n\tthis.onSegment = null;\n\t/* Callback to call when samples are ready */\n\tthis.onSamples = null;\n\t/* Callback to call when there is an error in the parsing or processing of samples */\n\tthis.onError = null;\n\t/* Boolean indicating if the moov box run-length encoded tables of sample information have been processed */\n\tthis.sampleListBuilt = false;\n\t/* Array of Track objects for which fragmentation of samples is requested */\n\tthis.fragmentedTracks = [];\n\t/* Array of Track objects for which extraction of samples is requested */\n\tthis.extractedTracks = [];\n\t/* Boolean indicating that fragmention is ready */\n\tthis.isFragmentationInitialized = false;\n\t/* Boolean indicating that fragmented has started */\n\tthis.sampleProcessingStarted = false;\n\t/* Number of the next 'moof' to generate when fragmenting */\n\tthis.nextMoofNumber = 0;\n\t/* Boolean indicating if the initial list of items has been produced */\n\tthis.itemListBuilt = false;\n\t/* Array of items */\n\tthis.items = [];\n\t/* Array of entity groups */\n\tthis.entity_groups = [];\n\t/* Callback called when the sidx box is entirely parsed */\n\tthis.onSidx = null;\n\t/* Boolean keeping track of the call to onSidx, to avoid double calls */\n\tthis.sidxSent = false;\n}\n\nISOFile.prototype.setSegmentOptions = function(id, user, options) {\n\tvar trak = this.getTrackById(id);\n\tif (trak) {\n\t\tvar fragTrack = {};\n\t\tthis.fragmentedTracks.push(fragTrack);\n\t\tfragTrack.id = id;\n\t\tfragTrack.user = user;\n\t\tfragTrack.trak = trak;\n\t\ttrak.nextSample = 0;\n\t\tfragTrack.segmentStream = null;\n\t\tfragTrack.nb_samples = 1000;\n\t\tfragTrack.rapAlignement = true;\n\t\tif (options) {\n\t\t\tif (options.nbSamples) fragTrack.nb_samples = options.nbSamples;\n\t\t\tif (options.rapAlignement) fragTrack.rapAlignement = options.rapAlignement;\n\t\t}\n\t}\n}\n\nISOFile.prototype.unsetSegmentOptions = function(id) {\n\tvar index = -1;\n\tfor (var i = 0; i < this.fragmentedTracks.length; i++) {\n\t\tvar fragTrack = this.fragmentedTracks[i];\n\t\tif (fragTrack.id == id) {\n\t\t\tindex = i;\n\t\t}\n\t}\n\tif (index > -1) {\n\t\tthis.fragmentedTracks.splice(index, 1);\n\t}\n}\n\nISOFile.prototype.setExtractionOptions = function(id, user, options) {\n\tvar trak = this.getTrackById(id);\n\tif (trak) {\n\t\tvar extractTrack = {};\n\t\tthis.extractedTracks.push(extractTrack);\n\t\textractTrack.id = id;\n\t\textractTrack.user = user;\n\t\textractTrack.trak = trak;\n\t\ttrak.nextSample = 0;\n\t\textractTrack.nb_samples = 1000;\n\t\textractTrack.samples = [];\n\t\tif (options) {\n\t\t\tif (options.nbSamples) extractTrack.nb_samples = options.nbSamples;\n\t\t}\n\t}\n}\n\nISOFile.prototype.unsetExtractionOptions = function(id) {\n\tvar index = -1;\n\tfor (var i = 0; i < this.extractedTracks.length; i++) {\n\t\tvar extractTrack = this.extractedTracks[i];\n\t\tif (extractTrack.id == id) {\n\t\t\tindex = i;\n\t\t}\n\t}\n\tif (index > -1) {\n\t\tthis.extractedTracks.splice(index, 1);\n\t}\n}\n\nISOFile.prototype.parse = function() {\n\tvar found;\n\tvar ret;\n\tvar box;\n\tvar parseBoxHeadersOnly = false;\n\n\tif (this.restoreParsePosition)\t{\n\t\tif (!this.restoreParsePosition()) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\twhile (true) {\n\n\t\tif (this.hasIncompleteMdat && this.hasIncompleteMdat()) {\n\t\t\tif (this.processIncompleteMdat()) {\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.saveParsePosition)\t{\n\t\t\t\tthis.saveParsePosition();\n\t\t\t}\n\t\t\tret = BoxParser.parseOneBox(this.stream, parseBoxHeadersOnly);\n\t\t\tif (ret.code === BoxParser.ERR_NOT_ENOUGH_DATA) {\n\t\t\t\tif (this.processIncompleteBox) {\n\t\t\t\t\tif (this.processIncompleteBox(ret)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar box_type;\n\t\t\t\t/* the box is entirely parsed */\n\t\t\t\tbox = ret.box;\n\t\t\t\tbox_type = (box.type !== \"uuid\" ? box.type : box.uuid);\n\t\t\t\t/* store the box in the 'boxes' array to preserve box order (for file rewrite if needed)  */\n\t\t\t\tthis.boxes.push(box);\n\t\t\t\t/* but also store box in a property for more direct access */\n\t\t\t\tswitch (box_type) {\n\t\t\t\t\tcase \"mdat\":\n\t\t\t\t\t\tthis.mdats.push(box);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"moof\":\n\t\t\t\t\t\tthis.moofs.push(box);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"moov\":\n\t\t\t\t\t\tthis.moovStartFound = true;\n\t\t\t\t\t\tif (this.mdats.length === 0) {\n\t\t\t\t\t\t\tthis.isProgressive = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/* no break */\n\t\t\t\t\t\t/* falls through */\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (this[box_type] !== undefined) {\n\t\t\t\t\t\t\tLog.warn(\"ISOFile\", \"Duplicate Box of type: \"+box_type+\", overriding previous occurrence\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis[box_type] = box;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (this.updateUsedBytes) {\n\t\t\t\t\tthis.updateUsedBytes(box, ret);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nISOFile.prototype.checkBuffer = function (ab) {\n\tif (ab === null || ab === undefined) {\n\t\tthrow(\"Buffer must be defined and non empty\");\n\t}\n\tif (ab.fileStart === undefined) {\n\t\tthrow(\"Buffer must have a fileStart property\");\n\t}\n\tif (ab.byteLength === 0) {\n\t\tLog.warn(\"ISOFile\", \"Ignoring empty buffer (fileStart: \"+ab.fileStart+\")\");\n\t\tthis.stream.logBufferLevel();\n\t\treturn false;\n\t}\n\tLog.info(\"ISOFile\", \"Processing buffer (fileStart: \"+ab.fileStart+\")\");\n\n\t/* mark the bytes in the buffer as not being used yet */\n\tab.usedBytes = 0;\n\tthis.stream.insertBuffer(ab);\n\tthis.stream.logBufferLevel();\n\n\tif (!this.stream.initialized()) {\n\t\tLog.warn(\"ISOFile\", \"Not ready to start parsing\");\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n/* Processes a new ArrayBuffer (with a fileStart property)\n   Returns the next expected file position, or undefined if not ready to parse */\nISOFile.prototype.appendBuffer = function(ab, last) {\n\tvar nextFileStart;\n\tif (!this.checkBuffer(ab)) {\n\t\treturn;\n\t}\n\n\t/* Parse whatever is in the existing buffers */\n\tthis.parse();\n\n\t/* Check if the moovStart callback needs to be called */\n\tif (this.moovStartFound && !this.moovStartSent) {\n\t\tthis.moovStartSent = true;\n\t\tif (this.onMoovStart) this.onMoovStart();\n\t}\n\n\tif (this.moov) {\n\t\t/* A moov box has been entirely parsed */\n\n\t\t/* if this is the first call after the moov is found we initialize the list of samples (may be empty in fragmented files) */\n\t\tif (!this.sampleListBuilt) {\n\t\t\tthis.buildSampleLists();\n\t\t\tthis.sampleListBuilt = true;\n\t\t}\n\n\t\t/* We update the sample information if there are any new moof boxes */\n\t\tthis.updateSampleLists();\n\n\t\t/* If the application needs to be informed that the 'moov' has been found,\n\t\t   we create the information object and callback the application */\n\t\tif (this.onReady && !this.readySent) {\n\t\t\tthis.readySent = true;\n\t\t\tthis.onReady(this.getInfo());\n\t\t}\n\n\t\t/* See if any sample extraction or segment creation needs to be done with the available samples */\n\t\tthis.processSamples(last);\n\n\t\t/* Inform about the best range to fetch next */\n\t\tif (this.nextSeekPosition) {\n\t\t\tnextFileStart = this.nextSeekPosition;\n\t\t\tthis.nextSeekPosition = undefined;\n\t\t} else {\n\t\t\tnextFileStart = this.nextParsePosition;\n\t\t}\n\t\tif (this.stream.getEndFilePositionAfter) {\n\t\t\tnextFileStart = this.stream.getEndFilePositionAfter(nextFileStart);\n\t\t}\n\t} else {\n\t\tif (this.nextParsePosition) {\n\t\t\t/* moov has not been parsed but the first buffer was received,\n\t\t\t   the next fetch should probably be the next box start */\n\t\t\tnextFileStart = this.nextParsePosition;\n\t\t} else {\n\t\t\t/* No valid buffer has been parsed yet, we cannot know what to parse next */\n\t\t\tnextFileStart = 0;\n\t\t}\n\t}\n\tif (this.sidx) {\n\t\tif (this.onSidx && !this.sidxSent) {\n\t\t\tthis.onSidx(this.sidx);\n\t\t\tthis.sidxSent = true;\n\t\t}\n\t}\n\tif (this.meta) {\n\t\tif (this.flattenItemInfo && !this.itemListBuilt) {\n\t\t\tthis.flattenItemInfo();\n\t\t\tthis.itemListBuilt = true;\n\t\t}\n\t\tif (this.processItems) {\n\t\t\tthis.processItems(this.onItem);\n\t\t}\n\t}\n\n\tif (this.stream.cleanBuffers) {\n\t\tLog.info(\"ISOFile\", \"Done processing buffer (fileStart: \"+ab.fileStart+\") - next buffer to fetch should have a fileStart position of \"+nextFileStart);\n\t\tthis.stream.logBufferLevel();\n\t\tthis.stream.cleanBuffers();\n\t\tthis.stream.logBufferLevel(true);\n\t\tLog.info(\"ISOFile\", \"Sample data size in memory: \"+this.getAllocatedSampleDataSize());\n\t}\n\treturn nextFileStart;\n}\n\nISOFile.prototype.getInfo = function() {\n\tvar i, j;\n\tvar movie = {};\n\tvar trak;\n\tvar track;\n\tvar ref;\n\tvar sample_desc;\n\tvar _1904 = (new Date('1904-01-01T00:00:00Z').getTime());\n\n\tif (this.moov) {\n\t\tmovie.hasMoov = true;\n\t\tmovie.duration = this.moov.mvhd.duration;\n\t\tmovie.timescale = this.moov.mvhd.timescale;\n\t\tmovie.isFragmented = (this.moov.mvex != null);\n\t\tif (movie.isFragmented && this.moov.mvex.mehd) {\n\t\t\tmovie.fragment_duration = this.moov.mvex.mehd.fragment_duration;\n\t\t}\n\t\tmovie.isProgressive = this.isProgressive;\n\t\tmovie.hasIOD = (this.moov.iods != null);\n\t\tmovie.brands = [];\n\t\tmovie.brands.push(this.ftyp.major_brand);\n\t\tmovie.brands = movie.brands.concat(this.ftyp.compatible_brands);\n\t\tmovie.created = new Date(_1904+this.moov.mvhd.creation_time*1000);\n\t\tmovie.modified = new Date(_1904+this.moov.mvhd.modification_time*1000);\n\t\tmovie.tracks = [];\n\t\tmovie.audioTracks = [];\n\t\tmovie.videoTracks = [];\n\t\tmovie.subtitleTracks = [];\n\t\tmovie.metadataTracks = [];\n\t\tmovie.hintTracks = [];\n\t\tmovie.otherTracks = [];\n\t\tfor (i = 0; i < this.moov.traks.length; i++) {\n\t\t\ttrak = this.moov.traks[i];\n\t\t\tsample_desc = trak.mdia.minf.stbl.stsd.entries[0];\n\t\t\ttrack = {};\n\t\t\tmovie.tracks.push(track);\n\t\t\ttrack.id = trak.tkhd.track_id;\n\t\t\ttrack.name = trak.mdia.hdlr.name;\n\t\t\ttrack.references = [];\n\t\t\tif (trak.tref) {\n\t\t\t\tfor (j = 0; j < trak.tref.boxes.length; j++) {\n\t\t\t\t\tref = {};\n\t\t\t\t\ttrack.references.push(ref);\n\t\t\t\t\tref.type = trak.tref.boxes[j].type;\n\t\t\t\t\tref.track_ids = trak.tref.boxes[j].track_ids;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (trak.edts) {\n\t\t\t\ttrack.edits = trak.edts.elst.entries;\n\t\t\t}\n\t\t\ttrack.created = new Date(_1904+trak.tkhd.creation_time*1000);\n\t\t\ttrack.modified = new Date(_1904+trak.tkhd.modification_time*1000);\n\t\t\ttrack.movie_duration = trak.tkhd.duration;\n\t\t\ttrack.movie_timescale = movie.timescale;\n\t\t\ttrack.layer = trak.tkhd.layer;\n\t\t\ttrack.alternate_group = trak.tkhd.alternate_group;\n\t\t\ttrack.volume = trak.tkhd.volume;\n\t\t\ttrack.matrix = trak.tkhd.matrix;\n\t\t\ttrack.track_width = trak.tkhd.width/(1<<16);\n\t\t\ttrack.track_height = trak.tkhd.height/(1<<16);\n\t\t\ttrack.timescale = trak.mdia.mdhd.timescale;\n\t\t\ttrack.cts_shift = trak.mdia.minf.stbl.cslg;\n\t\t\ttrack.duration = trak.mdia.mdhd.duration;\n\t\t\ttrack.samples_duration = trak.samples_duration;\n\t\t\ttrack.codec = sample_desc.getCodec();\n\t\t\ttrack.kind = (trak.udta && trak.udta.kinds.length ? trak.udta.kinds[0] : { schemeURI: \"\", value: \"\"});\n\t\t\ttrack.language = (trak.mdia.elng ? trak.mdia.elng.extended_language : trak.mdia.mdhd.languageString);\n\t\t\ttrack.nb_samples = trak.samples.length;\n\t\t\ttrack.size = trak.samples_size;\n\t\t\ttrack.bitrate = (track.size*8*track.timescale)/track.samples_duration;\n\t\t\tif (sample_desc.isAudio()) {\n\t\t\t\ttrack.type = \"audio\";\n\t\t\t\tmovie.audioTracks.push(track);\n\t\t\t\ttrack.audio = {};\n\t\t\t\ttrack.audio.sample_rate = sample_desc.getSampleRate();\n\t\t\t\ttrack.audio.channel_count = sample_desc.getChannelCount();\n\t\t\t\ttrack.audio.sample_size = sample_desc.getSampleSize();\n\t\t\t} else if (sample_desc.isVideo()) {\n\t\t\t\ttrack.type = \"video\";\n\t\t\t\tmovie.videoTracks.push(track);\n\t\t\t\ttrack.video = {};\n\t\t\t\ttrack.video.width = sample_desc.getWidth();\n\t\t\t\ttrack.video.height = sample_desc.getHeight();\n\t\t\t} else if (sample_desc.isSubtitle()) {\n\t\t\t\ttrack.type = \"subtitles\";\n\t\t\t\tmovie.subtitleTracks.push(track);\n\t\t\t} else if (sample_desc.isHint()) {\n\t\t\t\ttrack.type = \"metadata\";\n\t\t\t\tmovie.hintTracks.push(track);\n\t\t\t} else if (sample_desc.isMetadata()) {\n\t\t\t\ttrack.type = \"metadata\";\n\t\t\t\tmovie.metadataTracks.push(track);\n\t\t\t} else {\n\t\t\t\ttrack.type = \"metadata\";\n\t\t\t\tmovie.otherTracks.push(track);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tmovie.hasMoov = false;\n\t}\n\tmovie.mime = \"\";\n\tif (movie.hasMoov && movie.tracks) {\n\t\tif (movie.videoTracks && movie.videoTracks.length > 0) {\n\t\t\tmovie.mime += 'video/mp4; codecs=\\\"';\n\t\t} else if (movie.audioTracks && movie.audioTracks.length > 0) {\n\t\t\tmovie.mime += 'audio/mp4; codecs=\\\"';\n\t\t} else {\n\t\t\tmovie.mime += 'application/mp4; codecs=\\\"';\n\t\t}\n\t\tfor (i = 0; i < movie.tracks.length; i++) {\n\t\t\tif (i !== 0) movie.mime += ',';\n\t\t\tmovie.mime+= movie.tracks[i].codec;\n\t\t}\n\t\tmovie.mime += '\\\"; profiles=\\\"';\n\t\tmovie.mime += this.ftyp.compatible_brands.join();\n\t\tmovie.mime += '\\\"';\n\t}\n\treturn movie;\n}\n\nISOFile.prototype.setNextSeekPositionFromSample = function (sample) {\n\tif (!sample) {\n\t\treturn;\n\t}\n\tif (this.nextSeekPosition) {\n\t\tthis.nextSeekPosition = Math.min(sample.offset+sample.alreadyRead,this.nextSeekPosition);\n\t} else {\n\t\tthis.nextSeekPosition = sample.offset+sample.alreadyRead;\n\t}\n}\n\nISOFile.prototype.processSamples = function(last) {\n\tvar i;\n\tvar trak;\n\tif (!this.sampleProcessingStarted) return;\n\n\t/* For each track marked for fragmentation,\n\t   check if the next sample is there (i.e. if the sample information is known (i.e. moof has arrived) and if it has been downloaded)\n\t   and create a fragment with it */\n\tif (this.isFragmentationInitialized && this.onSegment !== null) {\n\t\tfor (i = 0; i < this.fragmentedTracks.length; i++) {\n\t\t\tvar fragTrak = this.fragmentedTracks[i];\n\t\t\ttrak = fragTrak.trak;\n\t\t\twhile (trak.nextSample < trak.samples.length && this.sampleProcessingStarted) {\n\t\t\t\t/* The sample information is there (either because the file is not fragmented and this is not the last sample,\n\t\t\t\tor because the file is fragmented and the moof for that sample has been received */\n\t\t\t\tLog.debug(\"ISOFile\", \"Creating media fragment on track #\"+fragTrak.id +\" for sample \"+trak.nextSample);\n\t\t\t\tvar result = this.createFragment(fragTrak.id, trak.nextSample, fragTrak.segmentStream);\n\t\t\t\tif (result) {\n\t\t\t\t\tfragTrak.segmentStream = result;\n\t\t\t\t\ttrak.nextSample++;\n\t\t\t\t} else {\n\t\t\t\t\t/* The fragment could not be created because the media data is not there (not downloaded), wait for it */\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t/* A fragment is created by sample, but the segment is the accumulation in the buffer of these fragments.\n\t\t\t\t   It is flushed only as requested by the application (nb_samples) to avoid too many callbacks */\n\t\t\t\tif (trak.nextSample % fragTrak.nb_samples === 0 || (last || trak.nextSample >= trak.samples.length)) {\n\t\t\t\t\tLog.info(\"ISOFile\", \"Sending fragmented data on track #\"+fragTrak.id+\" for samples [\"+Math.max(0,trak.nextSample-fragTrak.nb_samples)+\",\"+(trak.nextSample-1)+\"]\");\n\t\t\t\t\tLog.info(\"ISOFile\", \"Sample data size in memory: \"+this.getAllocatedSampleDataSize());\n\t\t\t\t\tif (this.onSegment) {\n\t\t\t\t\t\tthis.onSegment(fragTrak.id, fragTrak.user, fragTrak.segmentStream.buffer, trak.nextSample, (last || trak.nextSample >= trak.samples.length));\n\t\t\t\t\t}\n\t\t\t\t\t/* force the creation of a new buffer */\n\t\t\t\t\tfragTrak.segmentStream = null;\n\t\t\t\t\tif (fragTrak !== this.fragmentedTracks[i]) {\n\t\t\t\t\t\t/* make sure we can stop fragmentation if needed */\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (this.onSamples !== null) {\n\t\t/* For each track marked for data export,\n\t\t   check if the next sample is there (i.e. has been downloaded) and send it */\n\t\tfor (i = 0; i < this.extractedTracks.length; i++) {\n\t\t\tvar extractTrak = this.extractedTracks[i];\n\t\t\ttrak = extractTrak.trak;\n\t\t\twhile (trak.nextSample < trak.samples.length && this.sampleProcessingStarted) {\n\t\t\t\tLog.debug(\"ISOFile\", \"Exporting on track #\"+extractTrak.id +\" sample #\"+trak.nextSample);\n\t\t\t\tvar sample = this.getSample(trak, trak.nextSample);\n\t\t\t\tif (sample) {\n\t\t\t\t\ttrak.nextSample++;\n\t\t\t\t\textractTrak.samples.push(sample);\n\t\t\t\t} else {\n\t\t\t\t\tthis.setNextSeekPositionFromSample(trak.samples[trak.nextSample]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (trak.nextSample % extractTrak.nb_samples === 0 || trak.nextSample >= trak.samples.length) {\n\t\t\t\t\tLog.debug(\"ISOFile\", \"Sending samples on track #\"+extractTrak.id+\" for sample \"+trak.nextSample);\n\t\t\t\t\tif (this.onSamples) {\n\t\t\t\t\t\tthis.onSamples(extractTrak.id, extractTrak.user, extractTrak.samples);\n\t\t\t\t\t}\n\t\t\t\t\textractTrak.samples = [];\n\t\t\t\t\tif (extractTrak !== this.extractedTracks[i]) {\n\t\t\t\t\t\t/* check if the extraction needs to be stopped */\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/* Find and return specific boxes using recursion and early return */\nISOFile.prototype.getBox = function(type) {\n  var result = this.getBoxes(type, true);\n  return (result.length ? result[0] : null);\n}\n\nISOFile.prototype.getBoxes = function(type, returnEarly) {\n  var result = [];\n  ISOFile._sweep.call(this, type, result, returnEarly);\n  return result;\n}\n\nISOFile._sweep = function(type, result, returnEarly) {\n  if (this.type && this.type == type) result.push(this);\n  for (var box in this.boxes) {\n    if (result.length && returnEarly) return;\n    ISOFile._sweep.call(this.boxes[box], type, result, returnEarly);\n  }\n}\n\nISOFile.prototype.getTrackSamplesInfo = function(track_id) {\n\tvar track = this.getTrackById(track_id);\n\tif (track) {\n\t\treturn track.samples;\n\t} else {\n\t\treturn;\n\t}\n}\n\nISOFile.prototype.getTrackSample = function(track_id, number) {\n\tvar track = this.getTrackById(track_id);\n\tvar sample = this.getSample(track, number);\n\treturn sample;\n}\n\n/* Called by the application to release the resources associated to samples already forwarded to the application */\nISOFile.prototype.releaseUsedSamples = function (id, sampleNum) {\n\tvar size = 0;\n\tvar trak = this.getTrackById(id);\n\tif (!trak.lastValidSample) trak.lastValidSample = 0;\n\tfor (var i = trak.lastValidSample; i < sampleNum; i++) {\n\t\tsize+=this.releaseSample(trak, i);\n\t}\n\tLog.info(\"ISOFile\", \"Track #\"+id+\" released samples up to \"+sampleNum+\" (released size: \"+size+\", remaining: \"+this.samplesDataSize+\")\");\n\ttrak.lastValidSample = sampleNum;\n}\n\nISOFile.prototype.start = function() {\n\tthis.sampleProcessingStarted = true;\n\tthis.processSamples(false);\n}\n\nISOFile.prototype.stop = function() {\n\tthis.sampleProcessingStarted = false;\n}\n\n/* Called by the application to flush the remaining samples (e.g. once the download is finished or when no more samples will be added) */\nISOFile.prototype.flush = function() {\n\tLog.info(\"ISOFile\", \"Flushing remaining samples\");\n\tthis.updateSampleLists();\n\tthis.processSamples(true);\n\tthis.stream.cleanBuffers();\n\tthis.stream.logBufferLevel(true);\n}\n\n/* Finds the byte offset for a given time on a given track\n   also returns the time of the previous rap */\nISOFile.prototype.seekTrack = function(time, useRap, trak) {\n\tvar j;\n\tvar sample;\n\tvar seek_offset = Infinity;\n\tvar rap_seek_sample_num = 0;\n\tvar seek_sample_num = 0;\n\tvar timescale;\n\n\tif (trak.samples.length === 0) {\n\t\tLog.info(\"ISOFile\", \"No sample in track, cannot seek! Using time \"+Log.getDurationString(0, 1) +\" and offset: \"+0);\n\t\treturn { offset: 0, time: 0 };\n\t}\n\n\tfor (j = 0; j < trak.samples.length; j++) {\n\t\tsample = trak.samples[j];\n\t\tif (j === 0) {\n\t\t\tseek_sample_num = 0;\n\t\t\ttimescale = sample.timescale;\n\t\t} else if (sample.cts > time * sample.timescale) {\n\t\t\tseek_sample_num = j-1;\n\t\t\tbreak;\n\t\t}\n\t\tif (useRap && sample.is_sync) {\n\t\t\trap_seek_sample_num = j;\n\t\t}\n\t}\n\tif (useRap) {\n\t\tseek_sample_num = rap_seek_sample_num;\n\t}\n\ttime = trak.samples[seek_sample_num].cts;\n\ttrak.nextSample = seek_sample_num;\n\twhile (trak.samples[seek_sample_num].alreadyRead === trak.samples[seek_sample_num].size) {\n\t\t// No remaining samples to look for, all are downloaded.\n\t\tif (!trak.samples[seek_sample_num + 1]) {\n\t\t\tbreak;\n\t\t}\n\t\tseek_sample_num++;\n\t}\n\tseek_offset = trak.samples[seek_sample_num].offset+trak.samples[seek_sample_num].alreadyRead;\n\tLog.info(\"ISOFile\", \"Seeking to \"+(useRap ? \"RAP\": \"\")+\" sample #\"+trak.nextSample+\" on track \"+trak.tkhd.track_id+\", time \"+Log.getDurationString(time, timescale) +\" and offset: \"+seek_offset);\n\treturn { offset: seek_offset, time: time/timescale };\n}\n\nISOFile.prototype.getTrackDuration = function (trak) {\n\tvar sample;\n\n\tif (!trak.samples) {\n\t\treturn Infinity;\n\t}\n\tsample = trak.samples[trak.samples.length - 1];\n\treturn (sample.cts + sample.duration) / sample.timescale;\n}\n\n/* Finds the byte offset in the file corresponding to the given time or to the time of the previous RAP */\nISOFile.prototype.seek = function(time, useRap) {\n\tvar moov = this.moov;\n\tvar trak;\n\tvar trak_seek_info;\n\tvar i;\n\tvar seek_info = { offset: Infinity, time: Infinity };\n\tif (!this.moov) {\n\t\tthrow \"Cannot seek: moov not received!\";\n\t} else {\n\t\tfor (i = 0; i<moov.traks.length; i++) {\n\t\t\ttrak = moov.traks[i];\n\t\t\tif (time > this.getTrackDuration(trak)) { // skip tracks that already ended\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\ttrak_seek_info = this.seekTrack(time, useRap, trak);\n\t\t\tif (trak_seek_info.offset < seek_info.offset) {\n\t\t\t\tseek_info.offset = trak_seek_info.offset;\n\t\t\t}\n\t\t\tif (trak_seek_info.time < seek_info.time) {\n\t\t\t\tseek_info.time = trak_seek_info.time;\n\t\t\t}\n\t\t}\n\t\tLog.info(\"ISOFile\", \"Seeking at time \"+Log.getDurationString(seek_info.time, 1)+\" needs a buffer with a fileStart position of \"+seek_info.offset);\n\t\tif (seek_info.offset === Infinity) {\n\t\t\t/* No sample info, in all tracks, cannot seek */\n\t\t\tseek_info = { offset: this.nextParsePosition, time: 0 };\n\t\t} else {\n\t\t\t/* check if the seek position is already in some buffer and\n\t\t\t in that case return the end of that buffer (or of the last contiguous buffer) */\n\t\t\t/* TODO: Should wait until append operations are done */\n\t\t\tseek_info.offset = this.stream.getEndFilePositionAfter(seek_info.offset);\n\t\t}\n\t\tLog.info(\"ISOFile\", \"Adjusted seek position (after checking data already in buffer): \"+seek_info.offset);\n\t\treturn seek_info;\n\t}\n}\n\nISOFile.prototype.equal = function(b) {\n\tvar box_index = 0;\n\twhile (box_index < this.boxes.length && box_index < b.boxes.length) {\n\t\tvar a_box = this.boxes[box_index];\n\t\tvar b_box = b.boxes[box_index];\n\t\tif (!BoxParser.boxEqual(a_box, b_box)) {\n\t\t\treturn false;\n\t\t}\n\t\tbox_index++;\n\t}\n\treturn true;\n}\n\nif (true) {\n\texports.ISOFile = ISOFile;\n}\n// file:src/isofile-advanced-parsing.js\n/* position in the current buffer of the beginning of the last box parsed */\nISOFile.prototype.lastBoxStartPosition = 0;\n/* indicator if the parsing is stuck in the middle of an mdat box */\nISOFile.prototype.parsingMdat = null;\n/* next file position that the parser needs:\n    - 0 until the first buffer (i.e. fileStart ===0) has been received \n    - otherwise, the next box start until the moov box has been parsed\n    - otherwise, the position of the next sample to fetch\n */\nISOFile.prototype.nextParsePosition = 0;\n/* keep mdat data */\nISOFile.prototype.discardMdatData = false;\n\nISOFile.prototype.processIncompleteBox = function(ret) {\n\tvar box;\n\tvar merged;\n\tvar found;\n\t\n\t/* we did not have enough bytes in the current buffer to parse the entire box */\n\tif (ret.type === \"mdat\") { \n\t\t/* we had enough bytes to get its type and size and it's an 'mdat' */\n\t\t\n\t\t/* special handling for mdat boxes, since we don't actually need to parse it linearly \n\t\t   we create the box */\n\t\tbox = new BoxParser[ret.type+\"Box\"](ret.size);\t\n\t\tthis.parsingMdat = box;\n\t\tthis.boxes.push(box);\n\t\tthis.mdats.push(box);\t\t\t\n\t\tbox.start = ret.start;\n\t\tbox.hdr_size = ret.hdr_size;\n\t\tthis.stream.addUsedBytes(box.hdr_size);\n\n\t\t/* indicate that the parsing should start from the end of the box */\n\t\tthis.lastBoxStartPosition = box.start + box.size;\n \t\t/* let's see if we have the end of the box in the other buffers */\n\t\tfound = this.stream.seek(box.start + box.size, false, this.discardMdatData);\n\t\tif (found) {\n\t\t\t/* found the end of the box */\n\t\t\tthis.parsingMdat = null;\n\t\t\t/* let's see if we can parse more in this buffer */\n\t\t\treturn true;\n\t\t} else {\n\t\t\t/* 'mdat' end not found in the existing buffers */\n\t\t\t/* determine the next position in the file to start parsing from */\n\t\t\tif (!this.moovStartFound) {\n\t\t\t\t/* moov not find yet, \n\t\t\t\t   the file probably has 'mdat' at the beginning, and 'moov' at the end, \n\t\t\t\t   indicate that the downloader should not try to download those bytes now */\n\t\t\t\tthis.nextParsePosition = box.start + box.size;\n\t\t\t} else {\n\t\t\t\t/* we have the start of the moov box, \n\t\t\t\t   the next bytes should try to complete the current 'mdat' */\n\t\t\t\tthis.nextParsePosition = this.stream.findEndContiguousBuf();\n\t\t\t}\n\t\t\t/* not much we can do, wait for more buffers to arrive */\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t/* box is incomplete, we may not even know its type */\n\t\tif (ret.type === \"moov\") { \n\t\t\t/* the incomplete box is a 'moov' box */\n\t\t\tthis.moovStartFound = true;\n\t\t\tif (this.mdats.length === 0) {\n\t\t\t\tthis.isProgressive = true;\n\t\t\t}\n\t\t}\n\t\t/* either it's not an mdat box (and we need to parse it, we cannot skip it)\n\t\t   (TODO: we could skip 'free' boxes ...)\n\t\t\t   or we did not have enough data to parse the type and size of the box, \n\t\t   we try to concatenate the current buffer with the next buffer to restart parsing */\n\t\tmerged = (this.stream.mergeNextBuffer ? this.stream.mergeNextBuffer() : false);\n\t\tif (merged) {\n\t\t\t/* The next buffer was contiguous, the merging succeeded,\n\t\t\t   we can now continue parsing, \n\t\t\t   the next best position to parse is at the end of this new buffer */\n\t\t\tthis.nextParsePosition = this.stream.getEndPosition();\n\t\t\treturn true;\n\t\t} else {\n\t\t\t/* we cannot concatenate existing buffers because they are not contiguous or because there is no additional buffer */\n\t\t\t/* The next best position to parse is still at the end of this old buffer */\n\t\t\tif (!ret.type) {\n\t\t\t\t/* There were not enough bytes in the buffer to parse the box type and length,\n\t\t\t\t   the next fetch should retrieve those missing bytes, i.e. the next bytes after this buffer */\n\t\t\t\tthis.nextParsePosition = this.stream.getEndPosition();\n\t\t\t} else {\n\t\t\t\t/* we had enough bytes to parse size and type of the incomplete box\n\t\t\t\t   if we haven't found yet the moov box, skip this one and try the next one \n\t\t\t\t   if we have found the moov box, let's continue linear parsing */\n\t\t\t\tif (this.moovStartFound) {\n\t\t\t\t\tthis.nextParsePosition = this.stream.getEndPosition();\n\t\t\t\t} else {\n\t\t\t\t\tthis.nextParsePosition = this.stream.getPosition() + ret.size;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\nISOFile.prototype.hasIncompleteMdat = function () {\n\treturn (this.parsingMdat !== null);\n}\n\nISOFile.prototype.processIncompleteMdat = function () {\n\tvar box;\n\tvar found;\n\t\n\t/* we are in the parsing of an incomplete mdat box */\n\tbox = this.parsingMdat;\n\n\tfound = this.stream.seek(box.start + box.size, false, this.discardMdatData);\n\tif (found) {\n\t\tLog.debug(\"ISOFile\", \"Found 'mdat' end in buffered data\");\n\t\t/* the end of the mdat has been found */ \n\t\tthis.parsingMdat = null;\n\t\t/* we can parse more in this buffer */\n\t\treturn true;\n\t} else {\n\t\t/* we don't have the end of this mdat yet, \n\t\t   indicate that the next byte to fetch is the end of the buffers we have so far, \n\t\t   return and wait for more buffer to come */\n\t\tthis.nextParsePosition = this.stream.findEndContiguousBuf();\n\t\treturn false;\n\t}\n}\n\nISOFile.prototype.restoreParsePosition = function() {\n\t/* Reposition at the start position of the previous box not entirely parsed */\n\treturn this.stream.seek(this.lastBoxStartPosition, true, this.discardMdatData);\n}\n\nISOFile.prototype.saveParsePosition = function() {\n\t/* remember the position of the box start in case we need to roll back (if the box is incomplete) */\n\tthis.lastBoxStartPosition = this.stream.getPosition();\t\n}\n\nISOFile.prototype.updateUsedBytes = function(box, ret) {\n\tif (this.stream.addUsedBytes) {\n\t\tif (box.type === \"mdat\") {\n\t\t\t/* for an mdat box, only its header is considered used, other bytes will be used when sample data is requested */\n\t\t\tthis.stream.addUsedBytes(box.hdr_size);\n\t\t\tif (this.discardMdatData) {\n\t\t\t\tthis.stream.addUsedBytes(box.size-box.hdr_size);\n\t\t\t}\n\t\t} else {\n\t\t\t/* for all other boxes, the entire box data is considered used */\n\t\t\tthis.stream.addUsedBytes(box.size);\n\t\t}\t\n\t}\n}\n// file:src/isofile-advanced-creation.js\nISOFile.prototype.add = BoxParser.Box.prototype.add;\nISOFile.prototype.addBox = BoxParser.Box.prototype.addBox;\n\nISOFile.prototype.init = function (_options) {\n\tvar options = _options || {}; \n\tvar ftyp = this.add(\"ftyp\").set(\"major_brand\", (options.brands && options.brands[0]) || \"iso4\")\n\t\t\t\t\t\t\t   .set(\"minor_version\", 0)\n\t\t\t\t\t\t\t   .set(\"compatible_brands\", options.brands || [\"iso4\"]);\n\tvar moov = this.add(\"moov\");\n\tmoov.add(\"mvhd\").set(\"timescale\", options.timescale || 600)\n\t\t\t\t\t.set(\"rate\", options.rate || 1<<16)\n\t\t\t\t\t.set(\"creation_time\", 0)\n\t\t\t\t\t.set(\"modification_time\", 0)\n\t\t\t\t\t.set(\"duration\", options.duration || 0)\n\t\t\t\t\t.set(\"volume\", (options.width) ? 0 : 0x0100)\n\t\t\t\t\t.set(\"matrix\", [ 1<<16, 0, 0, 0, 1<<16, 0, 0, 0, 0x40000000])\n\t\t\t\t\t.set(\"next_track_id\", 1);\n\tmoov.add(\"mvex\");\n\treturn this;\n}\n\nISOFile.prototype.addTrack = function (_options) {\n\tif (!this.moov) {\n\t\tthis.init(_options);\n\t}\n\n\tvar options = _options || {}; \n\toptions.width = options.width || 320;\n\toptions.height = options.height || 320;\n\toptions.id = options.id || this.moov.mvhd.next_track_id;\n\toptions.type = options.type || \"avc1\";\n\n\tvar trak = this.moov.add(\"trak\");\n\tthis.moov.mvhd.next_track_id = options.id+1;\n\ttrak.add(\"tkhd\").set(\"flags\",BoxParser.TKHD_FLAG_ENABLED | \n\t\t\t\t\t\t\t\t BoxParser.TKHD_FLAG_IN_MOVIE | \n\t\t\t\t\t\t\t\t BoxParser.TKHD_FLAG_IN_PREVIEW)\n\t\t\t\t\t.set(\"creation_time\",0)\n\t\t\t\t\t.set(\"modification_time\", 0)\n\t\t\t\t\t.set(\"track_id\", options.id)\n\t\t\t\t\t.set(\"duration\", options.duration || 0)\n\t\t\t\t\t.set(\"layer\", options.layer || 0)\n\t\t\t\t\t.set(\"alternate_group\", 0)\n\t\t\t\t\t.set(\"volume\", 1)\n\t\t\t\t\t.set(\"matrix\", [ 1<<16, 0, 0, 0, 1<<16, 0, 0, 0, 0x40000000 ])\n\t\t\t\t\t.set(\"width\", options.width << 16)\n\t\t\t\t\t.set(\"height\", options.height << 16);\n\n\tvar mdia = trak.add(\"mdia\");\n\tmdia.add(\"mdhd\").set(\"creation_time\", 0)\n\t\t\t\t\t.set(\"modification_time\", 0)\n\t\t\t\t\t.set(\"timescale\", options.timescale || 1)\n\t\t\t\t\t.set(\"duration\", options.media_duration || 0)\n\t\t\t\t\t.set(\"language\", options.language || \"und\");\n\n\tmdia.add(\"hdlr\").set(\"handler\", options.hdlr || \"vide\")\n\t\t\t\t\t.set(\"name\", options.name || \"Track created with MP4Box.js\");\n\n\tmdia.add(\"elng\").set(\"extended_language\", options.language || \"fr-FR\");\n\n\tvar minf = mdia.add(\"minf\");\n\tif (BoxParser[options.type+\"SampleEntry\"] === undefined) return;\n\tvar sample_description_entry = new BoxParser[options.type+\"SampleEntry\"]();\n\tsample_description_entry.data_reference_index = 1;\n\tvar media_type = \"\";\n\tfor (var mediaType in BoxParser.sampleEntryCodes) {\n\t\tvar codes = BoxParser.sampleEntryCodes[mediaType];\n\t\tfor (var i = 0; i < codes.length; i++) {\n\t\t\tif (codes.indexOf(options.type) > -1) {\n\t\t\t\tmedia_type = mediaType;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tswitch(media_type) {\n\t\tcase \"Visual\":\n\t\t\tminf.add(\"vmhd\").set(\"graphicsmode\",0).set(\"opcolor\", [ 0, 0, 0 ]);\n\t\t\tsample_description_entry.set(\"width\", options.width)\n\t\t\t\t\t\t.set(\"height\", options.height)\n\t\t\t\t\t\t.set(\"horizresolution\", 0x48<<16)\n\t\t\t\t\t\t.set(\"vertresolution\", 0x48<<16)\n\t\t\t\t\t\t.set(\"frame_count\", 1)\n\t\t\t\t\t\t.set(\"compressorname\", options.type+\" Compressor\")\n\t\t\t\t\t\t.set(\"depth\", 0x18);\n\t\t\tif (options.avcDecoderConfigRecord) {\n\t\t\t\tvar avcC = new BoxParser.avcCBox();\n\t\t\t\tavcC.parse(new MP4BoxStream(options.avcDecoderConfigRecord));\n\t\t\t\tsample_description_entry.addBox(avcC);\n\t\t\t} else if (options.hevcDecoderConfigRecord) {\n\t\t\t\tvar hvcC = new BoxParser.hvcCBox();\n\t\t\t\thvcC.parse(new MP4BoxStream(options.hevcDecoderConfigRecord));\n\t\t\t\tsample_description_entry.addBox(hvcC);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"Audio\":\n\t\t\tminf.add(\"smhd\").set(\"balance\", options.balance || 0);\n\t\t\tsample_description_entry.set(\"channel_count\", options.channel_count || 2)\n\t\t\t\t\t\t.set(\"samplesize\", options.samplesize || 16)\n\t\t\t\t\t\t.set(\"samplerate\", options.samplerate || 1<<16);\n\t\t\tbreak;\n\t\tcase \"Hint\":\n\t\t\tminf.add(\"hmhd\"); // TODO: add properties\n\t\t\tbreak;\n\t\tcase \"Subtitle\":\n\t\t\tminf.add(\"sthd\");\n\t\t\tswitch (options.type) {\n\t\t\t\tcase \"stpp\":\n\t\t\t\t\tsample_description_entry.set(\"namespace\", options.namespace || \"nonamespace\")\n\t\t\t\t\t\t\t\t.set(\"schema_location\", options.schema_location || \"\")\n\t\t\t\t\t\t\t\t.set(\"auxiliary_mime_types\", options.auxiliary_mime_types || \"\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"Metadata\":\n\t\t\tminf.add(\"nmhd\");\n\t\t\tbreak;\n\t\tcase \"System\":\n\t\t\tminf.add(\"nmhd\");\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tminf.add(\"nmhd\");\n\t\t\tbreak;\n\t}\n\tif (options.description) {\n\t\tsample_description_entry.addBox(options.description);\n\t}\n\tif (options.description_boxes) {\n\t\toptions.description_boxes.forEach(function (b) {\n\t\t\tsample_description_entry.addBox(b);\n\t\t});\n\t}\n\tminf.add(\"dinf\").add(\"dref\").addEntry((new BoxParser[\"url Box\"]()).set(\"flags\", 0x1));\n\tvar stbl = minf.add(\"stbl\");\n\tstbl.add(\"stsd\").addEntry(sample_description_entry);\n\tstbl.add(\"stts\").set(\"sample_counts\", [])\n\t\t\t\t\t.set(\"sample_deltas\", []);\n\tstbl.add(\"stsc\").set(\"first_chunk\", [])\n\t\t\t\t\t.set(\"samples_per_chunk\", [])\n\t\t\t\t\t.set(\"sample_description_index\", []);\n\tstbl.add(\"stco\").set(\"chunk_offsets\", []);\n\tstbl.add(\"stsz\").set(\"sample_sizes\", []);\n\n\tthis.moov.mvex.add(\"trex\").set(\"track_id\", options.id)\n\t\t\t\t\t\t\t  .set(\"default_sample_description_index\", options.default_sample_description_index || 1)\n\t\t\t\t\t\t\t  .set(\"default_sample_duration\", options.default_sample_duration || 0)\n\t\t\t\t\t\t\t  .set(\"default_sample_size\", options.default_sample_size || 0)\n\t\t\t\t\t\t\t  .set(\"default_sample_flags\", options.default_sample_flags || 0);\n\tthis.buildTrakSampleLists(trak);\n\treturn options.id;\n}\n\nBoxParser.Box.prototype.computeSize = function(stream_) {\n\tvar stream = stream_ || new DataStream();\n\tstream.endianness = DataStream.BIG_ENDIAN;\n\tthis.write(stream);\n}\n\nISOFile.prototype.addSample = function (track_id, data, _options) {\n\tvar options = _options || {};\n\tvar sample = {};\n\tvar trak = this.getTrackById(track_id);\n\tif (trak === null) return;\n    sample.number = trak.samples.length;\n\tsample.track_id = trak.tkhd.track_id;\n\tsample.timescale = trak.mdia.mdhd.timescale;\n\tsample.description_index = (options.sample_description_index ? options.sample_description_index - 1: 0);\n\tsample.description = trak.mdia.minf.stbl.stsd.entries[sample.description_index];\n\tsample.data = data;\n\tsample.size = data.byteLength;\n\tsample.alreadyRead = sample.size;\n\tsample.duration = options.duration || 1;\n\tsample.cts = options.cts || 0;\n\tsample.dts = options.dts || 0;\n\tsample.is_sync = options.is_sync || false;\n\tsample.is_leading = options.is_leading || 0;\n\tsample.depends_on = options.depends_on || 0;\n\tsample.is_depended_on = options.is_depended_on || 0;\n\tsample.has_redundancy = options.has_redundancy || 0;\n\tsample.degradation_priority = options.degradation_priority || 0;\n\tsample.offset = 0;\n\tsample.subsamples = options.subsamples;\n\ttrak.samples.push(sample);\n\ttrak.samples_size += sample.size;\n\ttrak.samples_duration += sample.duration;\n\tif (trak.first_dts === undefined) {\n\t\ttrak.first_dts = options.dts;\n\t}\n\n\tthis.processSamples();\n\t\n\tvar moof = this.createSingleSampleMoof(sample);\n\tthis.addBox(moof);\n\tmoof.computeSize();\n\t/* adjusting the data_offset now that the moof size is known*/\n\tmoof.trafs[0].truns[0].data_offset = moof.size+8; //8 is mdat header\n\tthis.add(\"mdat\").data = new Uint8Array(data);\n\treturn sample;\n}\n\nISOFile.prototype.createSingleSampleMoof = function(sample) {\n\tvar sample_flags = 0;\n\tif (sample.is_sync)\n\t\tsample_flags = (1 << 25);  // sample_depends_on_none (I picture)\n\telse\n\t\tsample_flags = (1 << 16);  // non-sync\n\n\tvar moof = new BoxParser.moofBox();\n\tmoof.add(\"mfhd\").set(\"sequence_number\", this.nextMoofNumber);\n\tthis.nextMoofNumber++;\n\tvar traf = moof.add(\"traf\");\n\tvar trak = this.getTrackById(sample.track_id);\n\ttraf.add(\"tfhd\").set(\"track_id\", sample.track_id)\n\t\t\t\t\t.set(\"flags\", BoxParser.TFHD_FLAG_DEFAULT_BASE_IS_MOOF);\n\ttraf.add(\"tfdt\").set(\"baseMediaDecodeTime\", (sample.dts - (trak.first_dts || 0)));\n\ttraf.add(\"trun\").set(\"flags\", BoxParser.TRUN_FLAGS_DATA_OFFSET | BoxParser.TRUN_FLAGS_DURATION | \n\t\t\t\t \t\t\t\t  BoxParser.TRUN_FLAGS_SIZE | BoxParser.TRUN_FLAGS_FLAGS | \n\t\t\t\t \t\t\t\t  BoxParser.TRUN_FLAGS_CTS_OFFSET)\n\t\t\t\t\t.set(\"data_offset\",0)\n\t\t\t\t\t.set(\"first_sample_flags\",0)\n\t\t\t\t\t.set(\"sample_count\",1)\n\t\t\t\t\t.set(\"sample_duration\",[sample.duration])\n\t\t\t\t\t.set(\"sample_size\",[sample.size])\n\t\t\t\t\t.set(\"sample_flags\",[sample_flags])\n\t\t\t\t\t.set(\"sample_composition_time_offset\", [sample.cts - sample.dts]);\n\treturn moof;\n}\n\n// file:src/isofile-sample-processing.js\n/* Index of the last moof box received */\nISOFile.prototype.lastMoofIndex = 0;\n\n/* size of the buffers allocated for samples */\nISOFile.prototype.samplesDataSize = 0;\n\n/* Resets all sample tables */\nISOFile.prototype.resetTables = function () {\n\tvar i;\n\tvar trak, stco, stsc, stsz, stts, ctts, stss;\n\tthis.initial_duration = this.moov.mvhd.duration;\n\tthis.moov.mvhd.duration = 0;\n\tfor (i = 0; i < this.moov.traks.length; i++) {\n\t\ttrak = this.moov.traks[i];\n\t\ttrak.tkhd.duration = 0;\n\t\ttrak.mdia.mdhd.duration = 0;\n\t\tstco = trak.mdia.minf.stbl.stco || trak.mdia.minf.stbl.co64;\n\t\tstco.chunk_offsets = [];\n\t\tstsc = trak.mdia.minf.stbl.stsc;\n\t\tstsc.first_chunk = [];\n\t\tstsc.samples_per_chunk = [];\n\t\tstsc.sample_description_index = [];\n\t\tstsz = trak.mdia.minf.stbl.stsz || trak.mdia.minf.stbl.stz2;\n\t\tstsz.sample_sizes = [];\n\t\tstts = trak.mdia.minf.stbl.stts;\n\t\tstts.sample_counts = [];\n\t\tstts.sample_deltas = [];\n\t\tctts = trak.mdia.minf.stbl.ctts;\n\t\tif (ctts) {\n\t\t\tctts.sample_counts = [];\n\t\t\tctts.sample_offsets = [];\n\t\t}\n\t\tstss = trak.mdia.minf.stbl.stss;\n\t\tvar k = trak.mdia.minf.stbl.boxes.indexOf(stss);\n\t\tif (k != -1) trak.mdia.minf.stbl.boxes[k] = null;\n\t}\n}\n\nISOFile.initSampleGroups = function(trak, traf, sbgps, trak_sgpds, traf_sgpds) {\n\tvar l;\n\tvar k;\n\tvar sample_groups_info;\n\tvar sample_group_info;\n\tvar sample_group_key;\n\tfunction SampleGroupInfo(_type, _parameter, _sbgp) {\n\t\tthis.grouping_type = _type;\n\t\tthis.grouping_type_parameter = _parameter;\n\t\tthis.sbgp = _sbgp;\n\t\tthis.last_sample_in_run = -1;\n\t\tthis.entry_index = -1;\t\t\n\t}\n\tif (traf) {\n\t\ttraf.sample_groups_info = [];\n\t} \n\tif (!trak.sample_groups_info) {\n\t\ttrak.sample_groups_info = [];\n\t}\n\tfor (k = 0; k < sbgps.length; k++) {\n\t\tsample_group_key = sbgps[k].grouping_type +\"/\"+ sbgps[k].grouping_type_parameter;\n\t\tsample_group_info = new SampleGroupInfo(sbgps[k].grouping_type, sbgps[k].grouping_type_parameter, sbgps[k]);\n\t\tif (traf) {\n\t\t\ttraf.sample_groups_info[sample_group_key] = sample_group_info;\n\t\t}\n\t\tif (!trak.sample_groups_info[sample_group_key]) {\n\t\t\ttrak.sample_groups_info[sample_group_key] = sample_group_info;\n\t\t}\n\t\tfor (l=0; l <trak_sgpds.length; l++) {\n\t\t\tif (trak_sgpds[l].grouping_type === sbgps[k].grouping_type) {\n\t\t\t\tsample_group_info.description = trak_sgpds[l];\n\t\t\t\tsample_group_info.description.used = true;\n\t\t\t}\n\t\t}\n\t\tif (traf_sgpds) {\n\t\t\tfor (l=0; l <traf_sgpds.length; l++) {\n\t\t\t\tif (traf_sgpds[l].grouping_type === sbgps[k].grouping_type) {\n\t\t\t\t\tsample_group_info.fragment_description = traf_sgpds[l];\n\t\t\t\t\tsample_group_info.fragment_description.used = true;\n\t\t\t\t\tsample_group_info.is_fragment = true;\n\t\t\t\t}\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\tif (!traf) {\n\t\tfor (k = 0; k < trak_sgpds.length; k++) {\n\t\t\tif (!trak_sgpds[k].used && trak_sgpds[k].version >= 2) {\n\t\t\t\tsample_group_key = trak_sgpds[k].grouping_type +\"/0\";\n\t\t\t\tsample_group_info = new SampleGroupInfo(trak_sgpds[k].grouping_type, 0);\n\t\t\t\tif (!trak.sample_groups_info[sample_group_key]) {\n\t\t\t\t\ttrak.sample_groups_info[sample_group_key] = sample_group_info;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (traf_sgpds) {\n\t\t\tfor (k = 0; k < traf_sgpds.length; k++) {\n\t\t\t\tif (!traf_sgpds[k].used && traf_sgpds[k].version >= 2) {\n\t\t\t\t\tsample_group_key = traf_sgpds[k].grouping_type +\"/0\";\n\t\t\t\t\tsample_group_info = new SampleGroupInfo(traf_sgpds[k].grouping_type, 0);\n\t\t\t\t\tsample_group_info.is_fragment = true;\n\t\t\t\t\tif (!traf.sample_groups_info[sample_group_key]) {\n\t\t\t\t\t\ttraf.sample_groups_info[sample_group_key] = sample_group_info;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nISOFile.setSampleGroupProperties = function(trak, sample, sample_number, sample_groups_info) {\n\tvar k;\n\tvar index;\n\tsample.sample_groups = [];\n\tfor (k in sample_groups_info) {\n\t\tsample.sample_groups[k] = {};\n\t\tsample.sample_groups[k].grouping_type = sample_groups_info[k].grouping_type;\n\t\tsample.sample_groups[k].grouping_type_parameter = sample_groups_info[k].grouping_type_parameter;\n\t\tif (sample_number >= sample_groups_info[k].last_sample_in_run) {\n\t\t\tif (sample_groups_info[k].last_sample_in_run < 0) {\n\t\t\t\tsample_groups_info[k].last_sample_in_run = 0;\n\t\t\t}\n\t\t\tsample_groups_info[k].entry_index++;\t\n\t\t\tif (sample_groups_info[k].entry_index <= sample_groups_info[k].sbgp.entries.length - 1) {\n\t\t\t\tsample_groups_info[k].last_sample_in_run += sample_groups_info[k].sbgp.entries[sample_groups_info[k].entry_index].sample_count;\n\t\t\t}\n\t\t}\n\t\tif (sample_groups_info[k].entry_index <= sample_groups_info[k].sbgp.entries.length - 1) {\n\t\t\tsample.sample_groups[k].group_description_index = sample_groups_info[k].sbgp.entries[sample_groups_info[k].entry_index].group_description_index;\n\t\t} else {\n\t\t\tsample.sample_groups[k].group_description_index = -1; // special value for not defined\n\t\t}\n\t\tif (sample.sample_groups[k].group_description_index !== 0) {\n\t\t\tvar description;\n\t\t\tif (sample_groups_info[k].fragment_description) {\n\t\t\t\tdescription = sample_groups_info[k].fragment_description;\n\t\t\t} else {\n\t\t\t\tdescription = sample_groups_info[k].description;\n\t\t\t}\n\t\t\tif (sample.sample_groups[k].group_description_index > 0) {\n\t\t\t\tif (sample.sample_groups[k].group_description_index > 65535) {\n\t\t\t\t\tindex = (sample.sample_groups[k].group_description_index >> 16)-1;\n\t\t\t\t} else {\n\t\t\t\t\tindex = sample.sample_groups[k].group_description_index-1;\n\t\t\t\t}\n\t\t\t\tif (description && index >= 0) {\n\t\t\t\t\tsample.sample_groups[k].description = description.entries[index];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (description && description.version >= 2) {\n\t\t\t\t\tif (description.default_group_description_index > 0) {\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tsample.sample_groups[k].description = description.entries[description.default_group_description_index-1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nISOFile.process_sdtp = function (sdtp, sample, number) {\n\tif (!sample) {\n\t\treturn;\n\t}\n\tif (sdtp) {\n\t\tsample.is_leading = sdtp.is_leading[number];\n\t\tsample.depends_on = sdtp.sample_depends_on[number];\n\t\tsample.is_depended_on = sdtp.sample_is_depended_on[number];\n\t\tsample.has_redundancy = sdtp.sample_has_redundancy[number];\n\t} else {\n\t\tsample.is_leading = 0;\n\t\tsample.depends_on = 0;\n\t\tsample.is_depended_on = 0\n\t\tsample.has_redundancy = 0;\n\t}\t\n}\n\n/* Build initial sample list from  sample tables */\nISOFile.prototype.buildSampleLists = function() {\t\n\tvar i;\n\tvar trak;\n\tfor (i = 0; i < this.moov.traks.length; i++) {\n\t\ttrak = this.moov.traks[i];\n\t\tthis.buildTrakSampleLists(trak);\n\t}\n}\n\nISOFile.prototype.buildTrakSampleLists = function(trak) {\t\n\tvar j, k;\n\tvar stco, stsc, stsz, stts, ctts, stss, stsd, subs, sbgps, sgpds, stdp;\n\tvar chunk_run_index, chunk_index, last_chunk_in_run, offset_in_chunk, last_sample_in_chunk;\n\tvar last_sample_in_stts_run, stts_run_index, last_sample_in_ctts_run, ctts_run_index, last_stss_index, last_subs_index, subs_entry_index, last_subs_sample_index;\n\n\ttrak.samples = [];\n\ttrak.samples_duration = 0;\n\ttrak.samples_size = 0;\n\tstco = trak.mdia.minf.stbl.stco || trak.mdia.minf.stbl.co64;\n\tstsc = trak.mdia.minf.stbl.stsc;\n\tstsz = trak.mdia.minf.stbl.stsz || trak.mdia.minf.stbl.stz2;\n\tstts = trak.mdia.minf.stbl.stts;\n\tctts = trak.mdia.minf.stbl.ctts;\n\tstss = trak.mdia.minf.stbl.stss;\n\tstsd = trak.mdia.minf.stbl.stsd;\n\tsubs = trak.mdia.minf.stbl.subs;\n\tstdp = trak.mdia.minf.stbl.stdp;\n\tsbgps = trak.mdia.minf.stbl.sbgps;\n\tsgpds = trak.mdia.minf.stbl.sgpds;\n\t\n\tlast_sample_in_stts_run = -1;\n\tstts_run_index = -1;\n\tlast_sample_in_ctts_run = -1;\n\tctts_run_index = -1;\n\tlast_stss_index = 0;\n\tsubs_entry_index = 0;\n\tlast_subs_sample_index = 0;\t\t\n\n\tISOFile.initSampleGroups(trak, null, sbgps, sgpds);\n\n\tif (typeof stsz === \"undefined\") {\n\t\treturn;\n\t}\n\n\t/* we build the samples one by one and compute their properties */\n\tfor (j = 0; j < stsz.sample_sizes.length; j++) {\n\t\tvar sample = {};\n\t\tsample.number = j;\n\t\tsample.track_id = trak.tkhd.track_id;\n\t\tsample.timescale = trak.mdia.mdhd.timescale;\n\t\tsample.alreadyRead = 0;\n\t\ttrak.samples[j] = sample;\n\t\t/* size can be known directly */\n\t\tsample.size = stsz.sample_sizes[j];\n\t\ttrak.samples_size += sample.size;\n\t\t/* computing chunk-based properties (offset, sample description index)*/\n\t\tif (j === 0) {\t\t\t\t\n\t\t\tchunk_index = 1; /* the first sample is in the first chunk (chunk indexes are 1-based) */\n\t\t\tchunk_run_index = 0; /* the first chunk is the first entry in the first_chunk table */\n\t\t\tsample.chunk_index = chunk_index;\n\t\t\tsample.chunk_run_index = chunk_run_index;\n\t\t\tlast_sample_in_chunk = stsc.samples_per_chunk[chunk_run_index];\n\t\t\toffset_in_chunk = 0;\n\n\t\t\t/* Is there another entry in the first_chunk table ? */\n\t\t\tif (chunk_run_index + 1 < stsc.first_chunk.length) {\n\t\t\t\t/* The last chunk in the run is the chunk before the next first chunk */\n\t\t\t\tlast_chunk_in_run = stsc.first_chunk[chunk_run_index+1]-1; \t\n\t\t\t} else {\n\t\t\t\t/* There is only one entry in the table, it is valid for all future chunks*/\n\t\t\t\tlast_chunk_in_run = Infinity;\n\t\t\t}\n\t\t} else {\n\t\t\tif (j < last_sample_in_chunk) {\n\t\t\t\t/* the sample is still in the current chunk */\n\t\t\t\tsample.chunk_index = chunk_index;\n\t\t\t\tsample.chunk_run_index = chunk_run_index;\n\t\t\t} else {\n\t\t\t\t/* the sample is in the next chunk */\n\t\t\t\tchunk_index++;\n\t\t\t\tsample.chunk_index = chunk_index;\n\t\t\t\t/* reset the accumulated offset in the chunk */\n\t\t\t\toffset_in_chunk = 0;\n\t\t\t\tif (chunk_index <= last_chunk_in_run) {\n\t\t\t\t\t/* stay in the same entry of the first_chunk table */\n\t\t\t\t\t/* chunk_run_index unmodified */\n\t\t\t\t} else {\n\t\t\t\t\tchunk_run_index++;\n\t\t\t\t\t/* Is there another entry in the first_chunk table ? */\n\t\t\t\t\tif (chunk_run_index + 1 < stsc.first_chunk.length) {\n\t\t\t\t\t\t/* The last chunk in the run is the chunk before the next first chunk */\n\t\t\t\t\t\tlast_chunk_in_run = stsc.first_chunk[chunk_run_index+1]-1; \t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* There is only one entry in the table, it is valid for all future chunks*/\n\t\t\t\t\t\tlast_chunk_in_run = Infinity;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tsample.chunk_run_index = chunk_run_index;\n\t\t\t\tlast_sample_in_chunk += stsc.samples_per_chunk[chunk_run_index];\n\t\t\t}\n\t\t}\n\n\t\tsample.description_index = stsc.sample_description_index[sample.chunk_run_index]-1;\n\t\tsample.description = stsd.entries[sample.description_index];\n\t\tsample.offset = stco.chunk_offsets[sample.chunk_index-1] + offset_in_chunk; /* chunk indexes are 1-based */\n\t\toffset_in_chunk += sample.size;\n\n\t\t/* setting dts, cts, duration and rap flags */\n\t\tif (j > last_sample_in_stts_run) {\n\t\t\tstts_run_index++;\n\t\t\tif (last_sample_in_stts_run < 0) {\n\t\t\t\tlast_sample_in_stts_run = 0;\n\t\t\t}\n\t\t\tlast_sample_in_stts_run += stts.sample_counts[stts_run_index];\t\t\t\t\n\t\t}\n\t\tif (j > 0) {\n\t\t\ttrak.samples[j-1].duration = stts.sample_deltas[stts_run_index];\n\t\t\ttrak.samples_duration += trak.samples[j-1].duration;\n\t\t\tsample.dts = trak.samples[j-1].dts + trak.samples[j-1].duration;\n\t\t} else {\n\t\t\tsample.dts = 0;\n\t\t}\n\t\tif (ctts) {\n\t\t\tif (j >= last_sample_in_ctts_run) {\n\t\t\t\tctts_run_index++;\n\t\t\t\tif (last_sample_in_ctts_run < 0) {\n\t\t\t\t\tlast_sample_in_ctts_run = 0;\n\t\t\t\t}\n\t\t\t\tlast_sample_in_ctts_run += ctts.sample_counts[ctts_run_index];\t\t\t\t\n\t\t\t}\n\t\t\tsample.cts = trak.samples[j].dts + ctts.sample_offsets[ctts_run_index];\n\t\t} else {\n\t\t\tsample.cts = sample.dts;\n\t\t}\n\t\tif (stss) {\n\t\t\tif (j == stss.sample_numbers[last_stss_index] - 1) { // sample numbers are 1-based\n\t\t\t\tsample.is_sync = true;\n\t\t\t\tlast_stss_index++;\n\t\t\t} else {\n\t\t\t\tsample.is_sync = false;\t\t\t\t\n\t\t\t\tsample.degradation_priority = 0;\n\t\t\t}\n\t\t\tif (subs) {\n\t\t\t\tif (subs.entries[subs_entry_index].sample_delta + last_subs_sample_index == j+1) {\n\t\t\t\t\tsample.subsamples = subs.entries[subs_entry_index].subsamples;\n\t\t\t\t\tlast_subs_sample_index += subs.entries[subs_entry_index].sample_delta;\n\t\t\t\t\tsubs_entry_index++;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tsample.is_sync = true;\n\t\t}\n\t\tISOFile.process_sdtp(trak.mdia.minf.stbl.sdtp, sample, sample.number);\n\t\tif (stdp) {\n\t\t\tsample.degradation_priority = stdp.priority[j];\n\t\t} else {\n\t\t\tsample.degradation_priority = 0;\n\t\t}\n\t\tif (subs) {\n\t\t\tif (subs.entries[subs_entry_index].sample_delta + last_subs_sample_index == j) {\n\t\t\t\tsample.subsamples = subs.entries[subs_entry_index].subsamples;\n\t\t\t\tlast_subs_sample_index += subs.entries[subs_entry_index].sample_delta;\n\t\t\t}\n\t\t}\n\t\tif (sbgps.length > 0 || sgpds.length > 0) {\n\t\t\tISOFile.setSampleGroupProperties(trak, sample, j, trak.sample_groups_info);\n\t\t}\n\t}\n\tif (j>0) {\n\t\ttrak.samples[j-1].duration = Math.max(trak.mdia.mdhd.duration - trak.samples[j-1].dts, 0);\n\t\ttrak.samples_duration += trak.samples[j-1].duration;\n\t}\n}\n\n/* Update sample list when new 'moof' boxes are received */\nISOFile.prototype.updateSampleLists = function() {\t\n\tvar i, j, k;\n\tvar default_sample_description_index, default_sample_duration, default_sample_size, default_sample_flags;\n\tvar last_run_position;\n\tvar box, moof, traf, trak, trex;\n\tvar sample;\n\tvar sample_flags;\n\t\n\tif (this.moov === undefined) {\n\t\treturn;\n\t}\n\t/* if the input file is fragmented and fetched in multiple downloads, we need to update the list of samples */\n\twhile (this.lastMoofIndex < this.moofs.length) {\n\t\tbox = this.moofs[this.lastMoofIndex];\n\t\tthis.lastMoofIndex++;\n\t\tif (box.type == \"moof\") {\n\t\t\tmoof = box;\n\t\t\tfor (i = 0; i < moof.trafs.length; i++) {\n\t\t\t\ttraf = moof.trafs[i];\n\t\t\t\ttrak = this.getTrackById(traf.tfhd.track_id);\n\t\t\t\ttrex = this.getTrexById(traf.tfhd.track_id);\n\t\t\t\tif (traf.tfhd.flags & BoxParser.TFHD_FLAG_SAMPLE_DESC) {\n\t\t\t\t\tdefault_sample_description_index = traf.tfhd.default_sample_description_index;\n\t\t\t\t} else {\n\t\t\t\t\tdefault_sample_description_index = (trex ? trex.default_sample_description_index: 1);\n\t\t\t\t}\n\t\t\t\tif (traf.tfhd.flags & BoxParser.TFHD_FLAG_SAMPLE_DUR) {\n\t\t\t\t\tdefault_sample_duration = traf.tfhd.default_sample_duration;\n\t\t\t\t} else {\n\t\t\t\t\tdefault_sample_duration = (trex ? trex.default_sample_duration : 0);\n\t\t\t\t}\n\t\t\t\tif (traf.tfhd.flags & BoxParser.TFHD_FLAG_SAMPLE_SIZE) {\n\t\t\t\t\tdefault_sample_size = traf.tfhd.default_sample_size;\n\t\t\t\t} else {\n\t\t\t\t\tdefault_sample_size = (trex ? trex.default_sample_size : 0);\n\t\t\t\t}\n\t\t\t\tif (traf.tfhd.flags & BoxParser.TFHD_FLAG_SAMPLE_FLAGS) {\n\t\t\t\t\tdefault_sample_flags = traf.tfhd.default_sample_flags;\n\t\t\t\t} else {\n\t\t\t\t\tdefault_sample_flags = (trex ? trex.default_sample_flags : 0);\n\t\t\t\t}\n\t\t\t\ttraf.sample_number = 0;\n\t\t\t\t/* process sample groups */\n\t\t\t\tif (traf.sbgps.length > 0) {\n\t\t\t\t\tISOFile.initSampleGroups(trak, traf, traf.sbgps, trak.mdia.minf.stbl.sgpds, traf.sgpds);\n\t\t\t\t}\n\t\t\t\tfor (j = 0; j < traf.truns.length; j++) {\n\t\t\t\t\tvar trun = traf.truns[j];\n\t\t\t\t\tfor (k = 0; k < trun.sample_count; k++) {\n\t\t\t\t\t\tsample = {};\n\t\t\t\t\t\tsample.moof_number = this.lastMoofIndex;\n\t\t\t\t\t\tsample.number_in_traf = traf.sample_number;\n\t\t\t\t\t\ttraf.sample_number++;\n\t\t\t            sample.number = trak.samples.length;\n\t\t\t\t\t\ttraf.first_sample_index = trak.samples.length;\n\t\t\t\t\t\ttrak.samples.push(sample);\n\t\t\t\t\t\tsample.track_id = trak.tkhd.track_id;\n\t\t\t\t\t\tsample.timescale = trak.mdia.mdhd.timescale;\n\t\t\t\t\t\tsample.description_index = default_sample_description_index-1;\n\t\t\t\t\t\tsample.description = trak.mdia.minf.stbl.stsd.entries[sample.description_index];\n\t\t\t\t\t\tsample.size = default_sample_size;\n\t\t\t\t\t\tif (trun.flags & BoxParser.TRUN_FLAGS_SIZE) {\n\t\t\t\t\t\t\tsample.size = trun.sample_size[k];\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttrak.samples_size += sample.size;\n\t\t\t\t\t\tsample.duration = default_sample_duration;\n\t\t\t\t\t\tif (trun.flags & BoxParser.TRUN_FLAGS_DURATION) {\n\t\t\t\t\t\t\tsample.duration = trun.sample_duration[k];\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttrak.samples_duration += sample.duration;\n\t\t\t\t\t\tif (trak.first_traf_merged || k > 0) {\n\t\t\t\t\t\t\tsample.dts = trak.samples[trak.samples.length-2].dts+trak.samples[trak.samples.length-2].duration;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (traf.tfdt) {\n\t\t\t\t\t\t\t\tsample.dts = traf.tfdt.baseMediaDecodeTime;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsample.dts = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttrak.first_traf_merged = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsample.cts = sample.dts;\n\t\t\t\t\t\tif (trun.flags & BoxParser.TRUN_FLAGS_CTS_OFFSET) {\n\t\t\t\t\t\t\tsample.cts = sample.dts + trun.sample_composition_time_offset[k];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsample_flags = default_sample_flags;\n\t\t\t\t\t\tif (trun.flags & BoxParser.TRUN_FLAGS_FLAGS) {\n\t\t\t\t\t\t\tsample_flags = trun.sample_flags[k];\n\t\t\t\t\t\t} else if (k === 0 && (trun.flags & BoxParser.TRUN_FLAGS_FIRST_FLAG)) {\n\t\t\t\t\t\t\tsample_flags = trun.first_sample_flags;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsample.is_sync = ((sample_flags >> 16 & 0x1) ? false : true);\n\t\t\t\t\t\tsample.is_leading = (sample_flags >> 26 & 0x3);\n\t\t\t\t\t\tsample.depends_on = (sample_flags >> 24 & 0x3);\n\t\t\t\t\t\tsample.is_depended_on = (sample_flags >> 22 & 0x3);\n\t\t\t\t\t\tsample.has_redundancy = (sample_flags >> 20 & 0x3);\n\t\t\t\t\t\tsample.degradation_priority = (sample_flags & 0xFFFF);\n\t\t\t\t\t\t//ISOFile.process_sdtp(traf.sdtp, sample, sample.number_in_traf);\n\t\t\t\t\t\tvar bdop = (traf.tfhd.flags & BoxParser.TFHD_FLAG_BASE_DATA_OFFSET) ? true : false;\n\t\t\t\t\t\tvar dbim = (traf.tfhd.flags & BoxParser.TFHD_FLAG_DEFAULT_BASE_IS_MOOF) ? true : false;\n\t\t\t\t\t\tvar dop = (trun.flags & BoxParser.TRUN_FLAGS_DATA_OFFSET) ? true : false;\n\t\t\t\t\t\tvar bdo = 0;\n\t\t\t\t\t\tif (!bdop) {\n\t\t\t\t\t\t\tif (!dbim) {\n\t\t\t\t\t\t\t\tif (j === 0) { // the first track in the movie fragment\n\t\t\t\t\t\t\t\t\tbdo = moof.start; // the position of the first byte of the enclosing Movie Fragment Box\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tbdo = last_run_position; // end of the data defined by the preceding *track* (irrespective of the track id) fragment in the moof\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbdo = moof.start;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbdo = traf.tfhd.base_data_offset;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === 0 && k === 0) {\n\t\t\t\t\t\t\tif (dop) {\n\t\t\t\t\t\t\t\tsample.offset = bdo + trun.data_offset; // If the data-offset is present, it is relative to the base-data-offset established in the track fragment header\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsample.offset = bdo; // the data for this run starts the base-data-offset defined by the track fragment header\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsample.offset = last_run_position; // this run starts immediately after the data of the previous run\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlast_run_position = sample.offset + sample.size;\n\t\t\t\t\t\tif (traf.sbgps.length > 0 || traf.sgpds.length > 0 ||\n\t\t\t\t\t\t\ttrak.mdia.minf.stbl.sbgps.length > 0 || trak.mdia.minf.stbl.sgpds.length > 0) {\n\t\t\t\t\t\t\tISOFile.setSampleGroupProperties(trak, sample, sample.number_in_traf, traf.sample_groups_info);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (traf.subs) {\n\t\t\t\t\ttrak.has_fragment_subsamples = true;\n\t\t\t\t\tvar sample_index = traf.first_sample_index;\n\t\t\t\t\tfor (j = 0; j < traf.subs.entries.length; j++) {\n\t\t\t\t\t\tsample_index += traf.subs.entries[j].sample_delta;\n\t\t\t\t\t\tsample = trak.samples[sample_index-1];\n\t\t\t\t\t\tsample.subsamples = traf.subs.entries[j].subsamples;\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\t\n}\n\n/* Try to get sample data for a given sample:\n   returns null if not found\n   returns the same sample if already requested\n */\nISOFile.prototype.getSample = function(trak, sampleNum) {\t\n\tvar buffer;\n\tvar sample = trak.samples[sampleNum];\n\t\n\tif (!this.moov) {\n\t\treturn null;\n\t}\n\n\tif (!sample.data) {\n\t\t/* Not yet fetched */\n\t\tsample.data = new Uint8Array(sample.size);\n\t\tsample.alreadyRead = 0;\n\t\tthis.samplesDataSize += sample.size;\n\t\tLog.debug(\"ISOFile\", \"Allocating sample #\"+sampleNum+\" on track #\"+trak.tkhd.track_id+\" of size \"+sample.size+\" (total: \"+this.samplesDataSize+\")\");\n\t} else if (sample.alreadyRead == sample.size) {\n\t\t/* Already fetched entirely */\n\t\treturn sample;\n\t}\n\n\t/* The sample has only been partially fetched, we need to check in all buffers */\n\twhile(true) {\n\t\tvar index =\tthis.stream.findPosition(true, sample.offset + sample.alreadyRead, false);\n\t\tif (index > -1) {\n\t\t\tbuffer = this.stream.buffers[index];\n\t\t\tvar lengthAfterStart = buffer.byteLength - (sample.offset + sample.alreadyRead - buffer.fileStart);\n\t\t\tif (sample.size - sample.alreadyRead <= lengthAfterStart) {\n\t\t\t\t/* the (rest of the) sample is entirely contained in this buffer */\n\n\t\t\t\tLog.debug(\"ISOFile\",\"Getting sample #\"+sampleNum+\" data (alreadyRead: \"+sample.alreadyRead+\" offset: \"+\n\t\t\t\t\t(sample.offset+sample.alreadyRead - buffer.fileStart)+\" read size: \"+(sample.size - sample.alreadyRead)+\" full size: \"+sample.size+\")\");\n\n\t\t\t\tDataStream.memcpy(sample.data.buffer, sample.alreadyRead,\n\t\t\t\t                  buffer, sample.offset+sample.alreadyRead - buffer.fileStart, sample.size - sample.alreadyRead);\n\n\t\t\t\t/* update the number of bytes used in this buffer and check if it needs to be removed */\n\t\t\t\tbuffer.usedBytes += sample.size - sample.alreadyRead;\n\t\t\t\tthis.stream.logBufferLevel();\n\n\t\t\t\tsample.alreadyRead = sample.size;\n\n\t\t\t\treturn sample;\n\t\t\t} else {\n\t\t\t\t/* the sample does not end in this buffer */\n\n\t\t\t\tif (lengthAfterStart === 0) return null;\n\n\t\t\t\tLog.debug(\"ISOFile\",\"Getting sample #\"+sampleNum+\" partial data (alreadyRead: \"+sample.alreadyRead+\" offset: \"+\n\t\t\t\t\t(sample.offset+sample.alreadyRead - buffer.fileStart)+\" read size: \"+lengthAfterStart+\" full size: \"+sample.size+\")\");\n\n\t\t\t\tDataStream.memcpy(sample.data.buffer, sample.alreadyRead,\n\t\t\t\t                  buffer, sample.offset+sample.alreadyRead - buffer.fileStart, lengthAfterStart);\n\t\t\t\tsample.alreadyRead += lengthAfterStart;\n\n\t\t\t\t/* update the number of bytes used in this buffer and check if it needs to be removed */\n\t\t\t\tbuffer.usedBytes += lengthAfterStart;\n\t\t\t\tthis.stream.logBufferLevel();\n\n\t\t\t\t/* keep looking in the next buffer */\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\n/* Release the memory used to store the data of the sample */\nISOFile.prototype.releaseSample = function(trak, sampleNum) {\t\n\tvar sample = trak.samples[sampleNum];\n\tif (sample.data) {\n\t\tthis.samplesDataSize -= sample.size;\n\t\tsample.data = null;\n\t\tsample.alreadyRead = 0;\n\t\treturn sample.size;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nISOFile.prototype.getAllocatedSampleDataSize = function() {\n\treturn this.samplesDataSize;\n}\n\n/* Builds the MIME Type 'codecs' sub-parameters for the whole file */\nISOFile.prototype.getCodecs = function() {\t\n\tvar i;\n\tvar codecs = \"\";\n\tfor (i = 0; i < this.moov.traks.length; i++) {\n\t\tvar trak = this.moov.traks[i];\n\t\tif (i>0) {\n\t\t\tcodecs+=\",\"; \n\t\t}\n\t\tcodecs += trak.mdia.minf.stbl.stsd.entries[0].getCodec();\t\t\n\t}\n\treturn codecs;\n}\n\n/* Helper function */\nISOFile.prototype.getTrexById = function(id) {\t\n\tvar i;\n\tif (!this.moov || !this.moov.mvex) return null;\n\tfor (i = 0; i < this.moov.mvex.trexs.length; i++) {\n\t\tvar trex = this.moov.mvex.trexs[i];\n\t\tif (trex.track_id == id) return trex;\n\t}\n\treturn null;\n}\n\n/* Helper function */\nISOFile.prototype.getTrackById = function(id) {\n\tif (this.moov === undefined) {\n\t\treturn null;\n\t}\n\tfor (var j = 0; j < this.moov.traks.length; j++) {\n\t\tvar trak = this.moov.traks[j];\n\t\tif (trak.tkhd.track_id == id) return trak;\n\t}\n\treturn null;\n}\n// file:src/isofile-item-processing.js\n/* size of the buffers allocated for samples */\nISOFile.prototype.itemsDataSize = 0;\n\nISOFile.prototype.flattenItemInfo = function() {\t\n\tvar items = this.items;\n\tvar entity_groups = this.entity_groups;\n\tvar i, j;\n\tvar item;\n\tvar meta = this.meta;\n\tif (meta === null || meta === undefined) return;\n\tif (meta.hdlr === undefined) return;\n\tif (meta.iinf === undefined) return;\n\tfor (i = 0; i < meta.iinf.item_infos.length; i++) {\n\t\titem = {};\n\t\titem.id = meta.iinf.item_infos[i].item_ID;\n\t\titems[item.id] = item;\n\t\titem.ref_to = [];\n\t\titem.name = meta.iinf.item_infos[i].item_name;\n\t\tif (meta.iinf.item_infos[i].protection_index > 0) {\n\t\t\titem.protection = meta.ipro.protections[meta.iinf.item_infos[i].protection_index-1];\n\t\t}\n\t\tif (meta.iinf.item_infos[i].item_type) {\n\t\t\titem.type = meta.iinf.item_infos[i].item_type;\n\t\t} else {\n\t\t\titem.type = \"mime\";\n\t\t}\n\t\titem.content_type = meta.iinf.item_infos[i].content_type;\n\t\titem.content_encoding = meta.iinf.item_infos[i].content_encoding;\n\t\titem.item_uri_type = meta.iinf.item_infos[i].item_uri_type;\n\t}\n\tif (meta.grpl) {\n\t\tfor (i = 0; i < meta.grpl.boxes.length; i++) {\n\t\t\tentity_group = {};\n\t\t\tentity_group.id = meta.grpl.boxes[i].group_id;\n\t\t\tentity_group.entity_ids = meta.grpl.boxes[i].entity_ids;\n\t\t\tentity_group.type = meta.grpl.boxes[i].type;\n\t\t\tentity_groups[entity_group.id] = entity_group;\n\t\t}\n\t}\n\tif (meta.iloc) {\n\t\tfor(i = 0; i < meta.iloc.items.length; i++) {\n\t\t\tvar offset;\n\t\t\tvar itemloc = meta.iloc.items[i];\n\t\t\titem = items[itemloc.item_ID];\n\t\t\tif (itemloc.data_reference_index !== 0) {\n\t\t\t\tLog.warn(\"Item storage with reference to other files: not supported\");\n\t\t\t\titem.source = meta.dinf.boxes[itemloc.data_reference_index-1];\n\t\t\t}\n\t\t\tswitch(itemloc.construction_method) {\n\t\t\t\tcase 0: // offset into the file referenced by the data reference index\n\t\t\t\tbreak;\n\t\t\t\tcase 1: // offset into the idat box of this meta box\n\t\t\t\tbreak;\n\t\t\t\tcase 2: // offset into another item\n\t\t\t\tLog.warn(\"Item storage with construction_method : not supported\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\titem.extents = [];\n\t\t\titem.size = 0;\n\t\t\tfor (j = 0; j < itemloc.extents.length; j++) {\n\t\t\t\titem.extents[j] = {};\n\t\t\t\titem.extents[j].offset = itemloc.extents[j].extent_offset + itemloc.base_offset;\n\t\t\t\tif (itemloc.construction_method == 1) {\n\t\t\t\t\titem.extents[j].offset += meta.idat.start + meta.idat.hdr_size;\n\t\t\t\t}\n\t\t\t\titem.extents[j].length = itemloc.extents[j].extent_length;\n\t\t\t\titem.extents[j].alreadyRead = 0;\n\t\t\t\titem.size += item.extents[j].length;\n\t\t\t}\n\t\t}\n\t}\n\tif (meta.pitm) {\n\t\titems[meta.pitm.item_id].primary = true;\n\t}\n\tif (meta.iref) {\n\t\tfor (i=0; i <meta.iref.references.length; i++) {\n\t\t\tvar ref = meta.iref.references[i];\n\t\t\tfor (j=0; j<ref.references.length; j++) {\n\t\t\t\titems[ref.from_item_ID].ref_to.push({type: ref.type, id: ref.references[j]});\n\t\t\t}\n\t\t}\n\t}\n\tif (meta.iprp) {\n\t\tfor (var k = 0; k < meta.iprp.ipmas.length; k++) {\n\t\t\tvar ipma = meta.iprp.ipmas[k];\n\t\t\tfor (i = 0; i < ipma.associations.length; i++) {\n\t\t\t\tvar association = ipma.associations[i];\n\t\t\t\titem = items[association.id];\n\t\t\t\tif (!item) {\n\t\t\t\t\titem = entity_groups[association.id];\n\t\t\t\t}\n\t\t\t\tif (item) {\n\t\t\t\t\tif (item.properties === undefined) {\n\t\t\t\t\t\titem.properties = {};\n\t\t\t\t\t\titem.properties.boxes = [];\n\t\t\t\t\t}\n\t\t\t\t\tfor (j = 0; j < association.props.length; j++) {\n\t\t\t\t\t\tvar propEntry = association.props[j];\n\t\t\t\t\t\tif (propEntry.property_index > 0 && propEntry.property_index-1 < meta.iprp.ipco.boxes.length) {\n\t\t\t\t\t\t\tvar propbox = meta.iprp.ipco.boxes[propEntry.property_index-1];\n\t\t\t\t\t\t\titem.properties[propbox.type] = propbox;\n\t\t\t\t\t\t\titem.properties.boxes.push(propbox);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nISOFile.prototype.getItem = function(item_id) {\t\n\tvar buffer;\n\tvar item;\n\t\n\tif (!this.meta) {\n\t\treturn null;\n\t}\n\n \titem = this.items[item_id];\n\tif (!item.data && item.size) {\n\t\t/* Not yet fetched */\n\t\titem.data = new Uint8Array(item.size);\n\t\titem.alreadyRead = 0;\n\t\tthis.itemsDataSize += item.size;\n\t\tLog.debug(\"ISOFile\", \"Allocating item #\"+item_id+\" of size \"+item.size+\" (total: \"+this.itemsDataSize+\")\");\n\t} else if (item.alreadyRead === item.size) {\n\t\t/* Already fetched entirely */\n\t\treturn item;\n\t}\n\n\t/* The item has only been partially fetched, we need to check in all buffers to find the remaining extents*/\n\n\tfor (var i = 0; i < item.extents.length; i++) {\n\t\tvar extent = item.extents[i];\n\t\tif (extent.alreadyRead === extent.length) {\n\t\t\tcontinue;\n\t\t} else {\n\t\t\tvar index =\tthis.stream.findPosition(true, extent.offset + extent.alreadyRead, false);\n\t\t\tif (index > -1) {\n\t\t\t\tbuffer = this.stream.buffers[index];\n\t\t\t\tvar lengthAfterStart = buffer.byteLength - (extent.offset + extent.alreadyRead - buffer.fileStart);\n\t\t\t\tif (extent.length - extent.alreadyRead <= lengthAfterStart) {\n\t\t\t\t\t/* the (rest of the) extent is entirely contained in this buffer */\n\n\t\t\t\t\tLog.debug(\"ISOFile\",\"Getting item #\"+item_id+\" extent #\"+i+\" data (alreadyRead: \"+extent.alreadyRead+\n\t\t\t\t\t\t\" offset: \"+(extent.offset+extent.alreadyRead - buffer.fileStart)+\" read size: \"+(extent.length - extent.alreadyRead)+\n\t\t\t\t\t\t\" full extent size: \"+extent.length+\" full item size: \"+item.size+\")\");\n\n\t\t\t\t\tDataStream.memcpy(item.data.buffer, item.alreadyRead, \n\t\t\t\t\t                  buffer, extent.offset+extent.alreadyRead - buffer.fileStart, extent.length - extent.alreadyRead);\n\n\t\t\t\t\t/* update the number of bytes used in this buffer and check if it needs to be removed */\n\t\t\t\t\tbuffer.usedBytes += extent.length - extent.alreadyRead;\n\t\t\t\t\tthis.stream.logBufferLevel();\n\n\t\t\t\t\titem.alreadyRead += (extent.length - extent.alreadyRead);\n\t\t\t\t\textent.alreadyRead = extent.length;\n\t\t\t\t} else {\n\t\t\t\t\t/* the sample does not end in this buffer */\n\n\t\t\t\t\tLog.debug(\"ISOFile\",\"Getting item #\"+item_id+\" extent #\"+i+\" partial data (alreadyRead: \"+extent.alreadyRead+\" offset: \"+\n\t\t\t\t\t\t(extent.offset+extent.alreadyRead - buffer.fileStart)+\" read size: \"+lengthAfterStart+\n\t\t\t\t\t\t\" full extent size: \"+extent.length+\" full item size: \"+item.size+\")\");\n\n\t\t\t\t\tDataStream.memcpy(item.data.buffer, item.alreadyRead, \n\t\t\t\t\t                  buffer, extent.offset+extent.alreadyRead - buffer.fileStart, lengthAfterStart);\n\t\t\t\t\textent.alreadyRead += lengthAfterStart;\n\t\t\t\t\titem.alreadyRead += lengthAfterStart;\n\n\t\t\t\t\t/* update the number of bytes used in this buffer and check if it needs to be removed */\n\t\t\t\t\tbuffer.usedBytes += lengthAfterStart;\n\t\t\t\t\tthis.stream.logBufferLevel();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\tif (item.alreadyRead === item.size) {\n\t\t/* fetched entirely */\n\t\treturn item;\n\t} else {\n\t\treturn null;\n\t}\n}\n\n/* Release the memory used to store the data of the item */\nISOFile.prototype.releaseItem = function(item_id) {\t\n\tvar item = this.items[item_id];\n\tif (item.data) {\n\t\tthis.itemsDataSize -= item.size;\n\t\titem.data = null;\n\t\titem.alreadyRead = 0;\n\t\tfor (var i = 0; i < item.extents.length; i++) {\n\t\t\tvar extent = item.extents[i];\n\t\t\textent.alreadyRead = 0;\n\t\t}\n\t\treturn item.size;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\n\nISOFile.prototype.processItems = function(callback) {\n\tfor(var i in this.items) {\n\t\tvar item = this.items[i];\n\t\tthis.getItem(item.id);\n\t\tif (callback && !item.sent) {\n\t\t\tcallback(item);\n\t\t\titem.sent = true;\n\t\t\titem.data = null;\n\t\t}\n\t}\n}\n\nISOFile.prototype.hasItem = function(name) {\n\tfor(var i in this.items) {\n\t\tvar item = this.items[i];\n\t\tif (item.name === name) {\n\t\t\treturn item.id;\n\t\t}\n\t}\n\treturn -1;\n}\n\nISOFile.prototype.getMetaHandler = function() {\n\tif (!this.meta) {\n\t\treturn null;\n\t} else {\n\t\treturn this.meta.hdlr.handler;\t\t\n\t}\n}\n\nISOFile.prototype.getPrimaryItem = function() {\n\tif (!this.meta || !this.meta.pitm) {\n\t\treturn null;\n\t} else {\n\t\treturn this.getItem(this.meta.pitm.item_id);\n\t}\n}\n\nISOFile.prototype.itemToFragmentedTrackFile = function(_options) {\n\tvar options = _options || {};\n\tvar item = null;\n\tif (options.itemId) {\n\t\titem = this.getItem(options.itemId);\n\t} else {\n\t\titem = this.getPrimaryItem();\n\t}\n\tif (item == null) return null;\n\n\tvar file = new ISOFile();\n\tfile.discardMdatData = false;\n\t// assuming the track type is the same as the item type\n\tvar trackOptions = { type: item.type, description_boxes: item.properties.boxes};\n\tif (item.properties.ispe) {\n\t\ttrackOptions.width = item.properties.ispe.image_width;\n\t\ttrackOptions.height = item.properties.ispe.image_height;\n\t}\n\tvar trackId = file.addTrack(trackOptions);\n\tif (trackId) {\n\t\tfile.addSample(trackId, item.data);\n\t\treturn file;\n\t} else {\n\t\treturn null;\n\t}\n}\n\n// file:src/isofile-write.js\n/* Rewrite the entire file */\nISOFile.prototype.write = function(outstream) {\n\tfor (var i=0; i<this.boxes.length; i++) {\n\t\tthis.boxes[i].write(outstream);\n\t}\n}\n\nISOFile.prototype.createFragment = function(track_id, sampleNumber, stream_) {\n\tvar trak = this.getTrackById(track_id);\n\tvar sample = this.getSample(trak, sampleNumber);\n\tif (sample == null) {\n\t\tthis.setNextSeekPositionFromSample(trak.samples[sampleNumber]);\n\t\treturn null;\n\t}\n\t\n\tvar stream = stream_ || new DataStream();\n\tstream.endianness = DataStream.BIG_ENDIAN;\n\n\tvar moof = this.createSingleSampleMoof(sample);\n\tmoof.write(stream);\n\n\t/* adjusting the data_offset now that the moof size is known*/\n\tmoof.trafs[0].truns[0].data_offset = moof.size+8; //8 is mdat header\n\tLog.debug(\"MP4Box\", \"Adjusting data_offset with new value \"+moof.trafs[0].truns[0].data_offset);\n\tstream.adjustUint32(moof.trafs[0].truns[0].data_offset_position, moof.trafs[0].truns[0].data_offset);\n\t\t\n\tvar mdat = new BoxParser.mdatBox();\n\tmdat.data = sample.data;\n\tmdat.write(stream);\n\treturn stream;\n}\n\n/* Modify the file and create the initialization segment */\nISOFile.writeInitializationSegment = function(ftyp, moov, total_duration, sample_duration) {\n\tvar i;\n\tvar index;\n\tvar mehd;\n\tvar trex;\n\tvar box;\n\tLog.debug(\"ISOFile\", \"Generating initialization segment\");\n\n\tvar stream = new DataStream();\n\tstream.endianness = DataStream.BIG_ENDIAN;\n\tftyp.write(stream);\n\t\n\t/* we can now create the new mvex box */\n\tvar mvex = moov.add(\"mvex\");\n\tif (total_duration) {\n\t\tmvex.add(\"mehd\").set(\"fragment_duration\", total_duration);\n\t}\n\tfor (i = 0; i < moov.traks.length; i++) {\n\t\tmvex.add(\"trex\").set(\"track_id\", moov.traks[i].tkhd.track_id)\n\t\t\t\t\t\t.set(\"default_sample_description_index\", 1)\n\t\t\t\t\t\t.set(\"default_sample_duration\", sample_duration)\n\t\t\t\t\t\t.set(\"default_sample_size\", 0)\n\t\t\t\t\t\t.set(\"default_sample_flags\", 1<<16)\n\t}\n\tmoov.write(stream);\n\n\treturn stream.buffer;\n\n}\n\nISOFile.prototype.save = function(name) {\n\tvar stream = new DataStream();\n\tstream.endianness = DataStream.BIG_ENDIAN;\n\tthis.write(stream);\n\tstream.save(name);\t\n}\n\nISOFile.prototype.getBuffer = function() {\n\tvar stream = new DataStream();\n\tstream.endianness = DataStream.BIG_ENDIAN;\n\tthis.write(stream);\n\treturn stream.buffer;\n}\n\nISOFile.prototype.initializeSegmentation = function() {\n\tvar i;\n\tvar j;\n\tvar box;\n\tvar initSegs;\n\tvar trak;\n\tvar seg;\n\tif (this.onSegment === null) {\n\t\tLog.warn(\"MP4Box\", \"No segmentation callback set!\");\n\t}\n\tif (!this.isFragmentationInitialized) {\n\t\tthis.isFragmentationInitialized = true;\t\t\n\t\tthis.nextMoofNumber = 0;\n\t\tthis.resetTables();\n\t}\t\n\tinitSegs = [];\t\n\tfor (i = 0; i < this.fragmentedTracks.length; i++) {\n\t\tvar moov = new BoxParser.moovBox();\n\t\tmoov.mvhd = this.moov.mvhd;\n\t    moov.boxes.push(moov.mvhd);\n\t\ttrak = this.getTrackById(this.fragmentedTracks[i].id);\n\t\tmoov.boxes.push(trak);\n\t\tmoov.traks.push(trak);\n\t\tseg = {};\n\t\tseg.id = trak.tkhd.track_id;\n\t\tseg.user = this.fragmentedTracks[i].user;\n\t\tseg.buffer = ISOFile.writeInitializationSegment(this.ftyp, moov, (this.moov.mvex && this.moov.mvex.mehd ? this.moov.mvex.mehd.fragment_duration: undefined), (this.moov.traks[i].samples.length>0 ? this.moov.traks[i].samples[0].duration: 0));\n\t\tinitSegs.push(seg);\n\t}\n\treturn initSegs;\n}\n\n// file:src/box-print.js\n/* \n * Copyright (c) Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nBoxParser.Box.prototype.printHeader = function(output) {\n\tthis.size += 8;\n\tif (this.size > MAX_SIZE) {\n\t\tthis.size += 8;\n\t}\n\tif (this.type === \"uuid\") {\n\t\tthis.size += 16;\n\t}\n\toutput.log(output.indent+\"size:\"+this.size);\n\toutput.log(output.indent+\"type:\"+this.type);\n}\n\nBoxParser.FullBox.prototype.printHeader = function(output) {\n\tthis.size += 4;\n\tBoxParser.Box.prototype.printHeader.call(this, output);\n\toutput.log(output.indent+\"version:\"+this.version);\n\toutput.log(output.indent+\"flags:\"+this.flags);\n}\n\nBoxParser.Box.prototype.print = function(output) {\n\tthis.printHeader(output);\n}\n\nBoxParser.ContainerBox.prototype.print = function(output) {\n\tthis.printHeader(output);\n\tfor (var i=0; i<this.boxes.length; i++) {\n\t\tif (this.boxes[i]) {\n\t\t\tvar prev_indent = output.indent;\n\t\t\toutput.indent += \" \";\n\t\t\tthis.boxes[i].print(output);\n\t\t\toutput.indent = prev_indent;\n\t\t}\n\t}\n}\n\nISOFile.prototype.print = function(output) {\n\toutput.indent = \"\";\n\tfor (var i=0; i<this.boxes.length; i++) {\n\t\tif (this.boxes[i]) {\n\t\t\tthis.boxes[i].print(output);\n\t\t}\n\t}\t\n}\n\nBoxParser.mvhdBox.prototype.print = function(output) {\n\tBoxParser.FullBox.prototype.printHeader.call(this, output);\n\toutput.log(output.indent+\"creation_time: \"+this.creation_time);\n\toutput.log(output.indent+\"modification_time: \"+this.modification_time);\n\toutput.log(output.indent+\"timescale: \"+this.timescale);\n\toutput.log(output.indent+\"duration: \"+this.duration);\n\toutput.log(output.indent+\"rate: \"+this.rate);\n\toutput.log(output.indent+\"volume: \"+(this.volume>>8));\n\toutput.log(output.indent+\"matrix: \"+this.matrix.join(\", \"));\n\toutput.log(output.indent+\"next_track_id: \"+this.next_track_id);\n}\n\nBoxParser.tkhdBox.prototype.print = function(output) {\n\tBoxParser.FullBox.prototype.printHeader.call(this, output);\n\toutput.log(output.indent+\"creation_time: \"+this.creation_time);\n\toutput.log(output.indent+\"modification_time: \"+this.modification_time);\n\toutput.log(output.indent+\"track_id: \"+this.track_id);\n\toutput.log(output.indent+\"duration: \"+this.duration);\n\toutput.log(output.indent+\"volume: \"+(this.volume>>8));\n\toutput.log(output.indent+\"matrix: \"+this.matrix.join(\", \"));\n\toutput.log(output.indent+\"layer: \"+this.layer);\n\toutput.log(output.indent+\"alternate_group: \"+this.alternate_group);\n\toutput.log(output.indent+\"width: \"+this.width);\n\toutput.log(output.indent+\"height: \"+this.height);\n}// file:src/mp4box.js\n/*\n * Copyright (c) 2012-2013. Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nvar MP4Box = {};\n\nMP4Box.createFile = function (_keepMdatData, _stream) {\n\t/* Boolean indicating if bytes containing media data should be kept in memory */\n\tvar keepMdatData = (_keepMdatData !== undefined ? _keepMdatData : true);\n\tvar file = new ISOFile(_stream);\n\tfile.discardMdatData = (keepMdatData ? false : true);\n\treturn file;\n}\n\nif (true) {\n\texports.createFile = MP4Box.createFile;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mp4box/dist/mp4box.all.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/polyfills/fetch/whatwg-fetch.js":
/*!**********************************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/fetch/whatwg-fetch.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* globals self */ \nexports.Headers = self.Headers;\nexports.Request = self.Request;\nexports.Response = self.Response;\nexports.fetch = self.fetch;\n\n//# sourceMappingURL=whatwg-fetch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9mZXRjaC93aGF0d2ctZmV0Y2guanMiLCJtYXBwaW5ncyI6IkFBQUEsbUJBQWdDO0FBQ2hDLGVBQWU7QUFDZixlQUFlO0FBQ2YsZ0JBQWdCO0FBQ2hCLGFBQWE7O0FBRWIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC9wb2x5ZmlsbHMvZmV0Y2gvd2hhdHdnLWZldGNoLmpzPzBkNTUiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFscyBzZWxmICovIFwidXNlIHN0cmljdFwiO1xuZXhwb3J0cy5IZWFkZXJzID0gc2VsZi5IZWFkZXJzO1xuZXhwb3J0cy5SZXF1ZXN0ID0gc2VsZi5SZXF1ZXN0O1xuZXhwb3J0cy5SZXNwb25zZSA9IHNlbGYuUmVzcG9uc2U7XG5leHBvcnRzLmZldGNoID0gc2VsZi5mZXRjaDtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2hhdHdnLWZldGNoLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/polyfills/fetch/whatwg-fetch.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _global_process, _global_process1;\nmodule.exports = ((_global_process = __webpack_require__.g.process) == null ? void 0 : _global_process.env) && typeof ((_global_process1 = __webpack_require__.g.process) == null ? void 0 : _global_process1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! next/dist/compiled/process */ \"./node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSxxQ0FBcUMscUJBQU0saUZBQWlGLHFCQUFNLGtFQUFrRSxxQkFBTSxXQUFXLG1CQUFPLENBQUMsd0ZBQTRCOztBQUV6UCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzP2NhNjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX2dsb2JhbF9wcm9jZXNzLCBfZ2xvYmFsX3Byb2Nlc3MxO1xubW9kdWxlLmV4cG9ydHMgPSAoKF9nbG9iYWxfcHJvY2VzcyA9IGdsb2JhbC5wcm9jZXNzKSA9PSBudWxsID8gdm9pZCAwIDogX2dsb2JhbF9wcm9jZXNzLmVudikgJiYgdHlwZW9mICgoX2dsb2JhbF9wcm9jZXNzMSA9IGdsb2JhbC5wcm9jZXNzKSA9PSBudWxsID8gdm9pZCAwIDogX2dsb2JhbF9wcm9jZXNzMS5lbnYpID09PSBcIm9iamVjdFwiID8gZ2xvYmFsLnByb2Nlc3MgOiByZXF1aXJlKFwibmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3NcIik7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXByb2Nlc3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[2]!./node_modules/@cntrl-site/sdk/dist/sdk.css":
/*!*********************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[2]!./node_modules/@cntrl-site/sdk/dist/sdk.css ***!
  \*********************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ControlSlider-module__wrapper___sHEkd{position:relative;width:100%;height:100%}.ControlSlider-module__slider___R3i9-{width:100%;height:100%}.ControlSlider-module__sliderItems___1MgPL{display:flex;overflow:hidden;width:100%;height:100%;transition:transform .3s ease-in-out}.ControlSlider-module__sliderItem___QQSkR{width:100%;height:100%;display:flex;position:relative}.ControlSlider-module__sliderImage___9hRl-{width:100%;height:100%;object-fit:cover}.ControlSlider-module__arrow___05ghY{position:absolute;display:flex;align-items:center;justify-content:center;border:none;background-color:transparent;top:50%;left:calc(var(--is-editor, 0) * -1.3888888889vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * -1.3888888889vw);z-index:1;transform:translate(-50%,-50%);padding:0;width:calc(var(--is-editor, 0) * 2.0833333333vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * 2.0833333333vw);height:calc(var(--is-editor, 0) * 2.0833333333vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * 2.0833333333vw)}.ControlSlider-module__arrow___05ghY.ControlSlider-module__arrowVertical___tBfVN{left:50%;top:calc(var(--is-editor, 0) * -1.3888888889vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * -1.3888888889vw);transform:translate(-50%,-50%)}.ControlSlider-module__nextArrow___-30Yc{left:unset;right:calc(var(--is-editor, 0) * -1.3888888889vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * -1.3888888889vw);transform:translate(50%,-50%)}.ControlSlider-module__nextArrow___-30Yc.ControlSlider-module__arrowVertical___tBfVN{left:50%;right:unset;top:unset;bottom:calc(var(--is-editor, 0) * -1.3888888889vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * -1.3888888889vw);transform:translate(-50%,50%)}.ControlSlider-module__arrowInner___aEra3{all:unset;cursor:pointer;width:100%;height:100%}.ControlSlider-module__arrowInner___aEra3:hover .ControlSlider-module__arrowIcon___S4ztF path{fill:var(--arrow-hover-color)!important}.ControlSlider-module__arrowImg___2dwJW{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%)}.ControlSlider-module__arrowIcon___S4ztF{width:100%;height:100%}.ControlSlider-module__arrowIcon___S4ztF path{transition:fill .15s ease-in-out}.ControlSlider-module__mirror___brd6U{transform:translate(-50%,-50%) scaleX(-1)}.ControlSlider-module__arrowVertical___tBfVN.ControlSlider-module__mirror___brd6U{transform:translate(-50%,-50%) scaleY(-1)}.ControlSlider-module__pagination___bicLF{position:absolute;z-index:1;border-radius:50%}.ControlSlider-module__paginationInner___bT-P-{display:flex;gap:calc(var(--is-editor, 0) * 1.1111111111vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * 1.1111111111vw);padding-top:calc(var(--is-editor, 0) * .6944444444vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * .6944444444vw);padding-bottom:calc(var(--is-editor, 0) * .6944444444vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * .6944444444vw);padding-left:calc(var(--is-editor, 0) * 1.25vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * 1.25vw);padding-right:calc(var(--is-editor, 0) * 1.25vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * 1.25vw);border-radius:calc(var(--is-editor, 0) * 2.3611111111vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * 2.3611111111vw)}.ControlSlider-module__paginationVertical___zYqKw{flex-direction:column}.ControlSlider-module__paginationItem___nTRbk{all:unset;flex-shrink:0;position:relative;width:calc(var(--is-editor, 0) * 1.1111111111vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * 1.1111111111vw);height:calc(var(--is-editor, 0) * 1.1111111111vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * 1.1111111111vw);cursor:pointer}.ControlSlider-module__paginationItem___nTRbk:hover .ControlSlider-module__dot___p1Qun{background-color:var(--pagination-hover-color)!important}.ControlSlider-module__dot___p1Qun{border-radius:50%;scale:.5;transition:background-color .3s ease-in-out,transform .3s ease-in-out;width:calc(var(--is-editor, 0) * 1.1111111111vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * 1.1111111111vw);height:calc(var(--is-editor, 0) * 1.1111111111vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * 1.1111111111vw)}.ControlSlider-module__activeDot___LHFaj{transform:scale(2)}.ControlSlider-module__paginationInsideBottom___R3FWn{bottom:0;left:50%;transform:translate(-50%)}.ControlSlider-module__paginationInsideTop___V-qb-{left:50%;transform:translate(-50%);top:0}.ControlSlider-module__paginationOutsideBottom___14w8D{left:50%;transform:translate(-50%);bottom:calc(var(--is-editor, 0) * -2.4305555556vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * -2.4305555556vw)}.ControlSlider-module__paginationOutsideTop___SCLqB{left:50%;transform:translate(-50%);top:calc(var(--is-editor, 0) * -2.4305555556vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * -2.4305555556vw)}.ControlSlider-module__paginationInsideLeft___yOBRZ{top:50%;transform:translateY(-50%);left:calc(var(--is-editor, 0) * -2.4305555556vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * -2.4305555556vw)}.ControlSlider-module__paginationInsideRight___Rtt3o{top:50%;transform:translateY(-50%);right:calc(var(--is-editor, 0) * -2.4305555556vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * -2.4305555556vw)}.ControlSlider-module__paginationOutsideLeft___lahaw{top:50%;transform:translateY(-50%);left:calc(var(--is-editor, 0) * -5.4861111111vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * -5.4861111111vw)}.ControlSlider-module__paginationOutsideRight___EtuQa{top:50%;transform:translateY(-50%);right:calc(var(--is-editor, 0) * -5.4861111111vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * -5.4861111111vw)}.ControlSlider-module__imgWrapper___UjEgB,.ControlSlider-module__wrapperInner___DLAWV{width:100%;height:100%}.ControlSlider-module__captionBlock___dJ6-j{pointer-events:none;position:absolute;top:0;z-index:1;left:0;right:0;bottom:0}.ControlSlider-module__captionTextWrapper___HFlpf{position:relative;width:100%;height:100%}.ControlSlider-module__captionText___uGBVc{pointer-events:none;max-width:100%;transition-property:opacity;transition-timing-function:ease-in-out;position:absolute;display:inline-block;white-space:pre-wrap;overflow-wrap:break-word;opacity:0}.ControlSlider-module__captionText___uGBVc.ControlSlider-module__active___WZK4G{opacity:1}.ControlSlider-module__withPointerEvents___t-18M{pointer-events:auto}.ControlSlider-module__absolute___KxmYB{position:absolute}.ControlSlider-module__topLeftAlignment___zjnGM{top:0;left:0}.ControlSlider-module__topCenterAlignment___gD1xW{top:0;left:50%;transform:translate(-50%)}.ControlSlider-module__topRightAlignment___NMapS{top:0;right:0}.ControlSlider-module__middleLeftAlignment___OnUrY{top:50%;transform:translateY(-50%);left:0}.ControlSlider-module__middleCenterAlignment___Tdkl0{top:50%;transform:translate(-50%,-50%);left:50%}.ControlSlider-module__middleRightAlignment___wEbfX{top:50%;transform:translateY(-50%);right:0}.ControlSlider-module__bottomLeftAlignment___cTP2-{bottom:0;left:0}.ControlSlider-module__bottomCenterAlignment___c54fB{bottom:0;left:50%;transform:translate(-50%)}.ControlSlider-module__bottomRightAlignment___kEwrz{bottom:0;right:0}.ControlSlider-module__clickOverlay___DZA28{position:absolute;top:0;left:0;width:100%;height:100%;cursor:pointer}.ControlSlider-module__contain___pLyq7{object-fit:contain}.ControlSlider-module__cover___KdDat{object-fit:cover}@keyframes splide-loading{0%{transform:rotate(0)}to{transform:rotate(1turn)}}.splide__track--draggable{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;user-select:none}.splide__track--fade>.splide__list>.splide__slide{margin:0!important;opacity:0;z-index:0}.splide__track--fade>.splide__list>.splide__slide.is-active{opacity:1;z-index:1}.splide--rtl{direction:rtl}.splide__track--ttb>.splide__list{display:block}.splide__container{box-sizing:border-box;position:relative}.splide__list{-webkit-backface-visibility:hidden;backface-visibility:hidden;display:flex;height:100%;margin:0!important;padding:0!important}.splide.is-initialized:not(.is-active) .splide__list{display:block}.splide__pagination{align-items:center;display:flex;flex-wrap:wrap;justify-content:center;margin:0;pointer-events:none}.splide__pagination li{display:inline-block;line-height:1;list-style-type:none;margin:0;pointer-events:auto}.splide:not(.is-overflow) .splide__pagination{display:none}.splide__progress__bar{width:0}.splide{position:relative;visibility:hidden}.splide.is-initialized,.splide.is-rendered{visibility:visible}.splide__slide{-webkit-backface-visibility:hidden;backface-visibility:hidden;box-sizing:border-box;flex-shrink:0;list-style-type:none!important;margin:0;position:relative}.splide__slide img{vertical-align:bottom}.splide__spinner{animation:splide-loading 1s linear infinite;border:2px solid #999;border-left-color:transparent;border-radius:50%;bottom:0;contain:strict;display:inline-block;height:20px;left:0;margin:auto;position:absolute;right:0;top:0;width:20px}.splide__sr{clip:rect(0 0 0 0);border:0;height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.splide__toggle.is-active .splide__toggle__play,.splide__toggle__pause{display:none}.splide__toggle.is-active .splide__toggle__pause{display:inline}.splide__track{overflow:hidden;position:relative;z-index:0}.RichTextRenderer-module__link___BWeZ2{color:inherit;cursor:pointer;pointer-events:auto;transition:color .2s ease}.RichTextRenderer-module__link___BWeZ2:hover{color:var(--link-hover-color)}.SvgImage-module__svg___q3xE-{width:100%;height:100%;color:transparent;display:inline-block;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);background-color:var(--fill);transition:background-color .2s;-webkit-mask:var(--svg) no-repeat center/contain;mask:var(--svg) no-repeat center/contain}.SvgImage-module__svg___q3xE-:hover{background-color:var(--hover-fill)}.SvgImage-module__img___VsTm-{width:100%;height:100%;object-fit:contain}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://node_modules/@cntrl-site/sdk/dist/sdk.css\"],\"names\":[],\"mappings\":\"AAAA,uCAAuC,iBAAiB,CAAC,UAAU,CAAC,WAAW,CAAC,sCAAsC,UAAU,CAAC,WAAW,CAAC,2CAA2C,YAAY,CAAC,eAAe,CAAC,UAAU,CAAC,WAAW,CAAC,oCAAoC,CAAC,0CAA0C,UAAU,CAAC,WAAW,CAAC,YAAY,CAAC,iBAAiB,CAAC,2CAA2C,UAAU,CAAC,WAAW,CAAC,gBAAgB,CAAC,qCAAqC,iBAAiB,CAAC,YAAY,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,WAAW,CAAC,4BAA4B,CAAC,OAAO,CAAC,yIAAyI,CAAC,SAAS,CAAC,8BAA8B,CAAC,SAAS,CAAC,wIAAwI,CAAC,yIAAyI,CAAC,iFAAiF,QAAQ,CAAC,wIAAwI,CAAC,8BAA8B,CAAC,yCAAyC,UAAU,CAAC,0IAA0I,CAAC,6BAA6B,CAAC,qFAAqF,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,2IAA2I,CAAC,6BAA6B,CAAC,0CAA0C,SAAS,CAAC,cAAc,CAAC,UAAU,CAAC,WAAW,CAAC,8FAA8F,uCAAuC,CAAC,wCAAwC,iBAAiB,CAAC,OAAO,CAAC,QAAQ,CAAC,8BAA8B,CAAC,yCAAyC,UAAU,CAAC,WAAW,CAAC,8CAA8C,gCAAgC,CAAC,sCAAsC,yCAAyC,CAAC,kFAAkF,yCAAyC,CAAC,0CAA0C,iBAAiB,CAAC,SAAS,CAAC,iBAAiB,CAAC,+CAA+C,YAAY,CAAC,sIAAsI,CAAC,4IAA4I,CAAC,+IAA+I,CAAC,+HAA+H,CAAC,gIAAgI,CAAC,gJAAgJ,CAAC,kDAAkD,qBAAqB,CAAC,8CAA8C,SAAS,CAAC,aAAa,CAAC,iBAAiB,CAAC,wIAAwI,CAAC,yIAAyI,CAAC,cAAc,CAAC,uFAAuF,wDAAwD,CAAC,mCAAmC,iBAAiB,CAAC,QAAQ,CAAC,qEAAqE,CAAC,wIAAwI,CAAC,yIAAyI,CAAC,yCAAyC,kBAAkB,CAAC,sDAAsD,QAAQ,CAAC,QAAQ,CAAC,yBAAyB,CAAC,mDAAmD,QAAQ,CAAC,yBAAyB,CAAC,KAAK,CAAC,uDAAuD,QAAQ,CAAC,yBAAyB,CAAC,2IAA2I,CAAC,oDAAoD,QAAQ,CAAC,yBAAyB,CAAC,wIAAwI,CAAC,oDAAoD,OAAO,CAAC,0BAA0B,CAAC,yIAAyI,CAAC,qDAAqD,OAAO,CAAC,0BAA0B,CAAC,0IAA0I,CAAC,qDAAqD,OAAO,CAAC,0BAA0B,CAAC,yIAAyI,CAAC,sDAAsD,OAAO,CAAC,0BAA0B,CAAC,0IAA0I,CAAC,sFAAsF,UAAU,CAAC,WAAW,CAAC,4CAA4C,mBAAmB,CAAC,iBAAiB,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,kDAAkD,iBAAiB,CAAC,UAAU,CAAC,WAAW,CAAC,2CAA2C,mBAAmB,CAAC,cAAc,CAAC,2BAA2B,CAAC,sCAAsC,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,wBAAwB,CAAC,SAAS,CAAC,gFAAgF,SAAS,CAAC,iDAAiD,mBAAmB,CAAC,wCAAwC,iBAAiB,CAAC,gDAAgD,KAAK,CAAC,MAAM,CAAC,kDAAkD,KAAK,CAAC,QAAQ,CAAC,yBAAyB,CAAC,iDAAiD,KAAK,CAAC,OAAO,CAAC,mDAAmD,OAAO,CAAC,0BAA0B,CAAC,MAAM,CAAC,qDAAqD,OAAO,CAAC,8BAA8B,CAAC,QAAQ,CAAC,oDAAoD,OAAO,CAAC,0BAA0B,CAAC,OAAO,CAAC,mDAAmD,QAAQ,CAAC,MAAM,CAAC,qDAAqD,QAAQ,CAAC,QAAQ,CAAC,yBAAyB,CAAC,oDAAoD,QAAQ,CAAC,OAAO,CAAC,4CAA4C,iBAAiB,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,cAAc,CAAC,uCAAuC,kBAAkB,CAAC,qCAAqC,gBAAgB,CAAC,0BAA0B,GAAG,mBAAmB,CAAC,GAAG,uBAAuB,CAAC,CAAC,0BAA0B,0BAA0B,CAAC,wBAAwB,CAAsB,qBAAe,CAAf,gBAAgB,CAAC,kDAAkD,kBAAkB,CAAC,SAAS,CAAC,SAAS,CAAC,4DAA4D,SAAS,CAAC,SAAS,CAAC,aAAa,aAAa,CAAC,kCAAkC,aAAa,CAAC,mBAAmB,qBAAqB,CAAC,iBAAiB,CAAC,cAAc,kCAA0B,CAA1B,0BAA0B,CAAqB,YAAY,CAAC,WAAW,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,qDAAqD,aAAa,CAAC,oBAA0C,kBAAkB,CAAqB,YAAY,CAAoB,cAAc,CAAsB,sBAAsB,CAAC,QAAQ,CAAC,mBAAmB,CAAC,uBAAuB,oBAAoB,CAAC,aAAa,CAAC,oBAAoB,CAAC,QAAQ,CAAC,mBAAmB,CAAC,8CAA8C,YAAY,CAAC,uBAAuB,OAAO,CAAC,QAAQ,iBAAiB,CAAC,iBAAiB,CAAC,2CAA2C,kBAAkB,CAAC,eAAe,kCAA0B,CAA1B,0BAA0B,CAAC,qBAAqB,CAAqB,aAAa,CAAC,8BAA8B,CAAC,QAAQ,CAAC,iBAAiB,CAAC,mBAAmB,qBAAqB,CAAC,iBAAiB,2CAA2C,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,iBAAiB,CAAC,QAAQ,CAAC,cAAc,CAAC,oBAAoB,CAAC,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,kBAAkB,CAAC,QAAQ,CAAC,UAAU,CAAC,WAAW,CAAC,eAAe,CAAC,SAAS,CAAC,iBAAiB,CAAC,SAAS,CAAC,uEAAuE,YAAY,CAAC,iDAAiD,cAAc,CAAC,eAAe,eAAe,CAAC,iBAAiB,CAAC,SAAS,CAAC,uCAAuC,aAAa,CAAC,cAAc,CAAC,mBAAmB,CAAC,yBAAyB,CAAC,6CAA6C,6BAA6B,CAAC,8BAA8B,UAAU,CAAC,WAAW,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,OAAO,CAAC,QAAQ,CAAC,8BAA8B,CAAC,4BAA4B,CAAC,+BAA+B,CAAC,gDAAgD,CAAC,wCAAwC,CAAC,oCAAoC,kCAAkC,CAAC,8BAA8B,UAAU,CAAC,WAAW,CAAC,kBAAkB\",\"sourcesContent\":[\".ControlSlider-module__wrapper___sHEkd{position:relative;width:100%;height:100%}.ControlSlider-module__slider___R3i9-{width:100%;height:100%}.ControlSlider-module__sliderItems___1MgPL{display:flex;overflow:hidden;width:100%;height:100%;transition:transform .3s ease-in-out}.ControlSlider-module__sliderItem___QQSkR{width:100%;height:100%;display:flex;position:relative}.ControlSlider-module__sliderImage___9hRl-{width:100%;height:100%;object-fit:cover}.ControlSlider-module__arrow___05ghY{position:absolute;display:flex;align-items:center;justify-content:center;border:none;background-color:transparent;top:50%;left:calc(var(--is-editor, 0) * -1.3888888889vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * -1.3888888889vw);z-index:1;transform:translate(-50%,-50%);padding:0;width:calc(var(--is-editor, 0) * 2.0833333333vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * 2.0833333333vw);height:calc(var(--is-editor, 0) * 2.0833333333vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * 2.0833333333vw)}.ControlSlider-module__arrow___05ghY.ControlSlider-module__arrowVertical___tBfVN{left:50%;top:calc(var(--is-editor, 0) * -1.3888888889vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * -1.3888888889vw);transform:translate(-50%,-50%)}.ControlSlider-module__nextArrow___-30Yc{left:unset;right:calc(var(--is-editor, 0) * -1.3888888889vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * -1.3888888889vw);transform:translate(50%,-50%)}.ControlSlider-module__nextArrow___-30Yc.ControlSlider-module__arrowVertical___tBfVN{left:50%;right:unset;top:unset;bottom:calc(var(--is-editor, 0) * -1.3888888889vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * -1.3888888889vw);transform:translate(-50%,50%)}.ControlSlider-module__arrowInner___aEra3{all:unset;cursor:pointer;width:100%;height:100%}.ControlSlider-module__arrowInner___aEra3:hover .ControlSlider-module__arrowIcon___S4ztF path{fill:var(--arrow-hover-color)!important}.ControlSlider-module__arrowImg___2dwJW{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%)}.ControlSlider-module__arrowIcon___S4ztF{width:100%;height:100%}.ControlSlider-module__arrowIcon___S4ztF path{transition:fill .15s ease-in-out}.ControlSlider-module__mirror___brd6U{transform:translate(-50%,-50%) scaleX(-1)}.ControlSlider-module__arrowVertical___tBfVN.ControlSlider-module__mirror___brd6U{transform:translate(-50%,-50%) scaleY(-1)}.ControlSlider-module__pagination___bicLF{position:absolute;z-index:1;border-radius:50%}.ControlSlider-module__paginationInner___bT-P-{display:flex;gap:calc(var(--is-editor, 0) * 1.1111111111vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * 1.1111111111vw);padding-top:calc(var(--is-editor, 0) * .6944444444vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * .6944444444vw);padding-bottom:calc(var(--is-editor, 0) * .6944444444vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * .6944444444vw);padding-left:calc(var(--is-editor, 0) * 1.25vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * 1.25vw);padding-right:calc(var(--is-editor, 0) * 1.25vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * 1.25vw);border-radius:calc(var(--is-editor, 0) * 2.3611111111vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * 2.3611111111vw)}.ControlSlider-module__paginationVertical___zYqKw{flex-direction:column}.ControlSlider-module__paginationItem___nTRbk{all:unset;flex-shrink:0;position:relative;width:calc(var(--is-editor, 0) * 1.1111111111vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * 1.1111111111vw);height:calc(var(--is-editor, 0) * 1.1111111111vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * 1.1111111111vw);cursor:pointer}.ControlSlider-module__paginationItem___nTRbk:hover .ControlSlider-module__dot___p1Qun{background-color:var(--pagination-hover-color)!important}.ControlSlider-module__dot___p1Qun{border-radius:50%;scale:.5;transition:background-color .3s ease-in-out,transform .3s ease-in-out;width:calc(var(--is-editor, 0) * 1.1111111111vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * 1.1111111111vw);height:calc(var(--is-editor, 0) * 1.1111111111vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * 1.1111111111vw)}.ControlSlider-module__activeDot___LHFaj{transform:scale(2)}.ControlSlider-module__paginationInsideBottom___R3FWn{bottom:0;left:50%;transform:translate(-50%)}.ControlSlider-module__paginationInsideTop___V-qb-{left:50%;transform:translate(-50%);top:0}.ControlSlider-module__paginationOutsideBottom___14w8D{left:50%;transform:translate(-50%);bottom:calc(var(--is-editor, 0) * -2.4305555556vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * -2.4305555556vw)}.ControlSlider-module__paginationOutsideTop___SCLqB{left:50%;transform:translate(-50%);top:calc(var(--is-editor, 0) * -2.4305555556vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * -2.4305555556vw)}.ControlSlider-module__paginationInsideLeft___yOBRZ{top:50%;transform:translateY(-50%);left:calc(var(--is-editor, 0) * -2.4305555556vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * -2.4305555556vw)}.ControlSlider-module__paginationInsideRight___Rtt3o{top:50%;transform:translateY(-50%);right:calc(var(--is-editor, 0) * -2.4305555556vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * -2.4305555556vw)}.ControlSlider-module__paginationOutsideLeft___lahaw{top:50%;transform:translateY(-50%);left:calc(var(--is-editor, 0) * -5.4861111111vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * -5.4861111111vw)}.ControlSlider-module__paginationOutsideRight___EtuQa{top:50%;transform:translateY(-50%);right:calc(var(--is-editor, 0) * -5.4861111111vw / var(--cntrl-reverse-layout-deviation, 1) + (1 - var(--is-editor, 0)) * -5.4861111111vw)}.ControlSlider-module__imgWrapper___UjEgB,.ControlSlider-module__wrapperInner___DLAWV{width:100%;height:100%}.ControlSlider-module__captionBlock___dJ6-j{pointer-events:none;position:absolute;top:0;z-index:1;left:0;right:0;bottom:0}.ControlSlider-module__captionTextWrapper___HFlpf{position:relative;width:100%;height:100%}.ControlSlider-module__captionText___uGBVc{pointer-events:none;max-width:100%;transition-property:opacity;transition-timing-function:ease-in-out;position:absolute;display:inline-block;white-space:pre-wrap;overflow-wrap:break-word;opacity:0}.ControlSlider-module__captionText___uGBVc.ControlSlider-module__active___WZK4G{opacity:1}.ControlSlider-module__withPointerEvents___t-18M{pointer-events:auto}.ControlSlider-module__absolute___KxmYB{position:absolute}.ControlSlider-module__topLeftAlignment___zjnGM{top:0;left:0}.ControlSlider-module__topCenterAlignment___gD1xW{top:0;left:50%;transform:translate(-50%)}.ControlSlider-module__topRightAlignment___NMapS{top:0;right:0}.ControlSlider-module__middleLeftAlignment___OnUrY{top:50%;transform:translateY(-50%);left:0}.ControlSlider-module__middleCenterAlignment___Tdkl0{top:50%;transform:translate(-50%,-50%);left:50%}.ControlSlider-module__middleRightAlignment___wEbfX{top:50%;transform:translateY(-50%);right:0}.ControlSlider-module__bottomLeftAlignment___cTP2-{bottom:0;left:0}.ControlSlider-module__bottomCenterAlignment___c54fB{bottom:0;left:50%;transform:translate(-50%)}.ControlSlider-module__bottomRightAlignment___kEwrz{bottom:0;right:0}.ControlSlider-module__clickOverlay___DZA28{position:absolute;top:0;left:0;width:100%;height:100%;cursor:pointer}.ControlSlider-module__contain___pLyq7{object-fit:contain}.ControlSlider-module__cover___KdDat{object-fit:cover}@keyframes splide-loading{0%{transform:rotate(0)}to{transform:rotate(1turn)}}.splide__track--draggable{-webkit-touch-callout:none;-webkit-user-select:none;-ms-user-select:none;user-select:none}.splide__track--fade>.splide__list>.splide__slide{margin:0!important;opacity:0;z-index:0}.splide__track--fade>.splide__list>.splide__slide.is-active{opacity:1;z-index:1}.splide--rtl{direction:rtl}.splide__track--ttb>.splide__list{display:block}.splide__container{box-sizing:border-box;position:relative}.splide__list{backface-visibility:hidden;display:-ms-flexbox;display:flex;height:100%;margin:0!important;padding:0!important}.splide.is-initialized:not(.is-active) .splide__list{display:block}.splide__pagination{-ms-flex-align:center;align-items:center;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:center;justify-content:center;margin:0;pointer-events:none}.splide__pagination li{display:inline-block;line-height:1;list-style-type:none;margin:0;pointer-events:auto}.splide:not(.is-overflow) .splide__pagination{display:none}.splide__progress__bar{width:0}.splide{position:relative;visibility:hidden}.splide.is-initialized,.splide.is-rendered{visibility:visible}.splide__slide{backface-visibility:hidden;box-sizing:border-box;-ms-flex-negative:0;flex-shrink:0;list-style-type:none!important;margin:0;position:relative}.splide__slide img{vertical-align:bottom}.splide__spinner{animation:splide-loading 1s linear infinite;border:2px solid #999;border-left-color:transparent;border-radius:50%;bottom:0;contain:strict;display:inline-block;height:20px;left:0;margin:auto;position:absolute;right:0;top:0;width:20px}.splide__sr{clip:rect(0 0 0 0);border:0;height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.splide__toggle.is-active .splide__toggle__play,.splide__toggle__pause{display:none}.splide__toggle.is-active .splide__toggle__pause{display:inline}.splide__track{overflow:hidden;position:relative;z-index:0}.RichTextRenderer-module__link___BWeZ2{color:inherit;cursor:pointer;pointer-events:auto;transition:color .2s ease}.RichTextRenderer-module__link___BWeZ2:hover{color:var(--link-hover-color)}.SvgImage-module__svg___q3xE-{width:100%;height:100%;color:transparent;display:inline-block;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);background-color:var(--fill);transition:background-color .2s;-webkit-mask:var(--svg) no-repeat center/contain;mask:var(--svg) no-repeat center/contain}.SvgImage-module__svg___q3xE-:hover{background-color:var(--hover-fill)}.SvgImage-module__img___VsTm-{width:100%;height:100%;object-fit:contain}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[2]!./node_modules/@cntrl-site/sdk/dist/sdk.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[2]!./styles/reset.css":
/*!********************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[2]!./styles/reset.css ***!
  \********************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* Reset basique */\\n* {\\n  margin: 0;\\n  padding: 0;\\n  box-sizing: border-box;\\n}\\n\\nbody {\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;\\n  line-height: 1.6;\\n  color: #333;\\n}\\n\\n/* Styles pour l'effet progressive blur */\\n.media {\\n  position: relative;\\n}\\n\\n.media img {\\n  width: 100%;\\n  visibility: hidden;\\n} \", \"\",{\"version\":3,\"sources\":[\"webpack://styles/reset.css\"],\"names\":[],\"mappings\":\"AAAA,kBAAkB;AAClB;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,gFAAgF;EAChF,gBAAgB;EAChB,WAAW;AACb;;AAEA,yCAAyC;AACzC;EACE,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,kBAAkB;AACpB\",\"sourcesContent\":[\"/* Reset basique */\\n* {\\n  margin: 0;\\n  padding: 0;\\n  box-sizing: border-box;\\n}\\n\\nbody {\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;\\n  line-height: 1.6;\\n  color: #333;\\n}\\n\\n/* Styles pour l'effet progressive blur */\\n.media {\\n  position: relative;\\n}\\n\\n.media img {\\n  width: 100%;\\n  visibility: hidden;\\n} \"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS5vbmVPZlsxNF0udXNlWzFdIS4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLm9uZU9mWzE0XS51c2VbMl0hLi9zdHlsZXMvcmVzZXQuY3NzIiwibWFwcGluZ3MiOiI7OztBQUFBO0FBQ3dIO0FBQ3hILDhCQUE4QixrSEFBMkI7QUFDekQ7QUFDQSxrRUFBa0UsY0FBYyxlQUFlLDJCQUEyQixHQUFHLFVBQVUscUZBQXFGLHFCQUFxQixnQkFBZ0IsR0FBRyx3REFBd0QsdUJBQXVCLEdBQUcsZ0JBQWdCLGdCQUFnQix1QkFBdUIsSUFBSSxPQUFPLHdGQUF3RixNQUFNLFVBQVUsVUFBVSxZQUFZLE9BQU8sS0FBSyxZQUFZLGFBQWEsV0FBVyxNQUFNLFlBQVksTUFBTSxZQUFZLE9BQU8sS0FBSyxVQUFVLFlBQVksa0RBQWtELGNBQWMsZUFBZSwyQkFBMkIsR0FBRyxVQUFVLHFGQUFxRixxQkFBcUIsZ0JBQWdCLEdBQUcsd0RBQXdELHVCQUF1QixHQUFHLGdCQUFnQixnQkFBZ0IsdUJBQXVCLElBQUksbUJBQW1CO0FBQ2hpQztBQUNBLCtEQUFlLHVCQUF1QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3N0eWxlcy9yZXNldC5jc3M/MzQ3MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKHRydWUpO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLyogUmVzZXQgYmFzaXF1ZSAqL1xcbioge1xcbiAgbWFyZ2luOiAwO1xcbiAgcGFkZGluZzogMDtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcbmJvZHkge1xcbiAgZm9udC1mYW1pbHk6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgJ1NlZ29lIFVJJywgJ1JvYm90bycsIHNhbnMtc2VyaWY7XFxuICBsaW5lLWhlaWdodDogMS42O1xcbiAgY29sb3I6ICMzMzM7XFxufVxcblxcbi8qIFN0eWxlcyBwb3VyIGwnZWZmZXQgcHJvZ3Jlc3NpdmUgYmx1ciAqL1xcbi5tZWRpYSB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxufVxcblxcbi5tZWRpYSBpbWcge1xcbiAgd2lkdGg6IDEwMCU7XFxuICB2aXNpYmlsaXR5OiBoaWRkZW47XFxufSBcIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vc3R5bGVzL3Jlc2V0LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQSxrQkFBa0I7QUFDbEI7RUFDRSxTQUFTO0VBQ1QsVUFBVTtFQUNWLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLGdGQUFnRjtFQUNoRixnQkFBZ0I7RUFDaEIsV0FBVztBQUNiOztBQUVBLHlDQUF5QztBQUN6QztFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxrQkFBa0I7QUFDcEJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLyogUmVzZXQgYmFzaXF1ZSAqL1xcbioge1xcbiAgbWFyZ2luOiAwO1xcbiAgcGFkZGluZzogMDtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcbmJvZHkge1xcbiAgZm9udC1mYW1pbHk6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgJ1NlZ29lIFVJJywgJ1JvYm90bycsIHNhbnMtc2VyaWY7XFxuICBsaW5lLWhlaWdodDogMS42O1xcbiAgY29sb3I6ICMzMzM7XFxufVxcblxcbi8qIFN0eWxlcyBwb3VyIGwnZWZmZXQgcHJvZ3Jlc3NpdmUgYmx1ciAqL1xcbi5tZWRpYSB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxufVxcblxcbi5tZWRpYSBpbWcge1xcbiAgd2lkdGg6IDEwMCU7XFxuICB2aXNpYmlsaXR5OiBoaWRkZW47XFxufSBcIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[2]!./styles/reset.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js ***!
  \************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/ // css base code, injected by the css-loader\n// eslint-disable-next-line func-names\n\nmodule.exports = function(useSourceMap) {\n    var list = [] // return the list of modules as css string\n    ;\n    list.toString = function toString() {\n        return this.map(function(item) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            var content = cssWithMappingToString(item, useSourceMap);\n            if (item[2]) {\n                return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n            }\n            return content;\n        }).join(\"\");\n    } // import a list of modules into the list\n    ;\n    // eslint-disable-next-line func-names\n    // @ts-expect-error TODO: fix type\n    list.i = function(modules, mediaQuery, dedupe) {\n        if (typeof modules === \"string\") {\n            // eslint-disable-next-line no-param-reassign\n            modules = [\n                [\n                    null,\n                    modules,\n                    \"\"\n                ]\n            ];\n        }\n        var alreadyImportedModules = {};\n        if (dedupe) {\n            for(var i = 0; i < this.length; i++){\n                // eslint-disable-next-line prefer-destructuring\n                var id = this[i][0];\n                if (id != null) {\n                    alreadyImportedModules[id] = true;\n                }\n            }\n        }\n        for(var _i = 0; _i < modules.length; _i++){\n            var item = [].concat(modules[_i]);\n            if (dedupe && alreadyImportedModules[item[0]]) {\n                continue;\n            }\n            if (mediaQuery) {\n                if (!item[2]) {\n                    item[2] = mediaQuery;\n                } else {\n                    item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n                }\n            }\n            list.push(item);\n        }\n    };\n    return list;\n};\nfunction cssWithMappingToString(item, useSourceMap) {\n    var content = item[1] || \"\" // eslint-disable-next-line prefer-destructuring\n    ;\n    var cssMapping = item[3];\n    if (!cssMapping) {\n        return content;\n    }\n    if (useSourceMap && typeof btoa === \"function\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        var sourceMapping = toComment(cssMapping);\n        var sourceURLs = cssMapping.sources.map(function(source) {\n            return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n        });\n        return [\n            content\n        ].concat(sourceURLs).concat([\n            sourceMapping\n        ]).join(\"\\n\");\n    }\n    return [\n        content\n    ].join(\"\\n\");\n} // Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    return \"/*# \".concat(data, \" */\");\n}\n\n//# sourceMappingURL=api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9ydW50aW1lL2FwaS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELHFCQUFxQjtBQUN6RTtBQUNBO0FBQ0EsU0FBUztBQUNULE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixpQkFBaUI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IscUJBQXFCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxjQUFjO0FBQ3JFO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvcnVudGltZS9hcGkuanM/Y2E0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qLyAvLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblwidXNlIHN0cmljdFwiO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih1c2VTb3VyY2VNYXApIHtcbiAgICB2YXIgbGlzdCA9IFtdIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgICA7XG4gICAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11c2UtYmVmb3JlLWRlZmluZVxuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG4gICAgICAgICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgICAgIH0pLmpvaW4oXCJcIik7XG4gICAgfSAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAgIDtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgVE9ETzogZml4IHR5cGVcbiAgICBsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgICAgICAgIG1vZHVsZXMgPSBbXG4gICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb2R1bGVzLFxuICAgICAgICAgICAgICAgICAgICBcIlwiXG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgXTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgICAgICBpZiAoZGVkdXBlKSB7XG4gICAgICAgICAgICBmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgICAgICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcbiAgICAgICAgICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvcih2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKXtcbiAgICAgICAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcbiAgICAgICAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbVsyXSA9IFwiXCIuY29uY2F0KG1lZGlhUXVlcnksIFwiIGFuZCBcIikuY29uY2F0KGl0ZW1bMl0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIGxpc3Q7XG59O1xuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcbiAgICB2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgXCJcIiAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICA7XG4gICAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICAgIGlmICghY3NzTWFwcGluZykge1xuICAgICAgICByZXR1cm4gY29udGVudDtcbiAgICB9XG4gICAgaWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdXNlLWJlZm9yZS1kZWZpbmVcbiAgICAgICAgdmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG4gICAgICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbihzb3VyY2UpIHtcbiAgICAgICAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBjb250ZW50XG4gICAgICAgIF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbXG4gICAgICAgICAgICBzb3VyY2VNYXBwaW5nXG4gICAgICAgIF0pLmpvaW4oXCJcXG5cIik7XG4gICAgfVxuICAgIHJldHVybiBbXG4gICAgICAgIGNvbnRlbnRcbiAgICBdLmpvaW4oXCJcXG5cIik7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgcmV0dXJuIFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app! ***!
  \*******************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return __webpack_require__(/*! private-next-pages/_app */ \"./pages/_app.tsx\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_app\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD1wcml2YXRlLW5leHQtcGFnZXMlMkZfYXBwJnBhZ2U9JTJGX2FwcCEiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxpREFBeUI7QUFDaEQ7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzY3ODIiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9fYXBwXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19hcHBcIik7XG4gICAgICB9XG4gICAgXSk7XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgd2luZG93Ll9fTkVYVF9QLnB1c2goW1wiL19hcHBcIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!\n"));

/***/ }),

/***/ "./node_modules/@cntrl-site/sdk/dist/sdk.css":
/*!***************************************************!*\
  !*** ./node_modules/@cntrl-site/sdk/dist/sdk.css ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var api = __webpack_require__(/*! !../../../next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../../../next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[1]!../../../next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[2]!./sdk.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[2]!./node_modules/@cntrl-site/sdk/dist/sdk.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                    // By default, style-loader injects CSS into the bottom\n                    // of <head>. This causes ordering problems between dev\n                    // and prod. To fix this, we render a <noscript> tag as\n                    // an anchor for the styles to be placed before. These\n                    // styles will be applied _before_ <style jsx global>.\n                    // These elements should always exist. If they do not,\n                    // this code should fail.\n                    var anchorElement = document.querySelector(\"#__next_css__DO_NOT_USE__\");\n                    var parentNode = anchorElement.parentNode// Normally <head>\n                    ;\n                    // Each style tag should be placed right before our\n                    // anchor. By inserting before and not after, we do not\n                    // need to track the last inserted element.\n                    parentNode.insertBefore(element, anchorElement);\n                };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../../../next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[1]!../../../next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[2]!./sdk.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[2]!./node_modules/@cntrl-site/sdk/dist/sdk.css\",\n      function () {\n        content = __webpack_require__(/*! !!../../../next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[1]!../../../next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[2]!./sdk.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[2]!./node_modules/@cntrl-site/sdk/dist/sdk.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNudHJsLXNpdGUvc2RrL2Rpc3Qvc2RrLmNzcyIsIm1hcHBpbmdzIjoiQUFBQSxVQUFVLG1CQUFPLENBQUMsNk1BQWlHO0FBQ25ILDBCQUEwQixtQkFBTyxDQUFDLGdmQUErTjs7QUFFalE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7OztBQUdBLElBQUksSUFBVTtBQUNkLHlCQUF5QixVQUFVO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJLGlCQUFpQjtBQUNyQixNQUFNLGdmQUErTjtBQUNyTztBQUNBLGtCQUFrQixtQkFBTyxDQUFDLGdmQUErTjs7QUFFelA7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZ0JBQWdCLFVBQVU7O0FBRTFCO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsRUFBRSxVQUFVO0FBQ1o7QUFDQSxHQUFHO0FBQ0g7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbnRybC1zaXRlL3Nkay9kaXN0L3Nkay5jc3M/ODU1YiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi8uLi9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtc3R5bGUtbG9hZGVyL3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLm9uZU9mWzEyXS51c2VbMV0hLi4vLi4vLi4vbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0ub25lT2ZbMTJdLnVzZVsyXSEuL3Nkay5jc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEJ5IGRlZmF1bHQsIHN0eWxlLWxvYWRlciBpbmplY3RzIENTUyBpbnRvIHRoZSBib3R0b21cbiAgICAgICAgICAgICAgICAgICAgLy8gb2YgPGhlYWQ+LiBUaGlzIGNhdXNlcyBvcmRlcmluZyBwcm9ibGVtcyBiZXR3ZWVuIGRldlxuICAgICAgICAgICAgICAgICAgICAvLyBhbmQgcHJvZC4gVG8gZml4IHRoaXMsIHdlIHJlbmRlciBhIDxub3NjcmlwdD4gdGFnIGFzXG4gICAgICAgICAgICAgICAgICAgIC8vIGFuIGFuY2hvciBmb3IgdGhlIHN0eWxlcyB0byBiZSBwbGFjZWQgYmVmb3JlLiBUaGVzZVxuICAgICAgICAgICAgICAgICAgICAvLyBzdHlsZXMgd2lsbCBiZSBhcHBsaWVkIF9iZWZvcmVfIDxzdHlsZSBqc3ggZ2xvYmFsPi5cbiAgICAgICAgICAgICAgICAgICAgLy8gVGhlc2UgZWxlbWVudHMgc2hvdWxkIGFsd2F5cyBleGlzdC4gSWYgdGhleSBkbyBub3QsXG4gICAgICAgICAgICAgICAgICAgIC8vIHRoaXMgY29kZSBzaG91bGQgZmFpbC5cbiAgICAgICAgICAgICAgICAgICAgdmFyIGFuY2hvckVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI19fbmV4dF9jc3NfX0RPX05PVF9VU0VfX1wiKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBhcmVudE5vZGUgPSBhbmNob3JFbGVtZW50LnBhcmVudE5vZGUvLyBOb3JtYWxseSA8aGVhZD5cbiAgICAgICAgICAgICAgICAgICAgO1xuICAgICAgICAgICAgICAgICAgICAvLyBFYWNoIHN0eWxlIHRhZyBzaG91bGQgYmUgcGxhY2VkIHJpZ2h0IGJlZm9yZSBvdXJcbiAgICAgICAgICAgICAgICAgICAgLy8gYW5jaG9yLiBCeSBpbnNlcnRpbmcgYmVmb3JlIGFuZCBub3QgYWZ0ZXIsIHdlIGRvIG5vdFxuICAgICAgICAgICAgICAgICAgICAvLyBuZWVkIHRvIHRyYWNrIHRoZSBsYXN0IGluc2VydGVkIGVsZW1lbnQuXG4gICAgICAgICAgICAgICAgICAgIHBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGVsZW1lbnQsIGFuY2hvckVsZW1lbnQpO1xuICAgICAgICAgICAgICAgIH07XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cbmlmIChtb2R1bGUuaG90KSB7XG4gIGlmICghY29udGVudC5sb2NhbHMgfHwgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKSB7XG4gICAgdmFyIGlzRXF1YWxMb2NhbHMgPSBmdW5jdGlvbiBpc0VxdWFsTG9jYWxzKGEsIGIsIGlzTmFtZWRFeHBvcnQpIHtcbiAgICBpZiAoIWEgJiYgYiB8fCBhICYmICFiKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgbGV0IHA7XG4gICAgZm9yKHAgaW4gYSl7XG4gICAgICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09IFwiZGVmYXVsdFwiKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYVtwXSAhPT0gYltwXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZvcihwIGluIGIpe1xuICAgICAgICBpZiAoaXNOYW1lZEV4cG9ydCAmJiBwID09PSBcImRlZmF1bHRcIikge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFhW3BdKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59O1xuICAgIHZhciBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFxuICAgICAgXCIhIS4uLy4uLy4uL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0ub25lT2ZbMTJdLnVzZVsxXSEuLi8uLi8uLi9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS5vbmVPZlsxMl0udXNlWzJdIS4vc2RrLmNzc1wiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS5vbmVPZlsxMl0udXNlWzFdIS4uLy4uLy4uL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLm9uZU9mWzEyXS51c2VbMl0hLi9zZGsuY3NzXCIpO1xuXG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAoIWlzRXF1YWxMb2NhbHMob2xkTG9jYWxzLCBjb250ZW50LmxvY2FscykpIHtcbiAgICAgICAgICAgICAgICBtb2R1bGUuaG90LmludmFsaWRhdGUoKTtcblxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIG9sZExvY2FscyA9IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgICAgICAgICAgIHVwZGF0ZShjb250ZW50KTtcbiAgICAgIH1cbiAgICApXG4gIH1cblxuICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7XG4gICAgdXBkYXRlKCk7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@cntrl-site/sdk/dist/sdk.css\n"));

/***/ }),

/***/ "./styles/reset.css":
/*!**************************!*\
  !*** ./styles/reset.css ***!
  \**************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var api = __webpack_require__(/*! !../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[2]!./reset.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[2]!./styles/reset.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                    // By default, style-loader injects CSS into the bottom\n                    // of <head>. This causes ordering problems between dev\n                    // and prod. To fix this, we render a <noscript> tag as\n                    // an anchor for the styles to be placed before. These\n                    // styles will be applied _before_ <style jsx global>.\n                    // These elements should always exist. If they do not,\n                    // this code should fail.\n                    var anchorElement = document.querySelector(\"#__next_css__DO_NOT_USE__\");\n                    var parentNode = anchorElement.parentNode// Normally <head>\n                    ;\n                    // Each style tag should be placed right before our\n                    // anchor. By inserting before and not after, we do not\n                    // need to track the last inserted element.\n                    parentNode.insertBefore(element, anchorElement);\n                };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[2]!./reset.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[2]!./styles/reset.css\",\n      function () {\n        content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[2]!./reset.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[2]!./styles/reset.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdHlsZXMvcmVzZXQuY3NzIiwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyxvTkFBd0c7QUFDMUgsMEJBQTBCLG1CQUFPLENBQUMsdWVBQStPOztBQUVqUjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7O0FBR0EsSUFBSSxJQUFVO0FBQ2QseUJBQXlCLFVBQVU7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLElBQUksaUJBQWlCO0FBQ3JCLE1BQU0sdWVBQStPO0FBQ3JQO0FBQ0Esa0JBQWtCLG1CQUFPLENBQUMsdWVBQStPOztBQUV6UTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0IsVUFBVTs7QUFFMUI7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxFQUFFLFVBQVU7QUFDWjtBQUNBLEdBQUc7QUFDSDs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zdHlsZXMvcmVzZXQuY3NzP2Q2OTgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGFwaSA9IHJlcXVpcmUoXCIhLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1zdHlsZS1sb2FkZXIvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLm9uZU9mWzE0XS51c2VbMV0hLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLm9uZU9mWzE0XS51c2VbMl0hLi9yZXNldC5jc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEJ5IGRlZmF1bHQsIHN0eWxlLWxvYWRlciBpbmplY3RzIENTUyBpbnRvIHRoZSBib3R0b21cbiAgICAgICAgICAgICAgICAgICAgLy8gb2YgPGhlYWQ+LiBUaGlzIGNhdXNlcyBvcmRlcmluZyBwcm9ibGVtcyBiZXR3ZWVuIGRldlxuICAgICAgICAgICAgICAgICAgICAvLyBhbmQgcHJvZC4gVG8gZml4IHRoaXMsIHdlIHJlbmRlciBhIDxub3NjcmlwdD4gdGFnIGFzXG4gICAgICAgICAgICAgICAgICAgIC8vIGFuIGFuY2hvciBmb3IgdGhlIHN0eWxlcyB0byBiZSBwbGFjZWQgYmVmb3JlLiBUaGVzZVxuICAgICAgICAgICAgICAgICAgICAvLyBzdHlsZXMgd2lsbCBiZSBhcHBsaWVkIF9iZWZvcmVfIDxzdHlsZSBqc3ggZ2xvYmFsPi5cbiAgICAgICAgICAgICAgICAgICAgLy8gVGhlc2UgZWxlbWVudHMgc2hvdWxkIGFsd2F5cyBleGlzdC4gSWYgdGhleSBkbyBub3QsXG4gICAgICAgICAgICAgICAgICAgIC8vIHRoaXMgY29kZSBzaG91bGQgZmFpbC5cbiAgICAgICAgICAgICAgICAgICAgdmFyIGFuY2hvckVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI19fbmV4dF9jc3NfX0RPX05PVF9VU0VfX1wiKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBhcmVudE5vZGUgPSBhbmNob3JFbGVtZW50LnBhcmVudE5vZGUvLyBOb3JtYWxseSA8aGVhZD5cbiAgICAgICAgICAgICAgICAgICAgO1xuICAgICAgICAgICAgICAgICAgICAvLyBFYWNoIHN0eWxlIHRhZyBzaG91bGQgYmUgcGxhY2VkIHJpZ2h0IGJlZm9yZSBvdXJcbiAgICAgICAgICAgICAgICAgICAgLy8gYW5jaG9yLiBCeSBpbnNlcnRpbmcgYmVmb3JlIGFuZCBub3QgYWZ0ZXIsIHdlIGRvIG5vdFxuICAgICAgICAgICAgICAgICAgICAvLyBuZWVkIHRvIHRyYWNrIHRoZSBsYXN0IGluc2VydGVkIGVsZW1lbnQuXG4gICAgICAgICAgICAgICAgICAgIHBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGVsZW1lbnQsIGFuY2hvckVsZW1lbnQpO1xuICAgICAgICAgICAgICAgIH07XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cbmlmIChtb2R1bGUuaG90KSB7XG4gIGlmICghY29udGVudC5sb2NhbHMgfHwgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKSB7XG4gICAgdmFyIGlzRXF1YWxMb2NhbHMgPSBmdW5jdGlvbiBpc0VxdWFsTG9jYWxzKGEsIGIsIGlzTmFtZWRFeHBvcnQpIHtcbiAgICBpZiAoIWEgJiYgYiB8fCBhICYmICFiKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgbGV0IHA7XG4gICAgZm9yKHAgaW4gYSl7XG4gICAgICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09IFwiZGVmYXVsdFwiKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYVtwXSAhPT0gYltwXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZvcihwIGluIGIpe1xuICAgICAgICBpZiAoaXNOYW1lZEV4cG9ydCAmJiBwID09PSBcImRlZmF1bHRcIikge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFhW3BdKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59O1xuICAgIHZhciBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFxuICAgICAgXCIhIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLm9uZU9mWzE0XS51c2VbMV0hLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLm9uZU9mWzE0XS51c2VbMl0hLi9yZXNldC5jc3NcIixcbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLm9uZU9mWzE0XS51c2VbMV0hLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLm9uZU9mWzE0XS51c2VbMl0hLi9yZXNldC5jc3NcIik7XG5cbiAgICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmICghaXNFcXVhbExvY2FscyhvbGRMb2NhbHMsIGNvbnRlbnQubG9jYWxzKSkge1xuICAgICAgICAgICAgICAgIG1vZHVsZS5ob3QuaW52YWxpZGF0ZSgpO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgb2xkTG9jYWxzID0gY29udGVudC5sb2NhbHM7XG5cbiAgICAgICAgICAgICAgdXBkYXRlKGNvbnRlbnQpO1xuICAgICAgfVxuICAgIClcbiAgfVxuXG4gIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHtcbiAgICB1cGRhdGUoKTtcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./styles/reset.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js ***!
  \************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nconst isOldIE = function isOldIE() {\n    let memo;\n    return function memorize() {\n        if (typeof memo === \"undefined\") {\n            // Test for IE <= 9 as proposed by Browserhacks\n            // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n            // Tests for existence of standard globals is to allow style-loader\n            // to operate correctly into non-standard environments\n            // @see https://github.com/webpack-contrib/style-loader/issues/177\n            memo = Boolean(window && document && document.all && !window.atob);\n        }\n        return memo;\n    };\n}();\nconst getTargetElement = function() {\n    const memo = {};\n    return function memorize(target) {\n        if (typeof memo[target] === \"undefined\") {\n            let styleTarget = document.querySelector(target);\n            // Special case to return head of iframe instead of iframe itself\n            if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n                try {\n                    // This will throw an exception if access to iframe is blocked\n                    // due to cross-origin restrictions\n                    styleTarget = styleTarget.contentDocument.head;\n                } catch (e) {\n                    // istanbul ignore next\n                    styleTarget = null;\n                }\n            }\n            memo[target] = styleTarget;\n        }\n        return memo[target];\n    };\n}();\nconst stylesInDom = [];\nfunction getIndexByIdentifier(identifier) {\n    let result = -1;\n    for(let i = 0; i < stylesInDom.length; i++){\n        if (stylesInDom[i].identifier === identifier) {\n            result = i;\n            break;\n        }\n    }\n    return result;\n}\nfunction modulesToDom(list, options) {\n    const idCountMap = {};\n    const identifiers = [];\n    for(let i = 0; i < list.length; i++){\n        const item = list[i];\n        const id = options.base ? item[0] + options.base : item[0];\n        const count = idCountMap[id] || 0;\n        const identifier = id + \" \" + count.toString();\n        idCountMap[id] = count + 1;\n        const index = getIndexByIdentifier(identifier);\n        const obj = {\n            css: item[1],\n            media: item[2],\n            sourceMap: item[3]\n        };\n        if (index !== -1) {\n            stylesInDom[index].references++;\n            stylesInDom[index].updater(obj);\n        } else {\n            stylesInDom.push({\n                identifier: identifier,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                updater: addStyle(obj, options),\n                references: 1\n            });\n        }\n        identifiers.push(identifier);\n    }\n    return identifiers;\n}\nfunction insertStyleElement(options) {\n    const style = document.createElement(\"style\");\n    const attributes = options.attributes || {};\n    if (typeof attributes.nonce === \"undefined\") {\n        const nonce = // eslint-disable-next-line no-undef\n         true ? __webpack_require__.nc : 0;\n        if (nonce) {\n            attributes.nonce = nonce;\n        }\n    }\n    Object.keys(attributes).forEach(function(key) {\n        style.setAttribute(key, attributes[key]);\n    });\n    if (typeof options.insert === \"function\") {\n        options.insert(style);\n    } else {\n        const target = getTargetElement(options.insert || \"head\");\n        if (!target) {\n            throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n        }\n        target.appendChild(style);\n    }\n    return style;\n}\nfunction removeStyleElement(style) {\n    // istanbul ignore if\n    if (style.parentNode === null) {\n        return false;\n    }\n    style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */ const replaceText = function replaceText() {\n    const textStore = [];\n    return function replace(index, replacement) {\n        textStore[index] = replacement;\n        return textStore.filter(Boolean).join(\"\\n\");\n    };\n}();\nfunction applyToSingletonTag(style, index, remove, obj) {\n    const css = remove ? \"\" : obj.media ? \"@media \" + obj.media + \" {\" + obj.css + \"}\" : obj.css;\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = replaceText(index, css);\n    } else {\n        const cssNode = document.createTextNode(css);\n        const childNodes = style.childNodes;\n        if (childNodes[index]) {\n            style.removeChild(childNodes[index]);\n        }\n        if (childNodes.length) {\n            style.insertBefore(cssNode, childNodes[index]);\n        } else {\n            style.appendChild(cssNode);\n        }\n    }\n}\nfunction applyToTag(style, _options, obj) {\n    let css = obj.css;\n    const media = obj.media;\n    const sourceMap = obj.sourceMap;\n    if (media) {\n        style.setAttribute(\"media\", media);\n    } else {\n        style.removeAttribute(\"media\");\n    }\n    if (sourceMap && typeof btoa !== \"undefined\") {\n        css += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n    }\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n    } else {\n        while(style.firstChild){\n            style.removeChild(style.firstChild);\n        }\n        style.appendChild(document.createTextNode(css));\n    }\n}\nlet singleton = null;\nlet singletonCounter = 0;\nfunction addStyle(obj, options) {\n    let style;\n    let update;\n    let remove;\n    if (options.singleton) {\n        const styleIndex = singletonCounter++;\n        style = singleton || (singleton = insertStyleElement(options));\n        update = applyToSingletonTag.bind(null, style, styleIndex, false);\n        remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n    } else {\n        style = insertStyleElement(options);\n        update = applyToTag.bind(null, style, options);\n        remove = function() {\n            removeStyleElement(style);\n        };\n    }\n    update(obj);\n    return function updateStyle(newObj) {\n        if (newObj) {\n            if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n                return;\n            }\n            update(obj = newObj);\n        } else {\n            remove();\n        }\n    };\n}\nmodule.exports = function(list, options) {\n    options = options || {};\n    // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n    // tags it will allow on a page\n    if (!options.singleton && typeof options.singleton !== \"boolean\") {\n        options.singleton = isOldIE();\n    }\n    list = list || [];\n    let lastIdentifiers = modulesToDom(list, options);\n    return function update(newList) {\n        newList = newList || [];\n        if (Object.prototype.toString.call(newList) !== \"[object Array]\") {\n            return;\n        }\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            stylesInDom[index].references--;\n        }\n        const newLastIdentifiers = modulesToDom(newList, options);\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            if (stylesInDom[index].references === 0) {\n                stylesInDom[index].updater();\n                stylesInDom.splice(index, 1);\n            }\n        }\n        lastIdentifiers = newLastIdentifiers;\n    };\n};\n\n//# sourceMappingURL=injectStylesIntoStyleTag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\n"));

/***/ }),

/***/ "./components/WebGLProgressiveBlur.tsx":
/*!*********************************************!*\
  !*** ./components/WebGLProgressiveBlur.tsx ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebGLProgressiveBlur: function() { return /* binding */ WebGLProgressiveBlur; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst WebGLProgressiveBlur = (param)=>{\n    let { blurStrength = 25, topHeight = 25, bottomHeight = 25 } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    position: \"fixed\",\n                    top: 0,\n                    left: 0,\n                    right: 0,\n                    height: \"\".concat(topHeight, \"%\"),\n                    backdropFilter: \"blur(\".concat(blurStrength, \"px)\"),\n                    WebkitBackdropFilter: \"blur(\".concat(blurStrength, \"px)\"),\n                    mask: \"linear-gradient(to bottom, \\n            rgba(0,0,0,1) 0%, \\n            rgba(0,0,0,0.9) 20%,\\n            rgba(0,0,0,0.7) 40%,\\n            rgba(0,0,0,0.4) 60%,\\n            rgba(0,0,0,0.2) 80%,\\n            rgba(0,0,0,0) 100%)\",\n                    WebkitMask: \"linear-gradient(to bottom, \\n            rgba(0,0,0,1) 0%, \\n            rgba(0,0,0,0.9) 20%,\\n            rgba(0,0,0,0.7) 40%,\\n            rgba(0,0,0,0.4) 60%,\\n            rgba(0,0,0,0.2) 80%,\\n            rgba(0,0,0,0) 100%)\",\n                    pointerEvents: \"none\",\n                    zIndex: 9999\n                }\n            }, void 0, false, {\n                fileName: \"/Users/ludovicveltz/Documents/SOLWEIG-IZAR/webgl-progressive-blur-main/components/WebGLProgressiveBlur.tsx\",\n                lineNumber: 17,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    position: \"fixed\",\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    height: \"\".concat(bottomHeight, \"%\"),\n                    backdropFilter: \"blur(\".concat(blurStrength, \"px)\"),\n                    WebkitBackdropFilter: \"blur(\".concat(blurStrength, \"px)\"),\n                    mask: \"linear-gradient(to top, \\n            rgba(0,0,0,1) 0%, \\n            rgba(0,0,0,0.9) 20%,\\n            rgba(0,0,0,0.7) 40%,\\n            rgba(0,0,0,0.4) 60%,\\n            rgba(0,0,0,0.2) 80%,\\n            rgba(0,0,0,0) 100%)\",\n                    WebkitMask: \"linear-gradient(to top, \\n            rgba(0,0,0,1) 0%, \\n            rgba(0,0,0,0.9) 20%,\\n            rgba(0,0,0,0.7) 40%,\\n            rgba(0,0,0,0.4) 60%,\\n            rgba(0,0,0,0.2) 80%,\\n            rgba(0,0,0,0) 100%)\",\n                    pointerEvents: \"none\",\n                    zIndex: 9999\n                }\n            }, void 0, false, {\n                fileName: \"/Users/ludovicveltz/Documents/SOLWEIG-IZAR/webgl-progressive-blur-main/components/WebGLProgressiveBlur.tsx\",\n                lineNumber: 46,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    position: \"fixed\",\n                    top: \"20px\",\n                    right: \"20px\",\n                    background: \"rgba(0,0,0,0.8)\",\n                    color: \"white\",\n                    padding: \"8px 12px\",\n                    borderRadius: \"6px\",\n                    fontSize: \"12px\",\n                    fontFamily: \"monospace\",\n                    zIndex: 10000\n                },\n                children: [\n                    \"\\uD83C\\uDF1F Progressive Blur Fluide | Haut: \",\n                    topHeight,\n                    \"% | Bas: \",\n                    bottomHeight,\n                    \"% | Max: \",\n                    blurStrength,\n                    \"px\"\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/ludovicveltz/Documents/SOLWEIG-IZAR/webgl-progressive-blur-main/components/WebGLProgressiveBlur.tsx\",\n                lineNumber: 75,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true);\n};\n_c = WebGLProgressiveBlur;\nvar _c;\n$RefreshReg$(_c, \"WebGLProgressiveBlur\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL1dlYkdMUHJvZ3Jlc3NpdmVCbHVyLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBMEI7QUFRbkIsTUFBTUMsdUJBQTREO1FBQUMsRUFDeEVDLGVBQWUsRUFBRSxFQUNqQkMsWUFBWSxFQUFFLEVBQ2RDLGVBQWUsRUFBRSxFQUNsQjtJQUNDLHFCQUNFOzswQkFFRSw4REFBQ0M7Z0JBQ0NDLE9BQU87b0JBQ0xDLFVBQVU7b0JBQ1ZDLEtBQUs7b0JBQ0xDLE1BQU07b0JBQ05DLE9BQU87b0JBQ1BDLFFBQVEsR0FBYSxPQUFWUixXQUFVO29CQUNyQlMsZ0JBQWdCLFFBQXFCLE9BQWJWLGNBQWE7b0JBQ3JDVyxzQkFBc0IsUUFBcUIsT0FBYlgsY0FBYTtvQkFDM0NZLE1BQU87b0JBT1BDLFlBQWE7b0JBT2JDLGVBQWU7b0JBQ2ZDLFFBQVE7Z0JBQ1Y7Ozs7OzswQkFJRiw4REFBQ1o7Z0JBQ0NDLE9BQU87b0JBQ0xDLFVBQVU7b0JBQ1ZXLFFBQVE7b0JBQ1JULE1BQU07b0JBQ05DLE9BQU87b0JBQ1BDLFFBQVEsR0FBZ0IsT0FBYlAsY0FBYTtvQkFDeEJRLGdCQUFnQixRQUFxQixPQUFiVixjQUFhO29CQUNyQ1csc0JBQXNCLFFBQXFCLE9BQWJYLGNBQWE7b0JBQzNDWSxNQUFPO29CQU9QQyxZQUFhO29CQU9iQyxlQUFlO29CQUNmQyxRQUFRO2dCQUNWOzs7Ozs7MEJBSUYsOERBQUNaO2dCQUNDQyxPQUFPO29CQUNMQyxVQUFVO29CQUNWQyxLQUFLO29CQUNMRSxPQUFPO29CQUNQUyxZQUFZO29CQUNaQyxPQUFPO29CQUNQQyxTQUFTO29CQUNUQyxjQUFjO29CQUNkQyxVQUFVO29CQUNWQyxZQUFZO29CQUNaUCxRQUFRO2dCQUNWOztvQkFDRDtvQkFDcUNkO29CQUFVO29CQUFVQztvQkFBYTtvQkFBVUY7b0JBQWE7Ozs7Ozs7OztBQUlwRyxFQUFFO0tBcEZXRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL1dlYkdMUHJvZ3Jlc3NpdmVCbHVyLnRzeD84NGRhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmludGVyZmFjZSBXZWJHTFByb2dyZXNzaXZlQmx1clByb3BzIHtcbiAgYmx1clN0cmVuZ3RoPzogbnVtYmVyO1xuICB0b3BIZWlnaHQ/OiBudW1iZXI7XG4gIGJvdHRvbUhlaWdodD86IG51bWJlcjtcbn1cblxuZXhwb3J0IGNvbnN0IFdlYkdMUHJvZ3Jlc3NpdmVCbHVyOiBSZWFjdC5GQzxXZWJHTFByb2dyZXNzaXZlQmx1clByb3BzPiA9ICh7IFxuICBibHVyU3RyZW5ndGggPSAyNSxcbiAgdG9wSGVpZ2h0ID0gMjUsXG4gIGJvdHRvbUhlaWdodCA9IDI1XG59KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIHsvKiBGTE9VIFBST0dSRVNTSUYgSEFVVCAtIEVmZmV0IGZsdWlkZSBhdmVjIG1hc2sgZ3JhZGllbnQgKi99XG4gICAgICA8ZGl2XG4gICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgcG9zaXRpb246ICdmaXhlZCcsXG4gICAgICAgICAgdG9wOiAwLFxuICAgICAgICAgIGxlZnQ6IDAsXG4gICAgICAgICAgcmlnaHQ6IDAsXG4gICAgICAgICAgaGVpZ2h0OiBgJHt0b3BIZWlnaHR9JWAsXG4gICAgICAgICAgYmFja2Ryb3BGaWx0ZXI6IGBibHVyKCR7Ymx1clN0cmVuZ3RofXB4KWAsXG4gICAgICAgICAgV2Via2l0QmFja2Ryb3BGaWx0ZXI6IGBibHVyKCR7Ymx1clN0cmVuZ3RofXB4KWAsXG4gICAgICAgICAgbWFzazogYGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIFxuICAgICAgICAgICAgcmdiYSgwLDAsMCwxKSAwJSwgXG4gICAgICAgICAgICByZ2JhKDAsMCwwLDAuOSkgMjAlLFxuICAgICAgICAgICAgcmdiYSgwLDAsMCwwLjcpIDQwJSxcbiAgICAgICAgICAgIHJnYmEoMCwwLDAsMC40KSA2MCUsXG4gICAgICAgICAgICByZ2JhKDAsMCwwLDAuMikgODAlLFxuICAgICAgICAgICAgcmdiYSgwLDAsMCwwKSAxMDAlKWAsXG4gICAgICAgICAgV2Via2l0TWFzazogYGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIFxuICAgICAgICAgICAgcmdiYSgwLDAsMCwxKSAwJSwgXG4gICAgICAgICAgICByZ2JhKDAsMCwwLDAuOSkgMjAlLFxuICAgICAgICAgICAgcmdiYSgwLDAsMCwwLjcpIDQwJSxcbiAgICAgICAgICAgIHJnYmEoMCwwLDAsMC40KSA2MCUsXG4gICAgICAgICAgICByZ2JhKDAsMCwwLDAuMikgODAlLFxuICAgICAgICAgICAgcmdiYSgwLDAsMCwwKSAxMDAlKWAsXG4gICAgICAgICAgcG9pbnRlckV2ZW50czogJ25vbmUnLFxuICAgICAgICAgIHpJbmRleDogOTk5OVxuICAgICAgICB9fVxuICAgICAgLz5cblxuICAgICAgey8qIEZMT1UgUFJPR1JFU1NJRiBCQVMgLSBFZmZldCBmbHVpZGUgYXZlYyBtYXNrIGdyYWRpZW50ICovfVxuICAgICAgPGRpdlxuICAgICAgICBzdHlsZT17e1xuICAgICAgICAgIHBvc2l0aW9uOiAnZml4ZWQnLFxuICAgICAgICAgIGJvdHRvbTogMCxcbiAgICAgICAgICBsZWZ0OiAwLFxuICAgICAgICAgIHJpZ2h0OiAwLFxuICAgICAgICAgIGhlaWdodDogYCR7Ym90dG9tSGVpZ2h0fSVgLFxuICAgICAgICAgIGJhY2tkcm9wRmlsdGVyOiBgYmx1cigke2JsdXJTdHJlbmd0aH1weClgLFxuICAgICAgICAgIFdlYmtpdEJhY2tkcm9wRmlsdGVyOiBgYmx1cigke2JsdXJTdHJlbmd0aH1weClgLFxuICAgICAgICAgIG1hc2s6IGBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCBcbiAgICAgICAgICAgIHJnYmEoMCwwLDAsMSkgMCUsIFxuICAgICAgICAgICAgcmdiYSgwLDAsMCwwLjkpIDIwJSxcbiAgICAgICAgICAgIHJnYmEoMCwwLDAsMC43KSA0MCUsXG4gICAgICAgICAgICByZ2JhKDAsMCwwLDAuNCkgNjAlLFxuICAgICAgICAgICAgcmdiYSgwLDAsMCwwLjIpIDgwJSxcbiAgICAgICAgICAgIHJnYmEoMCwwLDAsMCkgMTAwJSlgLFxuICAgICAgICAgIFdlYmtpdE1hc2s6IGBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCBcbiAgICAgICAgICAgIHJnYmEoMCwwLDAsMSkgMCUsIFxuICAgICAgICAgICAgcmdiYSgwLDAsMCwwLjkpIDIwJSxcbiAgICAgICAgICAgIHJnYmEoMCwwLDAsMC43KSA0MCUsXG4gICAgICAgICAgICByZ2JhKDAsMCwwLDAuNCkgNjAlLFxuICAgICAgICAgICAgcmdiYSgwLDAsMCwwLjIpIDgwJSxcbiAgICAgICAgICAgIHJnYmEoMCwwLDAsMCkgMTAwJSlgLFxuICAgICAgICAgIHBvaW50ZXJFdmVudHM6ICdub25lJyxcbiAgICAgICAgICB6SW5kZXg6IDk5OTlcbiAgICAgICAgfX1cbiAgICAgIC8+XG5cbiAgICAgIHsvKiBCYWRnZSBkZSBkZWJ1ZyBmaXhlICovfVxuICAgICAgPGRpdlxuICAgICAgICBzdHlsZT17e1xuICAgICAgICAgIHBvc2l0aW9uOiAnZml4ZWQnLFxuICAgICAgICAgIHRvcDogJzIwcHgnLFxuICAgICAgICAgIHJpZ2h0OiAnMjBweCcsXG4gICAgICAgICAgYmFja2dyb3VuZDogJ3JnYmEoMCwwLDAsMC44KScsXG4gICAgICAgICAgY29sb3I6ICd3aGl0ZScsXG4gICAgICAgICAgcGFkZGluZzogJzhweCAxMnB4JyxcbiAgICAgICAgICBib3JkZXJSYWRpdXM6ICc2cHgnLFxuICAgICAgICAgIGZvbnRTaXplOiAnMTJweCcsXG4gICAgICAgICAgZm9udEZhbWlseTogJ21vbm9zcGFjZScsXG4gICAgICAgICAgekluZGV4OiAxMDAwMFxuICAgICAgICB9fVxuICAgICAgPlxuICAgICAgICDwn4yfIFByb2dyZXNzaXZlIEJsdXIgRmx1aWRlIHwgSGF1dDoge3RvcEhlaWdodH0lIHwgQmFzOiB7Ym90dG9tSGVpZ2h0fSUgfCBNYXg6IHtibHVyU3RyZW5ndGh9cHhcbiAgICAgIDwvZGl2PlxuICAgIDwvPlxuICApO1xufTsgIl0sIm5hbWVzIjpbIlJlYWN0IiwiV2ViR0xQcm9ncmVzc2l2ZUJsdXIiLCJibHVyU3RyZW5ndGgiLCJ0b3BIZWlnaHQiLCJib3R0b21IZWlnaHQiLCJkaXYiLCJzdHlsZSIsInBvc2l0aW9uIiwidG9wIiwibGVmdCIsInJpZ2h0IiwiaGVpZ2h0IiwiYmFja2Ryb3BGaWx0ZXIiLCJXZWJraXRCYWNrZHJvcEZpbHRlciIsIm1hc2siLCJXZWJraXRNYXNrIiwicG9pbnRlckV2ZW50cyIsInpJbmRleCIsImJvdHRvbSIsImJhY2tncm91bmQiLCJjb2xvciIsInBhZGRpbmciLCJib3JkZXJSYWRpdXMiLCJmb250U2l6ZSIsImZvbnRGYW1pbHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/WebGLProgressiveBlur.tsx\n"));

/***/ }),

/***/ "./node_modules/next/node_modules/styled-jsx/dist/index/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/next/node_modules/styled-jsx/dist/index/index.js ***!
  \***********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\n__webpack_require__(/*! client-only */ \"./node_modules/next/dist/compiled/client-only/index.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nfunction _interopDefaultLegacy(e) {\n    return e && typeof e === \"object\" && \"default\" in e ? e : {\n        \"default\": e\n    };\n}\nvar React__default = /*#__PURE__*/ _interopDefaultLegacy(React);\n_c = React__default;\n/*\nBased on Glamor's sheet\nhttps://github.com/threepointone/glamor/blob/667b480d31b3721a905021b26e1290ce92ca2879/src/sheet.js\n*/ function _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nvar isProd = typeof process !== \"undefined\" && process.env && \"development\" === \"production\";\nvar isString = function(o) {\n    return Object.prototype.toString.call(o) === \"[object String]\";\n};\nvar StyleSheet = /*#__PURE__*/ function() {\n    function StyleSheet(param) {\n        var ref = param === void 0 ? {} : param, _name = ref.name, name = _name === void 0 ? \"stylesheet\" : _name, _optimizeForSpeed = ref.optimizeForSpeed, optimizeForSpeed = _optimizeForSpeed === void 0 ? isProd : _optimizeForSpeed;\n        invariant$1(isString(name), \"`name` must be a string\");\n        this._name = name;\n        this._deletedRulePlaceholder = \"#\" + name + \"-deleted-rule____{}\";\n        invariant$1(typeof optimizeForSpeed === \"boolean\", \"`optimizeForSpeed` must be a boolean\");\n        this._optimizeForSpeed = optimizeForSpeed;\n        this._serverSheet = undefined;\n        this._tags = [];\n        this._injected = false;\n        this._rulesCount = 0;\n        var node =  true && document.querySelector('meta[property=\"csp-nonce\"]');\n        this._nonce = node ? node.getAttribute(\"content\") : null;\n    }\n    var _proto = StyleSheet.prototype;\n    _proto.setOptimizeForSpeed = function setOptimizeForSpeed(bool) {\n        invariant$1(typeof bool === \"boolean\", \"`setOptimizeForSpeed` accepts a boolean\");\n        invariant$1(this._rulesCount === 0, \"optimizeForSpeed cannot be when rules have already been inserted\");\n        this.flush();\n        this._optimizeForSpeed = bool;\n        this.inject();\n    };\n    _proto.isOptimizeForSpeed = function isOptimizeForSpeed() {\n        return this._optimizeForSpeed;\n    };\n    _proto.inject = function inject() {\n        var _this = this;\n        invariant$1(!this._injected, \"sheet already injected\");\n        this._injected = true;\n        if ( true && this._optimizeForSpeed) {\n            this._tags[0] = this.makeStyleTag(this._name);\n            this._optimizeForSpeed = \"insertRule\" in this.getSheet();\n            if (!this._optimizeForSpeed) {\n                if (!isProd) {\n                    console.warn(\"StyleSheet: optimizeForSpeed mode not supported falling back to standard mode.\");\n                }\n                this.flush();\n                this._injected = true;\n            }\n            return;\n        }\n        this._serverSheet = {\n            cssRules: [],\n            insertRule: function(rule, index) {\n                if (typeof index === \"number\") {\n                    _this._serverSheet.cssRules[index] = {\n                        cssText: rule\n                    };\n                } else {\n                    _this._serverSheet.cssRules.push({\n                        cssText: rule\n                    });\n                }\n                return index;\n            },\n            deleteRule: function(index) {\n                _this._serverSheet.cssRules[index] = null;\n            }\n        };\n    };\n    _proto.getSheetForTag = function getSheetForTag(tag) {\n        if (tag.sheet) {\n            return tag.sheet;\n        }\n        // this weirdness brought to you by firefox\n        for(var i = 0; i < document.styleSheets.length; i++){\n            if (document.styleSheets[i].ownerNode === tag) {\n                return document.styleSheets[i];\n            }\n        }\n    };\n    _proto.getSheet = function getSheet() {\n        return this.getSheetForTag(this._tags[this._tags.length - 1]);\n    };\n    _proto.insertRule = function insertRule(rule, index) {\n        invariant$1(isString(rule), \"`insertRule` accepts only strings\");\n        if (false) {}\n        if (this._optimizeForSpeed) {\n            var sheet = this.getSheet();\n            if (typeof index !== \"number\") {\n                index = sheet.cssRules.length;\n            }\n            // this weirdness for perf, and chrome's weird bug\n            // https://stackoverflow.com/questions/20007992/chrome-suddenly-stopped-accepting-insertrule\n            try {\n                sheet.insertRule(rule, index);\n            } catch (error) {\n                if (!isProd) {\n                    console.warn(\"StyleSheet: illegal rule: \\n\\n\" + rule + \"\\n\\nSee https://stackoverflow.com/q/20007992 for more info\");\n                }\n                return -1;\n            }\n        } else {\n            var insertionPoint = this._tags[index];\n            this._tags.push(this.makeStyleTag(this._name, rule, insertionPoint));\n        }\n        return this._rulesCount++;\n    };\n    _proto.replaceRule = function replaceRule(index, rule) {\n        if (this._optimizeForSpeed || \"object\" === \"undefined\") {\n            var sheet =  true ? this.getSheet() : 0;\n            if (!rule.trim()) {\n                rule = this._deletedRulePlaceholder;\n            }\n            if (!sheet.cssRules[index]) {\n                // @TBD Should we throw an error?\n                return index;\n            }\n            sheet.deleteRule(index);\n            try {\n                sheet.insertRule(rule, index);\n            } catch (error) {\n                if (!isProd) {\n                    console.warn(\"StyleSheet: illegal rule: \\n\\n\" + rule + \"\\n\\nSee https://stackoverflow.com/q/20007992 for more info\");\n                }\n                // In order to preserve the indices we insert a deleteRulePlaceholder\n                sheet.insertRule(this._deletedRulePlaceholder, index);\n            }\n        } else {\n            var tag = this._tags[index];\n            invariant$1(tag, \"old rule at index `\" + index + \"` not found\");\n            tag.textContent = rule;\n        }\n        return index;\n    };\n    _proto.deleteRule = function deleteRule(index) {\n        if (false) {}\n        if (this._optimizeForSpeed) {\n            this.replaceRule(index, \"\");\n        } else {\n            var tag = this._tags[index];\n            invariant$1(tag, \"rule at index `\" + index + \"` not found\");\n            tag.parentNode.removeChild(tag);\n            this._tags[index] = null;\n        }\n    };\n    _proto.flush = function flush() {\n        this._injected = false;\n        this._rulesCount = 0;\n        if (true) {\n            this._tags.forEach(function(tag) {\n                return tag && tag.parentNode.removeChild(tag);\n            });\n            this._tags = [];\n        } else {}\n    };\n    _proto.cssRules = function cssRules() {\n        var _this = this;\n        if (false) {}\n        return this._tags.reduce(function(rules, tag) {\n            if (tag) {\n                rules = rules.concat(Array.prototype.map.call(_this.getSheetForTag(tag).cssRules, function(rule) {\n                    return rule.cssText === _this._deletedRulePlaceholder ? null : rule;\n                }));\n            } else {\n                rules.push(null);\n            }\n            return rules;\n        }, []);\n    };\n    _proto.makeStyleTag = function makeStyleTag(name, cssString, relativeToTag) {\n        if (cssString) {\n            invariant$1(isString(cssString), \"makeStyleTag accepts only strings as second parameter\");\n        }\n        var tag = document.createElement(\"style\");\n        if (this._nonce) tag.setAttribute(\"nonce\", this._nonce);\n        tag.type = \"text/css\";\n        tag.setAttribute(\"data-\" + name, \"\");\n        if (cssString) {\n            tag.appendChild(document.createTextNode(cssString));\n        }\n        var head = document.head || document.getElementsByTagName(\"head\")[0];\n        if (relativeToTag) {\n            head.insertBefore(tag, relativeToTag);\n        } else {\n            head.appendChild(tag);\n        }\n        return tag;\n    };\n    _createClass(StyleSheet, [\n        {\n            key: \"length\",\n            get: function get() {\n                return this._rulesCount;\n            }\n        }\n    ]);\n    return StyleSheet;\n}();\nfunction invariant$1(condition, message) {\n    if (!condition) {\n        throw new Error(\"StyleSheet: \" + message + \".\");\n    }\n}\nfunction hash(str) {\n    var _$hash = 5381, i = str.length;\n    while(i){\n        _$hash = _$hash * 33 ^ str.charCodeAt(--i);\n    }\n    /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */ return _$hash >>> 0;\n}\nvar stringHash = hash;\nvar sanitize = function(rule) {\n    return rule.replace(/\\/style/gi, \"\\\\/style\");\n};\nvar cache = {};\n/**\n * computeId\n *\n * Compute and memoize a jsx id from a basedId and optionally props.\n */ function computeId(baseId, props) {\n    if (!props) {\n        return \"jsx-\" + baseId;\n    }\n    var propsToString = String(props);\n    var key = baseId + propsToString;\n    if (!cache[key]) {\n        cache[key] = \"jsx-\" + stringHash(baseId + \"-\" + propsToString);\n    }\n    return cache[key];\n}\n/**\n * computeSelector\n *\n * Compute and memoize dynamic selectors.\n */ function computeSelector(id, css) {\n    var selectoPlaceholderRegexp = /__jsx-style-dynamic-selector/g;\n    // Sanitize SSR-ed CSS.\n    // Client side code doesn't need to be sanitized since we use\n    // document.createTextNode (dev) and the CSSOM api sheet.insertRule (prod).\n    if (false) {}\n    var idcss = id + css;\n    if (!cache[idcss]) {\n        cache[idcss] = css.replace(selectoPlaceholderRegexp, id);\n    }\n    return cache[idcss];\n}\nfunction mapRulesToStyle(cssRules, options) {\n    if (options === void 0) options = {};\n    return cssRules.map(function(args) {\n        var id = args[0];\n        var css = args[1];\n        return /*#__PURE__*/ React__default[\"default\"].createElement(\"style\", {\n            id: \"__\" + id,\n            // Avoid warnings upon render with a key\n            key: \"__\" + id,\n            nonce: options.nonce ? options.nonce : undefined,\n            dangerouslySetInnerHTML: {\n                __html: css\n            }\n        });\n    });\n}\nvar StyleSheetRegistry = /*#__PURE__*/ function() {\n    function StyleSheetRegistry(param) {\n        var ref = param === void 0 ? {} : param, _styleSheet = ref.styleSheet, styleSheet = _styleSheet === void 0 ? null : _styleSheet, _optimizeForSpeed = ref.optimizeForSpeed, optimizeForSpeed = _optimizeForSpeed === void 0 ? false : _optimizeForSpeed;\n        this._sheet = styleSheet || new StyleSheet({\n            name: \"styled-jsx\",\n            optimizeForSpeed: optimizeForSpeed\n        });\n        this._sheet.inject();\n        if (styleSheet && typeof optimizeForSpeed === \"boolean\") {\n            this._sheet.setOptimizeForSpeed(optimizeForSpeed);\n            this._optimizeForSpeed = this._sheet.isOptimizeForSpeed();\n        }\n        this._fromServer = undefined;\n        this._indices = {};\n        this._instancesCounts = {};\n    }\n    var _proto = StyleSheetRegistry.prototype;\n    _proto.add = function add(props) {\n        var _this = this;\n        if (undefined === this._optimizeForSpeed) {\n            this._optimizeForSpeed = Array.isArray(props.children);\n            this._sheet.setOptimizeForSpeed(this._optimizeForSpeed);\n            this._optimizeForSpeed = this._sheet.isOptimizeForSpeed();\n        }\n        if ( true && !this._fromServer) {\n            this._fromServer = this.selectFromServer();\n            this._instancesCounts = Object.keys(this._fromServer).reduce(function(acc, tagName) {\n                acc[tagName] = 0;\n                return acc;\n            }, {});\n        }\n        var ref = this.getIdAndRules(props), styleId = ref.styleId, rules = ref.rules;\n        // Deduping: just increase the instances count.\n        if (styleId in this._instancesCounts) {\n            this._instancesCounts[styleId] += 1;\n            return;\n        }\n        var indices = rules.map(function(rule) {\n            return _this._sheet.insertRule(rule);\n        }) // Filter out invalid rules\n        .filter(function(index) {\n            return index !== -1;\n        });\n        this._indices[styleId] = indices;\n        this._instancesCounts[styleId] = 1;\n    };\n    _proto.remove = function remove(props) {\n        var _this = this;\n        var styleId = this.getIdAndRules(props).styleId;\n        invariant(styleId in this._instancesCounts, \"styleId: `\" + styleId + \"` not found\");\n        this._instancesCounts[styleId] -= 1;\n        if (this._instancesCounts[styleId] < 1) {\n            var tagFromServer = this._fromServer && this._fromServer[styleId];\n            if (tagFromServer) {\n                tagFromServer.parentNode.removeChild(tagFromServer);\n                delete this._fromServer[styleId];\n            } else {\n                this._indices[styleId].forEach(function(index) {\n                    return _this._sheet.deleteRule(index);\n                });\n                delete this._indices[styleId];\n            }\n            delete this._instancesCounts[styleId];\n        }\n    };\n    _proto.update = function update(props, nextProps) {\n        this.add(nextProps);\n        this.remove(props);\n    };\n    _proto.flush = function flush() {\n        this._sheet.flush();\n        this._sheet.inject();\n        this._fromServer = undefined;\n        this._indices = {};\n        this._instancesCounts = {};\n    };\n    _proto.cssRules = function cssRules() {\n        var _this = this;\n        var fromServer = this._fromServer ? Object.keys(this._fromServer).map(function(styleId) {\n            return [\n                styleId,\n                _this._fromServer[styleId]\n            ];\n        }) : [];\n        var cssRules = this._sheet.cssRules();\n        return fromServer.concat(Object.keys(this._indices).map(function(styleId) {\n            return [\n                styleId,\n                _this._indices[styleId].map(function(index) {\n                    return cssRules[index].cssText;\n                }).join(_this._optimizeForSpeed ? \"\" : \"\\n\")\n            ];\n        }) // filter out empty rules\n        .filter(function(rule) {\n            return Boolean(rule[1]);\n        }));\n    };\n    _proto.styles = function styles(options) {\n        return mapRulesToStyle(this.cssRules(), options);\n    };\n    _proto.getIdAndRules = function getIdAndRules(props) {\n        var css = props.children, dynamic = props.dynamic, id = props.id;\n        if (dynamic) {\n            var styleId = computeId(id, dynamic);\n            return {\n                styleId: styleId,\n                rules: Array.isArray(css) ? css.map(function(rule) {\n                    return computeSelector(styleId, rule);\n                }) : [\n                    computeSelector(styleId, css)\n                ]\n            };\n        }\n        return {\n            styleId: computeId(id),\n            rules: Array.isArray(css) ? css : [\n                css\n            ]\n        };\n    };\n    /**\n   * selectFromServer\n   *\n   * Collects style tags from the document with id __jsx-XXX\n   */ _proto.selectFromServer = function selectFromServer() {\n        var elements = Array.prototype.slice.call(document.querySelectorAll('[id^=\"__jsx-\"]'));\n        return elements.reduce(function(acc, element) {\n            var id = element.id.slice(2);\n            acc[id] = element;\n            return acc;\n        }, {});\n    };\n    return StyleSheetRegistry;\n}();\nfunction invariant(condition, message) {\n    if (!condition) {\n        throw new Error(\"StyleSheetRegistry: \" + message + \".\");\n    }\n}\nvar StyleSheetContext = /*#__PURE__*/ React.createContext(null);\nStyleSheetContext.displayName = \"StyleSheetContext\";\nfunction createStyleRegistry() {\n    return new StyleSheetRegistry();\n}\nfunction StyleRegistry(param) {\n    _s();\n    var configuredRegistry = param.registry, children = param.children;\n    var rootRegistry = React.useContext(StyleSheetContext);\n    var ref = React.useState(function() {\n        return rootRegistry || configuredRegistry || createStyleRegistry();\n    }), registry = ref[0];\n    return /*#__PURE__*/ React__default[\"default\"].createElement(StyleSheetContext.Provider, {\n        value: registry\n    }, children);\n}\n_s(StyleRegistry, \"vgRS4YV7PcSMQCYHzGaNuBIBcZQ=\");\n_c1 = StyleRegistry;\nfunction useStyleRegistry() {\n    _s1();\n    return React.useContext(StyleSheetContext);\n}\n_s1(useStyleRegistry, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n// Opt-into the new `useInsertionEffect` API in React 18, fallback to `useLayoutEffect`.\n// https://github.com/reactwg/react-18/discussions/110\nvar useInsertionEffect = React__default[\"default\"].useInsertionEffect || React__default[\"default\"].useLayoutEffect;\nvar defaultRegistry =  true ? createStyleRegistry() : 0;\nfunction JSXStyle(props) {\n    _s2();\n    var registry = defaultRegistry ? defaultRegistry : useStyleRegistry();\n    // If `registry` does not exist, we do nothing here.\n    if (!registry) {\n        return null;\n    }\n    if (false) {}\n    useInsertionEffect(function() {\n        registry.add(props);\n        return function() {\n            registry.remove(props);\n        };\n    // props.children can be string[], will be striped since id is identical\n    }, [\n        props.id,\n        String(props.dynamic)\n    ]);\n    return null;\n}\n_s2(JSXStyle, \"48Sqj1BUqkshsPdz6NEWXDn8pF4=\", false, function() {\n    return [\n        useStyleRegistry,\n        useInsertionEffect\n    ];\n});\n_c2 = JSXStyle;\nJSXStyle.dynamic = function(info) {\n    return info.map(function(tagInfo) {\n        var baseId = tagInfo[0];\n        var props = tagInfo[1];\n        return computeId(baseId, props);\n    }).join(\" \");\n};\nexports.StyleRegistry = StyleRegistry;\nexports.createStyleRegistry = createStyleRegistry;\nexports.style = JSXStyle;\nexports.useStyleRegistry = useStyleRegistry;\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"React__default\");\n$RefreshReg$(_c1, \"StyleRegistry\");\n$RefreshReg$(_c2, \"JSXStyle\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/node_modules/styled-jsx/dist/index/index.js\n"));

/***/ }),

/***/ "./node_modules/next/node_modules/styled-jsx/style.js":
/*!************************************************************!*\
  !*** ./node_modules/next/node_modules/styled-jsx/style.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = __webpack_require__(/*! ./dist/index */ \"./node_modules/next/node_modules/styled-jsx/dist/index/index.js\").style;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9ub2RlX21vZHVsZXMvc3R5bGVkLWpzeC9zdHlsZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUFBLGlJQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9ub2RlX21vZHVsZXMvc3R5bGVkLWpzeC9zdHlsZS5qcz9iMjYwIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kaXN0L2luZGV4Jykuc3R5bGVcbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicmVxdWlyZSIsInN0eWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/node_modules/styled-jsx/style.js\n"));

/***/ }),

/***/ "./pages/_app.tsx":
/*!************************!*\
  !*** ./pages/_app.tsx ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_reset_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../styles/reset.css */ \"./styles/reset.css\");\n/* harmony import */ var _styles_reset_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_reset_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _cntrl_site_sdk_nextjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @cntrl-site/sdk-nextjs */ \"./node_modules/@cntrl-site/sdk-nextjs/lib/index.js\");\n/* harmony import */ var _cntrl_site_sdk_nextjs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_cntrl_site_sdk_nextjs__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _cntrl_site_sdk_style_sdk_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @cntrl-site/sdk/style/sdk.css */ \"./node_modules/@cntrl-site/sdk/dist/sdk.css\");\n/* harmony import */ var _cntrl_site_sdk_style_sdk_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_cntrl_site_sdk_style_sdk_css__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _components_WebGLProgressiveBlur__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/WebGLProgressiveBlur */ \"./components/WebGLProgressiveBlur.tsx\");\n\n\n\n\n\n// Enregistrer le composant WebGL Progressive Blur pour Control CMS\n_cntrl_site_sdk_nextjs__WEBPACK_IMPORTED_MODULE_2__.customItems.define(\"webgl-progressive-blur\", _components_WebGLProgressiveBlur__WEBPACK_IMPORTED_MODULE_4__.WebGLProgressiveBlur);\nfunction App(param) {\n    let { Component, pageProps } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_cntrl_site_sdk_nextjs__WEBPACK_IMPORTED_MODULE_2__.CntrlProvider, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n            ...pageProps\n        }, void 0, false, {\n            fileName: \"/Users/ludovicveltz/Documents/SOLWEIG-IZAR/webgl-progressive-blur-main/pages/_app.tsx\",\n            lineNumber: 13,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/ludovicveltz/Documents/SOLWEIG-IZAR/webgl-progressive-blur-main/pages/_app.tsx\",\n        lineNumber: 12,\n        columnNumber: 5\n    }, this);\n}\n_c = App;\n/* harmony default export */ __webpack_exports__[\"default\"] = (App);\nvar _c;\n$RefreshReg$(_c, \"App\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUE2QjtBQUV1QztBQUM3QjtBQUNtQztBQUUxRSxtRUFBbUU7QUFDbkVDLCtEQUFXQSxDQUFDRSxNQUFNLENBQUMsMEJBQTBCRCxrRkFBb0JBO0FBRWpFLFNBQVNFLElBQUksS0FBa0M7UUFBbEMsRUFBRUMsU0FBUyxFQUFFQyxTQUFTLEVBQVksR0FBbEM7SUFDWCxxQkFDRSw4REFBQ04saUVBQWFBO2tCQUNaLDRFQUFDSztZQUFXLEdBQUdDLFNBQVM7Ozs7Ozs7Ozs7O0FBRzlCO0tBTlNGO0FBUVQsK0RBQWVBLEdBQUdBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvX2FwcC50c3g/MmZiZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJy4uL3N0eWxlcy9yZXNldC5jc3MnO1xuaW1wb3J0IHR5cGUgeyBBcHBQcm9wcyB9IGZyb20gJ25leHQvYXBwJztcbmltcG9ydCB7IENudHJsUHJvdmlkZXIsIGN1c3RvbUl0ZW1zIH0gZnJvbSAnQGNudHJsLXNpdGUvc2RrLW5leHRqcyc7XG5pbXBvcnQgJ0BjbnRybC1zaXRlL3Nkay9zdHlsZS9zZGsuY3NzJztcbmltcG9ydCB7IFdlYkdMUHJvZ3Jlc3NpdmVCbHVyIH0gZnJvbSAnLi4vY29tcG9uZW50cy9XZWJHTFByb2dyZXNzaXZlQmx1cic7XG5cbi8vIEVucmVnaXN0cmVyIGxlIGNvbXBvc2FudCBXZWJHTCBQcm9ncmVzc2l2ZSBCbHVyIHBvdXIgQ29udHJvbCBDTVNcbmN1c3RvbUl0ZW1zLmRlZmluZSgnd2ViZ2wtcHJvZ3Jlc3NpdmUtYmx1cicsIFdlYkdMUHJvZ3Jlc3NpdmVCbHVyKTtcblxuZnVuY3Rpb24gQXBwKHsgQ29tcG9uZW50LCBwYWdlUHJvcHMgfTogQXBwUHJvcHMpIHtcbiAgcmV0dXJuIChcbiAgICA8Q250cmxQcm92aWRlcj5cbiAgICAgIDxDb21wb25lbnQgey4uLnBhZ2VQcm9wc30gLz5cbiAgICA8L0NudHJsUHJvdmlkZXI+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IEFwcDtcbiJdLCJuYW1lcyI6WyJDbnRybFByb3ZpZGVyIiwiY3VzdG9tSXRlbXMiLCJXZWJHTFByb2dyZXNzaXZlQmx1ciIsImRlZmluZSIsIkFwcCIsIkNvbXBvbmVudCIsInBhZ2VQcm9wcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/_app.tsx\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/client-only/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/next/dist/compiled/client-only/index.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {



/***/ }),

/***/ "./node_modules/next/dist/compiled/native-url/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/next/dist/compiled/native-url/index.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={452:function(e){\"use strict\";e.exports=__webpack_require__(/*! next/dist/compiled/querystring-es3 */ \"./node_modules/next/dist/compiled/querystring-es3/index.js\")}};var t={};function __nccwpck_require__(o){var a=t[o];if(a!==undefined){return a.exports}var s=t[o]={exports:{}};var n=true;try{e[o](s,s.exports,__nccwpck_require__);n=false}finally{if(n)delete t[o]}return s.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var o={};!function(){var e=o;var t,a=(t=__nccwpck_require__(452))&&\"object\"==typeof t&&\"default\"in t?t.default:t,s=/https?|ftp|gopher|file/;function r(e){\"string\"==typeof e&&(e=d(e));var t=function(e,t,o){var a=e.auth,s=e.hostname,n=e.protocol||\"\",p=e.pathname||\"\",c=e.hash||\"\",i=e.query||\"\",u=!1;a=a?encodeURIComponent(a).replace(/%3A/i,\":\")+\"@\":\"\",e.host?u=a+e.host:s&&(u=a+(~s.indexOf(\":\")?\"[\"+s+\"]\":s),e.port&&(u+=\":\"+e.port)),i&&\"object\"==typeof i&&(i=t.encode(i));var f=e.search||i&&\"?\"+i||\"\";return n&&\":\"!==n.substr(-1)&&(n+=\":\"),e.slashes||(!n||o.test(n))&&!1!==u?(u=\"//\"+(u||\"\"),p&&\"/\"!==p[0]&&(p=\"/\"+p)):u||(u=\"\"),c&&\"#\"!==c[0]&&(c=\"#\"+c),f&&\"?\"!==f[0]&&(f=\"?\"+f),{protocol:n,host:u,pathname:p=p.replace(/[?#]/g,encodeURIComponent),search:f=f.replace(\"#\",\"%23\"),hash:c}}(e,a,s);return\"\"+t.protocol+t.host+t.pathname+t.search+t.hash}var n=\"http://\",p=\"w.w\",c=n+p,i=/^([a-z0-9.+-]*:\\/\\/\\/)([a-z0-9.+-]:\\/*)?/i,u=/https?|ftp|gopher|file/;function h(e,t){var o=\"string\"==typeof e?d(e):e;e=\"object\"==typeof e?r(e):e;var a=d(t),s=\"\";o.protocol&&!o.slashes&&(s=o.protocol,e=e.replace(o.protocol,\"\"),s+=\"/\"===t[0]||\"/\"===e[0]?\"/\":\"\"),s&&a.protocol&&(s=\"\",a.slashes||(s=a.protocol,t=t.replace(a.protocol,\"\")));var p=e.match(i);p&&!a.protocol&&(e=e.substr((s=p[1]+(p[2]||\"\")).length),/^\\/\\/[^/]/.test(t)&&(s=s.slice(0,-1)));var f=new URL(e,c+\"/\"),m=new URL(t,f).toString().replace(c,\"\"),v=a.protocol||o.protocol;return v+=o.slashes||a.slashes?\"//\":\"\",!s&&v?m=m.replace(n,v):s&&(m=m.replace(n,\"\")),u.test(m)||~t.indexOf(\".\")||\"/\"===e.slice(-1)||\"/\"===t.slice(-1)||\"/\"!==m.slice(-1)||(m=m.slice(0,-1)),s&&(m=s+(\"/\"===m[0]?m.substr(1):m)),m}function l(){}l.prototype.parse=d,l.prototype.format=r,l.prototype.resolve=h,l.prototype.resolveObject=h;var f=/^https?|ftp|gopher|file/,m=/^(.*?)([#?].*)/,v=/^([a-z0-9.+-]*:)(\\/{0,3})(.*)/i,_=/^([a-z0-9.+-]*:)?\\/\\/\\/*/i,b=/^([a-z0-9.+-]*:)(\\/{0,2})\\[(.*)\\]$/i;function d(e,t,o){if(void 0===t&&(t=!1),void 0===o&&(o=!1),e&&\"object\"==typeof e&&e instanceof l)return e;var s=(e=e.trim()).match(m);e=s?s[1].replace(/\\\\/g,\"/\")+s[2]:e.replace(/\\\\/g,\"/\"),b.test(e)&&\"/\"!==e.slice(-1)&&(e+=\"/\");var n=!/(^javascript)/.test(e)&&e.match(v),i=_.test(e),u=\"\";n&&(f.test(n[1])||(u=n[1].toLowerCase(),e=\"\"+n[2]+n[3]),n[2]||(i=!1,f.test(n[1])?(u=n[1],e=\"\"+n[3]):e=\"//\"+n[3]),3!==n[2].length&&1!==n[2].length||(u=n[1],e=\"/\"+n[3]));var g,y=(s?s[1]:e).match(/^https?:\\/\\/[^/]+(:[0-9]+)(?=\\/|$)/),w=y&&y[1],x=new l,C=\"\",U=\"\";try{g=new URL(e)}catch(t){C=t,u||o||!/^\\/\\//.test(e)||/^\\/\\/.+[@.]/.test(e)||(U=\"/\",e=e.substr(1));try{g=new URL(e,c)}catch(e){return x.protocol=u,x.href=u,x}}x.slashes=i&&!U,x.host=g.host===p?\"\":g.host,x.hostname=g.hostname===p?\"\":g.hostname.replace(/(\\[|\\])/g,\"\"),x.protocol=C?u||null:g.protocol,x.search=g.search.replace(/\\\\/g,\"%5C\"),x.hash=g.hash.replace(/\\\\/g,\"%5C\");var j=e.split(\"#\");!x.search&&~j[0].indexOf(\"?\")&&(x.search=\"?\"),x.hash||\"\"!==j[1]||(x.hash=\"#\"),x.query=t?a.decode(g.search.substr(1)):x.search.substr(1),x.pathname=U+(n?function(e){return e.replace(/['^|`]/g,(function(e){return\"%\"+e.charCodeAt().toString(16).toUpperCase()})).replace(/((?:%[0-9A-F]{2})+)/g,(function(e,t){try{return decodeURIComponent(t).split(\"\").map((function(e){var t=e.charCodeAt();return t>256||/^[a-z0-9]$/i.test(e)?e:\"%\"+t.toString(16).toUpperCase()})).join(\"\")}catch(e){return t}}))}(g.pathname):g.pathname),\"about:\"===x.protocol&&\"blank\"===x.pathname&&(x.protocol=\"\",x.pathname=\"\"),C&&\"/\"!==e[0]&&(x.pathname=x.pathname.substr(1)),u&&!f.test(u)&&\"/\"!==e.slice(-1)&&\"/\"===x.pathname&&(x.pathname=\"\"),x.path=x.pathname+x.search,x.auth=[g.username,g.password].map(decodeURIComponent).filter(Boolean).join(\":\"),x.port=g.port,w&&!x.host.endsWith(w)&&(x.host+=w,x.port=w.slice(1)),x.href=U?\"\"+x.pathname+x.search+x.hash:r(x);var q=/^(file)/.test(x.href)?[\"host\",\"hostname\"]:[];return Object.keys(x).forEach((function(e){~q.indexOf(e)||(x[e]=x[e]||null)})),x}e.parse=d,e.format=r,e.resolve=h,e.resolveObject=function(e,t){return d(h(e,t))},e.Url=l}();module.exports=o})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL25hdGl2ZS11cmwvaW5kZXguanMiLCJtYXBwaW5ncyI6IjtBQUFBLFlBQVksT0FBTyxnQkFBZ0IsYUFBYSxVQUFVLG1CQUFPLENBQUMsc0dBQW9DLElBQUksU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssU0FBUyxZQUFZLFFBQVEsK0dBQStHLGNBQWMsNkJBQTZCLHNCQUFzQiw0RkFBNEYsNktBQTZLLDZCQUE2QixpTEFBaUwseUdBQXlHLFFBQVEsc0RBQXNELHVHQUF1RyxnQkFBZ0IsZ0NBQWdDLDRCQUE0QixnQkFBZ0IsOEtBQThLLGlCQUFpQixnR0FBZ0csd0ZBQXdGLGtPQUFrTyxjQUFjLDJGQUEyRiwwRUFBMEUsSUFBSSw2REFBNkQsSUFBSSxhQUFhLGtCQUFrQix3RkFBd0YsNEJBQTRCLDZGQUE2Riw0REFBNEQsd0tBQXdLLDJGQUEyRixJQUFJLGFBQWEsU0FBUyx5RUFBeUUsSUFBSSxlQUFlLFNBQVMsZ0NBQWdDLHFOQUFxTixtQkFBbUIsb0tBQW9LLHdDQUF3QyxvREFBb0QsMEJBQTBCLEVBQUUscUJBQXFCLElBQUksd0RBQXdELHFCQUFxQix1RUFBdUUsWUFBWSxTQUFTLFVBQVUsR0FBRyxxYkFBcWIsb0RBQW9ELDJDQUEyQyxpQ0FBaUMsS0FBSywrREFBK0QsaUJBQWlCLFNBQVMsR0FBRyxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9uYXRpdmUtdXJsL2luZGV4LmpzPzcyNDUiXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7dmFyIGU9ezQ1MjpmdW5jdGlvbihlKXtcInVzZSBzdHJpY3RcIjtlLmV4cG9ydHM9cmVxdWlyZShcIm5leHQvZGlzdC9jb21waWxlZC9xdWVyeXN0cmluZy1lczNcIil9fTt2YXIgdD17fTtmdW5jdGlvbiBfX25jY3dwY2tfcmVxdWlyZV9fKG8pe3ZhciBhPXRbb107aWYoYSE9PXVuZGVmaW5lZCl7cmV0dXJuIGEuZXhwb3J0c312YXIgcz10W29dPXtleHBvcnRzOnt9fTt2YXIgbj10cnVlO3RyeXtlW29dKHMscy5leHBvcnRzLF9fbmNjd3Bja19yZXF1aXJlX18pO249ZmFsc2V9ZmluYWxseXtpZihuKWRlbGV0ZSB0W29dfXJldHVybiBzLmV4cG9ydHN9aWYodHlwZW9mIF9fbmNjd3Bja19yZXF1aXJlX18hPT1cInVuZGVmaW5lZFwiKV9fbmNjd3Bja19yZXF1aXJlX18uYWI9X19kaXJuYW1lK1wiL1wiO3ZhciBvPXt9OyFmdW5jdGlvbigpe3ZhciBlPW87dmFyIHQsYT0odD1fX25jY3dwY2tfcmVxdWlyZV9fKDQ1MikpJiZcIm9iamVjdFwiPT10eXBlb2YgdCYmXCJkZWZhdWx0XCJpbiB0P3QuZGVmYXVsdDp0LHM9L2h0dHBzP3xmdHB8Z29waGVyfGZpbGUvO2Z1bmN0aW9uIHIoZSl7XCJzdHJpbmdcIj09dHlwZW9mIGUmJihlPWQoZSkpO3ZhciB0PWZ1bmN0aW9uKGUsdCxvKXt2YXIgYT1lLmF1dGgscz1lLmhvc3RuYW1lLG49ZS5wcm90b2NvbHx8XCJcIixwPWUucGF0aG5hbWV8fFwiXCIsYz1lLmhhc2h8fFwiXCIsaT1lLnF1ZXJ5fHxcIlwiLHU9ITE7YT1hP2VuY29kZVVSSUNvbXBvbmVudChhKS5yZXBsYWNlKC8lM0EvaSxcIjpcIikrXCJAXCI6XCJcIixlLmhvc3Q/dT1hK2UuaG9zdDpzJiYodT1hKyh+cy5pbmRleE9mKFwiOlwiKT9cIltcIitzK1wiXVwiOnMpLGUucG9ydCYmKHUrPVwiOlwiK2UucG9ydCkpLGkmJlwib2JqZWN0XCI9PXR5cGVvZiBpJiYoaT10LmVuY29kZShpKSk7dmFyIGY9ZS5zZWFyY2h8fGkmJlwiP1wiK2l8fFwiXCI7cmV0dXJuIG4mJlwiOlwiIT09bi5zdWJzdHIoLTEpJiYobis9XCI6XCIpLGUuc2xhc2hlc3x8KCFufHxvLnRlc3QobikpJiYhMSE9PXU/KHU9XCIvL1wiKyh1fHxcIlwiKSxwJiZcIi9cIiE9PXBbMF0mJihwPVwiL1wiK3ApKTp1fHwodT1cIlwiKSxjJiZcIiNcIiE9PWNbMF0mJihjPVwiI1wiK2MpLGYmJlwiP1wiIT09ZlswXSYmKGY9XCI/XCIrZikse3Byb3RvY29sOm4saG9zdDp1LHBhdGhuYW1lOnA9cC5yZXBsYWNlKC9bPyNdL2csZW5jb2RlVVJJQ29tcG9uZW50KSxzZWFyY2g6Zj1mLnJlcGxhY2UoXCIjXCIsXCIlMjNcIiksaGFzaDpjfX0oZSxhLHMpO3JldHVyblwiXCIrdC5wcm90b2NvbCt0Lmhvc3QrdC5wYXRobmFtZSt0LnNlYXJjaCt0Lmhhc2h9dmFyIG49XCJodHRwOi8vXCIscD1cIncud1wiLGM9bitwLGk9L14oW2EtejAtOS4rLV0qOlxcL1xcL1xcLykoW2EtejAtOS4rLV06XFwvKik/L2ksdT0vaHR0cHM/fGZ0cHxnb3BoZXJ8ZmlsZS87ZnVuY3Rpb24gaChlLHQpe3ZhciBvPVwic3RyaW5nXCI9PXR5cGVvZiBlP2QoZSk6ZTtlPVwib2JqZWN0XCI9PXR5cGVvZiBlP3IoZSk6ZTt2YXIgYT1kKHQpLHM9XCJcIjtvLnByb3RvY29sJiYhby5zbGFzaGVzJiYocz1vLnByb3RvY29sLGU9ZS5yZXBsYWNlKG8ucHJvdG9jb2wsXCJcIikscys9XCIvXCI9PT10WzBdfHxcIi9cIj09PWVbMF0/XCIvXCI6XCJcIikscyYmYS5wcm90b2NvbCYmKHM9XCJcIixhLnNsYXNoZXN8fChzPWEucHJvdG9jb2wsdD10LnJlcGxhY2UoYS5wcm90b2NvbCxcIlwiKSkpO3ZhciBwPWUubWF0Y2goaSk7cCYmIWEucHJvdG9jb2wmJihlPWUuc3Vic3RyKChzPXBbMV0rKHBbMl18fFwiXCIpKS5sZW5ndGgpLC9eXFwvXFwvW14vXS8udGVzdCh0KSYmKHM9cy5zbGljZSgwLC0xKSkpO3ZhciBmPW5ldyBVUkwoZSxjK1wiL1wiKSxtPW5ldyBVUkwodCxmKS50b1N0cmluZygpLnJlcGxhY2UoYyxcIlwiKSx2PWEucHJvdG9jb2x8fG8ucHJvdG9jb2w7cmV0dXJuIHYrPW8uc2xhc2hlc3x8YS5zbGFzaGVzP1wiLy9cIjpcIlwiLCFzJiZ2P209bS5yZXBsYWNlKG4sdik6cyYmKG09bS5yZXBsYWNlKG4sXCJcIikpLHUudGVzdChtKXx8fnQuaW5kZXhPZihcIi5cIil8fFwiL1wiPT09ZS5zbGljZSgtMSl8fFwiL1wiPT09dC5zbGljZSgtMSl8fFwiL1wiIT09bS5zbGljZSgtMSl8fChtPW0uc2xpY2UoMCwtMSkpLHMmJihtPXMrKFwiL1wiPT09bVswXT9tLnN1YnN0cigxKTptKSksbX1mdW5jdGlvbiBsKCl7fWwucHJvdG90eXBlLnBhcnNlPWQsbC5wcm90b3R5cGUuZm9ybWF0PXIsbC5wcm90b3R5cGUucmVzb2x2ZT1oLGwucHJvdG90eXBlLnJlc29sdmVPYmplY3Q9aDt2YXIgZj0vXmh0dHBzP3xmdHB8Z29waGVyfGZpbGUvLG09L14oLio/KShbIz9dLiopLyx2PS9eKFthLXowLTkuKy1dKjopKFxcL3swLDN9KSguKikvaSxfPS9eKFthLXowLTkuKy1dKjopP1xcL1xcL1xcLyovaSxiPS9eKFthLXowLTkuKy1dKjopKFxcL3swLDJ9KVxcWyguKilcXF0kL2k7ZnVuY3Rpb24gZChlLHQsbyl7aWYodm9pZCAwPT09dCYmKHQ9ITEpLHZvaWQgMD09PW8mJihvPSExKSxlJiZcIm9iamVjdFwiPT10eXBlb2YgZSYmZSBpbnN0YW5jZW9mIGwpcmV0dXJuIGU7dmFyIHM9KGU9ZS50cmltKCkpLm1hdGNoKG0pO2U9cz9zWzFdLnJlcGxhY2UoL1xcXFwvZyxcIi9cIikrc1syXTplLnJlcGxhY2UoL1xcXFwvZyxcIi9cIiksYi50ZXN0KGUpJiZcIi9cIiE9PWUuc2xpY2UoLTEpJiYoZSs9XCIvXCIpO3ZhciBuPSEvKF5qYXZhc2NyaXB0KS8udGVzdChlKSYmZS5tYXRjaCh2KSxpPV8udGVzdChlKSx1PVwiXCI7biYmKGYudGVzdChuWzFdKXx8KHU9blsxXS50b0xvd2VyQ2FzZSgpLGU9XCJcIituWzJdK25bM10pLG5bMl18fChpPSExLGYudGVzdChuWzFdKT8odT1uWzFdLGU9XCJcIituWzNdKTplPVwiLy9cIituWzNdKSwzIT09blsyXS5sZW5ndGgmJjEhPT1uWzJdLmxlbmd0aHx8KHU9blsxXSxlPVwiL1wiK25bM10pKTt2YXIgZyx5PShzP3NbMV06ZSkubWF0Y2goL15odHRwcz86XFwvXFwvW14vXSsoOlswLTldKykoPz1cXC98JCkvKSx3PXkmJnlbMV0seD1uZXcgbCxDPVwiXCIsVT1cIlwiO3RyeXtnPW5ldyBVUkwoZSl9Y2F0Y2godCl7Qz10LHV8fG98fCEvXlxcL1xcLy8udGVzdChlKXx8L15cXC9cXC8uK1tALl0vLnRlc3QoZSl8fChVPVwiL1wiLGU9ZS5zdWJzdHIoMSkpO3RyeXtnPW5ldyBVUkwoZSxjKX1jYXRjaChlKXtyZXR1cm4geC5wcm90b2NvbD11LHguaHJlZj11LHh9fXguc2xhc2hlcz1pJiYhVSx4Lmhvc3Q9Zy5ob3N0PT09cD9cIlwiOmcuaG9zdCx4Lmhvc3RuYW1lPWcuaG9zdG5hbWU9PT1wP1wiXCI6Zy5ob3N0bmFtZS5yZXBsYWNlKC8oXFxbfFxcXSkvZyxcIlwiKSx4LnByb3RvY29sPUM/dXx8bnVsbDpnLnByb3RvY29sLHguc2VhcmNoPWcuc2VhcmNoLnJlcGxhY2UoL1xcXFwvZyxcIiU1Q1wiKSx4Lmhhc2g9Zy5oYXNoLnJlcGxhY2UoL1xcXFwvZyxcIiU1Q1wiKTt2YXIgaj1lLnNwbGl0KFwiI1wiKTsheC5zZWFyY2gmJn5qWzBdLmluZGV4T2YoXCI/XCIpJiYoeC5zZWFyY2g9XCI/XCIpLHguaGFzaHx8XCJcIiE9PWpbMV18fCh4Lmhhc2g9XCIjXCIpLHgucXVlcnk9dD9hLmRlY29kZShnLnNlYXJjaC5zdWJzdHIoMSkpOnguc2VhcmNoLnN1YnN0cigxKSx4LnBhdGhuYW1lPVUrKG4/ZnVuY3Rpb24oZSl7cmV0dXJuIGUucmVwbGFjZSgvWydefGBdL2csKGZ1bmN0aW9uKGUpe3JldHVyblwiJVwiK2UuY2hhckNvZGVBdCgpLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpfSkpLnJlcGxhY2UoLygoPzolWzAtOUEtRl17Mn0pKykvZywoZnVuY3Rpb24oZSx0KXt0cnl7cmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudCh0KS5zcGxpdChcIlwiKS5tYXAoKGZ1bmN0aW9uKGUpe3ZhciB0PWUuY2hhckNvZGVBdCgpO3JldHVybiB0PjI1Nnx8L15bYS16MC05XSQvaS50ZXN0KGUpP2U6XCIlXCIrdC50b1N0cmluZygxNikudG9VcHBlckNhc2UoKX0pKS5qb2luKFwiXCIpfWNhdGNoKGUpe3JldHVybiB0fX0pKX0oZy5wYXRobmFtZSk6Zy5wYXRobmFtZSksXCJhYm91dDpcIj09PXgucHJvdG9jb2wmJlwiYmxhbmtcIj09PXgucGF0aG5hbWUmJih4LnByb3RvY29sPVwiXCIseC5wYXRobmFtZT1cIlwiKSxDJiZcIi9cIiE9PWVbMF0mJih4LnBhdGhuYW1lPXgucGF0aG5hbWUuc3Vic3RyKDEpKSx1JiYhZi50ZXN0KHUpJiZcIi9cIiE9PWUuc2xpY2UoLTEpJiZcIi9cIj09PXgucGF0aG5hbWUmJih4LnBhdGhuYW1lPVwiXCIpLHgucGF0aD14LnBhdGhuYW1lK3guc2VhcmNoLHguYXV0aD1bZy51c2VybmFtZSxnLnBhc3N3b3JkXS5tYXAoZGVjb2RlVVJJQ29tcG9uZW50KS5maWx0ZXIoQm9vbGVhbikuam9pbihcIjpcIikseC5wb3J0PWcucG9ydCx3JiYheC5ob3N0LmVuZHNXaXRoKHcpJiYoeC5ob3N0Kz13LHgucG9ydD13LnNsaWNlKDEpKSx4LmhyZWY9VT9cIlwiK3gucGF0aG5hbWUreC5zZWFyY2greC5oYXNoOnIoeCk7dmFyIHE9L14oZmlsZSkvLnRlc3QoeC5ocmVmKT9bXCJob3N0XCIsXCJob3N0bmFtZVwiXTpbXTtyZXR1cm4gT2JqZWN0LmtleXMoeCkuZm9yRWFjaCgoZnVuY3Rpb24oZSl7fnEuaW5kZXhPZihlKXx8KHhbZV09eFtlXXx8bnVsbCl9KSkseH1lLnBhcnNlPWQsZS5mb3JtYXQ9cixlLnJlc29sdmU9aCxlLnJlc29sdmVPYmplY3Q9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZChoKGUsdCkpfSxlLlVybD1sfSgpO21vZHVsZS5leHBvcnRzPW99KSgpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/native-url/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsWUFBWSxPQUFPLGdCQUFnQixtQkFBbUIsTUFBTSxNQUFNLDRCQUE0QixtREFBbUQsK0JBQStCLHFEQUFxRCxZQUFZLElBQUksbUNBQW1DLGFBQWEsS0FBSyxvQkFBb0IsU0FBUyxtQkFBbUIsSUFBSSxxQ0FBcUMsZUFBZSxLQUFLLHVCQUF1QixTQUFTLHVCQUF1QixJQUFJLHVCQUF1QixtQkFBbUIsdUJBQXVCLDJDQUEyQyxhQUFhLHVCQUF1QixJQUFJLGNBQWMsU0FBUyxJQUFJLHdCQUF3QixTQUFTLDBCQUEwQiw0QkFBNEIscUJBQXFCLHVCQUF1QixnREFBZ0QsZUFBZSx1QkFBdUIsSUFBSSxZQUFZLFNBQVMsSUFBSSxzQkFBc0IsU0FBUyx3QkFBd0IsU0FBUyxZQUFZLE1BQU0sU0FBUywyQkFBMkIsV0FBVyxPQUFPLFFBQVEsYUFBYSxjQUFjLEtBQUssS0FBSyxhQUFhLGNBQWMsc0JBQXNCLE1BQU0sT0FBTyxrQ0FBa0MsT0FBTyxlQUFlLFNBQVMsSUFBSSxLQUFLLGFBQWEsTUFBTSxZQUFZLEtBQUssV0FBVyxPQUFPLFFBQVEsbUJBQW1CLHVCQUF1QixvQ0FBb0MsdUJBQXVCLFlBQVksbUJBQW1CLEtBQUsscUJBQXFCLHNCQUFzQixxQkFBcUIseUJBQXlCLG1CQUFtQixXQUFXLGFBQWEsOEJBQThCLGlDQUFpQyxrQkFBa0IsZUFBZSxTQUFTLFVBQVUsYUFBYSxjQUFjLGlCQUFpQixVQUFVLG1CQUFtQixZQUFZLFdBQVcsc0JBQXNCLDBCQUEwQixZQUFZLHVCQUF1QiwyQkFBMkIsd0JBQXdCLFVBQVUsc0JBQXNCLHFEQUFxRCxpQkFBaUIsV0FBVyxvQkFBb0IsbURBQW1ELG1CQUFtQixZQUFZLFNBQVMsZ0NBQWdDLFdBQVcsa0JBQWtCLGlCQUFpQixZQUFZLFlBQVksV0FBVyxJQUFJLHNDQUFzQyxRQUFRLFFBQVEsaUJBQWlCLGlCQUFpQixtRUFBbUUsU0FBUyxLQUFLLCtCQUErQixpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9wcm9jZXNzL2Jyb3dzZXIuanM/MWIxZCJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXt2YXIgZT17MjI5OmZ1bmN0aW9uKGUpe3ZhciB0PWUuZXhwb3J0cz17fTt2YXIgcjt2YXIgbjtmdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwic2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZFwiKX1mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwiY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfShmdW5jdGlvbigpe3RyeXtpZih0eXBlb2Ygc2V0VGltZW91dD09PVwiZnVuY3Rpb25cIil7cj1zZXRUaW1lb3V0fWVsc2V7cj1kZWZhdWx0U2V0VGltb3V0fX1jYXRjaChlKXtyPWRlZmF1bHRTZXRUaW1vdXR9dHJ5e2lmKHR5cGVvZiBjbGVhclRpbWVvdXQ9PT1cImZ1bmN0aW9uXCIpe249Y2xlYXJUaW1lb3V0fWVsc2V7bj1kZWZhdWx0Q2xlYXJUaW1lb3V0fX1jYXRjaChlKXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fSkoKTtmdW5jdGlvbiBydW5UaW1lb3V0KGUpe2lmKHI9PT1zZXRUaW1lb3V0KXtyZXR1cm4gc2V0VGltZW91dChlLDApfWlmKChyPT09ZGVmYXVsdFNldFRpbW91dHx8IXIpJiZzZXRUaW1lb3V0KXtyPXNldFRpbWVvdXQ7cmV0dXJuIHNldFRpbWVvdXQoZSwwKX10cnl7cmV0dXJuIHIoZSwwKX1jYXRjaCh0KXt0cnl7cmV0dXJuIHIuY2FsbChudWxsLGUsMCl9Y2F0Y2godCl7cmV0dXJuIHIuY2FsbCh0aGlzLGUsMCl9fX1mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQoZSl7aWYobj09PWNsZWFyVGltZW91dCl7cmV0dXJuIGNsZWFyVGltZW91dChlKX1pZigobj09PWRlZmF1bHRDbGVhclRpbWVvdXR8fCFuKSYmY2xlYXJUaW1lb3V0KXtuPWNsZWFyVGltZW91dDtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfXRyeXtyZXR1cm4gbihlKX1jYXRjaCh0KXt0cnl7cmV0dXJuIG4uY2FsbChudWxsLGUpfWNhdGNoKHQpe3JldHVybiBuLmNhbGwodGhpcyxlKX19fXZhciBpPVtdO3ZhciBvPWZhbHNlO3ZhciB1O3ZhciBhPS0xO2Z1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpe2lmKCFvfHwhdSl7cmV0dXJufW89ZmFsc2U7aWYodS5sZW5ndGgpe2k9dS5jb25jYXQoaSl9ZWxzZXthPS0xfWlmKGkubGVuZ3RoKXtkcmFpblF1ZXVlKCl9fWZ1bmN0aW9uIGRyYWluUXVldWUoKXtpZihvKXtyZXR1cm59dmFyIGU9cnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO289dHJ1ZTt2YXIgdD1pLmxlbmd0aDt3aGlsZSh0KXt1PWk7aT1bXTt3aGlsZSgrK2E8dCl7aWYodSl7dVthXS5ydW4oKX19YT0tMTt0PWkubGVuZ3RofXU9bnVsbDtvPWZhbHNlO3J1bkNsZWFyVGltZW91dChlKX10Lm5leHRUaWNrPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoLTEpO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSl7Zm9yKHZhciByPTE7cjxhcmd1bWVudHMubGVuZ3RoO3IrKyl7dFtyLTFdPWFyZ3VtZW50c1tyXX19aS5wdXNoKG5ldyBJdGVtKGUsdCkpO2lmKGkubGVuZ3RoPT09MSYmIW8pe3J1blRpbWVvdXQoZHJhaW5RdWV1ZSl9fTtmdW5jdGlvbiBJdGVtKGUsdCl7dGhpcy5mdW49ZTt0aGlzLmFycmF5PXR9SXRlbS5wcm90b3R5cGUucnVuPWZ1bmN0aW9uKCl7dGhpcy5mdW4uYXBwbHkobnVsbCx0aGlzLmFycmF5KX07dC50aXRsZT1cImJyb3dzZXJcIjt0LmJyb3dzZXI9dHJ1ZTt0LmVudj17fTt0LmFyZ3Y9W107dC52ZXJzaW9uPVwiXCI7dC52ZXJzaW9ucz17fTtmdW5jdGlvbiBub29wKCl7fXQub249bm9vcDt0LmFkZExpc3RlbmVyPW5vb3A7dC5vbmNlPW5vb3A7dC5vZmY9bm9vcDt0LnJlbW92ZUxpc3RlbmVyPW5vb3A7dC5yZW1vdmVBbGxMaXN0ZW5lcnM9bm9vcDt0LmVtaXQ9bm9vcDt0LnByZXBlbmRMaXN0ZW5lcj1ub29wO3QucHJlcGVuZE9uY2VMaXN0ZW5lcj1ub29wO3QubGlzdGVuZXJzPWZ1bmN0aW9uKGUpe3JldHVybltdfTt0LmJpbmRpbmc9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QuY3dkPWZ1bmN0aW9uKCl7cmV0dXJuXCIvXCJ9O3QuY2hkaXI9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkXCIpfTt0LnVtYXNrPWZ1bmN0aW9uKCl7cmV0dXJuIDB9fX07dmFyIHQ9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyhyKXt2YXIgbj10W3JdO2lmKG4hPT11bmRlZmluZWQpe3JldHVybiBuLmV4cG9ydHN9dmFyIGk9dFtyXT17ZXhwb3J0czp7fX07dmFyIG89dHJ1ZTt0cnl7ZVtyXShpLGkuZXhwb3J0cyxfX25jY3dwY2tfcmVxdWlyZV9fKTtvPWZhbHNlfWZpbmFsbHl7aWYobylkZWxldGUgdFtyXX1yZXR1cm4gaS5leHBvcnRzfWlmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgcj1fX25jY3dwY2tfcmVxdWlyZV9fKDIyOSk7bW9kdWxlLmV4cG9ydHM9cn0pKCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/querystring-es3/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/querystring-es3/index.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){\"use strict\";var e={815:function(e){function hasOwnProperty(e,r){return Object.prototype.hasOwnProperty.call(e,r)}e.exports=function(e,n,t,o){n=n||\"&\";t=t||\"=\";var a={};if(typeof e!==\"string\"||e.length===0){return a}var i=/\\+/g;e=e.split(n);var u=1e3;if(o&&typeof o.maxKeys===\"number\"){u=o.maxKeys}var c=e.length;if(u>0&&c>u){c=u}for(var p=0;p<c;++p){var f=e[p].replace(i,\"%20\"),s=f.indexOf(t),_,l,y,d;if(s>=0){_=f.substr(0,s);l=f.substr(s+1)}else{_=f;l=\"\"}y=decodeURIComponent(_);d=decodeURIComponent(l);if(!hasOwnProperty(a,y)){a[y]=d}else if(r(a[y])){a[y].push(d)}else{a[y]=[a[y],d]}}return a};var r=Array.isArray||function(e){return Object.prototype.toString.call(e)===\"[object Array]\"}},577:function(e){var stringifyPrimitive=function(e){switch(typeof e){case\"string\":return e;case\"boolean\":return e?\"true\":\"false\";case\"number\":return isFinite(e)?e:\"\";default:return\"\"}};e.exports=function(e,t,o,a){t=t||\"&\";o=o||\"=\";if(e===null){e=undefined}if(typeof e===\"object\"){return map(n(e),(function(n){var a=encodeURIComponent(stringifyPrimitive(n))+o;if(r(e[n])){return map(e[n],(function(e){return a+encodeURIComponent(stringifyPrimitive(e))})).join(t)}else{return a+encodeURIComponent(stringifyPrimitive(e[n]))}})).join(t)}if(!a)return\"\";return encodeURIComponent(stringifyPrimitive(a))+o+encodeURIComponent(stringifyPrimitive(e))};var r=Array.isArray||function(e){return Object.prototype.toString.call(e)===\"[object Array]\"};function map(e,r){if(e.map)return e.map(r);var n=[];for(var t=0;t<e.length;t++){n.push(r(e[t],t))}return n}var n=Object.keys||function(e){var r=[];for(var n in e){if(Object.prototype.hasOwnProperty.call(e,n))r.push(n)}return r}}};var r={};function __nccwpck_require__(n){var t=r[n];if(t!==undefined){return t.exports}var o=r[n]={exports:{}};var a=true;try{e[n](o,o.exports,__nccwpck_require__);a=false}finally{if(a)delete r[n]}return o.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n={};!function(){var e=n;e.decode=e.parse=__nccwpck_require__(815);e.encode=e.stringify=__nccwpck_require__(577)}();module.exports=n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3F1ZXJ5c3RyaW5nLWVzMy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsWUFBWSxhQUFhLE9BQU8sZ0JBQWdCLDZCQUE2QixpREFBaUQsNEJBQTRCLFNBQVMsU0FBUyxTQUFTLHNDQUFzQyxTQUFTLFlBQVksYUFBYSxVQUFVLG1DQUFtQyxZQUFZLGVBQWUsYUFBYSxJQUFJLFlBQVksSUFBSSxLQUFLLG1EQUFtRCxTQUFTLGdCQUFnQixnQkFBZ0IsS0FBSyxJQUFJLEtBQUssd0JBQXdCLHdCQUF3Qix5QkFBeUIsT0FBTyxpQkFBaUIsYUFBYSxLQUFLLGVBQWUsVUFBVSxpQ0FBaUMsNkRBQTZELGlCQUFpQixtQ0FBbUMsaUJBQWlCLHNCQUFzQixzQ0FBc0MscUNBQXFDLG1CQUFtQiw0QkFBNEIsU0FBUyxTQUFTLGFBQWEsWUFBWSx3QkFBd0IsNkJBQTZCLGtEQUFrRCxZQUFZLDZCQUE2QixtREFBbUQsV0FBVyxLQUFLLHVEQUF1RCxXQUFXLGVBQWUsOEZBQThGLGlDQUFpQyw2REFBNkQsa0JBQWtCLHlCQUF5QixTQUFTLFlBQVksV0FBVyxLQUFLLGtCQUFrQixTQUFTLCtCQUErQixTQUFTLGdCQUFnQix1REFBdUQsWUFBWSxTQUFTLGdDQUFnQyxXQUFXLGtCQUFrQixpQkFBaUIsWUFBWSxZQUFZLFdBQVcsSUFBSSxzQ0FBc0MsUUFBUSxRQUFRLGlCQUFpQixpQkFBaUIsbUVBQW1FLFNBQVMsS0FBSyxTQUFTLFlBQVksUUFBUSwwQ0FBMEMsOENBQThDLEdBQUcsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcXVlcnlzdHJpbmctZXMzL2luZGV4LmpzPzI0MWYiXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGU9ezgxNTpmdW5jdGlvbihlKXtmdW5jdGlvbiBoYXNPd25Qcm9wZXJ0eShlLHIpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxyKX1lLmV4cG9ydHM9ZnVuY3Rpb24oZSxuLHQsbyl7bj1ufHxcIiZcIjt0PXR8fFwiPVwiO3ZhciBhPXt9O2lmKHR5cGVvZiBlIT09XCJzdHJpbmdcInx8ZS5sZW5ndGg9PT0wKXtyZXR1cm4gYX12YXIgaT0vXFwrL2c7ZT1lLnNwbGl0KG4pO3ZhciB1PTFlMztpZihvJiZ0eXBlb2Ygby5tYXhLZXlzPT09XCJudW1iZXJcIil7dT1vLm1heEtleXN9dmFyIGM9ZS5sZW5ndGg7aWYodT4wJiZjPnUpe2M9dX1mb3IodmFyIHA9MDtwPGM7KytwKXt2YXIgZj1lW3BdLnJlcGxhY2UoaSxcIiUyMFwiKSxzPWYuaW5kZXhPZih0KSxfLGwseSxkO2lmKHM+PTApe189Zi5zdWJzdHIoMCxzKTtsPWYuc3Vic3RyKHMrMSl9ZWxzZXtfPWY7bD1cIlwifXk9ZGVjb2RlVVJJQ29tcG9uZW50KF8pO2Q9ZGVjb2RlVVJJQ29tcG9uZW50KGwpO2lmKCFoYXNPd25Qcm9wZXJ0eShhLHkpKXthW3ldPWR9ZWxzZSBpZihyKGFbeV0pKXthW3ldLnB1c2goZCl9ZWxzZXthW3ldPVthW3ldLGRdfX1yZXR1cm4gYX07dmFyIHI9QXJyYXkuaXNBcnJheXx8ZnVuY3Rpb24oZSl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKT09PVwiW29iamVjdCBBcnJheV1cIn19LDU3NzpmdW5jdGlvbihlKXt2YXIgc3RyaW5naWZ5UHJpbWl0aXZlPWZ1bmN0aW9uKGUpe3N3aXRjaCh0eXBlb2YgZSl7Y2FzZVwic3RyaW5nXCI6cmV0dXJuIGU7Y2FzZVwiYm9vbGVhblwiOnJldHVybiBlP1widHJ1ZVwiOlwiZmFsc2VcIjtjYXNlXCJudW1iZXJcIjpyZXR1cm4gaXNGaW5pdGUoZSk/ZTpcIlwiO2RlZmF1bHQ6cmV0dXJuXCJcIn19O2UuZXhwb3J0cz1mdW5jdGlvbihlLHQsbyxhKXt0PXR8fFwiJlwiO289b3x8XCI9XCI7aWYoZT09PW51bGwpe2U9dW5kZWZpbmVkfWlmKHR5cGVvZiBlPT09XCJvYmplY3RcIil7cmV0dXJuIG1hcChuKGUpLChmdW5jdGlvbihuKXt2YXIgYT1lbmNvZGVVUklDb21wb25lbnQoc3RyaW5naWZ5UHJpbWl0aXZlKG4pKStvO2lmKHIoZVtuXSkpe3JldHVybiBtYXAoZVtuXSwoZnVuY3Rpb24oZSl7cmV0dXJuIGErZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShlKSl9KSkuam9pbih0KX1lbHNle3JldHVybiBhK2VuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUoZVtuXSkpfX0pKS5qb2luKHQpfWlmKCFhKXJldHVyblwiXCI7cmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUoYSkpK28rZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShlKSl9O3ZhciByPUFycmF5LmlzQXJyYXl8fGZ1bmN0aW9uKGUpe3JldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSk9PT1cIltvYmplY3QgQXJyYXldXCJ9O2Z1bmN0aW9uIG1hcChlLHIpe2lmKGUubWFwKXJldHVybiBlLm1hcChyKTt2YXIgbj1bXTtmb3IodmFyIHQ9MDt0PGUubGVuZ3RoO3QrKyl7bi5wdXNoKHIoZVt0XSx0KSl9cmV0dXJuIG59dmFyIG49T2JqZWN0LmtleXN8fGZ1bmN0aW9uKGUpe3ZhciByPVtdO2Zvcih2YXIgbiBpbiBlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxuKSlyLnB1c2gobil9cmV0dXJuIHJ9fX07dmFyIHI9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyhuKXt2YXIgdD1yW25dO2lmKHQhPT11bmRlZmluZWQpe3JldHVybiB0LmV4cG9ydHN9dmFyIG89cltuXT17ZXhwb3J0czp7fX07dmFyIGE9dHJ1ZTt0cnl7ZVtuXShvLG8uZXhwb3J0cyxfX25jY3dwY2tfcmVxdWlyZV9fKTthPWZhbHNlfWZpbmFsbHl7aWYoYSlkZWxldGUgcltuXX1yZXR1cm4gby5leHBvcnRzfWlmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgbj17fTshZnVuY3Rpb24oKXt2YXIgZT1uO2UuZGVjb2RlPWUucGFyc2U9X19uY2N3cGNrX3JlcXVpcmVfXyg4MTUpO2UuZW5jb2RlPWUuc3RyaW5naWZ5PV9fbmNjd3Bja19yZXF1aXJlX18oNTc3KX0oKTttb2R1bGUuZXhwb3J0cz1ufSkoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/querystring-es3/index.js\n"));

/***/ }),

/***/ "./node_modules/next/head.js":
/*!***********************************!*\
  !*** ./node_modules/next/head.js ***!
  \***********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./dist/shared/lib/head */ \"./node_modules/next/dist/shared/lib/head.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9oZWFkLmpzIiwibWFwcGluZ3MiOiJBQUFBLGlIQUFrRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9oZWFkLmpzPzg4NDkiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Rpc3Qvc2hhcmVkL2xpYi9oZWFkJylcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/head.js\n"));

/***/ }),

/***/ "./node_modules/react-property/lib/index.js":
/*!**************************************************!*\
  !*** ./node_modules/react-property/lib/index.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n// A reserved attribute.\n// It is handled by React separately and shouldn't be written to the DOM.\nvar RESERVED = 0; // A simple string attribute.\n// Attributes that aren't in the filter are presumed to have this type.\n\nvar STRING = 1; // A string attribute that accepts booleans in React. In HTML, these are called\n// \"enumerated\" attributes with \"true\" and \"false\" as possible values.\n// When true, it should be set to a \"true\" string.\n// When false, it should be set to a \"false\" string.\n\nvar BOOLEANISH_STRING = 2; // A real boolean attribute.\n// When true, it should be present (set either to an empty string or its name).\n// When false, it should be omitted.\n\nvar BOOLEAN = 3; // An attribute that can be used as a flag as well as with a value.\n// When true, it should be present (set either to an empty string or its name).\n// When false, it should be omitted.\n// For any other value, should be present with that value.\n\nvar OVERLOADED_BOOLEAN = 4; // An attribute that must be numeric or parse as a numeric.\n// When falsy, it should be removed.\n\nvar NUMERIC = 5; // An attribute that must be positive numeric or parse as a positive numeric.\n// When falsy, it should be removed.\n\nvar POSITIVE_NUMERIC = 6;\nfunction getPropertyInfo(name) {\n  return properties.hasOwnProperty(name) ? properties[name] : null;\n}\n\nfunction PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL, removeEmptyString) {\n  this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;\n  this.attributeName = attributeName;\n  this.attributeNamespace = attributeNamespace;\n  this.mustUseProperty = mustUseProperty;\n  this.propertyName = name;\n  this.type = type;\n  this.sanitizeURL = sanitizeURL;\n  this.removeEmptyString = removeEmptyString;\n} // When adding attributes to this list, be sure to also add them to\n// the `possibleStandardNames` module to ensure casing and incorrect\n// name warnings.\n\n\nvar properties = {}; // These props are reserved by React. They shouldn't be written to the DOM.\n\nvar reservedProps = ['children', 'dangerouslySetInnerHTML', // TODO: This prevents the assignment of defaultValue to regular\n// elements (not just inputs). Now that ReactDOMInput assigns to the\n// defaultValue property -- do we need this?\n'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'];\nreservedProps.forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty\n  name, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // A few React string attributes have a different name.\n// This is a mapping from React prop names to the attribute names.\n\n[['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      name = _ref2[0],\n      attributeName = _ref2[1];\n\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n  attributeName, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are \"enumerated\" HTML attributes that accept \"true\" and \"false\".\n// In React, we let users pass `true` and `false` even though technically\n// these aren't boolean attributes (they are coerced to strings).\n\n['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty\n  name.toLowerCase(), // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are \"enumerated\" SVG attributes that accept \"true\" and \"false\".\n// In React, we let users pass `true` and `false` even though technically\n// these aren't boolean attributes (they are coerced to strings).\n// Since these are SVG attributes, their attribute names are case-sensitive.\n\n['autoReverse', 'externalResourcesRequired', 'focusable', 'preserveAlpha'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty\n  name, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are HTML boolean attributes.\n\n['allowFullScreen', 'async', // Note: there is a special case that prevents it from being written to the DOM\n// on the client side because the browsers are inconsistent. Instead we call focus().\n'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'disablePictureInPicture', 'disableRemotePlayback', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless', // Microdata\n'itemScope'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty\n  name.toLowerCase(), // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are the few React props that we set as DOM properties\n// rather than attributes. These are all booleans.\n\n['checked', // Note: `option.selected` is not updated if `select.multiple` is\n// disabled with `removeAttribute`. We have special logic for handling this.\n'multiple', 'muted', 'selected' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty\n  name, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are HTML attributes that are \"overloaded booleans\": they behave like\n// booleans, but can also accept a string value.\n\n['capture', 'download' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty\n  name, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are HTML attributes that must be positive numbers.\n\n['cols', 'rows', 'size', 'span' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty\n  name, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are HTML attributes that must be numbers.\n\n['rowSpan', 'start'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty\n  name.toLowerCase(), // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n});\nvar CAMELIZE = /[\\-\\:]([a-z])/g;\n\nvar capitalize = function capitalize(token) {\n  return token[1].toUpperCase();\n}; // This is a list of all SVG attributes that need special casing, namespacing,\n// or boolean value assignment. Regular attributes that just accept strings\n// and have the same names are omitted, just like in the HTML attribute filter.\n// Some of these attributes can be hard to find. This list was created by\n// scraping the MDN documentation.\n\n\n['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(function (attributeName) {\n  var name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n  attributeName, null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // String SVG attributes with the xlink namespace.\n\n['xlink:actuate', 'xlink:arcrole', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(function (attributeName) {\n  var name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n  attributeName, 'http://www.w3.org/1999/xlink', false, // sanitizeURL\n  false);\n}); // String SVG attributes with the xml namespace.\n\n['xml:base', 'xml:lang', 'xml:space' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(function (attributeName) {\n  var name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n  attributeName, 'http://www.w3.org/XML/1998/namespace', false, // sanitizeURL\n  false);\n}); // These attribute exists both in HTML and SVG.\n// The attribute name is case-sensitive in SVG so we can't just use\n// the React name like we do for attributes that exist only in HTML.\n\n['tabIndex', 'crossOrigin'].forEach(function (attributeName) {\n  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty\n  attributeName.toLowerCase(), // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These attributes accept URLs. These must not allow javascript: URLS.\n// These will also need to accept Trusted Types object in the future.\n\nvar xlinkHref = 'xlinkHref';\nproperties[xlinkHref] = new PropertyInfoRecord('xlinkHref', STRING, false, // mustUseProperty\n'xlink:href', 'http://www.w3.org/1999/xlink', true, // sanitizeURL\nfalse);\n['src', 'href', 'action', 'formAction'].forEach(function (attributeName) {\n  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty\n  attributeName.toLowerCase(), // attributeName\n  null, // attributeNamespace\n  true, // sanitizeURL\n  true);\n});\n\nvar _require = __webpack_require__(/*! ../lib/possibleStandardNamesOptimized */ \"./node_modules/react-property/lib/possibleStandardNamesOptimized.js\"),\n    CAMELCASE = _require.CAMELCASE,\n    SAME = _require.SAME,\n    possibleStandardNamesOptimized = _require.possibleStandardNames;\n\nvar ATTRIBUTE_NAME_START_CHAR = \":A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\";\nvar ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + \"\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040\";\n/**\n * Checks whether a property name is a custom attribute.\n *\n * @see {@link https://github.com/facebook/react/blob/15-stable/src/renderers/dom/shared/HTMLDOMPropertyConfig.js#L23-L25}\n *\n * @param {string}\n * @return {boolean}\n */\n\nvar isCustomAttribute = RegExp.prototype.test.bind( // eslint-disable-next-line no-misleading-character-class\nnew RegExp('^(data|aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$'));\nvar possibleStandardNames = Object.keys(possibleStandardNamesOptimized).reduce(function (accumulator, standardName) {\n  var propName = possibleStandardNamesOptimized[standardName];\n\n  if (propName === SAME) {\n    accumulator[standardName] = standardName;\n  } else if (propName === CAMELCASE) {\n    accumulator[standardName.toLowerCase()] = standardName;\n  } else {\n    accumulator[standardName] = propName;\n  }\n\n  return accumulator;\n}, {});\n\nexports.BOOLEAN = BOOLEAN;\nexports.BOOLEANISH_STRING = BOOLEANISH_STRING;\nexports.NUMERIC = NUMERIC;\nexports.OVERLOADED_BOOLEAN = OVERLOADED_BOOLEAN;\nexports.POSITIVE_NUMERIC = POSITIVE_NUMERIC;\nexports.RESERVED = RESERVED;\nexports.STRING = STRING;\nexports.getPropertyInfo = getPropertyInfo;\nexports.isCustomAttribute = isCustomAttribute;\nexports.possibleStandardNames = possibleStandardNames;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-property/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/react-property/lib/possibleStandardNamesOptimized.js":
/*!***************************************************************************!*\
  !*** ./node_modules/react-property/lib/possibleStandardNamesOptimized.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("// An attribute in which the DOM/SVG standard name is the same as the React prop name (e.g., 'accept').\nvar SAME = 0;\nexports.SAME = SAME;\n\n// An attribute in which the React prop name is the camelcased version of the DOM/SVG standard name (e.g., 'acceptCharset').\nvar CAMELCASE = 1;\nexports.CAMELCASE = CAMELCASE;\n\nexports.possibleStandardNames = {\n  accept: 0,\n  acceptCharset: 1,\n  'accept-charset': 'acceptCharset',\n  accessKey: 1,\n  action: 0,\n  allowFullScreen: 1,\n  alt: 0,\n  as: 0,\n  async: 0,\n  autoCapitalize: 1,\n  autoComplete: 1,\n  autoCorrect: 1,\n  autoFocus: 1,\n  autoPlay: 1,\n  autoSave: 1,\n  capture: 0,\n  cellPadding: 1,\n  cellSpacing: 1,\n  challenge: 0,\n  charSet: 1,\n  checked: 0,\n  children: 0,\n  cite: 0,\n  class: 'className',\n  classID: 1,\n  className: 1,\n  cols: 0,\n  colSpan: 1,\n  content: 0,\n  contentEditable: 1,\n  contextMenu: 1,\n  controls: 0,\n  controlsList: 1,\n  coords: 0,\n  crossOrigin: 1,\n  dangerouslySetInnerHTML: 1,\n  data: 0,\n  dateTime: 1,\n  default: 0,\n  defaultChecked: 1,\n  defaultValue: 1,\n  defer: 0,\n  dir: 0,\n  disabled: 0,\n  disablePictureInPicture: 1,\n  disableRemotePlayback: 1,\n  download: 0,\n  draggable: 0,\n  encType: 1,\n  enterKeyHint: 1,\n  for: 'htmlFor',\n  form: 0,\n  formMethod: 1,\n  formAction: 1,\n  formEncType: 1,\n  formNoValidate: 1,\n  formTarget: 1,\n  frameBorder: 1,\n  headers: 0,\n  height: 0,\n  hidden: 0,\n  high: 0,\n  href: 0,\n  hrefLang: 1,\n  htmlFor: 1,\n  httpEquiv: 1,\n  'http-equiv': 'httpEquiv',\n  icon: 0,\n  id: 0,\n  innerHTML: 1,\n  inputMode: 1,\n  integrity: 0,\n  is: 0,\n  itemID: 1,\n  itemProp: 1,\n  itemRef: 1,\n  itemScope: 1,\n  itemType: 1,\n  keyParams: 1,\n  keyType: 1,\n  kind: 0,\n  label: 0,\n  lang: 0,\n  list: 0,\n  loop: 0,\n  low: 0,\n  manifest: 0,\n  marginWidth: 1,\n  marginHeight: 1,\n  max: 0,\n  maxLength: 1,\n  media: 0,\n  mediaGroup: 1,\n  method: 0,\n  min: 0,\n  minLength: 1,\n  multiple: 0,\n  muted: 0,\n  name: 0,\n  noModule: 1,\n  nonce: 0,\n  noValidate: 1,\n  open: 0,\n  optimum: 0,\n  pattern: 0,\n  placeholder: 0,\n  playsInline: 1,\n  poster: 0,\n  preload: 0,\n  profile: 0,\n  radioGroup: 1,\n  readOnly: 1,\n  referrerPolicy: 1,\n  rel: 0,\n  required: 0,\n  reversed: 0,\n  role: 0,\n  rows: 0,\n  rowSpan: 1,\n  sandbox: 0,\n  scope: 0,\n  scoped: 0,\n  scrolling: 0,\n  seamless: 0,\n  selected: 0,\n  shape: 0,\n  size: 0,\n  sizes: 0,\n  span: 0,\n  spellCheck: 1,\n  src: 0,\n  srcDoc: 1,\n  srcLang: 1,\n  srcSet: 1,\n  start: 0,\n  step: 0,\n  style: 0,\n  summary: 0,\n  tabIndex: 1,\n  target: 0,\n  title: 0,\n  type: 0,\n  useMap: 1,\n  value: 0,\n  width: 0,\n  wmode: 0,\n  wrap: 0,\n  about: 0,\n  accentHeight: 1,\n  'accent-height': 'accentHeight',\n  accumulate: 0,\n  additive: 0,\n  alignmentBaseline: 1,\n  'alignment-baseline': 'alignmentBaseline',\n  allowReorder: 1,\n  alphabetic: 0,\n  amplitude: 0,\n  arabicForm: 1,\n  'arabic-form': 'arabicForm',\n  ascent: 0,\n  attributeName: 1,\n  attributeType: 1,\n  autoReverse: 1,\n  azimuth: 0,\n  baseFrequency: 1,\n  baselineShift: 1,\n  'baseline-shift': 'baselineShift',\n  baseProfile: 1,\n  bbox: 0,\n  begin: 0,\n  bias: 0,\n  by: 0,\n  calcMode: 1,\n  capHeight: 1,\n  'cap-height': 'capHeight',\n  clip: 0,\n  clipPath: 1,\n  'clip-path': 'clipPath',\n  clipPathUnits: 1,\n  clipRule: 1,\n  'clip-rule': 'clipRule',\n  color: 0,\n  colorInterpolation: 1,\n  'color-interpolation': 'colorInterpolation',\n  colorInterpolationFilters: 1,\n  'color-interpolation-filters': 'colorInterpolationFilters',\n  colorProfile: 1,\n  'color-profile': 'colorProfile',\n  colorRendering: 1,\n  'color-rendering': 'colorRendering',\n  contentScriptType: 1,\n  contentStyleType: 1,\n  cursor: 0,\n  cx: 0,\n  cy: 0,\n  d: 0,\n  datatype: 0,\n  decelerate: 0,\n  descent: 0,\n  diffuseConstant: 1,\n  direction: 0,\n  display: 0,\n  divisor: 0,\n  dominantBaseline: 1,\n  'dominant-baseline': 'dominantBaseline',\n  dur: 0,\n  dx: 0,\n  dy: 0,\n  edgeMode: 1,\n  elevation: 0,\n  enableBackground: 1,\n  'enable-background': 'enableBackground',\n  end: 0,\n  exponent: 0,\n  externalResourcesRequired: 1,\n  fill: 0,\n  fillOpacity: 1,\n  'fill-opacity': 'fillOpacity',\n  fillRule: 1,\n  'fill-rule': 'fillRule',\n  filter: 0,\n  filterRes: 1,\n  filterUnits: 1,\n  floodOpacity: 1,\n  'flood-opacity': 'floodOpacity',\n  floodColor: 1,\n  'flood-color': 'floodColor',\n  focusable: 0,\n  fontFamily: 1,\n  'font-family': 'fontFamily',\n  fontSize: 1,\n  'font-size': 'fontSize',\n  fontSizeAdjust: 1,\n  'font-size-adjust': 'fontSizeAdjust',\n  fontStretch: 1,\n  'font-stretch': 'fontStretch',\n  fontStyle: 1,\n  'font-style': 'fontStyle',\n  fontVariant: 1,\n  'font-variant': 'fontVariant',\n  fontWeight: 1,\n  'font-weight': 'fontWeight',\n  format: 0,\n  from: 0,\n  fx: 0,\n  fy: 0,\n  g1: 0,\n  g2: 0,\n  glyphName: 1,\n  'glyph-name': 'glyphName',\n  glyphOrientationHorizontal: 1,\n  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',\n  glyphOrientationVertical: 1,\n  'glyph-orientation-vertical': 'glyphOrientationVertical',\n  glyphRef: 1,\n  gradientTransform: 1,\n  gradientUnits: 1,\n  hanging: 0,\n  horizAdvX: 1,\n  'horiz-adv-x': 'horizAdvX',\n  horizOriginX: 1,\n  'horiz-origin-x': 'horizOriginX',\n  ideographic: 0,\n  imageRendering: 1,\n  'image-rendering': 'imageRendering',\n  in2: 0,\n  in: 0,\n  inlist: 0,\n  intercept: 0,\n  k1: 0,\n  k2: 0,\n  k3: 0,\n  k4: 0,\n  k: 0,\n  kernelMatrix: 1,\n  kernelUnitLength: 1,\n  kerning: 0,\n  keyPoints: 1,\n  keySplines: 1,\n  keyTimes: 1,\n  lengthAdjust: 1,\n  letterSpacing: 1,\n  'letter-spacing': 'letterSpacing',\n  lightingColor: 1,\n  'lighting-color': 'lightingColor',\n  limitingConeAngle: 1,\n  local: 0,\n  markerEnd: 1,\n  'marker-end': 'markerEnd',\n  markerHeight: 1,\n  markerMid: 1,\n  'marker-mid': 'markerMid',\n  markerStart: 1,\n  'marker-start': 'markerStart',\n  markerUnits: 1,\n  markerWidth: 1,\n  mask: 0,\n  maskContentUnits: 1,\n  maskUnits: 1,\n  mathematical: 0,\n  mode: 0,\n  numOctaves: 1,\n  offset: 0,\n  opacity: 0,\n  operator: 0,\n  order: 0,\n  orient: 0,\n  orientation: 0,\n  origin: 0,\n  overflow: 0,\n  overlinePosition: 1,\n  'overline-position': 'overlinePosition',\n  overlineThickness: 1,\n  'overline-thickness': 'overlineThickness',\n  paintOrder: 1,\n  'paint-order': 'paintOrder',\n  panose1: 0,\n  'panose-1': 'panose1',\n  pathLength: 1,\n  patternContentUnits: 1,\n  patternTransform: 1,\n  patternUnits: 1,\n  pointerEvents: 1,\n  'pointer-events': 'pointerEvents',\n  points: 0,\n  pointsAtX: 1,\n  pointsAtY: 1,\n  pointsAtZ: 1,\n  prefix: 0,\n  preserveAlpha: 1,\n  preserveAspectRatio: 1,\n  primitiveUnits: 1,\n  property: 0,\n  r: 0,\n  radius: 0,\n  refX: 1,\n  refY: 1,\n  renderingIntent: 1,\n  'rendering-intent': 'renderingIntent',\n  repeatCount: 1,\n  repeatDur: 1,\n  requiredExtensions: 1,\n  requiredFeatures: 1,\n  resource: 0,\n  restart: 0,\n  result: 0,\n  results: 0,\n  rotate: 0,\n  rx: 0,\n  ry: 0,\n  scale: 0,\n  security: 0,\n  seed: 0,\n  shapeRendering: 1,\n  'shape-rendering': 'shapeRendering',\n  slope: 0,\n  spacing: 0,\n  specularConstant: 1,\n  specularExponent: 1,\n  speed: 0,\n  spreadMethod: 1,\n  startOffset: 1,\n  stdDeviation: 1,\n  stemh: 0,\n  stemv: 0,\n  stitchTiles: 1,\n  stopColor: 1,\n  'stop-color': 'stopColor',\n  stopOpacity: 1,\n  'stop-opacity': 'stopOpacity',\n  strikethroughPosition: 1,\n  'strikethrough-position': 'strikethroughPosition',\n  strikethroughThickness: 1,\n  'strikethrough-thickness': 'strikethroughThickness',\n  string: 0,\n  stroke: 0,\n  strokeDasharray: 1,\n  'stroke-dasharray': 'strokeDasharray',\n  strokeDashoffset: 1,\n  'stroke-dashoffset': 'strokeDashoffset',\n  strokeLinecap: 1,\n  'stroke-linecap': 'strokeLinecap',\n  strokeLinejoin: 1,\n  'stroke-linejoin': 'strokeLinejoin',\n  strokeMiterlimit: 1,\n  'stroke-miterlimit': 'strokeMiterlimit',\n  strokeWidth: 1,\n  'stroke-width': 'strokeWidth',\n  strokeOpacity: 1,\n  'stroke-opacity': 'strokeOpacity',\n  suppressContentEditableWarning: 1,\n  suppressHydrationWarning: 1,\n  surfaceScale: 1,\n  systemLanguage: 1,\n  tableValues: 1,\n  targetX: 1,\n  targetY: 1,\n  textAnchor: 1,\n  'text-anchor': 'textAnchor',\n  textDecoration: 1,\n  'text-decoration': 'textDecoration',\n  textLength: 1,\n  textRendering: 1,\n  'text-rendering': 'textRendering',\n  to: 0,\n  transform: 0,\n  typeof: 0,\n  u1: 0,\n  u2: 0,\n  underlinePosition: 1,\n  'underline-position': 'underlinePosition',\n  underlineThickness: 1,\n  'underline-thickness': 'underlineThickness',\n  unicode: 0,\n  unicodeBidi: 1,\n  'unicode-bidi': 'unicodeBidi',\n  unicodeRange: 1,\n  'unicode-range': 'unicodeRange',\n  unitsPerEm: 1,\n  'units-per-em': 'unitsPerEm',\n  unselectable: 0,\n  vAlphabetic: 1,\n  'v-alphabetic': 'vAlphabetic',\n  values: 0,\n  vectorEffect: 1,\n  'vector-effect': 'vectorEffect',\n  version: 0,\n  vertAdvY: 1,\n  'vert-adv-y': 'vertAdvY',\n  vertOriginX: 1,\n  'vert-origin-x': 'vertOriginX',\n  vertOriginY: 1,\n  'vert-origin-y': 'vertOriginY',\n  vHanging: 1,\n  'v-hanging': 'vHanging',\n  vIdeographic: 1,\n  'v-ideographic': 'vIdeographic',\n  viewBox: 1,\n  viewTarget: 1,\n  visibility: 0,\n  vMathematical: 1,\n  'v-mathematical': 'vMathematical',\n  vocab: 0,\n  widths: 0,\n  wordSpacing: 1,\n  'word-spacing': 'wordSpacing',\n  writingMode: 1,\n  'writing-mode': 'writingMode',\n  x1: 0,\n  x2: 0,\n  x: 0,\n  xChannelSelector: 1,\n  xHeight: 1,\n  'x-height': 'xHeight',\n  xlinkActuate: 1,\n  'xlink:actuate': 'xlinkActuate',\n  xlinkArcrole: 1,\n  'xlink:arcrole': 'xlinkArcrole',\n  xlinkHref: 1,\n  'xlink:href': 'xlinkHref',\n  xlinkRole: 1,\n  'xlink:role': 'xlinkRole',\n  xlinkShow: 1,\n  'xlink:show': 'xlinkShow',\n  xlinkTitle: 1,\n  'xlink:title': 'xlinkTitle',\n  xlinkType: 1,\n  'xlink:type': 'xlinkType',\n  xmlBase: 1,\n  'xml:base': 'xmlBase',\n  xmlLang: 1,\n  'xml:lang': 'xmlLang',\n  xmlns: 0,\n  'xml:space': 'xmlSpace',\n  xmlnsXlink: 1,\n  'xmlns:xlink': 'xmlnsXlink',\n  xmlSpace: 1,\n  y1: 0,\n  y2: 0,\n  y: 0,\n  yChannelSelector: 1,\n  z: 0,\n  zoomAndPan: 1\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-property/lib/possibleStandardNamesOptimized.js\n"));

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nvar didWarnAboutKeySpread = {};\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    {\n      if (hasOwnProperty.call(props, 'key')) {\n        var componentName = getComponentNameFromType(type);\n        var keys = Object.keys(props).filter(function (k) {\n          return k !== 'key';\n        });\n        var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n        if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n          var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n          error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n          didWarnAboutKeySpread[componentName + beforeExample] = true;\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSx1SkFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz81Nzc3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js":
/*!*************************************************************************!*\
  !*** ./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof __webpack_require__.g !== 'undefined' && __webpack_require__.g.Math === Math) {\r\n        return __webpack_require__.g;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (index);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js\n"));

/***/ }),

/***/ "./node_modules/style-to-js/cjs/index.js":
/*!***********************************************!*\
  !*** ./node_modules/style-to-js/cjs/index.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nvar style_to_object_1 = __importDefault(__webpack_require__(/*! style-to-object */ \"./node_modules/style-to-object/index.js\"));\nvar utilities_1 = __webpack_require__(/*! ./utilities */ \"./node_modules/style-to-js/cjs/utilities.js\");\nfunction StyleToJS(style, options) {\n    var output = {};\n    if (!style || typeof style !== 'string') {\n        return output;\n    }\n    (0, style_to_object_1[\"default\"])(style, function (property, value) {\n        if (property && value) {\n            output[(0, utilities_1.camelCase)(property, options)] = value;\n        }\n    });\n    return output;\n}\nexports[\"default\"] = StyleToJS;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtdG8tanMvY2pzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSxrQkFBa0I7QUFDbEIsd0NBQXdDLG1CQUFPLENBQUMsZ0VBQWlCO0FBQ2pFLGtCQUFrQixtQkFBTyxDQUFDLGdFQUFhO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0Esa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdHlsZS10by1qcy9janMvaW5kZXguanM/MjNlNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG52YXIgc3R5bGVfdG9fb2JqZWN0XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcInN0eWxlLXRvLW9iamVjdFwiKSk7XG52YXIgdXRpbGl0aWVzXzEgPSByZXF1aXJlKFwiLi91dGlsaXRpZXNcIik7XG5mdW5jdGlvbiBTdHlsZVRvSlMoc3R5bGUsIG9wdGlvbnMpIHtcbiAgICB2YXIgb3V0cHV0ID0ge307XG4gICAgaWYgKCFzdHlsZSB8fCB0eXBlb2Ygc3R5bGUgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBvdXRwdXQ7XG4gICAgfVxuICAgICgwLCBzdHlsZV90b19vYmplY3RfMVtcImRlZmF1bHRcIl0pKHN0eWxlLCBmdW5jdGlvbiAocHJvcGVydHksIHZhbHVlKSB7XG4gICAgICAgIGlmIChwcm9wZXJ0eSAmJiB2YWx1ZSkge1xuICAgICAgICAgICAgb3V0cHV0WygwLCB1dGlsaXRpZXNfMS5jYW1lbENhc2UpKHByb3BlcnR5LCBvcHRpb25zKV0gPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBvdXRwdXQ7XG59XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IFN0eWxlVG9KUztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/style-to-js/cjs/index.js\n"));

/***/ }),

/***/ "./node_modules/style-to-js/cjs/utilities.js":
/*!***************************************************!*\
  !*** ./node_modules/style-to-js/cjs/utilities.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nexports.__esModule = true;\nexports.camelCase = void 0;\nvar CUSTOM_PROPERTY_REGEX = /^--[a-zA-Z0-9-]+$/;\nvar HYPHEN_REGEX = /-([a-z])/g;\nvar NO_HYPHEN_REGEX = /^[^-]+$/;\nvar VENDOR_PREFIX_REGEX = /^-(webkit|moz|ms|o|khtml)-/;\nvar MS_VENDOR_PREFIX_REGEX = /^-(ms)-/;\nvar skipCamelCase = function (property) {\n    return !property ||\n        NO_HYPHEN_REGEX.test(property) ||\n        CUSTOM_PROPERTY_REGEX.test(property);\n};\nvar capitalize = function (match, character) {\n    return character.toUpperCase();\n};\nvar trimHyphen = function (match, prefix) { return \"\".concat(prefix, \"-\"); };\nvar camelCase = function (property, options) {\n    if (options === void 0) { options = {}; }\n    if (skipCamelCase(property)) {\n        return property;\n    }\n    property = property.toLowerCase();\n    if (options.reactCompat) {\n        property = property.replace(MS_VENDOR_PREFIX_REGEX, trimHyphen);\n    }\n    else {\n        property = property.replace(VENDOR_PREFIX_REGEX, trimHyphen);\n    }\n    return property.replace(HYPHEN_REGEX, capitalize);\n};\nexports.camelCase = camelCase;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtdG8tanMvY2pzL3V0aWxpdGllcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQjtBQUNsQixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEM7QUFDNUM7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdHlsZS10by1qcy9janMvdXRpbGl0aWVzLmpzPzc1YWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5jYW1lbENhc2UgPSB2b2lkIDA7XG52YXIgQ1VTVE9NX1BST1BFUlRZX1JFR0VYID0gL14tLVthLXpBLVowLTktXSskLztcbnZhciBIWVBIRU5fUkVHRVggPSAvLShbYS16XSkvZztcbnZhciBOT19IWVBIRU5fUkVHRVggPSAvXlteLV0rJC87XG52YXIgVkVORE9SX1BSRUZJWF9SRUdFWCA9IC9eLSh3ZWJraXR8bW96fG1zfG98a2h0bWwpLS87XG52YXIgTVNfVkVORE9SX1BSRUZJWF9SRUdFWCA9IC9eLShtcyktLztcbnZhciBza2lwQ2FtZWxDYXNlID0gZnVuY3Rpb24gKHByb3BlcnR5KSB7XG4gICAgcmV0dXJuICFwcm9wZXJ0eSB8fFxuICAgICAgICBOT19IWVBIRU5fUkVHRVgudGVzdChwcm9wZXJ0eSkgfHxcbiAgICAgICAgQ1VTVE9NX1BST1BFUlRZX1JFR0VYLnRlc3QocHJvcGVydHkpO1xufTtcbnZhciBjYXBpdGFsaXplID0gZnVuY3Rpb24gKG1hdGNoLCBjaGFyYWN0ZXIpIHtcbiAgICByZXR1cm4gY2hhcmFjdGVyLnRvVXBwZXJDYXNlKCk7XG59O1xudmFyIHRyaW1IeXBoZW4gPSBmdW5jdGlvbiAobWF0Y2gsIHByZWZpeCkgeyByZXR1cm4gXCJcIi5jb25jYXQocHJlZml4LCBcIi1cIik7IH07XG52YXIgY2FtZWxDYXNlID0gZnVuY3Rpb24gKHByb3BlcnR5LCBvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkgeyBvcHRpb25zID0ge307IH1cbiAgICBpZiAoc2tpcENhbWVsQ2FzZShwcm9wZXJ0eSkpIHtcbiAgICAgICAgcmV0dXJuIHByb3BlcnR5O1xuICAgIH1cbiAgICBwcm9wZXJ0eSA9IHByb3BlcnR5LnRvTG93ZXJDYXNlKCk7XG4gICAgaWYgKG9wdGlvbnMucmVhY3RDb21wYXQpIHtcbiAgICAgICAgcHJvcGVydHkgPSBwcm9wZXJ0eS5yZXBsYWNlKE1TX1ZFTkRPUl9QUkVGSVhfUkVHRVgsIHRyaW1IeXBoZW4pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcHJvcGVydHkgPSBwcm9wZXJ0eS5yZXBsYWNlKFZFTkRPUl9QUkVGSVhfUkVHRVgsIHRyaW1IeXBoZW4pO1xuICAgIH1cbiAgICByZXR1cm4gcHJvcGVydHkucmVwbGFjZShIWVBIRU5fUkVHRVgsIGNhcGl0YWxpemUpO1xufTtcbmV4cG9ydHMuY2FtZWxDYXNlID0gY2FtZWxDYXNlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/style-to-js/cjs/utilities.js\n"));

/***/ }),

/***/ "./node_modules/style-to-object/index.js":
/*!***********************************************!*\
  !*** ./node_modules/style-to-object/index.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var parse = __webpack_require__(/*! inline-style-parser */ \"./node_modules/inline-style-parser/index.js\");\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports[\"default\"] = StyleToObject; // ESM support\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtdG8tb2JqZWN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBLFlBQVksbUJBQU8sQ0FBQyx3RUFBcUI7O0FBRXpDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCLGtDQUFrQztBQUNsQztBQUNBLFlBQVksYUFBYTtBQUN6QixZQUFZLGFBQWE7QUFDekIsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDZDQUE2QyxTQUFTO0FBQ3REO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTTtBQUNOLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLHlCQUFzQixrQkFBa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3N0eWxlLXRvLW9iamVjdC9pbmRleC5qcz9mMWUwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBwYXJzZSA9IHJlcXVpcmUoJ2lubGluZS1zdHlsZS1wYXJzZXInKTtcblxuLyoqXG4gKiBQYXJzZXMgaW5saW5lIHN0eWxlIHRvIG9iamVjdC5cbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gcmV0dXJucyB7ICdsaW5lLWhlaWdodCc6ICc0MicgfVxuICogU3R5bGVUb09iamVjdCgnbGluZS1oZWlnaHQ6IDQyOycpO1xuICpcbiAqIEBwYXJhbSAge1N0cmluZ30gICAgICBzdHlsZSAgICAgIC0gVGhlIGlubGluZSBzdHlsZS5cbiAqIEBwYXJhbSAge0Z1bmN0aW9ufSAgICBbaXRlcmF0b3JdIC0gVGhlIGl0ZXJhdG9yIGZ1bmN0aW9uLlxuICogQHJldHVybiB7bnVsbHxPYmplY3R9XG4gKi9cbmZ1bmN0aW9uIFN0eWxlVG9PYmplY3Qoc3R5bGUsIGl0ZXJhdG9yKSB7XG4gIHZhciBvdXRwdXQgPSBudWxsO1xuICBpZiAoIXN0eWxlIHx8IHR5cGVvZiBzdHlsZSAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gb3V0cHV0O1xuICB9XG5cbiAgdmFyIGRlY2xhcmF0aW9uO1xuICB2YXIgZGVjbGFyYXRpb25zID0gcGFyc2Uoc3R5bGUpO1xuICB2YXIgaGFzSXRlcmF0b3IgPSB0eXBlb2YgaXRlcmF0b3IgPT09ICdmdW5jdGlvbic7XG4gIHZhciBwcm9wZXJ0eTtcbiAgdmFyIHZhbHVlO1xuXG4gIGZvciAodmFyIGkgPSAwLCBsZW4gPSBkZWNsYXJhdGlvbnMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICBkZWNsYXJhdGlvbiA9IGRlY2xhcmF0aW9uc1tpXTtcbiAgICBwcm9wZXJ0eSA9IGRlY2xhcmF0aW9uLnByb3BlcnR5O1xuICAgIHZhbHVlID0gZGVjbGFyYXRpb24udmFsdWU7XG5cbiAgICBpZiAoaGFzSXRlcmF0b3IpIHtcbiAgICAgIGl0ZXJhdG9yKHByb3BlcnR5LCB2YWx1ZSwgZGVjbGFyYXRpb24pO1xuICAgIH0gZWxzZSBpZiAodmFsdWUpIHtcbiAgICAgIG91dHB1dCB8fCAob3V0cHV0ID0ge30pO1xuICAgICAgb3V0cHV0W3Byb3BlcnR5XSA9IHZhbHVlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBvdXRwdXQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gU3R5bGVUb09iamVjdDtcbm1vZHVsZS5leHBvcnRzLmRlZmF1bHQgPSBTdHlsZVRvT2JqZWN0OyAvLyBFU00gc3VwcG9ydFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/style-to-object/index.js\n"));

/***/ }),

/***/ "./node_modules/ua-parser-js/src/ua-parser.js":
/*!****************************************************!*\
  !*** ./node_modules/ua-parser-js/src/ua-parser.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("var __WEBPACK_AMD_DEFINE_RESULT__;/////////////////////////////////////////////////////////////////////////////////\n/* UAParser.js v1.0.40\n   Copyright © 2012-2024 Faisal Salman <f@faisalman.com>\n   MIT License *//*\n   Detect Browser, Engine, OS, CPU, and Device type/model from User-Agent data.\n   Supports browser & node.js environment. \n   Demo   : https://faisalman.github.io/ua-parser-js\n   Source : https://github.com/faisalman/ua-parser-js */\n/////////////////////////////////////////////////////////////////////////////////\n\n(function (window, undefined) {\n\n    'use strict';\n\n    //////////////\n    // Constants\n    /////////////\n\n\n    var LIBVERSION  = '1.0.40',\n        EMPTY       = '',\n        UNKNOWN     = '?',\n        FUNC_TYPE   = 'function',\n        UNDEF_TYPE  = 'undefined',\n        OBJ_TYPE    = 'object',\n        STR_TYPE    = 'string',\n        MAJOR       = 'major',\n        MODEL       = 'model',\n        NAME        = 'name',\n        TYPE        = 'type',\n        VENDOR      = 'vendor',\n        VERSION     = 'version',\n        ARCHITECTURE= 'architecture',\n        CONSOLE     = 'console',\n        MOBILE      = 'mobile',\n        TABLET      = 'tablet',\n        SMARTTV     = 'smarttv',\n        WEARABLE    = 'wearable',\n        EMBEDDED    = 'embedded',\n        UA_MAX_LENGTH = 500;\n\n    var AMAZON  = 'Amazon',\n        APPLE   = 'Apple',\n        ASUS    = 'ASUS',\n        BLACKBERRY = 'BlackBerry',\n        BROWSER = 'Browser',\n        CHROME  = 'Chrome',\n        EDGE    = 'Edge',\n        FIREFOX = 'Firefox',\n        GOOGLE  = 'Google',\n        HUAWEI  = 'Huawei',\n        LG      = 'LG',\n        MICROSOFT = 'Microsoft',\n        MOTOROLA  = 'Motorola',\n        OPERA   = 'Opera',\n        SAMSUNG = 'Samsung',\n        SHARP   = 'Sharp',\n        SONY    = 'Sony',\n        XIAOMI  = 'Xiaomi',\n        ZEBRA   = 'Zebra',\n        FACEBOOK    = 'Facebook',\n        CHROMIUM_OS = 'Chromium OS',\n        MAC_OS  = 'Mac OS',\n        SUFFIX_BROWSER = ' Browser';\n\n    ///////////\n    // Helper\n    //////////\n\n    var extend = function (regexes, extensions) {\n            var mergedRegexes = {};\n            for (var i in regexes) {\n                if (extensions[i] && extensions[i].length % 2 === 0) {\n                    mergedRegexes[i] = extensions[i].concat(regexes[i]);\n                } else {\n                    mergedRegexes[i] = regexes[i];\n                }\n            }\n            return mergedRegexes;\n        },\n        enumerize = function (arr) {\n            var enums = {};\n            for (var i=0; i<arr.length; i++) {\n                enums[arr[i].toUpperCase()] = arr[i];\n            }\n            return enums;\n        },\n        has = function (str1, str2) {\n            return typeof str1 === STR_TYPE ? lowerize(str2).indexOf(lowerize(str1)) !== -1 : false;\n        },\n        lowerize = function (str) {\n            return str.toLowerCase();\n        },\n        majorize = function (version) {\n            return typeof(version) === STR_TYPE ? version.replace(/[^\\d\\.]/g, EMPTY).split('.')[0] : undefined;\n        },\n        trim = function (str, len) {\n            if (typeof(str) === STR_TYPE) {\n                str = str.replace(/^\\s\\s*/, EMPTY);\n                return typeof(len) === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);\n            }\n    };\n\n    ///////////////\n    // Map helper\n    //////////////\n\n    var rgxMapper = function (ua, arrays) {\n\n            var i = 0, j, k, p, q, matches, match;\n\n            // loop through all regexes maps\n            while (i < arrays.length && !matches) {\n\n                var regex = arrays[i],       // even sequence (0,2,4,..)\n                    props = arrays[i + 1];   // odd sequence (1,3,5,..)\n                j = k = 0;\n\n                // try matching uastring with regexes\n                while (j < regex.length && !matches) {\n\n                    if (!regex[j]) { break; }\n                    matches = regex[j++].exec(ua);\n\n                    if (!!matches) {\n                        for (p = 0; p < props.length; p++) {\n                            match = matches[++k];\n                            q = props[p];\n                            // check if given property is actually array\n                            if (typeof q === OBJ_TYPE && q.length > 0) {\n                                if (q.length === 2) {\n                                    if (typeof q[1] == FUNC_TYPE) {\n                                        // assign modified match\n                                        this[q[0]] = q[1].call(this, match);\n                                    } else {\n                                        // assign given value, ignore regex match\n                                        this[q[0]] = q[1];\n                                    }\n                                } else if (q.length === 3) {\n                                    // check whether function or regex\n                                    if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                                        // call function (usually string mapper)\n                                        this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                                    } else {\n                                        // sanitize match using given regex\n                                        this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                                    }\n                                } else if (q.length === 4) {\n                                        this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                                }\n                            } else {\n                                this[q] = match ? match : undefined;\n                            }\n                        }\n                    }\n                }\n                i += 2;\n            }\n        },\n\n        strMapper = function (str, map) {\n\n            for (var i in map) {\n                // check if current value is array\n                if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {\n                    for (var j = 0; j < map[i].length; j++) {\n                        if (has(map[i][j], str)) {\n                            return (i === UNKNOWN) ? undefined : i;\n                        }\n                    }\n                } else if (has(map[i], str)) {\n                    return (i === UNKNOWN) ? undefined : i;\n                }\n            }\n            return map.hasOwnProperty('*') ? map['*'] : str;\n    };\n\n    ///////////////\n    // String map\n    //////////////\n\n    // Safari < 3.0\n    var oldSafariMap = {\n            '1.0'   : '/8',\n            '1.2'   : '/1',\n            '1.3'   : '/3',\n            '2.0'   : '/412',\n            '2.0.2' : '/416',\n            '2.0.3' : '/417',\n            '2.0.4' : '/419',\n            '?'     : '/'\n        },\n        windowsVersionMap = {\n            'ME'        : '4.90',\n            'NT 3.11'   : 'NT3.51',\n            'NT 4.0'    : 'NT4.0',\n            '2000'      : 'NT 5.0',\n            'XP'        : ['NT 5.1', 'NT 5.2'],\n            'Vista'     : 'NT 6.0',\n            '7'         : 'NT 6.1',\n            '8'         : 'NT 6.2',\n            '8.1'       : 'NT 6.3',\n            '10'        : ['NT 6.4', 'NT 10.0'],\n            'RT'        : 'ARM'\n    };\n\n    //////////////\n    // Regex map\n    /////////////\n\n    var regexes = {\n\n        browser : [[\n\n            /\\b(?:crmo|crios)\\/([\\w\\.]+)/i                                      // Chrome for Android/iOS\n            ], [VERSION, [NAME, 'Chrome']], [\n            /edg(?:e|ios|a)?\\/([\\w\\.]+)/i                                       // Microsoft Edge\n            ], [VERSION, [NAME, 'Edge']], [\n\n            // Presto based\n            /(opera mini)\\/([-\\w\\.]+)/i,                                        // Opera Mini\n            /(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,                 // Opera Mobi/Tablet\n            /(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i                           // Opera\n            ], [NAME, VERSION], [\n            /opios[\\/ ]+([\\w\\.]+)/i                                             // Opera mini on iphone >= 8.0\n            ], [VERSION, [NAME, OPERA+' Mini']], [\n            /\\bop(?:rg)?x\\/([\\w\\.]+)/i                                          // Opera GX\n            ], [VERSION, [NAME, OPERA+' GX']], [\n            /\\bopr\\/([\\w\\.]+)/i                                                 // Opera Webkit\n            ], [VERSION, [NAME, OPERA]], [\n\n            // Mixed\n            /\\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\\/ ]?([\\w\\.]+)/i            // Baidu\n            ], [VERSION, [NAME, 'Baidu']], [\n            /\\b(?:mxbrowser|mxios|myie2)\\/?([-\\w\\.]*)\\b/i                       // Maxthon\n            ], [VERSION, [NAME, 'Maxthon']], [\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(lunascape|maxthon|netfront|jasmine|blazer|sleipnir)[\\/ ]?([\\w\\.]*)/i,      \n                                                                                // Lunascape/Maxthon/Netfront/Jasmine/Blazer/Sleipnir\n            // Trident based\n            /(avant|iemobile|slim(?:browser|boat|jet))[\\/ ]?([\\d\\.]*)/i,        // Avant/IEMobile/SlimBrowser/SlimBoat/Slimjet\n            /(?:ms|\\()(ie) ([\\w\\.]+)/i,                                         // Internet Explorer\n\n            // Blink/Webkit/KHTML based                                         // Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon\n            /(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|duckduckgo|klar|helio|(?=comodo_)?dragon)\\/([-\\w\\.]+)/i,\n                                                                                // Rekonq/Puffin/Brave/Whale/QQBrowserLite/QQ//Vivaldi/DuckDuckGo/Klar/Helio/Dragon\n            /(heytap|ovi|115)browser\\/([\\d\\.]+)/i,                              // HeyTap/Ovi/115\n            /(weibo)__([\\d\\.]+)/i                                               // Weibo\n            ], [NAME, VERSION], [\n            /quark(?:pc)?\\/([-\\w\\.]+)/i                                         // Quark\n            ], [VERSION, [NAME, 'Quark']], [\n            /\\bddg\\/([\\w\\.]+)/i                                                 // DuckDuckGo\n            ], [VERSION, [NAME, 'DuckDuckGo']], [\n            /(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i                 // UCBrowser\n            ], [VERSION, [NAME, 'UC'+BROWSER]], [\n            /microm.+\\bqbcore\\/([\\w\\.]+)/i,                                     // WeChat Desktop for Windows Built-in Browser\n            /\\bqbcore\\/([\\w\\.]+).+microm/i,\n            /micromessenger\\/([\\w\\.]+)/i                                        // WeChat\n            ], [VERSION, [NAME, 'WeChat']], [\n            /konqueror\\/([\\w\\.]+)/i                                             // Konqueror\n            ], [VERSION, [NAME, 'Konqueror']], [\n            /trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i                       // IE11\n            ], [VERSION, [NAME, 'IE']], [\n            /ya(?:search)?browser\\/([\\w\\.]+)/i                                  // Yandex\n            ], [VERSION, [NAME, 'Yandex']], [\n            /slbrowser\\/([\\w\\.]+)/i                                             // Smart Lenovo Browser\n            ], [VERSION, [NAME, 'Smart Lenovo '+BROWSER]], [\n            /(avast|avg)\\/([\\w\\.]+)/i                                           // Avast/AVG Secure Browser\n            ], [[NAME, /(.+)/, '$1 Secure '+BROWSER], VERSION], [\n            /\\bfocus\\/([\\w\\.]+)/i                                               // Firefox Focus\n            ], [VERSION, [NAME, FIREFOX+' Focus']], [\n            /\\bopt\\/([\\w\\.]+)/i                                                 // Opera Touch\n            ], [VERSION, [NAME, OPERA+' Touch']], [\n            /coc_coc\\w+\\/([\\w\\.]+)/i                                            // Coc Coc Browser\n            ], [VERSION, [NAME, 'Coc Coc']], [\n            /dolfin\\/([\\w\\.]+)/i                                                // Dolphin\n            ], [VERSION, [NAME, 'Dolphin']], [\n            /coast\\/([\\w\\.]+)/i                                                 // Opera Coast\n            ], [VERSION, [NAME, OPERA+' Coast']], [\n            /miuibrowser\\/([\\w\\.]+)/i                                           // MIUI Browser\n            ], [VERSION, [NAME, 'MIUI' + SUFFIX_BROWSER]], [\n            /fxios\\/([\\w\\.-]+)/i                                                // Firefox for iOS\n            ], [VERSION, [NAME, FIREFOX]], [\n            /\\bqihoobrowser\\/?([\\w\\.]*)/i                                       // 360\n            ], [VERSION, [NAME, '360']], [\n            /\\b(qq)\\/([\\w\\.]+)/i                                                // QQ\n            ], [[NAME, /(.+)/, '$1Browser'], VERSION], [\n            /(oculus|sailfish|huawei|vivo|pico)browser\\/([\\w\\.]+)/i\n            ], [[NAME, /(.+)/, '$1' + SUFFIX_BROWSER], VERSION], [              // Oculus/Sailfish/HuaweiBrowser/VivoBrowser/PicoBrowser\n            /samsungbrowser\\/([\\w\\.]+)/i                                        // Samsung Internet\n            ], [VERSION, [NAME, SAMSUNG + ' Internet']], [\n            /metasr[\\/ ]?([\\d\\.]+)/i                                            // Sogou Explorer\n            ], [VERSION, [NAME, 'Sogou Explorer']], [\n            /(sogou)mo\\w+\\/([\\d\\.]+)/i                                          // Sogou Mobile\n            ], [[NAME, 'Sogou Mobile'], VERSION], [\n            /(electron)\\/([\\w\\.]+) safari/i,                                    // Electron-based App\n            /(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,                   // Tesla\n            /m?(qqbrowser|2345(?=browser|chrome|explorer))\\w*[\\/ ]?v?([\\w\\.]+)/i   // QQ/2345\n            ], [NAME, VERSION], [\n            /(lbbrowser|rekonq)/i,                                              // LieBao Browser/Rekonq\n            /\\[(linkedin)app\\]/i                                                // LinkedIn App for iOS & Android\n            ], [NAME], [\n            /ome\\/([\\w\\.]+) \\w* ?(iron) saf/i,                                  // Iron\n            /ome\\/([\\w\\.]+).+qihu (360)[es]e/i                                  // 360\n            ], [VERSION, NAME], [\n\n            // WebView\n            /((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i       // Facebook App for iOS & Android\n            ], [[NAME, FACEBOOK], VERSION], [\n            /(Klarna)\\/([\\w\\.]+)/i,                                             // Klarna Shopping Browser for iOS & Android\n            /(kakao(?:talk|story))[\\/ ]([\\w\\.]+)/i,                             // Kakao App\n            /(naver)\\(.*?(\\d+\\.[\\w\\.]+).*\\)/i,                                  // Naver InApp\n            /safari (line)\\/([\\w\\.]+)/i,                                        // Line App for iOS\n            /\\b(line)\\/([\\w\\.]+)\\/iab/i,                                        // Line App for Android\n            /(alipay)client\\/([\\w\\.]+)/i,                                       // Alipay\n            /(twitter)(?:and| f.+e\\/([\\w\\.]+))/i,                               // Twitter\n            /(chromium|instagram|snapchat)[\\/ ]([-\\w\\.]+)/i                     // Chromium/Instagram/Snapchat\n            ], [NAME, VERSION], [\n            /\\bgsa\\/([\\w\\.]+) .*safari\\//i                                      // Google Search Appliance on iOS\n            ], [VERSION, [NAME, 'GSA']], [\n            /musical_ly(?:.+app_?version\\/|_)([\\w\\.]+)/i                        // TikTok\n            ], [VERSION, [NAME, 'TikTok']], [\n\n            /headlesschrome(?:\\/([\\w\\.]+)| )/i                                  // Chrome Headless\n            ], [VERSION, [NAME, CHROME+' Headless']], [\n\n            / wv\\).+(chrome)\\/([\\w\\.]+)/i                                       // Chrome WebView\n            ], [[NAME, CHROME+' WebView'], VERSION], [\n\n            /droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i           // Android Browser\n            ], [VERSION, [NAME, 'Android '+BROWSER]], [\n\n            /(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i       // Chrome/OmniWeb/Arora/Tizen/Nokia\n            ], [NAME, VERSION], [\n\n            /version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i                      // Mobile Safari\n            ], [VERSION, [NAME, 'Mobile Safari']], [\n            /version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i                // Safari & Safari Mobile\n            ], [VERSION, NAME], [\n            /webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i                      // Safari < 3.0\n            ], [NAME, [VERSION, strMapper, oldSafariMap]], [\n\n            /(webkit|khtml)\\/([\\w\\.]+)/i\n            ], [NAME, VERSION], [\n\n            // Gecko based\n            /(navigator|netscape\\d?)\\/([-\\w\\.]+)/i                              // Netscape\n            ], [[NAME, 'Netscape'], VERSION], [\n            /(wolvic|librewolf)\\/([\\w\\.]+)/i                                    // Wolvic/LibreWolf\n            ], [NAME, VERSION], [\n            /mobile vr; rv:([\\w\\.]+)\\).+firefox/i                               // Firefox Reality\n            ], [VERSION, [NAME, FIREFOX+' Reality']], [\n            /ekiohf.+(flow)\\/([\\w\\.]+)/i,                                       // Flow\n            /(swiftfox)/i,                                                      // Swiftfox\n            /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror)[\\/ ]?([\\w\\.\\+]+)/i,\n                                                                                // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror\n            /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,\n                                                                                // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n            /(firefox)\\/([\\w\\.]+)/i,                                            // Other Firefox-based\n            /(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,                         // Mozilla\n\n            // Other\n            /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,\n                                                                                // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Obigo/Mosaic/Go/ICE/UP.Browser\n            /(links) \\(([\\w\\.]+)/i                                              // Links\n            ], [NAME, [VERSION, /_/g, '.']], [\n            \n            /(cobalt)\\/([\\w\\.]+)/i                                              // Cobalt\n            ], [NAME, [VERSION, /master.|lts./, \"\"]]\n        ],\n\n        cpu : [[\n\n            /(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i                     // AMD64 (x64)\n            ], [[ARCHITECTURE, 'amd64']], [\n\n            /(ia32(?=;))/i                                                      // IA32 (quicktime)\n            ], [[ARCHITECTURE, lowerize]], [\n\n            /((?:i[346]|x)86)[;\\)]/i                                            // IA32 (x86)\n            ], [[ARCHITECTURE, 'ia32']], [\n\n            /\\b(aarch64|arm(v?8e?l?|_?64))\\b/i                                 // ARM64\n            ], [[ARCHITECTURE, 'arm64']], [\n\n            /\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i                                   // ARMHF\n            ], [[ARCHITECTURE, 'armhf']], [\n\n            // PocketPC mistakenly identified as PowerPC\n            /windows (ce|mobile); ppc;/i\n            ], [[ARCHITECTURE, 'arm']], [\n\n            /((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i                            // PowerPC\n            ], [[ARCHITECTURE, /ower/, EMPTY, lowerize]], [\n\n            /(sun4\\w)[;\\)]/i                                                    // SPARC\n            ], [[ARCHITECTURE, 'sparc']], [\n\n            /((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i\n                                                                                // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC\n            ], [[ARCHITECTURE, lowerize]]\n        ],\n\n        device : [[\n\n            //////////////////////////\n            // MOBILES & TABLETS\n            /////////////////////////\n\n            // Samsung\n            /\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, TABLET]], [\n            /\\b((?:s[cgp]h|gt|sm)-(?![lr])\\w+|sc[g-]?[\\d]+a?|galaxy nexus)/i,\n            /samsung[- ]((?!sm-[lr])[-\\w]+)/i,\n            /sec-(sgh\\w+)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, MOBILE]], [\n\n            // Apple\n            /(?:\\/|\\()(ip(?:hone|od)[\\w, ]*)(?:\\/|;)/i                          // iPod/iPhone\n            ], [MODEL, [VENDOR, APPLE], [TYPE, MOBILE]], [\n            /\\((ipad);[-\\w\\),; ]+apple/i,                                       // iPad\n            /applecoremedia\\/[\\w\\.]+ \\((ipad)/i,\n            /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i\n            ], [MODEL, [VENDOR, APPLE], [TYPE, TABLET]], [\n            /(macintosh);/i\n            ], [MODEL, [VENDOR, APPLE]], [\n\n            // Sharp\n            /\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i\n            ], [MODEL, [VENDOR, SHARP], [TYPE, MOBILE]], [\n\n            // Honor\n            /(?:honor)([-\\w ]+)[;\\)]/i\n            ], [MODEL, [VENDOR, 'Honor'], [TYPE, MOBILE]], [\n\n            // Huawei\n            /\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, TABLET]], [\n            /(?:huawei)([-\\w ]+)[;\\)]/i,\n            /\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, MOBILE]], [\n\n            // Xiaomi\n            /\\b(poco[\\w ]+|m2\\d{3}j\\d\\d[a-z]{2})(?: bui|\\))/i,                  // Xiaomi POCO\n            /\\b; (\\w+) build\\/hm\\1/i,                                           // Xiaomi Hongmi 'numeric' models\n            /\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,                             // Xiaomi Hongmi\n            /\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,                   // Xiaomi Redmi\n            /oid[^\\)]+; (m?[12][0-389][01]\\w{3,6}[c-y])( bui|; wv|\\))/i,        // Xiaomi Redmi 'numeric' models\n            /\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite|pro)?)(?: bui|\\))/i // Xiaomi Mi\n            ], [[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, MOBILE]], [\n            /oid[^\\)]+; (2\\d{4}(283|rpbf)[cgl])( bui|\\))/i,                     // Redmi Pad\n            /\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i                        // Mi Pad tablets\n            ],[[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, TABLET]], [\n\n            // OPPO\n            /; (\\w+) bui.+ oppo/i,\n            /\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i\n            ], [MODEL, [VENDOR, 'OPPO'], [TYPE, MOBILE]], [\n            /\\b(opd2\\d{3}a?) bui/i\n            ], [MODEL, [VENDOR, 'OPPO'], [TYPE, TABLET]], [\n\n            // Vivo\n            /vivo (\\w+)(?: bui|\\))/i,\n            /\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i\n            ], [MODEL, [VENDOR, 'Vivo'], [TYPE, MOBILE]], [\n\n            // Realme\n            /\\b(rmx[1-3]\\d{3})(?: bui|;|\\))/i\n            ], [MODEL, [VENDOR, 'Realme'], [TYPE, MOBILE]], [\n\n            // Motorola\n            /\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,\n            /\\bmot(?:orola)?[- ](\\w*)/i,\n            /((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, MOBILE]], [\n            /\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, TABLET]], [\n\n            // LG\n            /((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i\n            ], [MODEL, [VENDOR, LG], [TYPE, TABLET]], [\n            /(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,\n            /\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,\n            /\\blg-?([\\d\\w]+) bui/i\n            ], [MODEL, [VENDOR, LG], [TYPE, MOBILE]], [\n\n            // Lenovo\n            /(ideatab[-\\w ]+)/i,\n            /lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i\n            ], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [\n\n            // Nokia\n            /(?:maemo|nokia).*(n900|lumia \\d+)/i,\n            /nokia[-_ ]?([-\\w\\.]*)/i\n            ], [[MODEL, /_/g, ' '], [VENDOR, 'Nokia'], [TYPE, MOBILE]], [\n\n            // Google\n            /(pixel c)\\b/i                                                      // Google Pixel C\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, TABLET]], [\n            /droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i                         // Google Pixel\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, MOBILE]], [\n\n            // Sony\n            /droid.+; (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i\n            ], [MODEL, [VENDOR, SONY], [TYPE, MOBILE]], [\n            /sony tablet [ps]/i,\n            /\\b(?:sony)?sgp\\w+(?: bui|\\))/i\n            ], [[MODEL, 'Xperia Tablet'], [VENDOR, SONY], [TYPE, TABLET]], [\n\n            // OnePlus\n            / (kb2005|in20[12]5|be20[12][59])\\b/i,\n            /(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i\n            ], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [\n\n            // Amazon\n            /(alexa)webm/i,\n            /(kf[a-z]{2}wi|aeo(?!bc)\\w\\w)( bui|\\))/i,                           // Kindle Fire without Silk / Echo Show\n            /(kf[a-z]+)( bui|\\)).+silk\\//i                                      // Kindle Fire HD\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, TABLET]], [\n            /((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i                     // Fire Phone\n            ], [[MODEL, /(.+)/g, 'Fire Phone $1'], [VENDOR, AMAZON], [TYPE, MOBILE]], [\n\n            // BlackBerry\n            /(playbook);[-\\w\\),; ]+(rim)/i                                      // BlackBerry PlayBook\n            ], [MODEL, VENDOR, [TYPE, TABLET]], [\n            /\\b((?:bb[a-f]|st[hv])100-\\d)/i,\n            /\\(bb10; (\\w+)/i                                                    // BlackBerry 10\n            ], [MODEL, [VENDOR, BLACKBERRY], [TYPE, MOBILE]], [\n\n            // Asus\n            /(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, TABLET]], [\n            / (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, MOBILE]], [\n\n            // HTC\n            /(nexus 9)/i                                                        // HTC Nexus 9\n            ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [\n            /(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,                         // HTC\n\n            // ZTE\n            /(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,\n            /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\\.))|sony(?!-bra))[-_ ]?([-\\w]*)/i         // Alcatel/GeeksPhone/Nexian/Panasonic/Sony\n            ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [\n\n            // TCL\n            /droid [\\w\\.]+; ((?:8[14]9[16]|9(?:0(?:48|60|8[01])|1(?:3[27]|66)|2(?:6[69]|9[56])|466))[gqswx])\\w*(\\)| bui)/i\n            ], [MODEL, [VENDOR, 'TCL'], [TYPE, TABLET]], [\n\n            // itel\n            /(itel) ((\\w+))/i\n            ], [[VENDOR, lowerize], MODEL, [TYPE, strMapper, { 'tablet' : ['p10001l', 'w7001'], '*' : 'mobile' }]], [\n\n            // Acer\n            /droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i\n            ], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [\n\n            // Meizu\n            /droid.+; (m[1-5] note) bui/i,\n            /\\bmz-([-\\w]{2,})/i\n            ], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [\n                \n            // Ulefone\n            /; ((?:power )?armor(?:[\\w ]{0,8}))(?: bui|\\))/i\n            ], [MODEL, [VENDOR, 'Ulefone'], [TYPE, MOBILE]], [\n\n            // Energizer\n            /; (energy ?\\w+)(?: bui|\\))/i,\n            /; energizer ([\\w ]+)(?: bui|\\))/i\n            ], [MODEL, [VENDOR, 'Energizer'], [TYPE, MOBILE]], [\n\n            // Cat\n            /; cat (b35);/i,\n            /; (b15q?|s22 flip|s48c|s62 pro)(?: bui|\\))/i\n            ], [MODEL, [VENDOR, 'Cat'], [TYPE, MOBILE]], [\n\n            // Smartfren\n            /((?:new )?andromax[\\w- ]+)(?: bui|\\))/i\n            ], [MODEL, [VENDOR, 'Smartfren'], [TYPE, MOBILE]], [\n\n            // Nothing\n            /droid.+; (a(?:015|06[35]|142p?))/i\n            ], [MODEL, [VENDOR, 'Nothing'], [TYPE, MOBILE]], [\n\n            // MIXED\n            /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno|micromax|advan)[-_ ]?([-\\w]*)/i,\n                                                                                // BlackBerry/BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron/Infinix/Tecno/Micromax/Advan\n            /; (imo) ((?!tab)[\\w ]+?)(?: bui|\\))/i,                             // IMO\n            /(hp) ([\\w ]+\\w)/i,                                                 // HP iPAQ\n            /(asus)-?(\\w+)/i,                                                   // Asus\n            /(microsoft); (lumia[\\w ]+)/i,                                      // Microsoft Lumia\n            /(lenovo)[-_ ]?([-\\w]+)/i,                                          // Lenovo\n            /(jolla)/i,                                                         // Jolla\n            /(oppo) ?([\\w ]+) bui/i                                             // OPPO\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /(imo) (tab \\w+)/i,                                                 // IMO\n            /(kobo)\\s(ereader|touch)/i,                                         // Kobo\n            /(archos) (gamepad2?)/i,                                            // Archos\n            /(hp).+(touchpad(?!.+tablet)|tablet)/i,                             // HP TouchPad\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(nook)[\\w ]+build\\/(\\w+)/i,                                        // Nook\n            /(dell) (strea[kpr\\d ]*[\\dko])/i,                                   // Dell Streak\n            /(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,                                  // Le Pan Tablets\n            /(trinity)[- ]*(t\\d{3}) bui/i,                                      // Trinity Tablets\n            /(gigaset)[- ]+(q\\w{1,9}) bui/i,                                    // Gigaset Tablets\n            /(vodafone) ([\\w ]+)(?:\\)| bui)/i                                   // Vodafone\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /(surface duo)/i                                                    // Surface Duo\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, TABLET]], [\n            /droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i                                 // Fairphone\n            ], [MODEL, [VENDOR, 'Fairphone'], [TYPE, MOBILE]], [\n            /(u304aa)/i                                                         // AT&T\n            ], [MODEL, [VENDOR, 'AT&T'], [TYPE, MOBILE]], [\n            /\\bsie-(\\w*)/i                                                      // Siemens\n            ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [\n            /\\b(rct\\w+) b/i                                                     // RCA Tablets\n            ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [\n            /\\b(venue[\\d ]{2,7}) b/i                                            // Dell Venue Tablets\n            ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [\n            /\\b(q(?:mv|ta)\\w+) b/i                                              // Verizon Tablet\n            ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [\n            /\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i                       // Barnes & Noble Tablet\n            ], [MODEL, [VENDOR, 'Barnes & Noble'], [TYPE, TABLET]], [\n            /\\b(tm\\d{3}\\w+) b/i\n            ], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [\n            /\\b(k88) b/i                                                        // ZTE K Series Tablet\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, TABLET]], [\n            /\\b(nx\\d{3}j) b/i                                                   // ZTE Nubia\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, MOBILE]], [\n            /\\b(gen\\d{3}) b.+49h/i                                              // Swiss GEN Mobile\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [\n            /\\b(zur\\d{3}) b/i                                                   // Swiss ZUR Tablet\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [\n            /\\b((zeki)?tb.*\\b) b/i                                              // Zeki Tablets\n            ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [\n            /\\b([yr]\\d{2}) b/i,\n            /\\b(dragon[- ]+touch |dt)(\\w{5}) b/i                                // Dragon Touch Tablet\n            ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [\n            /\\b(ns-?\\w{0,9}) b/i                                                // Insignia Tablets\n            ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [\n            /\\b((nxa|next)-?\\w{0,9}) b/i                                        // NextBook Tablets\n            ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [\n            /\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i                  // Voice Xtreme Phones\n            ], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [\n            /\\b(lvtel\\-)?(v1[12]) b/i                                           // LvTel Phones\n            ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [\n            /\\b(ph-1) /i                                                        // Essential PH-1\n            ], [MODEL, [VENDOR, 'Essential'], [TYPE, MOBILE]], [\n            /\\b(v(100md|700na|7011|917g).*\\b) b/i                               // Envizen Tablets\n            ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [\n            /\\b(trio[-\\w\\. ]+) b/i                                              // MachSpeed Tablets\n            ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [\n            /\\btu_(1491) b/i                                                    // Rotor Tablets\n            ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [\n            /(shield[\\w ]+) b/i                                                 // Nvidia Shield Tablets\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, TABLET]], [\n            /(sprint) (\\w+)/i                                                   // Sprint Phones\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n            /(kin\\.[onetw]{3})/i                                                // Microsoft Kin\n            ], [[MODEL, /\\./g, ' '], [VENDOR, MICROSOFT], [TYPE, MOBILE]], [\n            /droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i             // Zebra\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, TABLET]], [\n            /droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, MOBILE]], [\n\n            ///////////////////\n            // SMARTTVS\n            ///////////////////\n\n            /smart-tv.+(samsung)/i                                              // Samsung\n            ], [VENDOR, [TYPE, SMARTTV]], [\n            /hbbtv.+maple;(\\d+)/i\n            ], [[MODEL, /^/, 'SmartTV'], [VENDOR, SAMSUNG], [TYPE, SMARTTV]], [\n            /(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i        // LG SmartTV\n            ], [[VENDOR, LG], [TYPE, SMARTTV]], [\n            /(apple) ?tv/i                                                      // Apple TV\n            ], [VENDOR, [MODEL, APPLE+' TV'], [TYPE, SMARTTV]], [\n            /crkey/i                                                            // Google Chromecast\n            ], [[MODEL, CHROME+'cast'], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [\n            /droid.+aft(\\w+)( bui|\\))/i                                         // Fire TV\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, SMARTTV]], [\n            /\\(dtv[\\);].+(aquos)/i,\n            /(aquos-tv[\\w ]+)\\)/i                                               // Sharp\n            ], [MODEL, [VENDOR, SHARP], [TYPE, SMARTTV]],[\n            /(bravia[\\w ]+)( bui|\\))/i                                              // Sony\n            ], [MODEL, [VENDOR, SONY], [TYPE, SMARTTV]], [\n            /(mitv-\\w{5}) bui/i                                                 // Xiaomi\n            ], [MODEL, [VENDOR, XIAOMI], [TYPE, SMARTTV]], [\n            /Hbbtv.*(technisat) (.*);/i                                         // TechniSAT\n            ], [VENDOR, MODEL, [TYPE, SMARTTV]], [\n            /\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,                          // Roku\n            /hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w\\+ ]*; *([\\w\\d][^;]*);([^;]*)/i         // HbbTV devices\n            ], [[VENDOR, trim], [MODEL, trim], [TYPE, SMARTTV]], [\n            /\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i                   // SmartTV from Unidentified Vendors\n            ], [[TYPE, SMARTTV]], [\n\n            ///////////////////\n            // CONSOLES\n            ///////////////////\n\n            /(ouya)/i,                                                          // Ouya\n            /(nintendo) ([wids3utch]+)/i                                        // Nintendo\n            ], [VENDOR, MODEL, [TYPE, CONSOLE]], [\n            /droid.+; (shield) bui/i                                            // Nvidia\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [\n            /(playstation [345portablevi]+)/i                                   // Playstation\n            ], [MODEL, [VENDOR, SONY], [TYPE, CONSOLE]], [\n            /\\b(xbox(?: one)?(?!; xbox))[\\); ]/i                                // Microsoft Xbox\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, CONSOLE]], [\n\n            ///////////////////\n            // WEARABLES\n            ///////////////////\n\n            /\\b(sm-[lr]\\d\\d[05][fnuw]?s?)\\b/i                                   // Samsung Galaxy Watch\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, WEARABLE]], [\n            /((pebble))app/i                                                    // Pebble\n            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [\n            /(watch)(?: ?os[,\\/]|\\d,\\d\\/)[\\d\\.]+/i                              // Apple Watch\n            ], [MODEL, [VENDOR, APPLE], [TYPE, WEARABLE]], [\n            /droid.+; (glass) \\d/i                                              // Google Glass\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]], [\n            /droid.+; (wt63?0{2,3})\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, WEARABLE]], [\n\n            ///////////////////\n            // XR\n            ///////////////////\n\n            /droid.+; (glass) \\d/i                                              // Google Glass\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]], [\n            /(pico) (4|neo3(?: link|pro)?)/i                                    // Pico\n            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [\n            /; (quest( \\d| pro)?)/i                                             // Oculus Quest\n            ], [MODEL, [VENDOR, FACEBOOK], [TYPE, WEARABLE]], [\n\n            ///////////////////\n            // EMBEDDED\n            ///////////////////\n\n            /(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i                              // Tesla\n            ], [VENDOR, [TYPE, EMBEDDED]], [\n            /(aeobc)\\b/i                                                        // Echo Dot\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, EMBEDDED]], [\n\n            ////////////////////\n            // MIXED (GENERIC)\n            ///////////////////\n\n            /droid .+?; ([^;]+?)(?: bui|; wv\\)|\\) applew).+? mobile safari/i    // Android Phones from Unidentified Vendors\n            ], [MODEL, [TYPE, MOBILE]], [\n            /droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i       // Android Tablets from Unidentified Vendors\n            ], [MODEL, [TYPE, TABLET]], [\n            /\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i                      // Unidentifiable Tablet\n            ], [[TYPE, TABLET]], [\n            /(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i    // Unidentifiable Mobile\n            ], [[TYPE, MOBILE]], [\n            /(android[-\\w\\. ]{0,9});.+buil/i                                    // Generic Android Device\n            ], [MODEL, [VENDOR, 'Generic']]\n        ],\n\n        engine : [[\n\n            /windows.+ edge\\/([\\w\\.]+)/i                                       // EdgeHTML\n            ], [VERSION, [NAME, EDGE+'HTML']], [\n\n            /(arkweb)\\/([\\w\\.]+)/i                                              // ArkWeb\n            ], [NAME, VERSION], [\n\n            /webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i                         // Blink\n            ], [VERSION, [NAME, 'Blink']], [\n\n            /(presto)\\/([\\w\\.]+)/i,                                             // Presto\n            /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna|servo)\\/([\\w\\.]+)/i, // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna/Servo\n            /ekioh(flow)\\/([\\w\\.]+)/i,                                          // Flow\n            /(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,                           // KHTML/Tasman/Links\n            /(icab)[\\/ ]([23]\\.[\\d\\.]+)/i,                                      // iCab\n            /\\b(libweb)/i\n            ], [NAME, VERSION], [\n\n            /rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i                                     // Gecko\n            ], [VERSION, NAME]\n        ],\n\n        os : [[\n\n            // Windows\n            /microsoft (windows) (vista|xp)/i                                   // Windows (iTunes)\n            ], [NAME, VERSION], [\n            /(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i             // Windows Phone\n            ], [NAME, [VERSION, strMapper, windowsVersionMap]], [\n            /windows nt 6\\.2; (arm)/i,                                        // Windows RT\n            /windows[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i,\n            /(?:win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i\n            ], [[VERSION, strMapper, windowsVersionMap], [NAME, 'Windows']], [\n\n            // iOS/macOS\n            /ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,              // iOS\n            /(?:ios;fbsv\\/|iphone.+ios[\\/ ])([\\d\\.]+)/i,\n            /cfnetwork\\/.+darwin/i\n            ], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [\n            /(mac os x) ?([\\w\\. ]*)/i,\n            /(macintosh|mac_powerpc\\b)(?!.+haiku)/i                             // Mac OS\n            ], [[NAME, MAC_OS], [VERSION, /_/g, '.']], [\n\n            // Mobile OSes\n            /droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i                    // Android-x86/HarmonyOS\n            ], [VERSION, NAME], [                                               // Android/WebOS/QNX/Bada/RIM/Maemo/MeeGo/Sailfish OS/OpenHarmony\n            /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish|openharmony)[-\\/ ]?([\\w\\.]*)/i,\n            /(blackberry)\\w*\\/([\\w\\.]*)/i,                                      // Blackberry\n            /(tizen|kaios)[\\/ ]([\\w\\.]+)/i,                                     // Tizen/KaiOS\n            /\\((series40);/i                                                    // Series 40\n            ], [NAME, VERSION], [\n            /\\(bb(10);/i                                                        // BlackBerry 10\n            ], [VERSION, [NAME, BLACKBERRY]], [\n            /(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i         // Symbian\n            ], [VERSION, [NAME, 'Symbian']], [\n            /mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i // Firefox OS\n            ], [VERSION, [NAME, FIREFOX+' OS']], [\n            /web0s;.+rt(tv)/i,\n            /\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i                              // WebOS\n            ], [VERSION, [NAME, 'webOS']], [\n            /watch(?: ?os[,\\/]|\\d,\\d\\/)([\\d\\.]+)/i                              // watchOS\n            ], [VERSION, [NAME, 'watchOS']], [\n\n            // Google Chromecast\n            /crkey\\/([\\d\\.]+)/i                                                 // Google Chromecast\n            ], [VERSION, [NAME, CHROME+'cast']], [\n            /(cros) [\\w]+(?:\\)| ([\\w\\.]+)\\b)/i                                  // Chromium OS\n            ], [[NAME, CHROMIUM_OS], VERSION],[\n\n            // Smart TVs\n            /panasonic;(viera)/i,                                               // Panasonic Viera\n            /(netrange)mmh/i,                                                   // Netrange\n            /(nettv)\\/(\\d+\\.[\\w\\.]+)/i,                                         // NetTV\n\n            // Console\n            /(nintendo|playstation) ([wids345portablevuch]+)/i,                 // Nintendo/Playstation\n            /(xbox); +xbox ([^\\);]+)/i,                                         // Microsoft Xbox (360, One, X, S, Series X, Series S)\n\n            // Other\n            /\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,                            // Joli/Palm\n            /(mint)[\\/\\(\\) ]?(\\w*)/i,                                           // Mint\n            /(mageia|vectorlinux)[; ]/i,                                        // Mageia/VectorLinux\n            /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,\n                                                                                // Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware/Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus/Raspbian/Plan9/Minix/RISCOS/Contiki/Deepin/Manjaro/elementary/Sabayon/Linspire\n            /(hurd|linux) ?([\\w\\.]*)/i,                                         // Hurd/Linux\n            /(gnu) ?([\\w\\.]*)/i,                                                // GNU\n            /\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i, // FreeBSD/NetBSD/OpenBSD/PC-BSD/GhostBSD/DragonFly\n            /(haiku) (\\w+)/i                                                    // Haiku\n            ], [NAME, VERSION], [\n            /(sunos) ?([\\w\\.\\d]*)/i                                             // Solaris\n            ], [[NAME, 'Solaris'], VERSION], [\n            /((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,                              // Solaris\n            /(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,                                  // AIX\n            /\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i, // BeOS/OS2/AmigaOS/MorphOS/OpenVMS/Fuchsia/HP-UX/SerenityOS\n            /(unix) ?([\\w\\.]*)/i                                                // UNIX\n            ], [NAME, VERSION]\n        ]\n    };\n\n    /////////////////\n    // Constructor\n    ////////////////\n\n    var UAParser = function (ua, extensions) {\n\n        if (typeof ua === OBJ_TYPE) {\n            extensions = ua;\n            ua = undefined;\n        }\n\n        if (!(this instanceof UAParser)) {\n            return new UAParser(ua, extensions).getResult();\n        }\n\n        var _navigator = (typeof window !== UNDEF_TYPE && window.navigator) ? window.navigator : undefined;\n        var _ua = ua || ((_navigator && _navigator.userAgent) ? _navigator.userAgent : EMPTY);\n        var _uach = (_navigator && _navigator.userAgentData) ? _navigator.userAgentData : undefined;\n        var _rgxmap = extensions ? extend(regexes, extensions) : regexes;\n        var _isSelfNav = _navigator && _navigator.userAgent == _ua;\n\n        this.getBrowser = function () {\n            var _browser = {};\n            _browser[NAME] = undefined;\n            _browser[VERSION] = undefined;\n            rgxMapper.call(_browser, _ua, _rgxmap.browser);\n            _browser[MAJOR] = majorize(_browser[VERSION]);\n            // Brave-specific detection\n            if (_isSelfNav && _navigator && _navigator.brave && typeof _navigator.brave.isBrave == FUNC_TYPE) {\n                _browser[NAME] = 'Brave';\n            }\n            return _browser;\n        };\n        this.getCPU = function () {\n            var _cpu = {};\n            _cpu[ARCHITECTURE] = undefined;\n            rgxMapper.call(_cpu, _ua, _rgxmap.cpu);\n            return _cpu;\n        };\n        this.getDevice = function () {\n            var _device = {};\n            _device[VENDOR] = undefined;\n            _device[MODEL] = undefined;\n            _device[TYPE] = undefined;\n            rgxMapper.call(_device, _ua, _rgxmap.device);\n            if (_isSelfNav && !_device[TYPE] && _uach && _uach.mobile) {\n                _device[TYPE] = MOBILE;\n            }\n            // iPadOS-specific detection: identified as Mac, but has some iOS-only properties\n            if (_isSelfNav && _device[MODEL] == 'Macintosh' && _navigator && typeof _navigator.standalone !== UNDEF_TYPE && _navigator.maxTouchPoints && _navigator.maxTouchPoints > 2) {\n                _device[MODEL] = 'iPad';\n                _device[TYPE] = TABLET;\n            }\n            return _device;\n        };\n        this.getEngine = function () {\n            var _engine = {};\n            _engine[NAME] = undefined;\n            _engine[VERSION] = undefined;\n            rgxMapper.call(_engine, _ua, _rgxmap.engine);\n            return _engine;\n        };\n        this.getOS = function () {\n            var _os = {};\n            _os[NAME] = undefined;\n            _os[VERSION] = undefined;\n            rgxMapper.call(_os, _ua, _rgxmap.os);\n            if (_isSelfNav && !_os[NAME] && _uach && _uach.platform && _uach.platform != 'Unknown') {\n                _os[NAME] = _uach.platform  \n                                    .replace(/chrome os/i, CHROMIUM_OS)\n                                    .replace(/macos/i, MAC_OS);           // backward compatibility\n            }\n            return _os;\n        };\n        this.getResult = function () {\n            return {\n                ua      : this.getUA(),\n                browser : this.getBrowser(),\n                engine  : this.getEngine(),\n                os      : this.getOS(),\n                device  : this.getDevice(),\n                cpu     : this.getCPU()\n            };\n        };\n        this.getUA = function () {\n            return _ua;\n        };\n        this.setUA = function (ua) {\n            _ua = (typeof ua === STR_TYPE && ua.length > UA_MAX_LENGTH) ? trim(ua, UA_MAX_LENGTH) : ua;\n            return this;\n        };\n        this.setUA(_ua);\n        return this;\n    };\n\n    UAParser.VERSION = LIBVERSION;\n    UAParser.BROWSER =  enumerize([NAME, VERSION, MAJOR]);\n    UAParser.CPU = enumerize([ARCHITECTURE]);\n    UAParser.DEVICE = enumerize([MODEL, VENDOR, TYPE, CONSOLE, MOBILE, SMARTTV, TABLET, WEARABLE, EMBEDDED]);\n    UAParser.ENGINE = UAParser.OS = enumerize([NAME, VERSION]);\n\n    ///////////\n    // Export\n    //////////\n\n    // check js environment\n    if (typeof(exports) !== UNDEF_TYPE) {\n        // nodejs env\n        if (\"object\" !== UNDEF_TYPE && module.exports) {\n            exports = module.exports = UAParser;\n        }\n        exports.UAParser = UAParser;\n    } else {\n        // requirejs env (optional)\n        if (\"function\" === FUNC_TYPE && __webpack_require__.amdO) {\n            !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n                return UAParser;\n            }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n        } else if (typeof window !== UNDEF_TYPE) {\n            // browser env\n            window.UAParser = UAParser;\n        }\n    }\n\n    // jQuery/Zepto specific (optional)\n    // Note:\n    //   In AMD env the global scope should be kept clean, but jQuery is an exception.\n    //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,\n    //   and we should catch that.\n    var $ = typeof window !== UNDEF_TYPE && (window.jQuery || window.Zepto);\n    if ($ && !$.ua) {\n        var parser = new UAParser();\n        $.ua = parser.getResult();\n        $.ua.get = function () {\n            return parser.getUA();\n        };\n        $.ua.set = function (ua) {\n            parser.setUA(ua);\n            var result = parser.getResult();\n            for (var prop in result) {\n                $.ua[prop] = result[prop];\n            }\n        };\n    }\n\n})(typeof window === 'object' ? window : this);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ua-parser-js/src/ua-parser.js\n"));

/***/ }),

/***/ "./node_modules/classnames/index.js":
/*!******************************************!*\
  !*** ./node_modules/classnames/index.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif ( true && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (true) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n\t\t\treturn classNames;\n\t\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {}\n}());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY2xhc3NuYW1lcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxnQkFBZ0I7O0FBRWhCO0FBQ0E7O0FBRUEsa0JBQWtCLHNCQUFzQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsS0FBSyxLQUE2QjtBQUNsQztBQUNBO0FBQ0EsR0FBRyxTQUFTLElBQTRFO0FBQ3hGO0FBQ0EsRUFBRSxpQ0FBcUIsRUFBRSxtQ0FBRTtBQUMzQjtBQUNBLEdBQUc7QUFBQSxrR0FBQztBQUNKLEdBQUcsS0FBSyxFQUVOO0FBQ0YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvY2xhc3NuYW1lcy9pbmRleC5qcz9lZGM2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuXHRDb3B5cmlnaHQgKGMpIDIwMTggSmVkIFdhdHNvbi5cblx0TGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlIChNSVQpLCBzZWVcblx0aHR0cDovL2plZHdhdHNvbi5naXRodWIuaW8vY2xhc3NuYW1lc1xuKi9cbi8qIGdsb2JhbCBkZWZpbmUgKi9cblxuKGZ1bmN0aW9uICgpIHtcblx0J3VzZSBzdHJpY3QnO1xuXG5cdHZhciBoYXNPd24gPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblxuXHRmdW5jdGlvbiBjbGFzc05hbWVzICgpIHtcblx0XHR2YXIgY2xhc3NlcyA9ICcnO1xuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBhcmcgPSBhcmd1bWVudHNbaV07XG5cdFx0XHRpZiAoYXJnKSB7XG5cdFx0XHRcdGNsYXNzZXMgPSBhcHBlbmRDbGFzcyhjbGFzc2VzLCBwYXJzZVZhbHVlKGFyZykpO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBjbGFzc2VzO1xuXHR9XG5cblx0ZnVuY3Rpb24gcGFyc2VWYWx1ZSAoYXJnKSB7XG5cdFx0aWYgKHR5cGVvZiBhcmcgPT09ICdzdHJpbmcnIHx8IHR5cGVvZiBhcmcgPT09ICdudW1iZXInKSB7XG5cdFx0XHRyZXR1cm4gYXJnO1xuXHRcdH1cblxuXHRcdGlmICh0eXBlb2YgYXJnICE9PSAnb2JqZWN0Jykge1xuXHRcdFx0cmV0dXJuICcnO1xuXHRcdH1cblxuXHRcdGlmIChBcnJheS5pc0FycmF5KGFyZykpIHtcblx0XHRcdHJldHVybiBjbGFzc05hbWVzLmFwcGx5KG51bGwsIGFyZyk7XG5cdFx0fVxuXG5cdFx0aWYgKGFyZy50b1N0cmluZyAhPT0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZyAmJiAhYXJnLnRvU3RyaW5nLnRvU3RyaW5nKCkuaW5jbHVkZXMoJ1tuYXRpdmUgY29kZV0nKSkge1xuXHRcdFx0cmV0dXJuIGFyZy50b1N0cmluZygpO1xuXHRcdH1cblxuXHRcdHZhciBjbGFzc2VzID0gJyc7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gYXJnKSB7XG5cdFx0XHRpZiAoaGFzT3duLmNhbGwoYXJnLCBrZXkpICYmIGFyZ1trZXldKSB7XG5cdFx0XHRcdGNsYXNzZXMgPSBhcHBlbmRDbGFzcyhjbGFzc2VzLCBrZXkpO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBjbGFzc2VzO1xuXHR9XG5cblx0ZnVuY3Rpb24gYXBwZW5kQ2xhc3MgKHZhbHVlLCBuZXdDbGFzcykge1xuXHRcdGlmICghbmV3Q2xhc3MpIHtcblx0XHRcdHJldHVybiB2YWx1ZTtcblx0XHR9XG5cdFxuXHRcdGlmICh2YWx1ZSkge1xuXHRcdFx0cmV0dXJuIHZhbHVlICsgJyAnICsgbmV3Q2xhc3M7XG5cdFx0fVxuXHRcblx0XHRyZXR1cm4gdmFsdWUgKyBuZXdDbGFzcztcblx0fVxuXG5cdGlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyAmJiBtb2R1bGUuZXhwb3J0cykge1xuXHRcdGNsYXNzTmFtZXMuZGVmYXVsdCA9IGNsYXNzTmFtZXM7XG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBjbGFzc05hbWVzO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGRlZmluZS5hbWQgPT09ICdvYmplY3QnICYmIGRlZmluZS5hbWQpIHtcblx0XHQvLyByZWdpc3RlciBhcyAnY2xhc3NuYW1lcycsIGNvbnNpc3RlbnQgd2l0aCBucG0gcGFja2FnZSBuYW1lXG5cdFx0ZGVmaW5lKCdjbGFzc25hbWVzJywgW10sIGZ1bmN0aW9uICgpIHtcblx0XHRcdHJldHVybiBjbGFzc05hbWVzO1xuXHRcdH0pO1xuXHR9IGVsc2Uge1xuXHRcdHdpbmRvdy5jbGFzc05hbWVzID0gY2xhc3NOYW1lcztcblx0fVxufSgpKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/classnames/index.js\n"));

/***/ }),

/***/ "./node_modules/zod/index.cjs":
/*!************************************!*\
  !*** ./node_modules/zod/index.cjs ***!
  \************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.z = void 0;\nconst z = __importStar(__webpack_require__(/*! ./v3/external.cjs */ \"./node_modules/zod/v3/external.cjs\"));\nexports.z = z;\n__exportStar(__webpack_require__(/*! ./v3/external.cjs */ \"./node_modules/zod/v3/external.cjs\"), exports);\nexports[\"default\"] = z;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvem9kL2luZGV4LmNqcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsMENBQTBDLDRCQUE0QjtBQUN0RSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsU0FBUztBQUNULHVCQUF1QixtQkFBTyxDQUFDLDZEQUFtQjtBQUNsRCxTQUFTO0FBQ1QsYUFBYSxtQkFBTyxDQUFDLDZEQUFtQjtBQUN4QyxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvem9kL2luZGV4LmNqcz9mY2YwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy56ID0gdm9pZCAwO1xuY29uc3QgeiA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi92My9leHRlcm5hbC5janNcIikpO1xuZXhwb3J0cy56ID0gejtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi92My9leHRlcm5hbC5janNcIiksIGV4cG9ydHMpO1xuZXhwb3J0cy5kZWZhdWx0ID0gejtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/zod/index.cjs\n"));

/***/ }),

/***/ "./node_modules/zod/v3/ZodError.cjs":
/*!******************************************!*\
  !*** ./node_modules/zod/v3/ZodError.cjs ***!
  \******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ZodError = exports.quotelessJson = exports.ZodIssueCode = void 0;\nconst util_js_1 = __webpack_require__(/*! ./helpers/util.cjs */ \"./node_modules/zod/v3/helpers/util.cjs\");\nexports.ZodIssueCode = util_js_1.util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nexports.quotelessJson = quotelessJson;\nclass ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util_js_1.util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                const firstEl = sub.path[0];\n                fieldErrors[firstEl] = fieldErrors[firstEl] || [];\n                fieldErrors[firstEl].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nexports.ZodError = ZodError;\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvem9kL3YzL1pvZEVycm9yLmNqcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0IsR0FBRyxxQkFBcUIsR0FBRyxvQkFBb0I7QUFDL0Qsa0JBQWtCLG1CQUFPLENBQUMsa0VBQW9CO0FBQzlDLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQ7QUFDckQ7QUFDQSwwREFBMEQ7QUFDMUQsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRDtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQyxNQUFNO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy96b2QvdjMvWm9kRXJyb3IuY2pzPzVjNDQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlpvZEVycm9yID0gZXhwb3J0cy5xdW90ZWxlc3NKc29uID0gZXhwb3J0cy5ab2RJc3N1ZUNvZGUgPSB2b2lkIDA7XG5jb25zdCB1dGlsX2pzXzEgPSByZXF1aXJlKFwiLi9oZWxwZXJzL3V0aWwuY2pzXCIpO1xuZXhwb3J0cy5ab2RJc3N1ZUNvZGUgPSB1dGlsX2pzXzEudXRpbC5hcnJheVRvRW51bShbXG4gICAgXCJpbnZhbGlkX3R5cGVcIixcbiAgICBcImludmFsaWRfbGl0ZXJhbFwiLFxuICAgIFwiY3VzdG9tXCIsXG4gICAgXCJpbnZhbGlkX3VuaW9uXCIsXG4gICAgXCJpbnZhbGlkX3VuaW9uX2Rpc2NyaW1pbmF0b3JcIixcbiAgICBcImludmFsaWRfZW51bV92YWx1ZVwiLFxuICAgIFwidW5yZWNvZ25pemVkX2tleXNcIixcbiAgICBcImludmFsaWRfYXJndW1lbnRzXCIsXG4gICAgXCJpbnZhbGlkX3JldHVybl90eXBlXCIsXG4gICAgXCJpbnZhbGlkX2RhdGVcIixcbiAgICBcImludmFsaWRfc3RyaW5nXCIsXG4gICAgXCJ0b29fc21hbGxcIixcbiAgICBcInRvb19iaWdcIixcbiAgICBcImludmFsaWRfaW50ZXJzZWN0aW9uX3R5cGVzXCIsXG4gICAgXCJub3RfbXVsdGlwbGVfb2ZcIixcbiAgICBcIm5vdF9maW5pdGVcIixcbl0pO1xuY29uc3QgcXVvdGVsZXNzSnNvbiA9IChvYmopID0+IHtcbiAgICBjb25zdCBqc29uID0gSlNPTi5zdHJpbmdpZnkob2JqLCBudWxsLCAyKTtcbiAgICByZXR1cm4ganNvbi5yZXBsYWNlKC9cIihbXlwiXSspXCI6L2csIFwiJDE6XCIpO1xufTtcbmV4cG9ydHMucXVvdGVsZXNzSnNvbiA9IHF1b3RlbGVzc0pzb247XG5jbGFzcyBab2RFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBnZXQgZXJyb3JzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pc3N1ZXM7XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKGlzc3Vlcykge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLmlzc3VlcyA9IFtdO1xuICAgICAgICB0aGlzLmFkZElzc3VlID0gKHN1YikgPT4ge1xuICAgICAgICAgICAgdGhpcy5pc3N1ZXMgPSBbLi4udGhpcy5pc3N1ZXMsIHN1Yl07XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuYWRkSXNzdWVzID0gKHN1YnMgPSBbXSkgPT4ge1xuICAgICAgICAgICAgdGhpcy5pc3N1ZXMgPSBbLi4udGhpcy5pc3N1ZXMsIC4uLnN1YnNdO1xuICAgICAgICB9O1xuICAgICAgICBjb25zdCBhY3R1YWxQcm90byA9IG5ldy50YXJnZXQucHJvdG90eXBlO1xuICAgICAgICBpZiAoT2JqZWN0LnNldFByb3RvdHlwZU9mKSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgYmFuL2JhblxuICAgICAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIGFjdHVhbFByb3RvKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuX19wcm90b19fID0gYWN0dWFsUHJvdG87XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5uYW1lID0gXCJab2RFcnJvclwiO1xuICAgICAgICB0aGlzLmlzc3VlcyA9IGlzc3VlcztcbiAgICB9XG4gICAgZm9ybWF0KF9tYXBwZXIpIHtcbiAgICAgICAgY29uc3QgbWFwcGVyID0gX21hcHBlciB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGlzc3VlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlzc3VlLm1lc3NhZ2U7XG4gICAgICAgICAgICB9O1xuICAgICAgICBjb25zdCBmaWVsZEVycm9ycyA9IHsgX2Vycm9yczogW10gfTtcbiAgICAgICAgY29uc3QgcHJvY2Vzc0Vycm9yID0gKGVycm9yKSA9PiB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGlzc3VlIG9mIGVycm9yLmlzc3Vlcykge1xuICAgICAgICAgICAgICAgIGlmIChpc3N1ZS5jb2RlID09PSBcImludmFsaWRfdW5pb25cIikge1xuICAgICAgICAgICAgICAgICAgICBpc3N1ZS51bmlvbkVycm9ycy5tYXAocHJvY2Vzc0Vycm9yKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoaXNzdWUuY29kZSA9PT0gXCJpbnZhbGlkX3JldHVybl90eXBlXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc0Vycm9yKGlzc3VlLnJldHVyblR5cGVFcnJvcik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGlzc3VlLmNvZGUgPT09IFwiaW52YWxpZF9hcmd1bWVudHNcIikge1xuICAgICAgICAgICAgICAgICAgICBwcm9jZXNzRXJyb3IoaXNzdWUuYXJndW1lbnRzRXJyb3IpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChpc3N1ZS5wYXRoLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICBmaWVsZEVycm9ycy5fZXJyb3JzLnB1c2gobWFwcGVyKGlzc3VlKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBsZXQgY3VyciA9IGZpZWxkRXJyb3JzO1xuICAgICAgICAgICAgICAgICAgICBsZXQgaSA9IDA7XG4gICAgICAgICAgICAgICAgICAgIHdoaWxlIChpIDwgaXNzdWUucGF0aC5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGVsID0gaXNzdWUucGF0aFtpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRlcm1pbmFsID0gaSA9PT0gaXNzdWUucGF0aC5sZW5ndGggLSAxO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCF0ZXJtaW5hbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJbZWxdID0gY3VycltlbF0gfHwgeyBfZXJyb3JzOiBbXSB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGlmICh0eXBlb2YgZWwgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgIGN1cnJbZWxdID0gY3VycltlbF0gfHwgeyBfZXJyb3JzOiBbXSB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIH0gZWxzZSBpZiAodHlwZW9mIGVsID09PSBcIm51bWJlclwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gICBjb25zdCBlcnJvckFycmF5OiBhbnkgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgIGVycm9yQXJyYXkuX2Vycm9ycyA9IFtdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgY3VycltlbF0gPSBjdXJyW2VsXSB8fCBlcnJvckFycmF5O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJbZWxdID0gY3VycltlbF0gfHwgeyBfZXJyb3JzOiBbXSB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJbZWxdLl9lcnJvcnMucHVzaChtYXBwZXIoaXNzdWUpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnIgPSBjdXJyW2VsXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGkrKztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgcHJvY2Vzc0Vycm9yKHRoaXMpO1xuICAgICAgICByZXR1cm4gZmllbGRFcnJvcnM7XG4gICAgfVxuICAgIHN0YXRpYyBhc3NlcnQodmFsdWUpIHtcbiAgICAgICAgaWYgKCEodmFsdWUgaW5zdGFuY2VvZiBab2RFcnJvcikpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgTm90IGEgWm9kRXJyb3I6ICR7dmFsdWV9YCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1lc3NhZ2U7XG4gICAgfVxuICAgIGdldCBtZXNzYWdlKCkge1xuICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkodGhpcy5pc3N1ZXMsIHV0aWxfanNfMS51dGlsLmpzb25TdHJpbmdpZnlSZXBsYWNlciwgMik7XG4gICAgfVxuICAgIGdldCBpc0VtcHR5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pc3N1ZXMubGVuZ3RoID09PSAwO1xuICAgIH1cbiAgICBmbGF0dGVuKG1hcHBlciA9IChpc3N1ZSkgPT4gaXNzdWUubWVzc2FnZSkge1xuICAgICAgICBjb25zdCBmaWVsZEVycm9ycyA9IHt9O1xuICAgICAgICBjb25zdCBmb3JtRXJyb3JzID0gW107XG4gICAgICAgIGZvciAoY29uc3Qgc3ViIG9mIHRoaXMuaXNzdWVzKSB7XG4gICAgICAgICAgICBpZiAoc3ViLnBhdGgubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGZpcnN0RWwgPSBzdWIucGF0aFswXTtcbiAgICAgICAgICAgICAgICBmaWVsZEVycm9yc1tmaXJzdEVsXSA9IGZpZWxkRXJyb3JzW2ZpcnN0RWxdIHx8IFtdO1xuICAgICAgICAgICAgICAgIGZpZWxkRXJyb3JzW2ZpcnN0RWxdLnB1c2gobWFwcGVyKHN1YikpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgZm9ybUVycm9ycy5wdXNoKG1hcHBlcihzdWIpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geyBmb3JtRXJyb3JzLCBmaWVsZEVycm9ycyB9O1xuICAgIH1cbiAgICBnZXQgZm9ybUVycm9ycygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZmxhdHRlbigpO1xuICAgIH1cbn1cbmV4cG9ydHMuWm9kRXJyb3IgPSBab2RFcnJvcjtcblpvZEVycm9yLmNyZWF0ZSA9IChpc3N1ZXMpID0+IHtcbiAgICBjb25zdCBlcnJvciA9IG5ldyBab2RFcnJvcihpc3N1ZXMpO1xuICAgIHJldHVybiBlcnJvcjtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/zod/v3/ZodError.cjs\n"));

/***/ }),

/***/ "./node_modules/zod/v3/errors.cjs":
/*!****************************************!*\
  !*** ./node_modules/zod/v3/errors.cjs ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.defaultErrorMap = void 0;\nexports.setErrorMap = setErrorMap;\nexports.getErrorMap = getErrorMap;\nconst en_js_1 = __importDefault(__webpack_require__(/*! ./locales/en.cjs */ \"./node_modules/zod/v3/locales/en.cjs\"));\nexports.defaultErrorMap = en_js_1.default;\nlet overrideErrorMap = en_js_1.default;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvem9kL3YzL2Vycm9ycy5janMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUI7QUFDdkIsbUJBQW1CO0FBQ25CLG1CQUFtQjtBQUNuQixnQ0FBZ0MsbUJBQU8sQ0FBQyw4REFBa0I7QUFDMUQsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy96b2QvdjMvZXJyb3JzLmNqcz83Y2ZmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWZhdWx0RXJyb3JNYXAgPSB2b2lkIDA7XG5leHBvcnRzLnNldEVycm9yTWFwID0gc2V0RXJyb3JNYXA7XG5leHBvcnRzLmdldEVycm9yTWFwID0gZ2V0RXJyb3JNYXA7XG5jb25zdCBlbl9qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL2xvY2FsZXMvZW4uY2pzXCIpKTtcbmV4cG9ydHMuZGVmYXVsdEVycm9yTWFwID0gZW5fanNfMS5kZWZhdWx0O1xubGV0IG92ZXJyaWRlRXJyb3JNYXAgPSBlbl9qc18xLmRlZmF1bHQ7XG5mdW5jdGlvbiBzZXRFcnJvck1hcChtYXApIHtcbiAgICBvdmVycmlkZUVycm9yTWFwID0gbWFwO1xufVxuZnVuY3Rpb24gZ2V0RXJyb3JNYXAoKSB7XG4gICAgcmV0dXJuIG92ZXJyaWRlRXJyb3JNYXA7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/zod/v3/errors.cjs\n"));

/***/ }),

/***/ "./node_modules/zod/v3/external.cjs":
/*!******************************************!*\
  !*** ./node_modules/zod/v3/external.cjs ***!
  \******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./errors.cjs */ \"./node_modules/zod/v3/errors.cjs\"), exports);\n__exportStar(__webpack_require__(/*! ./helpers/parseUtil.cjs */ \"./node_modules/zod/v3/helpers/parseUtil.cjs\"), exports);\n__exportStar(__webpack_require__(/*! ./helpers/typeAliases.cjs */ \"./node_modules/zod/v3/helpers/typeAliases.cjs\"), exports);\n__exportStar(__webpack_require__(/*! ./helpers/util.cjs */ \"./node_modules/zod/v3/helpers/util.cjs\"), exports);\n__exportStar(__webpack_require__(/*! ./types.cjs */ \"./node_modules/zod/v3/types.cjs\"), exports);\n__exportStar(__webpack_require__(/*! ./ZodError.cjs */ \"./node_modules/zod/v3/ZodError.cjs\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvem9kL3YzL2V4dGVybmFsLmNqcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsc0RBQWM7QUFDbkMsYUFBYSxtQkFBTyxDQUFDLDRFQUF5QjtBQUM5QyxhQUFhLG1CQUFPLENBQUMsZ0ZBQTJCO0FBQ2hELGFBQWEsbUJBQU8sQ0FBQyxrRUFBb0I7QUFDekMsYUFBYSxtQkFBTyxDQUFDLG9EQUFhO0FBQ2xDLGFBQWEsbUJBQU8sQ0FBQywwREFBZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3pvZC92My9leHRlcm5hbC5janM/OWY4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2Vycm9ycy5janNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2hlbHBlcnMvcGFyc2VVdGlsLmNqc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vaGVscGVycy90eXBlQWxpYXNlcy5janNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2hlbHBlcnMvdXRpbC5janNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVzLmNqc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vWm9kRXJyb3IuY2pzXCIpLCBleHBvcnRzKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/zod/v3/external.cjs\n"));

/***/ }),

/***/ "./node_modules/zod/v3/helpers/errorUtil.cjs":
/*!***************************************************!*\
  !*** ./node_modules/zod/v3/helpers/errorUtil.cjs ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.errorUtil = void 0;\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    // biome-ignore lint:\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message?.message;\n})(errorUtil || (exports.errorUtil = errorUtil = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvem9kL3YzL2hlbHBlcnMvZXJyb3JVdGlsLmNqcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLHNFQUFzRSxVQUFVO0FBQ2hGO0FBQ0E7QUFDQSxDQUFDLGdCQUFnQixpQkFBaUIsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy96b2QvdjMvaGVscGVycy9lcnJvclV0aWwuY2pzP2Y1MzYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmVycm9yVXRpbCA9IHZvaWQgMDtcbnZhciBlcnJvclV0aWw7XG4oZnVuY3Rpb24gKGVycm9yVXRpbCkge1xuICAgIGVycm9yVXRpbC5lcnJUb09iaiA9IChtZXNzYWdlKSA9PiB0eXBlb2YgbWVzc2FnZSA9PT0gXCJzdHJpbmdcIiA/IHsgbWVzc2FnZSB9IDogbWVzc2FnZSB8fCB7fTtcbiAgICAvLyBiaW9tZS1pZ25vcmUgbGludDpcbiAgICBlcnJvclV0aWwudG9TdHJpbmcgPSAobWVzc2FnZSkgPT4gdHlwZW9mIG1lc3NhZ2UgPT09IFwic3RyaW5nXCIgPyBtZXNzYWdlIDogbWVzc2FnZT8ubWVzc2FnZTtcbn0pKGVycm9yVXRpbCB8fCAoZXhwb3J0cy5lcnJvclV0aWwgPSBlcnJvclV0aWwgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/zod/v3/helpers/errorUtil.cjs\n"));

/***/ }),

/***/ "./node_modules/zod/v3/helpers/parseUtil.cjs":
/*!***************************************************!*\
  !*** ./node_modules/zod/v3/helpers/parseUtil.cjs ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isAsync = exports.isValid = exports.isDirty = exports.isAborted = exports.OK = exports.DIRTY = exports.INVALID = exports.ParseStatus = exports.EMPTY_PATH = exports.makeIssue = void 0;\nexports.addIssueToContext = addIssueToContext;\nconst errors_js_1 = __webpack_require__(/*! ../errors.cjs */ \"./node_modules/zod/v3/errors.cjs\");\nconst en_js_1 = __importDefault(__webpack_require__(/*! ../locales/en.cjs */ \"./node_modules/zod/v3/locales/en.cjs\"));\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nexports.makeIssue = makeIssue;\nexports.EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const overrideMap = (0, errors_js_1.getErrorMap)();\n    const issue = (0, exports.makeIssue)({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap, // contextual error map is first priority\n            ctx.schemaErrorMap, // then schema-bound map if available\n            overrideMap, // then global override map\n            overrideMap === en_js_1.default ? undefined : en_js_1.default, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return exports.INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return exports.INVALID;\n            if (value.status === \"aborted\")\n                return exports.INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" && (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nexports.ParseStatus = ParseStatus;\nexports.INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nexports.DIRTY = DIRTY;\nconst OK = (value) => ({ status: \"valid\", value });\nexports.OK = OK;\nconst isAborted = (x) => x.status === \"aborted\";\nexports.isAborted = isAborted;\nconst isDirty = (x) => x.status === \"dirty\";\nexports.isDirty = isDirty;\nconst isValid = (x) => x.status === \"valid\";\nexports.isValid = isValid;\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\nexports.isAsync = isAsync;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvem9kL3YzL2hlbHBlcnMvcGFyc2VVdGlsLmNqcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGVBQWUsR0FBRyxlQUFlLEdBQUcsZUFBZSxHQUFHLGlCQUFpQixHQUFHLFVBQVUsR0FBRyxhQUFhLEdBQUcsZUFBZSxHQUFHLG1CQUFtQixHQUFHLGtCQUFrQixHQUFHLGlCQUFpQjtBQUNyTCx5QkFBeUI7QUFDekIsb0JBQW9CLG1CQUFPLENBQUMsdURBQWU7QUFDM0MsZ0NBQWdDLG1CQUFPLENBQUMsK0RBQW1CO0FBQzNEO0FBQ0EsWUFBWSxtQ0FBbUM7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLGtDQUFrQztBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixhQUFhO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CLGVBQWU7QUFDZjtBQUNBLENBQUM7QUFDRCw0QkFBNEIsd0JBQXdCO0FBQ3BELGFBQWE7QUFDYix5QkFBeUIsd0JBQXdCO0FBQ2pELFVBQVU7QUFDVjtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGVBQWU7QUFDZjtBQUNBLGVBQWU7QUFDZjtBQUNBLGVBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3pvZC92My9oZWxwZXJzL3BhcnNlVXRpbC5janM/NzcyNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNBc3luYyA9IGV4cG9ydHMuaXNWYWxpZCA9IGV4cG9ydHMuaXNEaXJ0eSA9IGV4cG9ydHMuaXNBYm9ydGVkID0gZXhwb3J0cy5PSyA9IGV4cG9ydHMuRElSVFkgPSBleHBvcnRzLklOVkFMSUQgPSBleHBvcnRzLlBhcnNlU3RhdHVzID0gZXhwb3J0cy5FTVBUWV9QQVRIID0gZXhwb3J0cy5tYWtlSXNzdWUgPSB2b2lkIDA7XG5leHBvcnRzLmFkZElzc3VlVG9Db250ZXh0ID0gYWRkSXNzdWVUb0NvbnRleHQ7XG5jb25zdCBlcnJvcnNfanNfMSA9IHJlcXVpcmUoXCIuLi9lcnJvcnMuY2pzXCIpO1xuY29uc3QgZW5fanNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vbG9jYWxlcy9lbi5janNcIikpO1xuY29uc3QgbWFrZUlzc3VlID0gKHBhcmFtcykgPT4ge1xuICAgIGNvbnN0IHsgZGF0YSwgcGF0aCwgZXJyb3JNYXBzLCBpc3N1ZURhdGEgfSA9IHBhcmFtcztcbiAgICBjb25zdCBmdWxsUGF0aCA9IFsuLi5wYXRoLCAuLi4oaXNzdWVEYXRhLnBhdGggfHwgW10pXTtcbiAgICBjb25zdCBmdWxsSXNzdWUgPSB7XG4gICAgICAgIC4uLmlzc3VlRGF0YSxcbiAgICAgICAgcGF0aDogZnVsbFBhdGgsXG4gICAgfTtcbiAgICBpZiAoaXNzdWVEYXRhLm1lc3NhZ2UgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLi4uaXNzdWVEYXRhLFxuICAgICAgICAgICAgcGF0aDogZnVsbFBhdGgsXG4gICAgICAgICAgICBtZXNzYWdlOiBpc3N1ZURhdGEubWVzc2FnZSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgbGV0IGVycm9yTWVzc2FnZSA9IFwiXCI7XG4gICAgY29uc3QgbWFwcyA9IGVycm9yTWFwc1xuICAgICAgICAuZmlsdGVyKChtKSA9PiAhIW0pXG4gICAgICAgIC5zbGljZSgpXG4gICAgICAgIC5yZXZlcnNlKCk7XG4gICAgZm9yIChjb25zdCBtYXAgb2YgbWFwcykge1xuICAgICAgICBlcnJvck1lc3NhZ2UgPSBtYXAoZnVsbElzc3VlLCB7IGRhdGEsIGRlZmF1bHRFcnJvcjogZXJyb3JNZXNzYWdlIH0pLm1lc3NhZ2U7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIC4uLmlzc3VlRGF0YSxcbiAgICAgICAgcGF0aDogZnVsbFBhdGgsXG4gICAgICAgIG1lc3NhZ2U6IGVycm9yTWVzc2FnZSxcbiAgICB9O1xufTtcbmV4cG9ydHMubWFrZUlzc3VlID0gbWFrZUlzc3VlO1xuZXhwb3J0cy5FTVBUWV9QQVRIID0gW107XG5mdW5jdGlvbiBhZGRJc3N1ZVRvQ29udGV4dChjdHgsIGlzc3VlRGF0YSkge1xuICAgIGNvbnN0IG92ZXJyaWRlTWFwID0gKDAsIGVycm9yc19qc18xLmdldEVycm9yTWFwKSgpO1xuICAgIGNvbnN0IGlzc3VlID0gKDAsIGV4cG9ydHMubWFrZUlzc3VlKSh7XG4gICAgICAgIGlzc3VlRGF0YTogaXNzdWVEYXRhLFxuICAgICAgICBkYXRhOiBjdHguZGF0YSxcbiAgICAgICAgcGF0aDogY3R4LnBhdGgsXG4gICAgICAgIGVycm9yTWFwczogW1xuICAgICAgICAgICAgY3R4LmNvbW1vbi5jb250ZXh0dWFsRXJyb3JNYXAsIC8vIGNvbnRleHR1YWwgZXJyb3IgbWFwIGlzIGZpcnN0IHByaW9yaXR5XG4gICAgICAgICAgICBjdHguc2NoZW1hRXJyb3JNYXAsIC8vIHRoZW4gc2NoZW1hLWJvdW5kIG1hcCBpZiBhdmFpbGFibGVcbiAgICAgICAgICAgIG92ZXJyaWRlTWFwLCAvLyB0aGVuIGdsb2JhbCBvdmVycmlkZSBtYXBcbiAgICAgICAgICAgIG92ZXJyaWRlTWFwID09PSBlbl9qc18xLmRlZmF1bHQgPyB1bmRlZmluZWQgOiBlbl9qc18xLmRlZmF1bHQsIC8vIHRoZW4gZ2xvYmFsIGRlZmF1bHQgbWFwXG4gICAgICAgIF0uZmlsdGVyKCh4KSA9PiAhIXgpLFxuICAgIH0pO1xuICAgIGN0eC5jb21tb24uaXNzdWVzLnB1c2goaXNzdWUpO1xufVxuY2xhc3MgUGFyc2VTdGF0dXMge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnZhbHVlID0gXCJ2YWxpZFwiO1xuICAgIH1cbiAgICBkaXJ0eSgpIHtcbiAgICAgICAgaWYgKHRoaXMudmFsdWUgPT09IFwidmFsaWRcIilcbiAgICAgICAgICAgIHRoaXMudmFsdWUgPSBcImRpcnR5XCI7XG4gICAgfVxuICAgIGFib3J0KCkge1xuICAgICAgICBpZiAodGhpcy52YWx1ZSAhPT0gXCJhYm9ydGVkXCIpXG4gICAgICAgICAgICB0aGlzLnZhbHVlID0gXCJhYm9ydGVkXCI7XG4gICAgfVxuICAgIHN0YXRpYyBtZXJnZUFycmF5KHN0YXR1cywgcmVzdWx0cykge1xuICAgICAgICBjb25zdCBhcnJheVZhbHVlID0gW107XG4gICAgICAgIGZvciAoY29uc3QgcyBvZiByZXN1bHRzKSB7XG4gICAgICAgICAgICBpZiAocy5zdGF0dXMgPT09IFwiYWJvcnRlZFwiKVxuICAgICAgICAgICAgICAgIHJldHVybiBleHBvcnRzLklOVkFMSUQ7XG4gICAgICAgICAgICBpZiAocy5zdGF0dXMgPT09IFwiZGlydHlcIilcbiAgICAgICAgICAgICAgICBzdGF0dXMuZGlydHkoKTtcbiAgICAgICAgICAgIGFycmF5VmFsdWUucHVzaChzLnZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geyBzdGF0dXM6IHN0YXR1cy52YWx1ZSwgdmFsdWU6IGFycmF5VmFsdWUgfTtcbiAgICB9XG4gICAgc3RhdGljIGFzeW5jIG1lcmdlT2JqZWN0QXN5bmMoc3RhdHVzLCBwYWlycykge1xuICAgICAgICBjb25zdCBzeW5jUGFpcnMgPSBbXTtcbiAgICAgICAgZm9yIChjb25zdCBwYWlyIG9mIHBhaXJzKSB7XG4gICAgICAgICAgICBjb25zdCBrZXkgPSBhd2FpdCBwYWlyLmtleTtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gYXdhaXQgcGFpci52YWx1ZTtcbiAgICAgICAgICAgIHN5bmNQYWlycy5wdXNoKHtcbiAgICAgICAgICAgICAgICBrZXksXG4gICAgICAgICAgICAgICAgdmFsdWUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gUGFyc2VTdGF0dXMubWVyZ2VPYmplY3RTeW5jKHN0YXR1cywgc3luY1BhaXJzKTtcbiAgICB9XG4gICAgc3RhdGljIG1lcmdlT2JqZWN0U3luYyhzdGF0dXMsIHBhaXJzKSB7XG4gICAgICAgIGNvbnN0IGZpbmFsT2JqZWN0ID0ge307XG4gICAgICAgIGZvciAoY29uc3QgcGFpciBvZiBwYWlycykge1xuICAgICAgICAgICAgY29uc3QgeyBrZXksIHZhbHVlIH0gPSBwYWlyO1xuICAgICAgICAgICAgaWYgKGtleS5zdGF0dXMgPT09IFwiYWJvcnRlZFwiKVxuICAgICAgICAgICAgICAgIHJldHVybiBleHBvcnRzLklOVkFMSUQ7XG4gICAgICAgICAgICBpZiAodmFsdWUuc3RhdHVzID09PSBcImFib3J0ZWRcIilcbiAgICAgICAgICAgICAgICByZXR1cm4gZXhwb3J0cy5JTlZBTElEO1xuICAgICAgICAgICAgaWYgKGtleS5zdGF0dXMgPT09IFwiZGlydHlcIilcbiAgICAgICAgICAgICAgICBzdGF0dXMuZGlydHkoKTtcbiAgICAgICAgICAgIGlmICh2YWx1ZS5zdGF0dXMgPT09IFwiZGlydHlcIilcbiAgICAgICAgICAgICAgICBzdGF0dXMuZGlydHkoKTtcbiAgICAgICAgICAgIGlmIChrZXkudmFsdWUgIT09IFwiX19wcm90b19fXCIgJiYgKHR5cGVvZiB2YWx1ZS52YWx1ZSAhPT0gXCJ1bmRlZmluZWRcIiB8fCBwYWlyLmFsd2F5c1NldCkpIHtcbiAgICAgICAgICAgICAgICBmaW5hbE9iamVjdFtrZXkudmFsdWVdID0gdmFsdWUudmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHsgc3RhdHVzOiBzdGF0dXMudmFsdWUsIHZhbHVlOiBmaW5hbE9iamVjdCB9O1xuICAgIH1cbn1cbmV4cG9ydHMuUGFyc2VTdGF0dXMgPSBQYXJzZVN0YXR1cztcbmV4cG9ydHMuSU5WQUxJRCA9IE9iamVjdC5mcmVlemUoe1xuICAgIHN0YXR1czogXCJhYm9ydGVkXCIsXG59KTtcbmNvbnN0IERJUlRZID0gKHZhbHVlKSA9PiAoeyBzdGF0dXM6IFwiZGlydHlcIiwgdmFsdWUgfSk7XG5leHBvcnRzLkRJUlRZID0gRElSVFk7XG5jb25zdCBPSyA9ICh2YWx1ZSkgPT4gKHsgc3RhdHVzOiBcInZhbGlkXCIsIHZhbHVlIH0pO1xuZXhwb3J0cy5PSyA9IE9LO1xuY29uc3QgaXNBYm9ydGVkID0gKHgpID0+IHguc3RhdHVzID09PSBcImFib3J0ZWRcIjtcbmV4cG9ydHMuaXNBYm9ydGVkID0gaXNBYm9ydGVkO1xuY29uc3QgaXNEaXJ0eSA9ICh4KSA9PiB4LnN0YXR1cyA9PT0gXCJkaXJ0eVwiO1xuZXhwb3J0cy5pc0RpcnR5ID0gaXNEaXJ0eTtcbmNvbnN0IGlzVmFsaWQgPSAoeCkgPT4geC5zdGF0dXMgPT09IFwidmFsaWRcIjtcbmV4cG9ydHMuaXNWYWxpZCA9IGlzVmFsaWQ7XG5jb25zdCBpc0FzeW5jID0gKHgpID0+IHR5cGVvZiBQcm9taXNlICE9PSBcInVuZGVmaW5lZFwiICYmIHggaW5zdGFuY2VvZiBQcm9taXNlO1xuZXhwb3J0cy5pc0FzeW5jID0gaXNBc3luYztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/zod/v3/helpers/parseUtil.cjs\n"));

/***/ }),

/***/ "./node_modules/zod/v3/helpers/typeAliases.cjs":
/*!*****************************************************!*\
  !*** ./node_modules/zod/v3/helpers/typeAliases.cjs ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvem9kL3YzL2hlbHBlcnMvdHlwZUFsaWFzZXMuY2pzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy96b2QvdjMvaGVscGVycy90eXBlQWxpYXNlcy5janM/ZWI5YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/zod/v3/helpers/typeAliases.cjs\n"));

/***/ }),

/***/ "./node_modules/zod/v3/helpers/util.cjs":
/*!**********************************************!*\
  !*** ./node_modules/zod/v3/helpers/util.cjs ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getParsedType = exports.ZodParsedType = exports.objectUtil = exports.util = void 0;\nvar util;\n(function (util) {\n    util.assertEqual = (_) => { };\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && Number.isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array.map((val) => (typeof val === \"string\" ? `'${val}'` : val)).join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (exports.util = util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (exports.objectUtil = objectUtil = {}));\nexports.ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return exports.ZodParsedType.undefined;\n        case \"string\":\n            return exports.ZodParsedType.string;\n        case \"number\":\n            return Number.isNaN(data) ? exports.ZodParsedType.nan : exports.ZodParsedType.number;\n        case \"boolean\":\n            return exports.ZodParsedType.boolean;\n        case \"function\":\n            return exports.ZodParsedType.function;\n        case \"bigint\":\n            return exports.ZodParsedType.bigint;\n        case \"symbol\":\n            return exports.ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return exports.ZodParsedType.array;\n            }\n            if (data === null) {\n                return exports.ZodParsedType.null;\n            }\n            if (data.then && typeof data.then === \"function\" && data.catch && typeof data.catch === \"function\") {\n                return exports.ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return exports.ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return exports.ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return exports.ZodParsedType.date;\n            }\n            return exports.ZodParsedType.object;\n        default:\n            return exports.ZodParsedType.unknown;\n    }\n};\nexports.getParsedType = getParsedType;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvem9kL3YzL2hlbHBlcnMvdXRpbC5janMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCLEdBQUcscUJBQXFCLEdBQUcsa0JBQWtCLEdBQUcsWUFBWTtBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFpRSxJQUFJO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLFdBQVcsWUFBWSxZQUFZO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGlCQUFpQixrQkFBa0Isa0JBQWtCO0FBQ3RELHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy96b2QvdjMvaGVscGVycy91dGlsLmNqcz81YTk4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRQYXJzZWRUeXBlID0gZXhwb3J0cy5ab2RQYXJzZWRUeXBlID0gZXhwb3J0cy5vYmplY3RVdGlsID0gZXhwb3J0cy51dGlsID0gdm9pZCAwO1xudmFyIHV0aWw7XG4oZnVuY3Rpb24gKHV0aWwpIHtcbiAgICB1dGlsLmFzc2VydEVxdWFsID0gKF8pID0+IHsgfTtcbiAgICBmdW5jdGlvbiBhc3NlcnRJcyhfYXJnKSB7IH1cbiAgICB1dGlsLmFzc2VydElzID0gYXNzZXJ0SXM7XG4gICAgZnVuY3Rpb24gYXNzZXJ0TmV2ZXIoX3gpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCk7XG4gICAgfVxuICAgIHV0aWwuYXNzZXJ0TmV2ZXIgPSBhc3NlcnROZXZlcjtcbiAgICB1dGlsLmFycmF5VG9FbnVtID0gKGl0ZW1zKSA9PiB7XG4gICAgICAgIGNvbnN0IG9iaiA9IHt9O1xuICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgaXRlbXMpIHtcbiAgICAgICAgICAgIG9ialtpdGVtXSA9IGl0ZW07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG9iajtcbiAgICB9O1xuICAgIHV0aWwuZ2V0VmFsaWRFbnVtVmFsdWVzID0gKG9iaikgPT4ge1xuICAgICAgICBjb25zdCB2YWxpZEtleXMgPSB1dGlsLm9iamVjdEtleXMob2JqKS5maWx0ZXIoKGspID0+IHR5cGVvZiBvYmpbb2JqW2tdXSAhPT0gXCJudW1iZXJcIik7XG4gICAgICAgIGNvbnN0IGZpbHRlcmVkID0ge307XG4gICAgICAgIGZvciAoY29uc3QgayBvZiB2YWxpZEtleXMpIHtcbiAgICAgICAgICAgIGZpbHRlcmVkW2tdID0gb2JqW2tdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB1dGlsLm9iamVjdFZhbHVlcyhmaWx0ZXJlZCk7XG4gICAgfTtcbiAgICB1dGlsLm9iamVjdFZhbHVlcyA9IChvYmopID0+IHtcbiAgICAgICAgcmV0dXJuIHV0aWwub2JqZWN0S2V5cyhvYmopLm1hcChmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgcmV0dXJuIG9ialtlXTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICB1dGlsLm9iamVjdEtleXMgPSB0eXBlb2YgT2JqZWN0LmtleXMgPT09IFwiZnVuY3Rpb25cIiAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGJhbi9iYW5cbiAgICAgICAgPyAob2JqKSA9PiBPYmplY3Qua2V5cyhvYmopIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgYmFuL2JhblxuICAgICAgICA6IChvYmplY3QpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGtleXMgPSBbXTtcbiAgICAgICAgICAgIGZvciAoY29uc3Qga2V5IGluIG9iamVjdCkge1xuICAgICAgICAgICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBrZXkpKSB7XG4gICAgICAgICAgICAgICAgICAgIGtleXMucHVzaChrZXkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBrZXlzO1xuICAgICAgICB9O1xuICAgIHV0aWwuZmluZCA9IChhcnIsIGNoZWNrZXIpID0+IHtcbiAgICAgICAgZm9yIChjb25zdCBpdGVtIG9mIGFycikge1xuICAgICAgICAgICAgaWYgKGNoZWNrZXIoaXRlbSkpXG4gICAgICAgICAgICAgICAgcmV0dXJuIGl0ZW07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9O1xuICAgIHV0aWwuaXNJbnRlZ2VyID0gdHlwZW9mIE51bWJlci5pc0ludGVnZXIgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICA/ICh2YWwpID0+IE51bWJlci5pc0ludGVnZXIodmFsKSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGJhbi9iYW5cbiAgICAgICAgOiAodmFsKSA9PiB0eXBlb2YgdmFsID09PSBcIm51bWJlclwiICYmIE51bWJlci5pc0Zpbml0ZSh2YWwpICYmIE1hdGguZmxvb3IodmFsKSA9PT0gdmFsO1xuICAgIGZ1bmN0aW9uIGpvaW5WYWx1ZXMoYXJyYXksIHNlcGFyYXRvciA9IFwiIHwgXCIpIHtcbiAgICAgICAgcmV0dXJuIGFycmF5Lm1hcCgodmFsKSA9PiAodHlwZW9mIHZhbCA9PT0gXCJzdHJpbmdcIiA/IGAnJHt2YWx9J2AgOiB2YWwpKS5qb2luKHNlcGFyYXRvcik7XG4gICAgfVxuICAgIHV0aWwuam9pblZhbHVlcyA9IGpvaW5WYWx1ZXM7XG4gICAgdXRpbC5qc29uU3RyaW5naWZ5UmVwbGFjZXIgPSAoXywgdmFsdWUpID0+IHtcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJiaWdpbnRcIikge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlLnRvU3RyaW5nKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH07XG59KSh1dGlsIHx8IChleHBvcnRzLnV0aWwgPSB1dGlsID0ge30pKTtcbnZhciBvYmplY3RVdGlsO1xuKGZ1bmN0aW9uIChvYmplY3RVdGlsKSB7XG4gICAgb2JqZWN0VXRpbC5tZXJnZVNoYXBlcyA9IChmaXJzdCwgc2Vjb25kKSA9PiB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5maXJzdCxcbiAgICAgICAgICAgIC4uLnNlY29uZCwgLy8gc2Vjb25kIG92ZXJ3cml0ZXMgZmlyc3RcbiAgICAgICAgfTtcbiAgICB9O1xufSkob2JqZWN0VXRpbCB8fCAoZXhwb3J0cy5vYmplY3RVdGlsID0gb2JqZWN0VXRpbCA9IHt9KSk7XG5leHBvcnRzLlpvZFBhcnNlZFR5cGUgPSB1dGlsLmFycmF5VG9FbnVtKFtcbiAgICBcInN0cmluZ1wiLFxuICAgIFwibmFuXCIsXG4gICAgXCJudW1iZXJcIixcbiAgICBcImludGVnZXJcIixcbiAgICBcImZsb2F0XCIsXG4gICAgXCJib29sZWFuXCIsXG4gICAgXCJkYXRlXCIsXG4gICAgXCJiaWdpbnRcIixcbiAgICBcInN5bWJvbFwiLFxuICAgIFwiZnVuY3Rpb25cIixcbiAgICBcInVuZGVmaW5lZFwiLFxuICAgIFwibnVsbFwiLFxuICAgIFwiYXJyYXlcIixcbiAgICBcIm9iamVjdFwiLFxuICAgIFwidW5rbm93blwiLFxuICAgIFwicHJvbWlzZVwiLFxuICAgIFwidm9pZFwiLFxuICAgIFwibmV2ZXJcIixcbiAgICBcIm1hcFwiLFxuICAgIFwic2V0XCIsXG5dKTtcbmNvbnN0IGdldFBhcnNlZFR5cGUgPSAoZGF0YSkgPT4ge1xuICAgIGNvbnN0IHQgPSB0eXBlb2YgZGF0YTtcbiAgICBzd2l0Y2ggKHQpIHtcbiAgICAgICAgY2FzZSBcInVuZGVmaW5lZFwiOlxuICAgICAgICAgICAgcmV0dXJuIGV4cG9ydHMuWm9kUGFyc2VkVHlwZS51bmRlZmluZWQ7XG4gICAgICAgIGNhc2UgXCJzdHJpbmdcIjpcbiAgICAgICAgICAgIHJldHVybiBleHBvcnRzLlpvZFBhcnNlZFR5cGUuc3RyaW5nO1xuICAgICAgICBjYXNlIFwibnVtYmVyXCI6XG4gICAgICAgICAgICByZXR1cm4gTnVtYmVyLmlzTmFOKGRhdGEpID8gZXhwb3J0cy5ab2RQYXJzZWRUeXBlLm5hbiA6IGV4cG9ydHMuWm9kUGFyc2VkVHlwZS5udW1iZXI7XG4gICAgICAgIGNhc2UgXCJib29sZWFuXCI6XG4gICAgICAgICAgICByZXR1cm4gZXhwb3J0cy5ab2RQYXJzZWRUeXBlLmJvb2xlYW47XG4gICAgICAgIGNhc2UgXCJmdW5jdGlvblwiOlxuICAgICAgICAgICAgcmV0dXJuIGV4cG9ydHMuWm9kUGFyc2VkVHlwZS5mdW5jdGlvbjtcbiAgICAgICAgY2FzZSBcImJpZ2ludFwiOlxuICAgICAgICAgICAgcmV0dXJuIGV4cG9ydHMuWm9kUGFyc2VkVHlwZS5iaWdpbnQ7XG4gICAgICAgIGNhc2UgXCJzeW1ib2xcIjpcbiAgICAgICAgICAgIHJldHVybiBleHBvcnRzLlpvZFBhcnNlZFR5cGUuc3ltYm9sO1xuICAgICAgICBjYXNlIFwib2JqZWN0XCI6XG4gICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShkYXRhKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBleHBvcnRzLlpvZFBhcnNlZFR5cGUuYXJyYXk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZGF0YSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBleHBvcnRzLlpvZFBhcnNlZFR5cGUubnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChkYXRhLnRoZW4gJiYgdHlwZW9mIGRhdGEudGhlbiA9PT0gXCJmdW5jdGlvblwiICYmIGRhdGEuY2F0Y2ggJiYgdHlwZW9mIGRhdGEuY2F0Y2ggPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgIHJldHVybiBleHBvcnRzLlpvZFBhcnNlZFR5cGUucHJvbWlzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0eXBlb2YgTWFwICE9PSBcInVuZGVmaW5lZFwiICYmIGRhdGEgaW5zdGFuY2VvZiBNYXApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZXhwb3J0cy5ab2RQYXJzZWRUeXBlLm1hcDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0eXBlb2YgU2V0ICE9PSBcInVuZGVmaW5lZFwiICYmIGRhdGEgaW5zdGFuY2VvZiBTZXQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZXhwb3J0cy5ab2RQYXJzZWRUeXBlLnNldDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0eXBlb2YgRGF0ZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBkYXRhIGluc3RhbmNlb2YgRGF0ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBleHBvcnRzLlpvZFBhcnNlZFR5cGUuZGF0ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBleHBvcnRzLlpvZFBhcnNlZFR5cGUub2JqZWN0O1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIGV4cG9ydHMuWm9kUGFyc2VkVHlwZS51bmtub3duO1xuICAgIH1cbn07XG5leHBvcnRzLmdldFBhcnNlZFR5cGUgPSBnZXRQYXJzZWRUeXBlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/zod/v3/helpers/util.cjs\n"));

/***/ }),

/***/ "./node_modules/zod/v3/locales/en.cjs":
/*!********************************************!*\
  !*** ./node_modules/zod/v3/locales/en.cjs ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst ZodError_js_1 = __webpack_require__(/*! ../ZodError.cjs */ \"./node_modules/zod/v3/ZodError.cjs\");\nconst util_js_1 = __webpack_require__(/*! ../helpers/util.cjs */ \"./node_modules/zod/v3/helpers/util.cjs\");\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodError_js_1.ZodIssueCode.invalid_type:\n            if (issue.received === util_js_1.ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodError_js_1.ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util_js_1.util.jsonStringifyReplacer)}`;\n            break;\n        case ZodError_js_1.ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util_js_1.util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodError_js_1.ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodError_js_1.ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util_js_1.util.joinValues(issue.options)}`;\n            break;\n        case ZodError_js_1.ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util_js_1.util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodError_js_1.ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodError_js_1.ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodError_js_1.ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodError_js_1.ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util_js_1.util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodError_js_1.ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"bigint\")\n                message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodError_js_1.ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly` : issue.inclusive ? `smaller than or equal to` : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodError_js_1.ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodError_js_1.ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodError_js_1.ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodError_js_1.ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util_js_1.util.assertNever(issue);\n    }\n    return { message };\n};\nexports[\"default\"] = errorMap;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/zod/v3/locales/en.cjs\n"));

/***/ }),

/***/ "./node_modules/zod/v3/types.cjs":
/*!***************************************!*\
  !*** ./node_modules/zod/v3/types.cjs ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.discriminatedUnion = exports.date = exports.boolean = exports.bigint = exports.array = exports.any = exports.coerce = exports.ZodFirstPartyTypeKind = exports.late = exports.ZodSchema = exports.Schema = exports.ZodReadonly = exports.ZodPipeline = exports.ZodBranded = exports.BRAND = exports.ZodNaN = exports.ZodCatch = exports.ZodDefault = exports.ZodNullable = exports.ZodOptional = exports.ZodTransformer = exports.ZodEffects = exports.ZodPromise = exports.ZodNativeEnum = exports.ZodEnum = exports.ZodLiteral = exports.ZodLazy = exports.ZodFunction = exports.ZodSet = exports.ZodMap = exports.ZodRecord = exports.ZodTuple = exports.ZodIntersection = exports.ZodDiscriminatedUnion = exports.ZodUnion = exports.ZodObject = exports.ZodArray = exports.ZodVoid = exports.ZodNever = exports.ZodUnknown = exports.ZodAny = exports.ZodNull = exports.ZodUndefined = exports.ZodSymbol = exports.ZodDate = exports.ZodBoolean = exports.ZodBigInt = exports.ZodNumber = exports.ZodString = exports.ZodType = void 0;\nexports.NEVER = exports[\"void\"] = exports.unknown = exports.union = exports.undefined = exports.tuple = exports.transformer = exports.symbol = exports.string = exports.strictObject = exports.set = exports.record = exports.promise = exports.preprocess = exports.pipeline = exports.ostring = exports.optional = exports.onumber = exports.oboolean = exports.object = exports.number = exports.nullable = exports[\"null\"] = exports.never = exports.nativeEnum = exports.nan = exports.map = exports.literal = exports.lazy = exports.intersection = exports[\"instanceof\"] = exports[\"function\"] = exports[\"enum\"] = exports.effect = void 0;\nexports.datetimeRegex = datetimeRegex;\nexports.custom = custom;\nconst ZodError_js_1 = __webpack_require__(/*! ./ZodError.cjs */ \"./node_modules/zod/v3/ZodError.cjs\");\nconst errors_js_1 = __webpack_require__(/*! ./errors.cjs */ \"./node_modules/zod/v3/errors.cjs\");\nconst errorUtil_js_1 = __webpack_require__(/*! ./helpers/errorUtil.cjs */ \"./node_modules/zod/v3/helpers/errorUtil.cjs\");\nconst parseUtil_js_1 = __webpack_require__(/*! ./helpers/parseUtil.cjs */ \"./node_modules/zod/v3/helpers/parseUtil.cjs\");\nconst util_js_1 = __webpack_require__(/*! ./helpers/util.cjs */ \"./node_modules/zod/v3/helpers/util.cjs\");\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (Array.isArray(this._key)) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if ((0, parseUtil_js_1.isValid)(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError_js_1.ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message ?? ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: message ?? required_error ?? ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: message ?? invalid_type_error ?? ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return (0, util_js_1.getParsedType)(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: (0, util_js_1.getParsedType)(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new parseUtil_js_1.ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: (0, util_js_1.getParsedType)(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if ((0, parseUtil_js_1.isAsync)(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: params?.async ?? false,\n                contextualErrorMap: params?.errorMap,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: (0, util_js_1.getParsedType)(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    \"~validate\"(data) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: !!this[\"~standard\"].async,\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: (0, util_js_1.getParsedType)(data),\n        };\n        if (!this[\"~standard\"].async) {\n            try {\n                const result = this._parseSync({ data, path: [], parent: ctx });\n                return (0, parseUtil_js_1.isValid)(result)\n                    ? {\n                        value: result.value,\n                    }\n                    : {\n                        issues: ctx.common.issues,\n                    };\n            }\n            catch (err) {\n                if (err?.message?.toLowerCase()?.includes(\"encountered\")) {\n                    this[\"~standard\"].async = true;\n                }\n                ctx.common = {\n                    issues: [],\n                    async: true,\n                };\n            }\n        }\n        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => (0, parseUtil_js_1.isValid)(result)\n            ? {\n                value: result.value,\n            }\n            : {\n                issues: ctx.common.issues,\n            });\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params?.errorMap,\n                async: true,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: (0, util_js_1.getParsedType)(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await ((0, parseUtil_js_1.isAsync)(maybeAsyncResult) ? maybeAsyncResult : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodError_js_1.ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\" ? refinementData(val, ctx) : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n        this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data),\n        };\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nexports.ZodType = ZodType;\nexports.Schema = ZodType;\nexports.ZodSchema = ZodType;\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n// const ipv6Regex =\n// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\nconst ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// https://base64.guru/standards/base64url\nconst base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    let secondsRegexSource = `[0-5]\\\\d`;\n    if (args.precision) {\n        secondsRegexSource = `${secondsRegexSource}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        secondsRegexSource = `${secondsRegexSource}(\\\\.\\\\d+)?`;\n    }\n    const secondsQuantifier = args.precision ? \"+\" : \"?\"; // require seconds if precision is nonzero\n    return `([01]\\\\d|2[0-3]):[0-5]\\\\d(:${secondsRegexSource})${secondsQuantifier}`;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nfunction datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n        return false;\n    try {\n        const [header] = jwt.split(\".\");\n        if (!header)\n            return false;\n        // Convert base64url to base64\n        const base64 = header\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\")\n            .padEnd(header.length + ((4 - (header.length % 4)) % 4), \"=\");\n        const decoded = JSON.parse(atob(base64));\n        if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n        if (\"typ\" in decoded && decoded?.typ !== \"JWT\")\n            return false;\n        if (!decoded.alg)\n            return false;\n        if (alg && decoded.alg !== alg)\n            return false;\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nfunction isValidCidr(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4CidrRegex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6CidrRegex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_js_1.ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: ZodError_js_1.ZodIssueCode.invalid_type,\n                expected: util_js_1.ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return parseUtil_js_1.INVALID;\n        }\n        const status = new parseUtil_js_1.ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        code: ZodError_js_1.ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        code: ZodError_js_1.ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                            code: ZodError_js_1.ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                            code: ZodError_js_1.ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        validation: \"email\",\n                        code: ZodError_js_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        validation: \"emoji\",\n                        code: ZodError_js_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        validation: \"uuid\",\n                        code: ZodError_js_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodError_js_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        validation: \"cuid\",\n                        code: ZodError_js_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodError_js_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        validation: \"ulid\",\n                        code: ZodError_js_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        validation: \"url\",\n                        code: ZodError_js_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        validation: \"regex\",\n                        code: ZodError_js_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        code: ZodError_js_1.ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        code: ZodError_js_1.ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        code: ZodError_js_1.ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        code: ZodError_js_1.ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        code: ZodError_js_1.ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        code: ZodError_js_1.ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        validation: \"duration\",\n                        code: ZodError_js_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        validation: \"ip\",\n                        code: ZodError_js_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"jwt\") {\n                if (!isValidJWT(input.data, check.alg)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        validation: \"jwt\",\n                        code: ZodError_js_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cidr\") {\n                if (!isValidCidr(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        validation: \"cidr\",\n                        code: ZodError_js_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        validation: \"base64\",\n                        code: ZodError_js_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64url\") {\n                if (!base64urlRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        validation: \"base64url\",\n                        code: ZodError_js_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_js_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodError_js_1.ZodIssueCode.invalid_string,\n            ...errorUtil_js_1.errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil_js_1.errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil_js_1.errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil_js_1.errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil_js_1.errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil_js_1.errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil_js_1.errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil_js_1.errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil_js_1.errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil_js_1.errorUtil.errToObj(message) });\n    }\n    base64url(message) {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil_js_1.errorUtil.errToObj(message),\n        });\n    }\n    jwt(options) {\n        return this._addCheck({ kind: \"jwt\", ...errorUtil_js_1.errorUtil.errToObj(options) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil_js_1.errorUtil.errToObj(options) });\n    }\n    cidr(options) {\n        return this._addCheck({ kind: \"cidr\", ...errorUtil_js_1.errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            offset: options?.offset ?? false,\n            local: options?.local ?? false,\n            ...errorUtil_js_1.errorUtil.errToObj(options?.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            ...errorUtil_js_1.errorUtil.errToObj(options?.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil_js_1.errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil_js_1.errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options?.position,\n            ...errorUtil_js_1.errorUtil.errToObj(options?.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil_js_1.errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil_js_1.errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil_js_1.errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil_js_1.errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil_js_1.errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * Equivalent to `.min(1)`\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil_js_1.errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isCIDR() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get isBase64url() {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nexports.ZodString = ZodString;\nZodString.create = (params) => {\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = Number.parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = Number.parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / 10 ** decCount;\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_js_1.ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: ZodError_js_1.ZodIssueCode.invalid_type,\n                expected: util_js_1.ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return parseUtil_js_1.INVALID;\n        }\n        let ctx = undefined;\n        const status = new parseUtil_js_1.ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util_js_1.util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        code: ZodError_js_1.ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        code: ZodError_js_1.ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        code: ZodError_js_1.ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        code: ZodError_js_1.ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        code: ZodError_js_1.ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_js_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil_js_1.errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil_js_1.errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil_js_1.errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil_js_1.errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil_js_1.errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil_js_1.errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil_js_1.errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil_js_1.errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil_js_1.errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil_js_1.errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil_js_1.errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil_js_1.errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil_js_1.errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil_js_1.errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" || (ch.kind === \"multipleOf\" && util_js_1.util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null;\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" || ch.kind === \"int\" || ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nexports.ZodNumber = ZodNumber;\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            try {\n                input.data = BigInt(input.data);\n            }\n            catch {\n                return this._getInvalidInput(input);\n            }\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_js_1.ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n        }\n        let ctx = undefined;\n        const status = new parseUtil_js_1.ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        code: ZodError_js_1.ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        code: ZodError_js_1.ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        code: ZodError_js_1.ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_js_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _getInvalidInput(input) {\n        const ctx = this._getOrReturnCtx(input);\n        (0, parseUtil_js_1.addIssueToContext)(ctx, {\n            code: ZodError_js_1.ZodIssueCode.invalid_type,\n            expected: util_js_1.ZodParsedType.bigint,\n            received: ctx.parsedType,\n        });\n        return parseUtil_js_1.INVALID;\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil_js_1.errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil_js_1.errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil_js_1.errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil_js_1.errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil_js_1.errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil_js_1.errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil_js_1.errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil_js_1.errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil_js_1.errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil_js_1.errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nexports.ZodBigInt = ZodBigInt;\nZodBigInt.create = (params) => {\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_js_1.ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: ZodError_js_1.ZodIssueCode.invalid_type,\n                expected: util_js_1.ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return parseUtil_js_1.INVALID;\n        }\n        return (0, parseUtil_js_1.OK)(input.data);\n    }\n}\nexports.ZodBoolean = ZodBoolean;\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_js_1.ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: ZodError_js_1.ZodIssueCode.invalid_type,\n                expected: util_js_1.ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return parseUtil_js_1.INVALID;\n        }\n        if (Number.isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: ZodError_js_1.ZodIssueCode.invalid_date,\n            });\n            return parseUtil_js_1.INVALID;\n        }\n        const status = new parseUtil_js_1.ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        code: ZodError_js_1.ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        code: ZodError_js_1.ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_js_1.util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil_js_1.errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil_js_1.errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nexports.ZodDate = ZodDate;\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: params?.coerce || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_js_1.ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: ZodError_js_1.ZodIssueCode.invalid_type,\n                expected: util_js_1.ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return parseUtil_js_1.INVALID;\n        }\n        return (0, parseUtil_js_1.OK)(input.data);\n    }\n}\nexports.ZodSymbol = ZodSymbol;\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_js_1.ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: ZodError_js_1.ZodIssueCode.invalid_type,\n                expected: util_js_1.ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return parseUtil_js_1.INVALID;\n        }\n        return (0, parseUtil_js_1.OK)(input.data);\n    }\n}\nexports.ZodUndefined = ZodUndefined;\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_js_1.ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: ZodError_js_1.ZodIssueCode.invalid_type,\n                expected: util_js_1.ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return parseUtil_js_1.INVALID;\n        }\n        return (0, parseUtil_js_1.OK)(input.data);\n    }\n}\nexports.ZodNull = ZodNull;\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return (0, parseUtil_js_1.OK)(input.data);\n    }\n}\nexports.ZodAny = ZodAny;\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return (0, parseUtil_js_1.OK)(input.data);\n    }\n}\nexports.ZodUnknown = ZodUnknown;\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        (0, parseUtil_js_1.addIssueToContext)(ctx, {\n            code: ZodError_js_1.ZodIssueCode.invalid_type,\n            expected: util_js_1.ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return parseUtil_js_1.INVALID;\n    }\n}\nexports.ZodNever = ZodNever;\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_js_1.ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: ZodError_js_1.ZodIssueCode.invalid_type,\n                expected: util_js_1.ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return parseUtil_js_1.INVALID;\n        }\n        return (0, parseUtil_js_1.OK)(input.data);\n    }\n}\nexports.ZodVoid = ZodVoid;\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== util_js_1.ZodParsedType.array) {\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: ZodError_js_1.ZodIssueCode.invalid_type,\n                expected: util_js_1.ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return parseUtil_js_1.INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                    code: tooBig ? ZodError_js_1.ZodIssueCode.too_big : ZodError_js_1.ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                    code: ZodError_js_1.ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                    code: ZodError_js_1.ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return parseUtil_js_1.ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return parseUtil_js_1.ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil_js_1.errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil_js_1.errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil_js_1.errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nexports.ZodArray = ZodArray;\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util_js_1.util.objectKeys(shape);\n        this._cached = { shape, keys };\n        return this._cached;\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_js_1.ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: ZodError_js_1.ZodIssueCode.invalid_type,\n                expected: util_js_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_js_1.INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever && this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                        code: ZodError_js_1.ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") {\n            }\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return parseUtil_js_1.ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return parseUtil_js_1.ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil_js_1.errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        const defaultError = this._def.errorMap?.(issue, ctx).message ?? ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: errorUtil_js_1.errorUtil.errToObj(message).message ?? defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        for (const key of util_js_1.util.objectKeys(mask)) {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        for (const key of util_js_1.util.objectKeys(this.shape)) {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        for (const key of util_js_1.util.objectKeys(this.shape)) {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        for (const key of util_js_1.util.objectKeys(this.shape)) {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util_js_1.util.objectKeys(this.shape));\n    }\n}\nexports.ZodObject = ZodObject;\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError_js_1.ZodError(result.ctx.common.issues));\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: ZodError_js_1.ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return parseUtil_js_1.INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError_js_1.ZodError(issues));\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: ZodError_js_1.ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return parseUtil_js_1.INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nexports.ZodUnion = ZodUnion;\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util_js_1.util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_js_1.ZodParsedType.object) {\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: ZodError_js_1.ZodIssueCode.invalid_type,\n                expected: util_js_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_js_1.INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: ZodError_js_1.ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return parseUtil_js_1.INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nexports.ZodDiscriminatedUnion = ZodDiscriminatedUnion;\nfunction mergeValues(a, b) {\n    const aType = (0, util_js_1.getParsedType)(a);\n    const bType = (0, util_js_1.getParsedType)(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === util_js_1.ZodParsedType.object && bType === util_js_1.ZodParsedType.object) {\n        const bKeys = util_js_1.util.objectKeys(b);\n        const sharedKeys = util_js_1.util.objectKeys(a).filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === util_js_1.ZodParsedType.array && bType === util_js_1.ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === util_js_1.ZodParsedType.date && bType === util_js_1.ZodParsedType.date && +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if ((0, parseUtil_js_1.isAborted)(parsedLeft) || (0, parseUtil_js_1.isAborted)(parsedRight)) {\n                return parseUtil_js_1.INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                    code: ZodError_js_1.ZodIssueCode.invalid_intersection_types,\n                });\n                return parseUtil_js_1.INVALID;\n            }\n            if ((0, parseUtil_js_1.isDirty)(parsedLeft) || (0, parseUtil_js_1.isDirty)(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nexports.ZodIntersection = ZodIntersection;\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\n// type ZodTupleItems = [ZodTypeAny, ...ZodTypeAny[]];\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_js_1.ZodParsedType.array) {\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: ZodError_js_1.ZodIssueCode.invalid_type,\n                expected: util_js_1.ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return parseUtil_js_1.INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: ZodError_js_1.ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return parseUtil_js_1.INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: ZodError_js_1.ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return parseUtil_js_1.ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return parseUtil_js_1.ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nexports.ZodTuple = ZodTuple;\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_js_1.ZodParsedType.object) {\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: ZodError_js_1.ZodIssueCode.invalid_type,\n                expected: util_js_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_js_1.INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return parseUtil_js_1.ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return parseUtil_js_1.ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nexports.ZodRecord = ZodRecord;\nclass ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_js_1.ZodParsedType.map) {\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: ZodError_js_1.ZodIssueCode.invalid_type,\n                expected: util_js_1.ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return parseUtil_js_1.INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return parseUtil_js_1.INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return parseUtil_js_1.INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nexports.ZodMap = ZodMap;\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_js_1.ZodParsedType.set) {\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: ZodError_js_1.ZodIssueCode.invalid_type,\n                expected: util_js_1.ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return parseUtil_js_1.INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                    code: ZodError_js_1.ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                    code: ZodError_js_1.ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return parseUtil_js_1.INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil_js_1.errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil_js_1.errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nexports.ZodSet = ZodSet;\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_js_1.ZodParsedType.function) {\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: ZodError_js_1.ZodIssueCode.invalid_type,\n                expected: util_js_1.ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return parseUtil_js_1.INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return (0, parseUtil_js_1.makeIssue)({\n                data: args,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, (0, errors_js_1.getErrorMap)(), errors_js_1.defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodError_js_1.ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return (0, parseUtil_js_1.makeIssue)({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, (0, errors_js_1.getErrorMap)(), errors_js_1.defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodError_js_1.ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return (0, parseUtil_js_1.OK)(async function (...args) {\n                const error = new ZodError_js_1.ZodError([]);\n                const parsedArgs = await me._def.args.parseAsync(args, params).catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return (0, parseUtil_js_1.OK)(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError_js_1.ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError_js_1.ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args ? args : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nexports.ZodFunction = ZodFunction;\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nexports.ZodLazy = ZodLazy;\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                received: ctx.data,\n                code: ZodError_js_1.ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return parseUtil_js_1.INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nexports.ZodLiteral = ZodLiteral;\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                expected: util_js_1.util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodError_js_1.ZodIssueCode.invalid_type,\n            });\n            return parseUtil_js_1.INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(this._def.values);\n        }\n        if (!this._cache.has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                received: ctx.data,\n                code: ZodError_js_1.ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return parseUtil_js_1.INVALID;\n        }\n        return (0, parseUtil_js_1.OK)(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\nexports.ZodEnum = ZodEnum;\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util_js_1.util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== util_js_1.ZodParsedType.string && ctx.parsedType !== util_js_1.ZodParsedType.number) {\n            const expectedValues = util_js_1.util.objectValues(nativeEnumValues);\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                expected: util_js_1.util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodError_js_1.ZodIssueCode.invalid_type,\n            });\n            return parseUtil_js_1.INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(util_js_1.util.getValidEnumValues(this._def.values));\n        }\n        if (!this._cache.has(input.data)) {\n            const expectedValues = util_js_1.util.objectValues(nativeEnumValues);\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                received: ctx.data,\n                code: ZodError_js_1.ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return parseUtil_js_1.INVALID;\n        }\n        return (0, parseUtil_js_1.OK)(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nexports.ZodNativeEnum = ZodNativeEnum;\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_js_1.ZodParsedType.promise && ctx.common.async === false) {\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: ZodError_js_1.ZodIssueCode.invalid_type,\n                expected: util_js_1.ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return parseUtil_js_1.INVALID;\n        }\n        const promisified = ctx.parsedType === util_js_1.ZodParsedType.promise ? ctx.data : Promise.resolve(ctx.data);\n        return (0, parseUtil_js_1.OK)(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nexports.ZodPromise = ZodPromise;\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                (0, parseUtil_js_1.addIssueToContext)(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return parseUtil_js_1.INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return parseUtil_js_1.INVALID;\n                    if (result.status === \"dirty\")\n                        return (0, parseUtil_js_1.DIRTY)(result.value);\n                    if (status.value === \"dirty\")\n                        return (0, parseUtil_js_1.DIRTY)(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return parseUtil_js_1.INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return parseUtil_js_1.INVALID;\n                if (result.status === \"dirty\")\n                    return (0, parseUtil_js_1.DIRTY)(result.value);\n                if (status.value === \"dirty\")\n                    return (0, parseUtil_js_1.DIRTY)(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return parseUtil_js_1.INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return parseUtil_js_1.INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!(0, parseUtil_js_1.isValid)(base))\n                    return parseUtil_js_1.INVALID;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((base) => {\n                    if (!(0, parseUtil_js_1.isValid)(base))\n                        return parseUtil_js_1.INVALID;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({\n                        status: status.value,\n                        value: result,\n                    }));\n                });\n            }\n        }\n        util_js_1.util.assertNever(effect);\n    }\n}\nexports.ZodEffects = ZodEffects;\nexports.ZodTransformer = ZodEffects;\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === util_js_1.ZodParsedType.undefined) {\n            return (0, parseUtil_js_1.OK)(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nexports.ZodOptional = ZodOptional;\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === util_js_1.ZodParsedType.null) {\n            return (0, parseUtil_js_1.OK)(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nexports.ZodNullable = ZodNullable;\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === util_js_1.ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nexports.ZodDefault = ZodDefault;\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\" ? params.default : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if ((0, parseUtil_js_1.isAsync)(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError_js_1.ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError_js_1.ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nexports.ZodCatch = ZodCatch;\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_js_1.ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_js_1.addIssueToContext)(ctx, {\n                code: ZodError_js_1.ZodIssueCode.invalid_type,\n                expected: util_js_1.ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return parseUtil_js_1.INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nexports.ZodNaN = ZodNaN;\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nexports.BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nexports.ZodBranded = ZodBranded;\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return parseUtil_js_1.INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return (0, parseUtil_js_1.DIRTY)(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return parseUtil_js_1.INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nexports.ZodPipeline = ZodPipeline;\nclass ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if ((0, parseUtil_js_1.isValid)(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return (0, parseUtil_js_1.isAsync)(result) ? result.then((data) => freeze(data)) : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nexports.ZodReadonly = ZodReadonly;\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\n////////////////////////////////////////\n////////////////////////////////////////\n//////////                    //////////\n//////////      z.custom      //////////\n//////////                    //////////\n////////////////////////////////////////\n////////////////////////////////////////\nfunction cleanParams(params, data) {\n    const p = typeof params === \"function\" ? params(data) : typeof params === \"string\" ? { message: params } : params;\n    const p2 = typeof p === \"string\" ? { message: p } : p;\n    return p2;\n}\nfunction custom(check, _params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            const r = check(data);\n            if (r instanceof Promise) {\n                return r.then((r) => {\n                    if (!r) {\n                        const params = cleanParams(_params, data);\n                        const _fatal = params.fatal ?? fatal ?? true;\n                        ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n                    }\n                });\n            }\n            if (!r) {\n                const params = cleanParams(_params, data);\n                const _fatal = params.fatal ?? fatal ?? true;\n                ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n            }\n            return;\n        });\n    return ZodAny.create();\n}\nexports.late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (exports.ZodFirstPartyTypeKind = ZodFirstPartyTypeKind = {}));\n// requires TS 4.4+\nclass Class {\n    constructor(..._) { }\n}\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nexports[\"instanceof\"] = instanceOfType;\nconst stringType = ZodString.create;\nexports.string = stringType;\nconst numberType = ZodNumber.create;\nexports.number = numberType;\nconst nanType = ZodNaN.create;\nexports.nan = nanType;\nconst bigIntType = ZodBigInt.create;\nexports.bigint = bigIntType;\nconst booleanType = ZodBoolean.create;\nexports.boolean = booleanType;\nconst dateType = ZodDate.create;\nexports.date = dateType;\nconst symbolType = ZodSymbol.create;\nexports.symbol = symbolType;\nconst undefinedType = ZodUndefined.create;\nexports.undefined = undefinedType;\nconst nullType = ZodNull.create;\nexports[\"null\"] = nullType;\nconst anyType = ZodAny.create;\nexports.any = anyType;\nconst unknownType = ZodUnknown.create;\nexports.unknown = unknownType;\nconst neverType = ZodNever.create;\nexports.never = neverType;\nconst voidType = ZodVoid.create;\nexports[\"void\"] = voidType;\nconst arrayType = ZodArray.create;\nexports.array = arrayType;\nconst objectType = ZodObject.create;\nexports.object = objectType;\nconst strictObjectType = ZodObject.strictCreate;\nexports.strictObject = strictObjectType;\nconst unionType = ZodUnion.create;\nexports.union = unionType;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nexports.discriminatedUnion = discriminatedUnionType;\nconst intersectionType = ZodIntersection.create;\nexports.intersection = intersectionType;\nconst tupleType = ZodTuple.create;\nexports.tuple = tupleType;\nconst recordType = ZodRecord.create;\nexports.record = recordType;\nconst mapType = ZodMap.create;\nexports.map = mapType;\nconst setType = ZodSet.create;\nexports.set = setType;\nconst functionType = ZodFunction.create;\nexports[\"function\"] = functionType;\nconst lazyType = ZodLazy.create;\nexports.lazy = lazyType;\nconst literalType = ZodLiteral.create;\nexports.literal = literalType;\nconst enumType = ZodEnum.create;\nexports[\"enum\"] = enumType;\nconst nativeEnumType = ZodNativeEnum.create;\nexports.nativeEnum = nativeEnumType;\nconst promiseType = ZodPromise.create;\nexports.promise = promiseType;\nconst effectsType = ZodEffects.create;\nexports.effect = effectsType;\nexports.transformer = effectsType;\nconst optionalType = ZodOptional.create;\nexports.optional = optionalType;\nconst nullableType = ZodNullable.create;\nexports.nullable = nullableType;\nconst preprocessType = ZodEffects.createWithPreprocess;\nexports.preprocess = preprocessType;\nconst pipelineType = ZodPipeline.create;\nexports.pipeline = pipelineType;\nconst ostring = () => stringType().optional();\nexports.ostring = ostring;\nconst onumber = () => numberType().optional();\nexports.onumber = onumber;\nconst oboolean = () => booleanType().optional();\nexports.oboolean = oboolean;\nexports.coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nexports.NEVER = parseUtil_js_1.INVALID;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/zod/v3/types.cjs\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!"), __webpack_exec__("./node_modules/next/dist/client/router.js"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);